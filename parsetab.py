
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDS ARRAY ASSIGNMIN ASSIGNPLUS BREAK BSLASH CASE CLASS COMENTARIO COMID COMIS COMMA COMPARE DEF DEFINED DIVISION DO ELSE ELSIF EMPTY END ENSURE EQUAL EXP FALSE FLOAT FOR GETS GREATER GREQUAL HASH IDCLASS IDENTIFIER IDGLOBAL IDINSTANCE IDLOCAL IF IN INDEX INTERROGATIVE LBRACKET LENGTH LESS LPARENTHESIS LSEQUAL LSQBRACKET MINUS MOD MODULE MULT NEW NEXT NIL NOT NOTEQUAL NOTS NUMBER NUML OR ORS PLUS POINT PRINT PUTC PUTS RBRACKET REDO RESCUE RETURN RPARENTHESIS RSQBRACKET SELF SEMICOLON STRING STRINGV TRUE UNDEF UNTIL WHEN WHILEinstrucciones : asignar\n                        | noasignar\n                         asignar : expression \n                | string\n                | cadena\n                | metodocadena\n                | arreglo\n                | metodosarreglo\n                | hash\n                | metodohash\n                | boolean \n                | variables\n                | factornoasignar : estructurasControl\n                    | oputs \n                    | putss\n                    | putsenx \n                    | sentenIF\n                    | sentenifp\n                    | sentenifelse\n                    | sentenWHILE\n                    | funcion1\n                    | funcion2\n                    | funcion3\n                    | ogets\n                    | getsr\n                    | assigns boolean :  TRUE \n                | FALSE\n                | NIL oputs : PUTS   putss : PUTS string\n              | PUTS cadena\n              | PRINT string\n              | PRINT cadena\n             putsenx : PUTS expression\n                | PRINT expression algoritmo : expression\n                | metodocadena\n                | arreglo\n                | metodosarreglo\n                | hash\n                | estructurasControl\n                | boolean\n                | assigns\n                | sentenIF\n                | sentenifp\n                | sentenifelse\n                | variables\n                | sentenWHILE  sentenWHILE : WHILE variables comparador  variables  algoritmo END\n                    | WHILE variables comparador  expression  algoritmo END\n                    | WHILE boolean  algoritmo END\n                    | WHILE variables algoritmo   END sentenIF : IF variables comparador term  sentenifp : IF variables comparador term algoritmo END sentenifelse : IF variables comparador term algoritmo ELSE algoritmo ENDvariables : IDLOCAL\n                | IDINSTANCE\n                | IDCLASS\n                | IDGLOBALassigns : variables EQUAL asignar\n               | variables EQUAL factor\n                assigns : variables ASSIGNPLUS expression\n                    | variables ASSIGNPLUS variables\n\n                    assigns : variables ASSIGNMIN expression\n                    | variables ASSIGNMIN variables\n                    expression : expression PLUS term expression : expression PLUS variablesexpression : expression MINUS variablesexpression : expression MINUS termexpression : termterm : factorterm : variablesfactor : NUMBER\n                | FLOAT\n                | NUMLfactor : MINUS NUMBER\n              | MINUS FLOATexpression : expression DIVISION termexpression : expression MOD termexpression : expression MULT termexpression : expression EXP termstring : STRINGVcadena : STRING POINT NEWcadena : STRING POINT NEW LPARENTHESIS string RPARENTHESIScadena : STRING LPARENTHESIS string RPARENTHESISmetodocadena : cadena POINT EMPTY INTERROGATIVE\n                    | string POINT EMPTY INTERROGATIVEmetodocadena : cadena POINT LENGTH\n                    | string POINT LENGTHarreglo : ARRAY POINT NEWarreglo : ARRAY POINT NEW LPARENTHESIS factor RPARENTHESISarreglo : ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESISarreglo : ARRAY LSQBRACKET arraycontent RSQBRACKETarreglo : LSQBRACKET arraycontent RSQBRACKETarraycontent : factor\n                    | stringarraycontent : factor COMMA arraycontent\n                    | string COMMA arraycontentmetodosarreglo : arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESISmetodosarreglo : arreglo LSQBRACKET factor RSQBRACKEThash : LBRACKET hashcontent RBRACKEThash : HASH POINT NEWhashcontent : string EQUAL GREATER hashcontentvaluehashcontent : string EQUAL GREATER hashcontentvalue COMMA hashcontenthashcontentvalue : factor\n                        | stringmetodohash : variables EQUAL hash POINT LENGTHmetodohash : variables POINT LENGTH comparador : COMPARE\n                   | GREQUAL \n                   | LSEQUAL\n                   | NOTEQUAL\n                   | LESS\n                   | GREATER estructurasControl : FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue ENDestructurasControl : FOR IDLOCAL IN factor POINT POINT factor DO forcontent ENDforcontent : forcontentvalueforcontent : forcontentvalue forcontentforcontentvalue : expression\n                        | algoritmo funcion1 : DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END\n                 | DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END fcontenido : variables\n                  |   variables COMMA fcontenido values : term\n                | boolean\n                | cadena\n                | arreglo\n                 valuedefect : variables EQUAL values\n                    | variables COMMA fcontenido\n                    | variables COMMA valuedefect funcion2 : DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END\n                | DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo END funcion3 : DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END\n                | DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo ENDogets : GETS getsr : IDLOCAL EQUAL GETS'
    
_lr_action_items = {'STRINGV':([0,4,5,6,7,8,9,10,11,12,29,31,34,35,37,38,39,41,42,43,44,45,46,49,50,64,68,69,71,73,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,123,124,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,158,159,162,163,165,168,170,171,172,173,174,175,182,193,194,198,199,200,201,202,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,31,31,-28,-29,-30,-59,-60,-61,-75,-76,-77,31,31,31,-78,-79,31,31,-58,-74,-73,31,31,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,31,31,-103,-104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,31,-102,31,-87,-95,31,31,31,31,31,-54,-53,-109,31,31,-101,-86,-93,31,31,-56,31,-51,-52,-75,-76,31,-94,31,-57,31,-38,-122,-49,-118,31,-117,]),'STRING':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,49,50,64,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,159,163,165,170,171,172,173,174,175,182,193,194,196,198,199,200,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,32,32,32,-78,-79,-58,-74,-73,32,32,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,-87,-95,32,32,32,32,-54,-53,-109,32,32,32,-101,-86,-93,-56,32,-51,-52,-75,-76,32,-94,32,-57,32,-38,-122,-49,-118,32,-117,]),'ARRAY':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,64,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,159,163,165,170,171,172,173,174,175,182,193,194,196,198,199,200,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,33,-78,-79,-58,-74,-73,33,33,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,-87,-95,33,33,33,33,-54,-53,-109,33,33,33,-101,-86,-93,-56,33,-51,-52,-75,-76,33,-94,33,-57,33,-38,-122,-49,-118,33,-117,]),'LSQBRACKET':([0,4,5,6,7,8,9,10,11,12,29,31,33,37,38,39,41,42,43,44,45,46,64,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,159,163,165,170,171,172,173,174,175,182,193,194,196,198,199,200,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[34,-3,-4,-5,-6,63,-8,-9,-10,-11,-72,-84,73,-28,-29,-30,-59,-60,-61,-75,-76,-77,34,-78,-79,-58,-74,-73,34,34,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-39,63,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,-87,-95,34,34,34,34,-54,-53,-109,34,34,34,-101,-86,-93,-56,34,-51,-52,-75,-76,34,-94,34,-57,34,-38,-122,-49,-118,34,-117,]),'LBRACKET':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,64,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,159,160,163,165,170,171,172,173,174,175,182,193,194,198,199,200,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,35,-78,-79,-58,-74,-73,35,35,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,35,-87,-95,35,35,35,35,-54,-53,-109,35,35,-101,-86,-93,-56,35,-51,-52,-75,-76,35,-94,35,-57,35,-38,-122,-49,-118,35,-117,]),'HASH':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,64,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,159,160,163,165,170,171,172,173,174,175,182,193,194,198,199,200,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,36,-78,-79,-58,-74,-73,36,36,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,36,-87,-95,36,36,36,36,-54,-53,-109,36,36,-101,-86,-93,-56,36,-51,-52,-75,-76,36,-94,36,-57,36,-38,-122,-49,-118,36,-117,]),'TRUE':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,51,64,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,159,163,165,170,171,172,173,174,175,182,193,194,196,198,199,200,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,37,37,-78,-79,-58,-74,-73,37,37,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,-87,-95,37,37,37,37,-54,-53,-109,37,37,37,-101,-86,-93,-56,37,-51,-52,-75,-76,37,-94,37,-57,37,-38,-122,-49,-118,37,-117,]),'FALSE':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,51,64,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,159,163,165,170,171,172,173,174,175,182,193,194,196,198,199,200,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,38,38,-78,-79,-58,-74,-73,38,38,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,-87,-95,38,38,38,38,-54,-53,-109,38,38,38,-101,-86,-93,-56,38,-51,-52,-75,-76,38,-94,38,-57,38,-38,-122,-49,-118,38,-117,]),'NIL':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,51,64,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,159,163,165,170,171,172,173,174,175,182,193,194,196,198,199,200,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,39,39,-78,-79,-58,-74,-73,39,39,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,-87,-95,39,39,39,39,-54,-53,-109,39,39,39,-101,-86,-93,-56,39,-51,-52,-75,-76,39,-94,39,-57,39,-38,-122,-49,-118,39,-117,]),'IDLOCAL':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,64,66,67,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,130,131,132,133,134,135,136,138,141,142,143,144,145,146,147,148,149,150,151,155,156,157,159,163,165,170,171,172,173,174,175,179,182,192,193,194,195,196,198,199,200,204,205,206,207,208,209,219,224,226,229,230,231,234,237,238,239,240,245,248,250,],[40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,81,83,83,83,83,94,83,83,83,83,83,83,83,83,83,-78,-79,-58,-74,-73,83,83,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,83,-111,-112,-113,-114,-115,-116,83,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,83,-89,-88,-102,-87,-95,83,83,83,83,-54,-53,197,-109,83,83,83,83,83,-101,-86,-93,-56,83,-51,-52,-75,-76,83,232,83,-94,83,-57,83,83,-38,-122,-49,-118,83,-117,]),'IDINSTANCE':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,48,49,50,51,54,55,56,57,58,59,64,66,67,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,130,131,132,133,134,135,136,138,141,142,143,144,145,146,147,148,149,150,151,155,156,157,159,163,165,170,171,172,173,174,175,182,192,193,194,195,196,198,199,200,204,205,206,207,208,209,219,226,229,230,231,234,237,238,239,240,245,248,250,],[41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,41,41,41,41,41,41,41,41,41,41,41,41,41,-78,-79,-58,-74,-73,41,41,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,41,-111,-112,-113,-114,-115,-116,41,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,41,-89,-88,-102,-87,-95,41,41,41,41,-54,-53,-109,41,41,41,41,41,-101,-86,-93,-56,41,-51,-52,-75,-76,41,41,-94,41,-57,41,41,-38,-122,-49,-118,41,-117,]),'IDCLASS':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,48,49,50,51,54,55,56,57,58,59,64,66,67,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,130,131,132,133,134,135,136,138,141,142,143,144,145,146,147,148,149,150,151,155,156,157,159,163,165,170,171,172,173,174,175,182,192,193,194,195,196,198,199,200,204,205,206,207,208,209,219,226,229,230,231,234,237,238,239,240,245,248,250,],[42,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,42,42,42,42,42,42,42,42,42,42,42,42,42,-78,-79,-58,-74,-73,42,42,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,42,-111,-112,-113,-114,-115,-116,42,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,42,-89,-88,-102,-87,-95,42,42,42,42,-54,-53,-109,42,42,42,42,42,-101,-86,-93,-56,42,-51,-52,-75,-76,42,42,-94,42,-57,42,42,-38,-122,-49,-118,42,-117,]),'IDGLOBAL':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,48,49,50,51,54,55,56,57,58,59,64,66,67,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,130,131,132,133,134,135,136,138,141,142,143,144,145,146,147,148,149,150,151,155,156,157,159,163,165,170,171,172,173,174,175,182,192,193,194,195,196,198,199,200,204,205,206,207,208,209,219,226,229,230,231,234,237,238,239,240,245,248,250,],[43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,43,43,43,43,43,43,43,43,43,43,43,43,43,-78,-79,-58,-74,-73,43,43,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,43,-111,-112,-113,-114,-115,-116,43,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,43,-89,-88,-102,-87,-95,43,43,43,43,-54,-53,-109,43,43,43,43,43,-101,-86,-93,-56,43,-51,-52,-75,-76,43,43,-94,43,-57,43,43,-38,-122,-49,-118,43,-117,]),'NUMBER':([0,4,5,6,7,8,9,10,11,12,29,30,31,34,37,38,39,41,42,43,44,45,46,49,50,54,55,56,57,58,59,63,64,66,67,68,69,73,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,123,124,125,127,129,130,131,132,133,134,135,136,138,141,142,143,144,145,146,147,148,149,150,151,156,157,158,159,163,164,165,168,170,171,172,173,174,175,182,192,193,194,196,198,199,200,201,203,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[44,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,68,-84,44,-28,-29,-30,-59,-60,-61,-75,-76,-77,44,44,44,44,44,44,44,44,44,44,44,44,-78,-79,44,-58,-74,-73,44,44,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,44,44,-103,-104,44,44,-111,-112,-113,-114,-115,-116,44,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,44,-102,-87,44,-95,44,44,44,44,44,-54,-53,-109,208,44,44,44,-101,-86,-93,44,44,-56,44,-51,-52,-75,-76,44,-94,44,-57,44,-38,-122,-49,-118,44,-117,]),'FLOAT':([0,4,5,6,7,8,9,10,11,12,29,30,31,34,37,38,39,41,42,43,44,45,46,49,50,54,55,56,57,58,59,63,64,66,67,68,69,73,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,123,124,125,127,129,130,131,132,133,134,135,136,138,141,142,143,144,145,146,147,148,149,150,151,156,157,158,159,163,164,165,168,170,171,172,173,174,175,182,192,193,194,196,198,199,200,201,203,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[45,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,69,-84,45,-28,-29,-30,-59,-60,-61,-75,-76,-77,45,45,45,45,45,45,45,45,45,45,45,45,-78,-79,45,-58,-74,-73,45,45,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,45,45,-103,-104,45,45,-111,-112,-113,-114,-115,-116,45,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,45,-102,-87,45,-95,45,45,45,45,45,-54,-53,-109,209,45,45,45,-101,-86,-93,45,45,-56,45,-51,-52,-75,-76,45,-94,45,-57,45,-38,-122,-49,-118,45,-117,]),'NUML':([0,4,5,6,7,8,9,10,11,12,29,31,34,37,38,39,41,42,43,44,45,46,49,50,54,55,56,57,58,59,63,64,66,67,68,69,73,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,123,124,125,127,129,130,131,132,133,134,135,136,138,141,142,143,144,145,146,147,148,149,150,151,156,157,158,159,163,164,165,168,170,171,172,173,174,175,182,192,193,194,196,198,199,200,201,203,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[46,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,46,-28,-29,-30,-59,-60,-61,-75,-76,-77,46,46,46,46,46,46,46,46,46,46,46,46,-78,-79,46,-58,-74,-73,46,46,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,46,46,-103,-104,46,46,-111,-112,-113,-114,-115,-116,46,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,46,-102,-87,46,-95,46,46,46,46,46,-54,-53,-109,46,46,46,46,-101,-86,-93,46,46,-56,46,-51,-52,-75,-76,46,-94,46,-57,46,-38,-122,-49,-118,46,-117,]),'MINUS':([0,4,5,6,7,8,9,10,11,12,13,14,29,31,34,37,38,39,40,41,42,43,44,45,46,49,50,54,55,56,57,58,59,63,64,66,67,68,69,73,83,86,87,88,91,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,123,124,125,127,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,156,157,158,159,163,164,165,168,170,171,172,173,174,175,182,192,193,194,196,198,199,200,201,203,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[30,55,-4,-5,-6,-7,-8,-9,-10,-11,-74,-73,-72,-84,30,-28,-29,-30,-58,-59,-60,-61,-75,-76,-77,30,30,30,30,30,30,30,30,30,30,30,30,-78,-79,30,-58,55,-74,-73,55,30,30,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,55,-67,55,-85,-92,-96,30,30,-103,-104,30,30,-111,-112,-113,-114,-115,-116,-74,30,55,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,30,-102,-87,30,-95,30,30,30,30,192,-54,-53,-109,30,30,30,30,-101,-86,-93,30,30,-56,30,-51,-52,-75,-76,30,-94,30,-57,30,55,-122,-49,-118,30,-117,]),'FOR':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,159,163,165,170,172,173,174,175,182,193,194,198,199,200,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[47,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,-78,-79,-58,-74,-73,47,47,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,-87,-95,47,47,47,-54,-53,-109,47,47,-101,-86,-93,-56,47,-51,-52,-75,-76,47,-94,47,-57,47,-38,-122,-49,-118,47,-117,]),'PUTS':([0,],[49,]),'PRINT':([0,],[50,]),'IF':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,159,163,165,170,172,173,174,175,182,193,194,198,199,200,204,205,206,207,208,209,219,229,230,231,237,238,239,240,244,245,248,250,],[48,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,-78,-79,-58,-74,-73,48,48,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,-87,-95,48,48,48,-54,-53,-109,48,48,-101,-86,-93,-56,48,-51,-52,-75,-76,48,-94,48,-57,48,-38,-122,-49,248,-118,48,-117,]),'WHILE':([0,4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,68,69,83,87,88,92,93,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,159,163,165,170,172,173,174,175,182,193,194,198,199,200,204,205,206,207,208,209,219,229,230,231,237,238,239,240,245,248,250,],[51,-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,-78,-79,-58,-74,-73,51,51,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,-87,-95,51,51,51,-54,-53,-109,51,51,-101,-86,-93,-56,51,-51,-52,-75,-76,51,-94,51,-57,51,-38,-122,-49,-118,51,-117,]),'DEF':([0,],[52,]),'GETS':([0,80,],[53,128,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,37,38,39,40,41,42,43,44,45,46,49,53,68,69,83,84,85,86,87,88,89,90,91,95,96,97,98,99,100,101,102,104,106,109,110,111,112,113,114,115,116,117,118,120,122,125,127,128,156,157,159,163,165,170,174,175,182,198,199,200,204,206,207,225,227,229,231,235,241,242,245,247,250,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-72,-84,-28,-29,-30,-58,-59,-60,-61,-75,-76,-77,-31,-138,-78,-79,-58,-32,-33,-36,-74,-73,-34,-35,-37,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-9,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-139,-89,-88,-102,-87,-95,-55,-54,-53,-109,-101,-86,-93,-56,-51,-52,-124,-135,-94,-57,-137,-123,-134,-118,-136,-117,]),'END':([4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,68,69,83,87,88,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,137,139,140,141,142,143,144,145,146,147,148,149,150,151,154,156,157,159,163,165,170,174,175,182,189,190,191,198,199,200,204,206,207,208,209,210,211,223,228,229,231,232,233,236,237,238,239,240,243,245,246,249,250,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,-78,-79,-58,-74,-73,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-49,174,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,175,-89,-88,-102,-87,-95,-55,-54,-53,-109,204,206,207,-101,-86,-93,-56,-51,-52,-75,-76,225,227,231,235,-94,-57,241,242,245,-119,-38,-122,-49,247,-118,-120,250,-117,]),'ELSE':([4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,68,69,83,87,88,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,137,140,141,142,143,144,145,146,147,148,149,150,151,156,157,159,163,165,170,174,175,182,189,198,199,200,204,206,207,229,231,245,250,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,-78,-79,-58,-74,-73,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-49,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,-87,-95,-55,-54,-53,-109,205,-101,-86,-93,-56,-51,-52,-94,-57,-118,-117,]),'RETURN':([4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,68,69,83,87,88,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,137,140,141,142,143,144,145,146,147,148,149,150,151,156,157,159,163,165,170,174,175,182,198,199,200,204,206,207,210,211,228,229,231,245,250,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,-78,-79,-58,-74,-73,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-49,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,-87,-95,-55,-54,-53,-109,-101,-86,-93,-56,-51,-52,224,226,234,-94,-57,-118,-117,]),'BREAK':([4,5,6,7,8,9,10,11,12,29,31,37,38,39,41,42,43,44,45,46,68,69,83,87,88,95,96,97,98,99,100,101,102,104,106,109,111,112,113,114,115,116,117,118,120,122,125,127,141,142,143,144,145,146,147,148,149,150,151,156,157,159,163,165,170,174,175,182,198,199,200,204,206,207,229,231,236,237,238,239,240,245,246,250,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-72,-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,-78,-79,-58,-74,-73,-68,-69,-70,-71,-80,-81,-82,-83,-91,-90,-12,-62,-13,-110,-65,-64,-67,-66,-85,-92,-96,-103,-104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-89,-88,-102,-87,-95,-55,-54,-53,-109,-101,-86,-93,-56,-51,-52,-94,-57,244,-119,-38,-122,-49,-118,-120,-117,]),'PLUS':([4,13,14,29,40,41,42,43,44,45,46,68,69,83,86,87,88,91,95,96,97,98,99,100,101,102,109,112,114,115,116,117,137,140,172,173,208,209,238,240,],[54,-74,-73,-72,-58,-59,-60,-61,-75,-76,-77,-78,-79,-58,54,-74,-73,54,-68,-69,-70,-71,-80,-81,-82,-83,-74,-73,-74,54,-74,54,-74,54,-74,54,-75,-76,54,-74,]),'DIVISION':([4,13,14,29,40,41,42,43,44,45,46,68,69,83,86,87,88,91,95,96,97,98,99,100,101,102,109,112,114,115,116,117,137,140,172,173,208,209,238,240,],[56,-74,-73,-72,-58,-59,-60,-61,-75,-76,-77,-78,-79,-58,56,-74,-73,56,-68,-69,-70,-71,-80,-81,-82,-83,-74,-73,-74,56,-74,56,-74,56,-74,56,-75,-76,56,-74,]),'MOD':([4,13,14,29,40,41,42,43,44,45,46,68,69,83,86,87,88,91,95,96,97,98,99,100,101,102,109,112,114,115,116,117,137,140,172,173,208,209,238,240,],[57,-74,-73,-72,-58,-59,-60,-61,-75,-76,-77,-78,-79,-58,57,-74,-73,57,-68,-69,-70,-71,-80,-81,-82,-83,-74,-73,-74,57,-74,57,-74,57,-74,57,-75,-76,57,-74,]),'MULT':([4,13,14,29,40,41,42,43,44,45,46,68,69,83,86,87,88,91,95,96,97,98,99,100,101,102,109,112,114,115,116,117,137,140,155,172,173,208,209,238,240,],[58,-74,-73,-72,-58,-59,-60,-61,-75,-76,-77,-78,-79,-58,58,-74,-73,58,-68,-69,-70,-71,-80,-81,-82,-83,-74,-73,-74,58,-74,58,-74,58,179,-74,58,-75,-76,58,-74,]),'EXP':([4,13,14,29,40,41,42,43,44,45,46,68,69,83,86,87,88,91,95,96,97,98,99,100,101,102,109,112,114,115,116,117,137,140,172,173,208,209,238,240,],[59,-74,-73,-72,-58,-59,-60,-61,-75,-76,-77,-78,-79,-58,59,-74,-73,59,-68,-69,-70,-71,-80,-81,-82,-83,-74,-73,-74,59,-74,59,-74,59,-74,59,-75,-76,59,-74,]),'POINT':([5,6,8,13,31,32,33,36,40,41,42,43,44,45,46,68,69,83,109,110,118,120,122,125,127,142,152,153,163,165,169,181,188,199,200,229,],[60,61,62,65,-84,70,72,79,-58,-59,-60,-61,-75,-76,-77,-78,-79,-58,65,161,-85,-92,-96,-103,-104,62,61,60,-87,-95,188,161,203,-86,-93,-94,]),'EQUAL':([13,31,40,41,42,43,78,83,109,137,178,240,],[64,-84,80,-59,-60,-61,126,-58,160,171,196,171,]),'ASSIGNPLUS':([13,40,41,42,43,83,137,240,],[66,-58,-59,-60,-61,-58,66,66,]),'ASSIGNMIN':([13,40,41,42,43,83,137,240,],[67,-58,-59,-60,-61,-58,67,67,]),'COMMA':([31,41,42,43,44,45,46,68,69,75,76,83,178,184,185,186,187,],[-84,-59,-60,-61,-75,-76,-77,-78,-79,123,124,-58,195,201,-108,202,-107,]),'RSQBRACKET':([31,44,45,46,68,69,74,75,76,108,121,166,167,],[-84,-75,-76,-77,-78,-79,122,-97,-98,159,165,-99,-100,]),'RPARENTHESIS':([31,37,38,39,41,42,43,44,45,46,68,69,75,76,83,87,88,118,119,120,122,163,165,166,167,176,177,178,180,183,184,197,199,200,212,213,214,215,216,217,218,220,229,],[-84,-28,-29,-30,-59,-60,-61,-75,-76,-77,-78,-79,-97,-98,-58,-74,-73,-85,163,-92,-96,-87,-95,-99,-100,193,194,-125,198,199,200,219,-86,-93,-126,-133,-131,-127,-128,-129,-130,229,-94,]),'RBRACKET':([31,44,45,46,68,69,77,185,186,187,221,],[-84,-75,-76,-77,-78,-79,125,-108,-105,-107,-106,]),'LPARENTHESIS':([32,94,107,118,120,],[71,155,158,162,164,]),'COMPARE':([41,42,43,82,83,92,],[-59,-60,-61,131,-58,131,]),'GREQUAL':([41,42,43,82,83,92,],[-59,-60,-61,132,-58,132,]),'LSEQUAL':([41,42,43,82,83,92,],[-59,-60,-61,133,-58,133,]),'NOTEQUAL':([41,42,43,82,83,92,],[-59,-60,-61,134,-58,134,]),'LESS':([41,42,43,82,83,92,],[-59,-60,-61,135,-58,135,]),'GREATER':([41,42,43,82,83,92,126,],[-59,-60,-61,136,-58,136,168,]),'DO':([44,45,46,68,69,222,],[-75,-76,-77,-78,-79,230,]),'EMPTY':([60,61,],[103,105,]),'LENGTH':([60,61,65,161,],[104,106,113,182,]),'INDEX':([62,],[107,]),'NEW':([70,72,79,],[118,120,127,]),'IN':([81,],[129,]),'INTERROGATIVE':([103,105,],[156,157,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'asignar':([0,64,171,],[2,111,111,]),'noasignar':([0,],[3,]),'expression':([0,49,50,64,66,67,92,93,138,170,171,172,173,193,194,205,219,230,237,248,],[4,86,91,4,115,117,140,140,173,140,4,140,140,140,140,140,140,238,238,238,]),'string':([0,34,35,49,50,64,71,73,92,93,123,124,158,162,168,170,171,172,173,193,194,201,202,205,219,230,237,248,],[5,76,78,84,89,5,119,76,153,153,76,76,76,183,185,153,5,153,153,153,153,76,78,153,153,153,153,153,]),'cadena':([0,49,50,64,92,93,170,171,172,173,193,194,196,205,219,230,237,248,],[6,85,90,6,152,152,152,6,152,152,152,152,217,152,152,152,152,152,]),'metodocadena':([0,64,92,93,170,171,172,173,193,194,205,219,230,237,248,],[7,7,141,141,141,7,141,141,141,141,141,141,141,141,141,]),'arreglo':([0,64,92,93,170,171,172,173,193,194,196,205,219,230,237,248,],[8,8,142,142,142,8,142,142,142,142,218,142,142,142,142,142,]),'metodosarreglo':([0,64,92,93,170,171,172,173,193,194,205,219,230,237,248,],[9,9,143,143,143,9,143,143,143,143,143,143,143,143,143,]),'hash':([0,64,92,93,160,170,171,172,173,193,194,205,219,230,237,248,],[10,110,144,144,181,144,10,144,144,144,144,144,144,144,144,144,]),'metodohash':([0,64,171,],[11,11,11,]),'boolean':([0,51,64,92,93,170,171,172,173,193,194,196,205,219,230,237,248,],[12,93,12,146,146,146,12,146,146,146,146,216,146,146,146,146,146,]),'variables':([0,48,49,50,51,54,55,56,57,58,59,64,66,67,92,93,130,138,155,170,171,172,173,192,193,194,195,196,205,219,226,230,234,237,248,],[13,82,87,87,92,96,97,87,87,87,87,109,114,116,137,137,87,172,178,137,109,137,137,97,137,137,178,87,137,137,233,240,243,240,240,]),'factor':([0,34,49,50,54,55,56,57,58,59,63,64,66,67,73,92,93,123,124,129,130,138,158,164,168,170,171,172,173,192,193,194,196,201,203,205,219,230,237,248,],[14,75,88,88,88,88,88,88,88,88,108,112,88,88,75,88,88,75,75,169,88,88,75,184,187,88,112,88,88,88,88,88,88,75,222,88,88,88,88,88,]),'estructurasControl':([0,92,93,170,172,173,193,194,205,219,230,237,248,],[15,145,145,145,145,145,145,145,145,145,145,145,145,]),'oputs':([0,],[16,]),'putss':([0,],[17,]),'putsenx':([0,],[18,]),'sentenIF':([0,92,93,170,172,173,193,194,205,219,230,237,248,],[19,148,148,148,148,148,148,148,148,148,148,148,148,]),'sentenifp':([0,92,93,170,172,173,193,194,205,219,230,237,248,],[20,149,149,149,149,149,149,149,149,149,149,149,149,]),'sentenifelse':([0,92,93,170,172,173,193,194,205,219,230,237,248,],[21,150,150,150,150,150,150,150,150,150,150,150,150,]),'sentenWHILE':([0,92,93,170,172,173,193,194,205,219,230,237,248,],[22,151,151,151,151,151,151,151,151,151,151,151,151,]),'funcion1':([0,],[23,]),'funcion2':([0,],[24,]),'funcion3':([0,],[25,]),'ogets':([0,],[26,]),'getsr':([0,],[27,]),'assigns':([0,92,93,170,172,173,193,194,205,219,230,237,248,],[28,147,147,147,147,147,147,147,147,147,147,147,147,]),'term':([0,49,50,54,55,56,57,58,59,64,66,67,92,93,130,138,170,171,172,173,192,193,194,196,205,219,230,237,248,],[29,29,29,95,98,99,100,101,102,29,29,29,29,29,170,29,29,29,29,29,98,29,29,215,29,29,29,29,29,]),'arraycontent':([34,73,123,124,158,201,],[74,121,166,167,180,220,]),'hashcontent':([35,202,],[77,221,]),'comparador':([82,92,],[130,138,]),'algoritmo':([92,93,170,172,173,193,194,205,219,230,237,248,],[139,154,189,190,191,210,211,223,228,239,239,239,]),'fcontenido':([155,195,],[176,212,]),'valuedefect':([155,195,],[177,213,]),'hashcontentvalue':([168,],[186,]),'values':([196,],[214,]),'forcontent':([230,237,],[236,246,]),'forcontentvalue':([230,237,248,],[237,237,249,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignar','instrucciones',1,'p_instrucciones','sintactic.py',7),
  ('instrucciones -> noasignar','instrucciones',1,'p_instrucciones','sintactic.py',8),
  ('asignar -> expression','asignar',1,'p_asignar','sintactic.py',13),
  ('asignar -> string','asignar',1,'p_asignar','sintactic.py',14),
  ('asignar -> cadena','asignar',1,'p_asignar','sintactic.py',15),
  ('asignar -> metodocadena','asignar',1,'p_asignar','sintactic.py',16),
  ('asignar -> arreglo','asignar',1,'p_asignar','sintactic.py',17),
  ('asignar -> metodosarreglo','asignar',1,'p_asignar','sintactic.py',18),
  ('asignar -> hash','asignar',1,'p_asignar','sintactic.py',19),
  ('asignar -> metodohash','asignar',1,'p_asignar','sintactic.py',20),
  ('asignar -> boolean','asignar',1,'p_asignar','sintactic.py',21),
  ('asignar -> variables','asignar',1,'p_asignar','sintactic.py',22),
  ('asignar -> factor','asignar',1,'p_asignar','sintactic.py',23),
  ('noasignar -> estructurasControl','noasignar',1,'p_noasignar','sintactic.py',28),
  ('noasignar -> oputs','noasignar',1,'p_noasignar','sintactic.py',29),
  ('noasignar -> putss','noasignar',1,'p_noasignar','sintactic.py',30),
  ('noasignar -> putsenx','noasignar',1,'p_noasignar','sintactic.py',31),
  ('noasignar -> sentenIF','noasignar',1,'p_noasignar','sintactic.py',32),
  ('noasignar -> sentenifp','noasignar',1,'p_noasignar','sintactic.py',33),
  ('noasignar -> sentenifelse','noasignar',1,'p_noasignar','sintactic.py',34),
  ('noasignar -> sentenWHILE','noasignar',1,'p_noasignar','sintactic.py',35),
  ('noasignar -> funcion1','noasignar',1,'p_noasignar','sintactic.py',36),
  ('noasignar -> funcion2','noasignar',1,'p_noasignar','sintactic.py',37),
  ('noasignar -> funcion3','noasignar',1,'p_noasignar','sintactic.py',38),
  ('noasignar -> ogets','noasignar',1,'p_noasignar','sintactic.py',39),
  ('noasignar -> getsr','noasignar',1,'p_noasignar','sintactic.py',40),
  ('noasignar -> assigns','noasignar',1,'p_noasignar','sintactic.py',41),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactic.py',50),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactic.py',51),
  ('boolean -> NIL','boolean',1,'p_boolean','sintactic.py',52),
  ('oputs -> PUTS','oputs',1,'p_oputs','sintactic.py',58),
  ('putss -> PUTS string','putss',2,'p_puts_String','sintactic.py',62),
  ('putss -> PUTS cadena','putss',2,'p_puts_String','sintactic.py',63),
  ('putss -> PRINT string','putss',2,'p_puts_String','sintactic.py',64),
  ('putss -> PRINT cadena','putss',2,'p_puts_String','sintactic.py',65),
  ('putsenx -> PUTS expression','putsenx',2,'p_puts_expression','sintactic.py',74),
  ('putsenx -> PRINT expression','putsenx',2,'p_puts_expression','sintactic.py',75),
  ('algoritmo -> expression','algoritmo',1,'p_algoritmo','sintactic.py',84),
  ('algoritmo -> metodocadena','algoritmo',1,'p_algoritmo','sintactic.py',85),
  ('algoritmo -> arreglo','algoritmo',1,'p_algoritmo','sintactic.py',86),
  ('algoritmo -> metodosarreglo','algoritmo',1,'p_algoritmo','sintactic.py',87),
  ('algoritmo -> hash','algoritmo',1,'p_algoritmo','sintactic.py',88),
  ('algoritmo -> estructurasControl','algoritmo',1,'p_algoritmo','sintactic.py',89),
  ('algoritmo -> boolean','algoritmo',1,'p_algoritmo','sintactic.py',90),
  ('algoritmo -> assigns','algoritmo',1,'p_algoritmo','sintactic.py',91),
  ('algoritmo -> sentenIF','algoritmo',1,'p_algoritmo','sintactic.py',92),
  ('algoritmo -> sentenifp','algoritmo',1,'p_algoritmo','sintactic.py',93),
  ('algoritmo -> sentenifelse','algoritmo',1,'p_algoritmo','sintactic.py',94),
  ('algoritmo -> variables','algoritmo',1,'p_algoritmo','sintactic.py',95),
  ('algoritmo -> sentenWHILE','algoritmo',1,'p_algoritmo','sintactic.py',96),
  ('sentenWHILE -> WHILE variables comparador variables algoritmo END','sentenWHILE',6,'p_sentenwhile','sintactic.py',104),
  ('sentenWHILE -> WHILE variables comparador expression algoritmo END','sentenWHILE',6,'p_sentenwhile','sintactic.py',105),
  ('sentenWHILE -> WHILE boolean algoritmo END','sentenWHILE',4,'p_sentenwhile','sintactic.py',106),
  ('sentenWHILE -> WHILE variables algoritmo END','sentenWHILE',4,'p_sentenwhile','sintactic.py',107),
  ('sentenIF -> IF variables comparador term','sentenIF',4,'p_if','sintactic.py',115),
  ('sentenifp -> IF variables comparador term algoritmo END','sentenifp',6,'p_vif','sintactic.py',120),
  ('sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END','sentenifelse',8,'p_if_else','sintactic.py',124),
  ('variables -> IDLOCAL','variables',1,'p_variables','sintactic.py',131),
  ('variables -> IDINSTANCE','variables',1,'p_variables','sintactic.py',132),
  ('variables -> IDCLASS','variables',1,'p_variables','sintactic.py',133),
  ('variables -> IDGLOBAL','variables',1,'p_variables','sintactic.py',134),
  ('assigns -> variables EQUAL asignar','assigns',3,'p_assigns_normal','sintactic.py',140),
  ('assigns -> variables EQUAL factor','assigns',3,'p_assigns_normal','sintactic.py',141),
  ('assigns -> variables ASSIGNPLUS expression','assigns',3,'p_assigns_plus','sintactic.py',146),
  ('assigns -> variables ASSIGNPLUS variables','assigns',3,'p_assigns_plus','sintactic.py',147),
  ('assigns -> variables ASSIGNMIN expression','assigns',3,'p_assigns_min','sintactic.py',153),
  ('assigns -> variables ASSIGNMIN variables','assigns',3,'p_assigns_min','sintactic.py',154),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','sintactic.py',164),
  ('expression -> expression PLUS variables','expression',3,'p_expression_plusVAR','sintactic.py',168),
  ('expression -> expression MINUS variables','expression',3,'p_expression_minusVAR','sintactic.py',172),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','sintactic.py',176),
  ('expression -> term','expression',1,'p_expression_term','sintactic.py',181),
  ('term -> factor','term',1,'p_term_factor','sintactic.py',185),
  ('term -> variables','term',1,'p_term_variable','sintactic.py',189),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactic.py',193),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactic.py',194),
  ('factor -> NUML','factor',1,'p_factor_num','sintactic.py',195),
  ('factor -> MINUS NUMBER','factor',2,'p_factor_numnegative','sintactic.py',199),
  ('factor -> MINUS FLOAT','factor',2,'p_factor_numnegative','sintactic.py',200),
  ('expression -> expression DIVISION term','expression',3,'p_expression_division','sintactic.py',206),
  ('expression -> expression MOD term','expression',3,'p_expression_mod','sintactic.py',211),
  ('expression -> expression MULT term','expression',3,'p_expression_mult','sintactic.py',215),
  ('expression -> expression EXP term','expression',3,'p_expression_exp','sintactic.py',219),
  ('string -> STRINGV','string',1,'p_string_str','sintactic.py',228),
  ('cadena -> STRING POINT NEW','cadena',3,'p_cadena_forma1','sintactic.py',232),
  ('cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS','cadena',6,'p_cadena_forma2','sintactic.py',236),
  ('cadena -> STRING LPARENTHESIS string RPARENTHESIS','cadena',4,'p_cadena_forma3','sintactic.py',240),
  ('metodocadena -> cadena POINT EMPTY INTERROGATIVE','metodocadena',4,'p_metodocadena_empty','sintactic.py',247),
  ('metodocadena -> string POINT EMPTY INTERROGATIVE','metodocadena',4,'p_metodocadena_empty','sintactic.py',248),
  ('metodocadena -> cadena POINT LENGTH','metodocadena',3,'p_metodocadena_length','sintactic.py',252),
  ('metodocadena -> string POINT LENGTH','metodocadena',3,'p_metodocadena_length','sintactic.py',253),
  ('arreglo -> ARRAY POINT NEW','arreglo',3,'p_arreglo_tipo4','sintactic.py',259),
  ('arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS','arreglo',6,'p_arreglo_tipo1','sintactic.py',263),
  ('arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS','arreglo',8,'p_arreglo_tipo2','sintactic.py',267),
  ('arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET','arreglo',4,'p_arreglo_tipo3','sintactic.py',271),
  ('arreglo -> LSQBRACKET arraycontent RSQBRACKET','arreglo',3,'p_arreglo_tipo5','sintactic.py',275),
  ('arraycontent -> factor','arraycontent',1,'p_arraycontent_var1','sintactic.py',279),
  ('arraycontent -> string','arraycontent',1,'p_arraycontent_var1','sintactic.py',280),
  ('arraycontent -> factor COMMA arraycontent','arraycontent',3,'p_arraycontent_var2','sintactic.py',284),
  ('arraycontent -> string COMMA arraycontent','arraycontent',3,'p_arraycontent_var2','sintactic.py',285),
  ('metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS','metodosarreglo',6,'p_metodosarreglo_index','sintactic.py',291),
  ('metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET','metodosarreglo',4,'p_metodosarreglo_num','sintactic.py',295),
  ('hash -> LBRACKET hashcontent RBRACKET','hash',3,'p_hash_tipo1','sintactic.py',301),
  ('hash -> HASH POINT NEW','hash',3,'p_hash_tipo2','sintactic.py',305),
  ('hashcontent -> string EQUAL GREATER hashcontentvalue','hashcontent',4,'p_hashcontent_var1','sintactic.py',309),
  ('hashcontent -> string EQUAL GREATER hashcontentvalue COMMA hashcontent','hashcontent',6,'p_hashcontent_var2','sintactic.py',313),
  ('hashcontentvalue -> factor','hashcontentvalue',1,'p_hashcontentvalue_var','sintactic.py',317),
  ('hashcontentvalue -> string','hashcontentvalue',1,'p_hashcontentvalue_var','sintactic.py',318),
  ('metodohash -> variables EQUAL hash POINT LENGTH','metodohash',5,'p_metodohash_length','sintactic.py',324),
  ('metodohash -> variables POINT LENGTH','metodohash',3,'p_metodohash_length2','sintactic.py',329),
  ('comparador -> COMPARE','comparador',1,'p_comparador','sintactic.py',341),
  ('comparador -> GREQUAL','comparador',1,'p_comparador','sintactic.py',342),
  ('comparador -> LSEQUAL','comparador',1,'p_comparador','sintactic.py',343),
  ('comparador -> NOTEQUAL','comparador',1,'p_comparador','sintactic.py',344),
  ('comparador -> LESS','comparador',1,'p_comparador','sintactic.py',345),
  ('comparador -> GREATER','comparador',1,'p_comparador','sintactic.py',346),
  ('estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END','estructurasControl',13,'p_estructurasControl_for1','sintactic.py',352),
  ('estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END','estructurasControl',10,'p_estructurasControl_for2','sintactic.py',356),
  ('forcontent -> forcontentvalue','forcontent',1,'p_forcontent_var1','sintactic.py',362),
  ('forcontent -> forcontentvalue forcontent','forcontent',2,'p_forcontent_var2','sintactic.py',366),
  ('forcontentvalue -> expression','forcontentvalue',1,'p_forcontentvalue_var','sintactic.py',370),
  ('forcontentvalue -> algoritmo','forcontentvalue',1,'p_forcontentvalue_var','sintactic.py',371),
  ('funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END','funcion1',9,'p_funcion1','sintactic.py',378),
  ('funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END','funcion1',7,'p_funcion1','sintactic.py',379),
  ('fcontenido -> variables','fcontenido',1,'p_funcioncontent','sintactic.py',383),
  ('fcontenido -> variables COMMA fcontenido','fcontenido',3,'p_funcioncontent','sintactic.py',384),
  ('values -> term','values',1,'p_values','sintactic.py',389),
  ('values -> boolean','values',1,'p_values','sintactic.py',390),
  ('values -> cadena','values',1,'p_values','sintactic.py',391),
  ('values -> arreglo','values',1,'p_values','sintactic.py',392),
  ('valuedefect -> variables EQUAL values','valuedefect',3,'p_valuedefect','sintactic.py',395),
  ('valuedefect -> variables COMMA fcontenido','valuedefect',3,'p_valuedefect','sintactic.py',396),
  ('valuedefect -> variables COMMA valuedefect','valuedefect',3,'p_valuedefect','sintactic.py',397),
  ('funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END','funcion2',9,'p_funcion2','sintactic.py',399),
  ('funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo END','funcion2',7,'p_funcion2','sintactic.py',400),
  ('funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END','funcion3',10,'p_funcion3','sintactic.py',405),
  ('funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END','funcion3',8,'p_funcion3','sintactic.py',406),
  ('ogets -> GETS','ogets',1,'p_lectura','sintactic.py',413),
  ('getsr -> IDLOCAL EQUAL GETS','getsr',3,'p_lectura2','sintactic.py',417),
]
