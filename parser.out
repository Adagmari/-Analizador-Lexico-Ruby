Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ANDS
    ASSIGNMIN
    ASSIGNPLUS
    BSLASH
    CASE
    CLASS
    COMENTARIO
    COMID
    COMIS
    DEF
    DEFINED
    DIVISION
    ELSE
    ELSIF
    ENSURE
    EXP
    GETS
    IDCLASS
    IDENTIFIER
    IDGLOBAL
    IDINSTANCE
    IDLOCAL
    MOD
    MODULE
    MULT
    NEXT
    NOT
    NOTS
    NUML
    OR
    ORS
    PUTC
    REDO
    RESCUE
    RETURN
    SELF
    SEMICOLON
    UNDEF
    UNTIL
    WHEN
    WHILE

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> expression
Rule 2     instrucciones -> string
Rule 3     instrucciones -> cadena
Rule 4     instrucciones -> metodocadena
Rule 5     instrucciones -> arreglo
Rule 6     instrucciones -> metodosarreglo
Rule 7     instrucciones -> hash
Rule 8     instrucciones -> estructurasControl
Rule 9     instrucciones -> boolean
Rule 10    instrucciones -> oputs
Rule 11    instrucciones -> putss
Rule 12    instrucciones -> putsenx
Rule 13    instrucciones -> sentenIF
Rule 14    boolean -> TRUE
Rule 15    boolean -> FALSE
Rule 16    boolean -> NIL
Rule 17    oputs -> PUTS
Rule 18    putss -> PUTS string
Rule 19    putss -> PUTS cadena
Rule 20    putss -> PRINT string
Rule 21    putss -> PRINT cadena
Rule 22    putsenx -> PUTS expression
Rule 23    putsenx -> PRINT expression
Rule 24    sentenIF -> IF comparador term
Rule 25    comparador -> COMPARE
Rule 26    comparador -> GREQUAL
Rule 27    comparador -> LSEQUAL
Rule 28    comparador -> NOTEQUAL
Rule 29    comparador -> LESS
Rule 30    comparador -> GREATER
Rule 31    expression -> expression PLUS term
Rule 32    expression -> expression MINUS term
Rule 33    expression -> term
Rule 34    term -> factor
Rule 35    factor -> NUMBER
Rule 36    factor -> FLOAT
Rule 37    factor -> MINUS NUMBER
Rule 38    factor -> MINUS FLOAT
Rule 39    string -> STRINGV
Rule 40    cadena -> STRING POINT NEW
Rule 41    cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS
Rule 42    cadena -> STRING LPARENTHESIS string RPARENTHESIS
Rule 43    metodocadena -> cadena POINT EMPTY INTERROGATIVE
Rule 44    metodocadena -> string POINT EMPTY INTERROGATIVE
Rule 45    metodocadena -> cadena POINT LENGTH
Rule 46    metodocadena -> string POINT LENGTH
Rule 47    arreglo -> ARRAY POINT NEW
Rule 48    arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
Rule 49    arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
Rule 50    arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET
Rule 51    arreglo -> LSQBRACKET arraycontent RSQBRACKET
Rule 52    arraycontent -> factor
Rule 53    arraycontent -> string
Rule 54    arraycontent -> factor COMMA arraycontent
Rule 55    arraycontent -> string COMMA arraycontent
Rule 56    metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
Rule 57    metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET
Rule 58    hash -> LBRACKET hashcontent RBRACKET
Rule 59    hash -> HASH POINT NEW
Rule 60    hashcontent -> string ASSIGN GREATER hashcontentvalue
Rule 61    hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent
Rule 62    hashcontentvalue -> factor
Rule 63    hashcontentvalue -> string
Rule 64    estructurasControl -> FOR factor IN factor POINT POINT factor DO BREAK IF END
Rule 65    estructurasControl -> FOR factor IN factor POINT POINT factor DO END

Terminals, with rules where they appear

AND                  : 
ANDS                 : 
ARRAY                : 47 48 49 50
ASSIGN               : 60 61
ASSIGNMIN            : 
ASSIGNPLUS           : 
BREAK                : 64
BSLASH               : 
CASE                 : 
CLASS                : 
COMENTARIO           : 
COMID                : 
COMIS                : 
COMMA                : 49 54 55 61
COMPARE              : 25
DEF                  : 
DEFINED              : 
DIVISION             : 
DO                   : 64 65
ELSE                 : 
ELSIF                : 
EMPTY                : 43 44
END                  : 64 65
ENSURE               : 
EXP                  : 
FALSE                : 15
FLOAT                : 36 38
FOR                  : 64 65
GETS                 : 
GREATER              : 30 60 61
GREQUAL              : 26
HASH                 : 59
IDCLASS              : 
IDENTIFIER           : 
IDGLOBAL             : 
IDINSTANCE           : 
IDLOCAL              : 
IF                   : 24 64
IN                   : 64 65
INDEX                : 56
INTERROGATIVE        : 43 44
LBRACKET             : 58
LENGTH               : 45 46
LESS                 : 29
LPARENTHESIS         : 41 42 48 49 56
LSEQUAL              : 27
LSQBRACKET           : 50 51 57
MINUS                : 32 37 38
MOD                  : 
MODULE               : 
MULT                 : 
NEW                  : 40 41 47 48 49 59
NEXT                 : 
NIL                  : 16
NOT                  : 
NOTEQUAL             : 28
NOTS                 : 
NUMBER               : 35 37
NUML                 : 
OR                   : 
ORS                  : 
PLUS                 : 31
POINT                : 40 41 43 44 45 46 47 48 49 56 59 64 64 65 65
PRINT                : 20 21 23
PUTC                 : 
PUTS                 : 17 18 19 22
RBRACKET             : 58
REDO                 : 
RESCUE               : 
RETURN               : 
RPARENTHESIS         : 41 42 48 49 56
RSQBRACKET           : 50 51 57
SELF                 : 
SEMICOLON            : 
STRING               : 40 41 42
STRINGV              : 39
TRUE                 : 14
UNDEF                : 
UNTIL                : 
WHEN                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

arraycontent         : 49 50 51 54 55 56
arreglo              : 5 56 57
boolean              : 9
cadena               : 3 19 21 43 45
comparador           : 24
estructurasControl   : 8
expression           : 1 22 23 31 32
factor               : 34 48 49 52 54 57 62 64 64 64 65 65 65
hash                 : 7
hashcontent          : 58 61
hashcontentvalue     : 60 61
instrucciones        : 0
metodocadena         : 4
metodosarreglo       : 6
oputs                : 10
putsenx              : 12
putss                : 11
sentenIF             : 13
string               : 2 18 20 41 42 44 46 53 55 60 61 63
term                 : 24 31 32 33

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . expression
    (2) instrucciones -> . string
    (3) instrucciones -> . cadena
    (4) instrucciones -> . metodocadena
    (5) instrucciones -> . arreglo
    (6) instrucciones -> . metodosarreglo
    (7) instrucciones -> . hash
    (8) instrucciones -> . estructurasControl
    (9) instrucciones -> . boolean
    (10) instrucciones -> . oputs
    (11) instrucciones -> . putss
    (12) instrucciones -> . putsenx
    (13) instrucciones -> . sentenIF
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (39) string -> . STRINGV
    (40) cadena -> . STRING POINT NEW
    (41) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (42) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (43) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (44) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (45) metodocadena -> . cadena POINT LENGTH
    (46) metodocadena -> . string POINT LENGTH
    (47) arreglo -> . ARRAY POINT NEW
    (48) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (49) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (50) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (51) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (56) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (57) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (58) hash -> . LBRACKET hashcontent RBRACKET
    (59) hash -> . HASH POINT NEW
    (64) estructurasControl -> . FOR factor IN factor POINT POINT factor DO BREAK IF END
    (65) estructurasControl -> . FOR factor IN factor POINT POINT factor DO END
    (14) boolean -> . TRUE
    (15) boolean -> . FALSE
    (16) boolean -> . NIL
    (17) oputs -> . PUTS
    (18) putss -> . PUTS string
    (19) putss -> . PUTS cadena
    (20) putss -> . PRINT string
    (21) putss -> . PRINT cadena
    (22) putsenx -> . PUTS expression
    (23) putsenx -> . PRINT expression
    (24) sentenIF -> . IF comparador term
    (34) term -> . factor
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 17
    STRING          shift and go to state 18
    ARRAY           shift and go to state 19
    LSQBRACKET      shift and go to state 21
    LBRACKET        shift and go to state 22
    HASH            shift and go to state 23
    FOR             shift and go to state 24
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    NIL             shift and go to state 28
    PUTS            shift and go to state 29
    PRINT           shift and go to state 30
    IF              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16

    instrucciones                  shift and go to state 1
    expression                     shift and go to state 2
    string                         shift and go to state 3
    cadena                         shift and go to state 4
    metodocadena                   shift and go to state 5
    arreglo                        shift and go to state 6
    metodosarreglo                 shift and go to state 7
    hash                           shift and go to state 8
    estructurasControl             shift and go to state 9
    boolean                        shift and go to state 10
    oputs                          shift and go to state 11
    putss                          shift and go to state 12
    putsenx                        shift and go to state 13
    sentenIF                       shift and go to state 14
    term                           shift and go to state 15
    factor                         shift and go to state 20

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    $end            reduce using rule 1 (instrucciones -> expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34


state 3

    (2) instrucciones -> string .
    (44) metodocadena -> string . POINT EMPTY INTERROGATIVE
    (46) metodocadena -> string . POINT LENGTH

    $end            reduce using rule 2 (instrucciones -> string .)
    POINT           shift and go to state 35


state 4

    (3) instrucciones -> cadena .
    (43) metodocadena -> cadena . POINT EMPTY INTERROGATIVE
    (45) metodocadena -> cadena . POINT LENGTH

    $end            reduce using rule 3 (instrucciones -> cadena .)
    POINT           shift and go to state 36


state 5

    (4) instrucciones -> metodocadena .

    $end            reduce using rule 4 (instrucciones -> metodocadena .)


state 6

    (5) instrucciones -> arreglo .
    (56) metodosarreglo -> arreglo . POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (57) metodosarreglo -> arreglo . LSQBRACKET factor RSQBRACKET

    $end            reduce using rule 5 (instrucciones -> arreglo .)
    POINT           shift and go to state 37
    LSQBRACKET      shift and go to state 38


state 7

    (6) instrucciones -> metodosarreglo .

    $end            reduce using rule 6 (instrucciones -> metodosarreglo .)


state 8

    (7) instrucciones -> hash .

    $end            reduce using rule 7 (instrucciones -> hash .)


state 9

    (8) instrucciones -> estructurasControl .

    $end            reduce using rule 8 (instrucciones -> estructurasControl .)


state 10

    (9) instrucciones -> boolean .

    $end            reduce using rule 9 (instrucciones -> boolean .)


state 11

    (10) instrucciones -> oputs .

    $end            reduce using rule 10 (instrucciones -> oputs .)


state 12

    (11) instrucciones -> putss .

    $end            reduce using rule 11 (instrucciones -> putss .)


state 13

    (12) instrucciones -> putsenx .

    $end            reduce using rule 12 (instrucciones -> putsenx .)


state 14

    (13) instrucciones -> sentenIF .

    $end            reduce using rule 13 (instrucciones -> sentenIF .)


state 15

    (33) expression -> term .

    PLUS            reduce using rule 33 (expression -> term .)
    MINUS           reduce using rule 33 (expression -> term .)
    $end            reduce using rule 33 (expression -> term .)


state 16

    (37) factor -> MINUS . NUMBER
    (38) factor -> MINUS . FLOAT

    NUMBER          shift and go to state 39
    FLOAT           shift and go to state 40


state 17

    (39) string -> STRINGV .

    POINT           reduce using rule 39 (string -> STRINGV .)
    $end            reduce using rule 39 (string -> STRINGV .)
    COMMA           reduce using rule 39 (string -> STRINGV .)
    RSQBRACKET      reduce using rule 39 (string -> STRINGV .)
    ASSIGN          reduce using rule 39 (string -> STRINGV .)
    RPARENTHESIS    reduce using rule 39 (string -> STRINGV .)
    RBRACKET        reduce using rule 39 (string -> STRINGV .)


state 18

    (40) cadena -> STRING . POINT NEW
    (41) cadena -> STRING . POINT NEW LPARENTHESIS string RPARENTHESIS
    (42) cadena -> STRING . LPARENTHESIS string RPARENTHESIS

    POINT           shift and go to state 41
    LPARENTHESIS    shift and go to state 42


state 19

    (47) arreglo -> ARRAY . POINT NEW
    (48) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor RPARENTHESIS
    (49) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (50) arreglo -> ARRAY . LSQBRACKET arraycontent RSQBRACKET

    POINT           shift and go to state 43
    LSQBRACKET      shift and go to state 44


state 20

    (34) term -> factor .

    PLUS            reduce using rule 34 (term -> factor .)
    MINUS           reduce using rule 34 (term -> factor .)
    $end            reduce using rule 34 (term -> factor .)


state 21

    (51) arreglo -> LSQBRACKET . arraycontent RSQBRACKET
    (52) arraycontent -> . factor
    (53) arraycontent -> . string
    (54) arraycontent -> . factor COMMA arraycontent
    (55) arraycontent -> . string COMMA arraycontent
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT
    (39) string -> . STRINGV

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16
    STRINGV         shift and go to state 17

    arraycontent                   shift and go to state 45
    factor                         shift and go to state 46
    string                         shift and go to state 47

state 22

    (58) hash -> LBRACKET . hashcontent RBRACKET
    (60) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (61) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (39) string -> . STRINGV

    STRINGV         shift and go to state 17

    hashcontent                    shift and go to state 48
    string                         shift and go to state 49

state 23

    (59) hash -> HASH . POINT NEW

    POINT           shift and go to state 50


state 24

    (64) estructurasControl -> FOR . factor IN factor POINT POINT factor DO BREAK IF END
    (65) estructurasControl -> FOR . factor IN factor POINT POINT factor DO END
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16

    factor                         shift and go to state 51

state 25

    (24) sentenIF -> IF . comparador term
    (25) comparador -> . COMPARE
    (26) comparador -> . GREQUAL
    (27) comparador -> . LSEQUAL
    (28) comparador -> . NOTEQUAL
    (29) comparador -> . LESS
    (30) comparador -> . GREATER

    COMPARE         shift and go to state 53
    GREQUAL         shift and go to state 54
    LSEQUAL         shift and go to state 55
    NOTEQUAL        shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58

    comparador                     shift and go to state 52

state 26

    (14) boolean -> TRUE .

    $end            reduce using rule 14 (boolean -> TRUE .)


state 27

    (15) boolean -> FALSE .

    $end            reduce using rule 15 (boolean -> FALSE .)


state 28

    (16) boolean -> NIL .

    $end            reduce using rule 16 (boolean -> NIL .)


state 29

    (17) oputs -> PUTS .
    (18) putss -> PUTS . string
    (19) putss -> PUTS . cadena
    (22) putsenx -> PUTS . expression
    (39) string -> . STRINGV
    (40) cadena -> . STRING POINT NEW
    (41) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (42) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (34) term -> . factor
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT

    $end            reduce using rule 17 (oputs -> PUTS .)
    STRINGV         shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16

    string                         shift and go to state 59
    cadena                         shift and go to state 60
    expression                     shift and go to state 61
    term                           shift and go to state 15
    factor                         shift and go to state 20

state 30

    (20) putss -> PRINT . string
    (21) putss -> PRINT . cadena
    (23) putsenx -> PRINT . expression
    (39) string -> . STRINGV
    (40) cadena -> . STRING POINT NEW
    (41) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (42) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (34) term -> . factor
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16

    string                         shift and go to state 62
    cadena                         shift and go to state 63
    expression                     shift and go to state 64
    term                           shift and go to state 15
    factor                         shift and go to state 20

state 31

    (35) factor -> NUMBER .

    PLUS            reduce using rule 35 (factor -> NUMBER .)
    MINUS           reduce using rule 35 (factor -> NUMBER .)
    $end            reduce using rule 35 (factor -> NUMBER .)
    COMMA           reduce using rule 35 (factor -> NUMBER .)
    RSQBRACKET      reduce using rule 35 (factor -> NUMBER .)
    IN              reduce using rule 35 (factor -> NUMBER .)
    RPARENTHESIS    reduce using rule 35 (factor -> NUMBER .)
    POINT           reduce using rule 35 (factor -> NUMBER .)
    RBRACKET        reduce using rule 35 (factor -> NUMBER .)
    DO              reduce using rule 35 (factor -> NUMBER .)


state 32

    (36) factor -> FLOAT .

    PLUS            reduce using rule 36 (factor -> FLOAT .)
    MINUS           reduce using rule 36 (factor -> FLOAT .)
    $end            reduce using rule 36 (factor -> FLOAT .)
    COMMA           reduce using rule 36 (factor -> FLOAT .)
    RSQBRACKET      reduce using rule 36 (factor -> FLOAT .)
    IN              reduce using rule 36 (factor -> FLOAT .)
    RPARENTHESIS    reduce using rule 36 (factor -> FLOAT .)
    POINT           reduce using rule 36 (factor -> FLOAT .)
    RBRACKET        reduce using rule 36 (factor -> FLOAT .)
    DO              reduce using rule 36 (factor -> FLOAT .)


state 33

    (31) expression -> expression PLUS . term
    (34) term -> . factor
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16

    term                           shift and go to state 65
    factor                         shift and go to state 20

state 34

    (32) expression -> expression MINUS . term
    (34) term -> . factor
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16

    term                           shift and go to state 66
    factor                         shift and go to state 20

state 35

    (44) metodocadena -> string POINT . EMPTY INTERROGATIVE
    (46) metodocadena -> string POINT . LENGTH

    EMPTY           shift and go to state 67
    LENGTH          shift and go to state 68


state 36

    (43) metodocadena -> cadena POINT . EMPTY INTERROGATIVE
    (45) metodocadena -> cadena POINT . LENGTH

    EMPTY           shift and go to state 69
    LENGTH          shift and go to state 70


state 37

    (56) metodosarreglo -> arreglo POINT . INDEX LPARENTHESIS arraycontent RPARENTHESIS

    INDEX           shift and go to state 71


state 38

    (57) metodosarreglo -> arreglo LSQBRACKET . factor RSQBRACKET
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16

    factor                         shift and go to state 72

state 39

    (37) factor -> MINUS NUMBER .

    PLUS            reduce using rule 37 (factor -> MINUS NUMBER .)
    MINUS           reduce using rule 37 (factor -> MINUS NUMBER .)
    $end            reduce using rule 37 (factor -> MINUS NUMBER .)
    COMMA           reduce using rule 37 (factor -> MINUS NUMBER .)
    RSQBRACKET      reduce using rule 37 (factor -> MINUS NUMBER .)
    IN              reduce using rule 37 (factor -> MINUS NUMBER .)
    RPARENTHESIS    reduce using rule 37 (factor -> MINUS NUMBER .)
    POINT           reduce using rule 37 (factor -> MINUS NUMBER .)
    RBRACKET        reduce using rule 37 (factor -> MINUS NUMBER .)
    DO              reduce using rule 37 (factor -> MINUS NUMBER .)


state 40

    (38) factor -> MINUS FLOAT .

    PLUS            reduce using rule 38 (factor -> MINUS FLOAT .)
    MINUS           reduce using rule 38 (factor -> MINUS FLOAT .)
    $end            reduce using rule 38 (factor -> MINUS FLOAT .)
    COMMA           reduce using rule 38 (factor -> MINUS FLOAT .)
    RSQBRACKET      reduce using rule 38 (factor -> MINUS FLOAT .)
    IN              reduce using rule 38 (factor -> MINUS FLOAT .)
    RPARENTHESIS    reduce using rule 38 (factor -> MINUS FLOAT .)
    POINT           reduce using rule 38 (factor -> MINUS FLOAT .)
    RBRACKET        reduce using rule 38 (factor -> MINUS FLOAT .)
    DO              reduce using rule 38 (factor -> MINUS FLOAT .)


state 41

    (40) cadena -> STRING POINT . NEW
    (41) cadena -> STRING POINT . NEW LPARENTHESIS string RPARENTHESIS

    NEW             shift and go to state 73


state 42

    (42) cadena -> STRING LPARENTHESIS . string RPARENTHESIS
    (39) string -> . STRINGV

    STRINGV         shift and go to state 17

    string                         shift and go to state 74

state 43

    (47) arreglo -> ARRAY POINT . NEW
    (48) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor RPARENTHESIS
    (49) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    NEW             shift and go to state 75


state 44

    (50) arreglo -> ARRAY LSQBRACKET . arraycontent RSQBRACKET
    (52) arraycontent -> . factor
    (53) arraycontent -> . string
    (54) arraycontent -> . factor COMMA arraycontent
    (55) arraycontent -> . string COMMA arraycontent
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT
    (39) string -> . STRINGV

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16
    STRINGV         shift and go to state 17

    arraycontent                   shift and go to state 76
    factor                         shift and go to state 46
    string                         shift and go to state 47

state 45

    (51) arreglo -> LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 77


state 46

    (52) arraycontent -> factor .
    (54) arraycontent -> factor . COMMA arraycontent

    RSQBRACKET      reduce using rule 52 (arraycontent -> factor .)
    RPARENTHESIS    reduce using rule 52 (arraycontent -> factor .)
    COMMA           shift and go to state 78


state 47

    (53) arraycontent -> string .
    (55) arraycontent -> string . COMMA arraycontent

    RSQBRACKET      reduce using rule 53 (arraycontent -> string .)
    RPARENTHESIS    reduce using rule 53 (arraycontent -> string .)
    COMMA           shift and go to state 79


state 48

    (58) hash -> LBRACKET hashcontent . RBRACKET

    RBRACKET        shift and go to state 80


state 49

    (60) hashcontent -> string . ASSIGN GREATER hashcontentvalue
    (61) hashcontent -> string . ASSIGN GREATER hashcontentvalue COMMA hashcontent

    ASSIGN          shift and go to state 81


state 50

    (59) hash -> HASH POINT . NEW

    NEW             shift and go to state 82


state 51

    (64) estructurasControl -> FOR factor . IN factor POINT POINT factor DO BREAK IF END
    (65) estructurasControl -> FOR factor . IN factor POINT POINT factor DO END

    IN              shift and go to state 83


state 52

    (24) sentenIF -> IF comparador . term
    (34) term -> . factor
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16

    term                           shift and go to state 84
    factor                         shift and go to state 20

state 53

    (25) comparador -> COMPARE .

    NUMBER          reduce using rule 25 (comparador -> COMPARE .)
    FLOAT           reduce using rule 25 (comparador -> COMPARE .)
    MINUS           reduce using rule 25 (comparador -> COMPARE .)


state 54

    (26) comparador -> GREQUAL .

    NUMBER          reduce using rule 26 (comparador -> GREQUAL .)
    FLOAT           reduce using rule 26 (comparador -> GREQUAL .)
    MINUS           reduce using rule 26 (comparador -> GREQUAL .)


state 55

    (27) comparador -> LSEQUAL .

    NUMBER          reduce using rule 27 (comparador -> LSEQUAL .)
    FLOAT           reduce using rule 27 (comparador -> LSEQUAL .)
    MINUS           reduce using rule 27 (comparador -> LSEQUAL .)


state 56

    (28) comparador -> NOTEQUAL .

    NUMBER          reduce using rule 28 (comparador -> NOTEQUAL .)
    FLOAT           reduce using rule 28 (comparador -> NOTEQUAL .)
    MINUS           reduce using rule 28 (comparador -> NOTEQUAL .)


state 57

    (29) comparador -> LESS .

    NUMBER          reduce using rule 29 (comparador -> LESS .)
    FLOAT           reduce using rule 29 (comparador -> LESS .)
    MINUS           reduce using rule 29 (comparador -> LESS .)


state 58

    (30) comparador -> GREATER .

    NUMBER          reduce using rule 30 (comparador -> GREATER .)
    FLOAT           reduce using rule 30 (comparador -> GREATER .)
    MINUS           reduce using rule 30 (comparador -> GREATER .)


state 59

    (18) putss -> PUTS string .

    $end            reduce using rule 18 (putss -> PUTS string .)


state 60

    (19) putss -> PUTS cadena .

    $end            reduce using rule 19 (putss -> PUTS cadena .)


state 61

    (22) putsenx -> PUTS expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    $end            reduce using rule 22 (putsenx -> PUTS expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34


state 62

    (20) putss -> PRINT string .

    $end            reduce using rule 20 (putss -> PRINT string .)


state 63

    (21) putss -> PRINT cadena .

    $end            reduce using rule 21 (putss -> PRINT cadena .)


state 64

    (23) putsenx -> PRINT expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    $end            reduce using rule 23 (putsenx -> PRINT expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34


state 65

    (31) expression -> expression PLUS term .

    PLUS            reduce using rule 31 (expression -> expression PLUS term .)
    MINUS           reduce using rule 31 (expression -> expression PLUS term .)
    $end            reduce using rule 31 (expression -> expression PLUS term .)


state 66

    (32) expression -> expression MINUS term .

    PLUS            reduce using rule 32 (expression -> expression MINUS term .)
    MINUS           reduce using rule 32 (expression -> expression MINUS term .)
    $end            reduce using rule 32 (expression -> expression MINUS term .)


state 67

    (44) metodocadena -> string POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 85


state 68

    (46) metodocadena -> string POINT LENGTH .

    $end            reduce using rule 46 (metodocadena -> string POINT LENGTH .)


state 69

    (43) metodocadena -> cadena POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 86


state 70

    (45) metodocadena -> cadena POINT LENGTH .

    $end            reduce using rule 45 (metodocadena -> cadena POINT LENGTH .)


state 71

    (56) metodosarreglo -> arreglo POINT INDEX . LPARENTHESIS arraycontent RPARENTHESIS

    LPARENTHESIS    shift and go to state 87


state 72

    (57) metodosarreglo -> arreglo LSQBRACKET factor . RSQBRACKET

    RSQBRACKET      shift and go to state 88


state 73

    (40) cadena -> STRING POINT NEW .
    (41) cadena -> STRING POINT NEW . LPARENTHESIS string RPARENTHESIS

    POINT           reduce using rule 40 (cadena -> STRING POINT NEW .)
    $end            reduce using rule 40 (cadena -> STRING POINT NEW .)
    LPARENTHESIS    shift and go to state 89


state 74

    (42) cadena -> STRING LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 90


state 75

    (47) arreglo -> ARRAY POINT NEW .
    (48) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor RPARENTHESIS
    (49) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    POINT           reduce using rule 47 (arreglo -> ARRAY POINT NEW .)
    LSQBRACKET      reduce using rule 47 (arreglo -> ARRAY POINT NEW .)
    $end            reduce using rule 47 (arreglo -> ARRAY POINT NEW .)
    LPARENTHESIS    shift and go to state 91


state 76

    (50) arreglo -> ARRAY LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 92


state 77

    (51) arreglo -> LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 51 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 51 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 51 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)


state 78

    (54) arraycontent -> factor COMMA . arraycontent
    (52) arraycontent -> . factor
    (53) arraycontent -> . string
    (54) arraycontent -> . factor COMMA arraycontent
    (55) arraycontent -> . string COMMA arraycontent
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT
    (39) string -> . STRINGV

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16
    STRINGV         shift and go to state 17

    factor                         shift and go to state 46
    arraycontent                   shift and go to state 93
    string                         shift and go to state 47

state 79

    (55) arraycontent -> string COMMA . arraycontent
    (52) arraycontent -> . factor
    (53) arraycontent -> . string
    (54) arraycontent -> . factor COMMA arraycontent
    (55) arraycontent -> . string COMMA arraycontent
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT
    (39) string -> . STRINGV

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16
    STRINGV         shift and go to state 17

    string                         shift and go to state 47
    arraycontent                   shift and go to state 94
    factor                         shift and go to state 46

state 80

    (58) hash -> LBRACKET hashcontent RBRACKET .

    $end            reduce using rule 58 (hash -> LBRACKET hashcontent RBRACKET .)


state 81

    (60) hashcontent -> string ASSIGN . GREATER hashcontentvalue
    (61) hashcontent -> string ASSIGN . GREATER hashcontentvalue COMMA hashcontent

    GREATER         shift and go to state 95


state 82

    (59) hash -> HASH POINT NEW .

    $end            reduce using rule 59 (hash -> HASH POINT NEW .)


state 83

    (64) estructurasControl -> FOR factor IN . factor POINT POINT factor DO BREAK IF END
    (65) estructurasControl -> FOR factor IN . factor POINT POINT factor DO END
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16

    factor                         shift and go to state 96

state 84

    (24) sentenIF -> IF comparador term .

    $end            reduce using rule 24 (sentenIF -> IF comparador term .)


state 85

    (44) metodocadena -> string POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 44 (metodocadena -> string POINT EMPTY INTERROGATIVE .)


state 86

    (43) metodocadena -> cadena POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 43 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)


state 87

    (56) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS . arraycontent RPARENTHESIS
    (52) arraycontent -> . factor
    (53) arraycontent -> . string
    (54) arraycontent -> . factor COMMA arraycontent
    (55) arraycontent -> . string COMMA arraycontent
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT
    (39) string -> . STRINGV

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16
    STRINGV         shift and go to state 17

    arraycontent                   shift and go to state 97
    factor                         shift and go to state 46
    string                         shift and go to state 47

state 88

    (57) metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .

    $end            reduce using rule 57 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)


state 89

    (41) cadena -> STRING POINT NEW LPARENTHESIS . string RPARENTHESIS
    (39) string -> . STRINGV

    STRINGV         shift and go to state 17

    string                         shift and go to state 98

state 90

    (42) cadena -> STRING LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 42 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 42 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)


state 91

    (48) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor RPARENTHESIS
    (49) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor COMMA arraycontent RPARENTHESIS
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16

    factor                         shift and go to state 99

state 92

    (50) arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 50 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 50 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 50 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)


state 93

    (54) arraycontent -> factor COMMA arraycontent .

    RSQBRACKET      reduce using rule 54 (arraycontent -> factor COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 54 (arraycontent -> factor COMMA arraycontent .)


state 94

    (55) arraycontent -> string COMMA arraycontent .

    RSQBRACKET      reduce using rule 55 (arraycontent -> string COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 55 (arraycontent -> string COMMA arraycontent .)


state 95

    (60) hashcontent -> string ASSIGN GREATER . hashcontentvalue
    (61) hashcontent -> string ASSIGN GREATER . hashcontentvalue COMMA hashcontent
    (62) hashcontentvalue -> . factor
    (63) hashcontentvalue -> . string
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT
    (39) string -> . STRINGV

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16
    STRINGV         shift and go to state 17

    string                         shift and go to state 100
    hashcontentvalue               shift and go to state 101
    factor                         shift and go to state 102

state 96

    (64) estructurasControl -> FOR factor IN factor . POINT POINT factor DO BREAK IF END
    (65) estructurasControl -> FOR factor IN factor . POINT POINT factor DO END

    POINT           shift and go to state 103


state 97

    (56) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 104


state 98

    (41) cadena -> STRING POINT NEW LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 105


state 99

    (48) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . RPARENTHESIS
    (49) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . COMMA arraycontent RPARENTHESIS

    RPARENTHESIS    shift and go to state 106
    COMMA           shift and go to state 107


state 100

    (63) hashcontentvalue -> string .

    COMMA           reduce using rule 63 (hashcontentvalue -> string .)
    RBRACKET        reduce using rule 63 (hashcontentvalue -> string .)


state 101

    (60) hashcontent -> string ASSIGN GREATER hashcontentvalue .
    (61) hashcontent -> string ASSIGN GREATER hashcontentvalue . COMMA hashcontent

    RBRACKET        reduce using rule 60 (hashcontent -> string ASSIGN GREATER hashcontentvalue .)
    COMMA           shift and go to state 108


state 102

    (62) hashcontentvalue -> factor .

    COMMA           reduce using rule 62 (hashcontentvalue -> factor .)
    RBRACKET        reduce using rule 62 (hashcontentvalue -> factor .)


state 103

    (64) estructurasControl -> FOR factor IN factor POINT . POINT factor DO BREAK IF END
    (65) estructurasControl -> FOR factor IN factor POINT . POINT factor DO END

    POINT           shift and go to state 109


state 104

    (56) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .

    $end            reduce using rule 56 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)


state 105

    (41) cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 41 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 41 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)


state 106

    (48) arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .

    POINT           reduce using rule 48 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    LSQBRACKET      reduce using rule 48 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    $end            reduce using rule 48 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)


state 107

    (49) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA . arraycontent RPARENTHESIS
    (52) arraycontent -> . factor
    (53) arraycontent -> . string
    (54) arraycontent -> . factor COMMA arraycontent
    (55) arraycontent -> . string COMMA arraycontent
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT
    (39) string -> . STRINGV

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16
    STRINGV         shift and go to state 17

    factor                         shift and go to state 46
    arraycontent                   shift and go to state 110
    string                         shift and go to state 47

state 108

    (61) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA . hashcontent
    (60) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (61) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (39) string -> . STRINGV

    STRINGV         shift and go to state 17

    string                         shift and go to state 49
    hashcontent                    shift and go to state 111

state 109

    (64) estructurasControl -> FOR factor IN factor POINT POINT . factor DO BREAK IF END
    (65) estructurasControl -> FOR factor IN factor POINT POINT . factor DO END
    (35) factor -> . NUMBER
    (36) factor -> . FLOAT
    (37) factor -> . MINUS NUMBER
    (38) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    MINUS           shift and go to state 16

    factor                         shift and go to state 112

state 110

    (49) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 113


state 111

    (61) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .

    RBRACKET        reduce using rule 61 (hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .)


state 112

    (64) estructurasControl -> FOR factor IN factor POINT POINT factor . DO BREAK IF END
    (65) estructurasControl -> FOR factor IN factor POINT POINT factor . DO END

    DO              shift and go to state 114


state 113

    (49) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .

    POINT           reduce using rule 49 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    LSQBRACKET      reduce using rule 49 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    $end            reduce using rule 49 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)


state 114

    (64) estructurasControl -> FOR factor IN factor POINT POINT factor DO . BREAK IF END
    (65) estructurasControl -> FOR factor IN factor POINT POINT factor DO . END

    BREAK           shift and go to state 115
    END             shift and go to state 116


state 115

    (64) estructurasControl -> FOR factor IN factor POINT POINT factor DO BREAK . IF END

    IF              shift and go to state 117


state 116

    (65) estructurasControl -> FOR factor IN factor POINT POINT factor DO END .

    $end            reduce using rule 65 (estructurasControl -> FOR factor IN factor POINT POINT factor DO END .)


state 117

    (64) estructurasControl -> FOR factor IN factor POINT POINT factor DO BREAK IF . END

    END             shift and go to state 118


state 118

    (64) estructurasControl -> FOR factor IN factor POINT POINT factor DO BREAK IF END .

    $end            reduce using rule 64 (estructurasControl -> FOR factor IN factor POINT POINT factor DO BREAK IF END .)

