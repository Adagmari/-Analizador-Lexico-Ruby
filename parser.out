Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ANDS
    BSLASH
    CASE
    CLASS
    COMENTARIO
    COMID
    COMIS
    DEFINED
    ELSIF
    ENSURE
    GETS
    IDENTIFIER
    MODULE
    NEXT
    NOT
    NOTS
    NUML
    OR
    ORS
    PUTC
    REDO
    RESCUE
    SELF
    SEMICOLON
    UNDEF
    UNTIL
    WHEN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignar
Rule 2     instrucciones -> noasignar
Rule 3     asignar -> expression
Rule 4     asignar -> string
Rule 5     asignar -> cadena
Rule 6     asignar -> metodocadena
Rule 7     asignar -> arreglo
Rule 8     asignar -> metodosarreglo
Rule 9     asignar -> hash
Rule 10    asignar -> metodohash
Rule 11    asignar -> boolean
Rule 12    asignar -> variables
Rule 13    asignar -> assigns
Rule 14    noasignar -> estructurasControl
Rule 15    noasignar -> oputs
Rule 16    noasignar -> putss
Rule 17    noasignar -> putsenx
Rule 18    noasignar -> sentenIF
Rule 19    noasignar -> sentenifp
Rule 20    noasignar -> sentenifelse
Rule 21    noasignar -> sentenWHILE
Rule 22    noasignar -> funcion1
Rule 23    boolean -> TRUE
Rule 24    boolean -> FALSE
Rule 25    boolean -> NIL
Rule 26    oputs -> PUTS
Rule 27    putss -> PUTS string
Rule 28    putss -> PUTS cadena
Rule 29    putss -> PRINT string
Rule 30    putss -> PRINT cadena
Rule 31    putsenx -> PUTS expression
Rule 32    putsenx -> PRINT expression
Rule 33    algoritmo -> expression
Rule 34    algoritmo -> metodocadena
Rule 35    algoritmo -> arreglo
Rule 36    algoritmo -> metodosarreglo
Rule 37    algoritmo -> hash
Rule 38    algoritmo -> estructurasControl
Rule 39    algoritmo -> boolean
Rule 40    algoritmo -> assigns
Rule 41    algoritmo -> sentenIF
Rule 42    algoritmo -> sentenifp
Rule 43    algoritmo -> sentenifelse
Rule 44    algoritmo -> variables
Rule 45    algoritmo -> sentenWHILE
Rule 46    sentenWHILE -> WHILE variables comparador variables algoritmo END
Rule 47    sentenWHILE -> WHILE variables comparador expression algoritmo END
Rule 48    sentenWHILE -> WHILE boolean algoritmo END
Rule 49    sentenWHILE -> WHILE variables algoritmo END
Rule 50    sentenIF -> IF variables comparador term
Rule 51    sentenifp -> IF variables comparador term algoritmo END
Rule 52    sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END
Rule 53    variables -> IDLOCAL
Rule 54    variables -> IDINSTANCE
Rule 55    variables -> IDCLASS
Rule 56    variables -> IDGLOBAL
Rule 57    assigns -> variables ASSIGN expression
Rule 58    assigns -> variables ASSIGN variables
Rule 59    assigns -> variables ASSIGN boolean
Rule 60    assigns -> variables ASSIGN asignar
Rule 61    assigns -> variables ASSIGNPLUS expression
Rule 62    assigns -> variables ASSIGNPLUS variables
Rule 63    assigns -> variables ASSIGNMIN expression
Rule 64    assigns -> variables ASSIGNMIN variables
Rule 65    expression -> expression PLUS term
Rule 66    expression -> expression MINUS term
Rule 67    expression -> term
Rule 68    term -> factor
Rule 69    factor -> NUMBER
Rule 70    factor -> FLOAT
Rule 71    factor -> MINUS NUMBER
Rule 72    factor -> MINUS FLOAT
Rule 73    expression -> expression DIVISION term
Rule 74    expression -> expression MOD term
Rule 75    expression -> expression MULT term
Rule 76    expression -> expression EXP term
Rule 77    string -> STRINGV
Rule 78    cadena -> STRING POINT NEW
Rule 79    cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS
Rule 80    cadena -> STRING LPARENTHESIS string RPARENTHESIS
Rule 81    metodocadena -> cadena POINT EMPTY INTERROGATIVE
Rule 82    metodocadena -> string POINT EMPTY INTERROGATIVE
Rule 83    metodocadena -> cadena POINT LENGTH
Rule 84    metodocadena -> string POINT LENGTH
Rule 85    arreglo -> ARRAY POINT NEW
Rule 86    arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
Rule 87    arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
Rule 88    arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET
Rule 89    arreglo -> LSQBRACKET arraycontent RSQBRACKET
Rule 90    arraycontent -> factor
Rule 91    arraycontent -> string
Rule 92    arraycontent -> factor COMMA arraycontent
Rule 93    arraycontent -> string COMMA arraycontent
Rule 94    metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
Rule 95    metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET
Rule 96    hash -> LBRACKET hashcontent RBRACKET
Rule 97    hash -> HASH POINT NEW
Rule 98    hashcontent -> string ASSIGN GREATER hashcontentvalue
Rule 99    hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent
Rule 100   hashcontentvalue -> factor
Rule 101   hashcontentvalue -> string
Rule 102   metodohash -> variables ASSIGN hash POINT LENGTH
Rule 103   metodohash -> variables POINT LENGTH
Rule 104   comparador -> COMPARE
Rule 105   comparador -> GREQUAL
Rule 106   comparador -> LSEQUAL
Rule 107   comparador -> NOTEQUAL
Rule 108   comparador -> LESS
Rule 109   comparador -> GREATER
Rule 110   estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END
Rule 111   estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO END
Rule 112   funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
Rule 113   funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END
Rule 114   fcontenido -> variables
Rule 115   fcontenido -> variables COMMA fcontenido

Terminals, with rules where they appear

AND                  : 
ANDS                 : 
ARRAY                : 85 86 87 88
ASSIGN               : 57 58 59 60 98 99 102
ASSIGNMIN            : 63 64
ASSIGNPLUS           : 61 62
BREAK                : 110
BSLASH               : 
CASE                 : 
CLASS                : 
COMENTARIO           : 
COMID                : 
COMIS                : 
COMMA                : 87 92 93 99 115
COMPARE              : 104
DEF                  : 112 113
DEFINED              : 
DIVISION             : 73
DO                   : 110 111
ELSE                 : 52
ELSIF                : 
EMPTY                : 81 82
END                  : 46 47 48 49 51 52 110 111 112 113
ENSURE               : 
EXP                  : 76
FALSE                : 24
FLOAT                : 70 72
FOR                  : 110 111
GETS                 : 
GREATER              : 98 99 109
GREQUAL              : 105
HASH                 : 97
IDCLASS              : 55
IDENTIFIER           : 
IDGLOBAL             : 56
IDINSTANCE           : 54
IDLOCAL              : 53 110 111 112 112 113
IF                   : 50 51 52 110
IN                   : 110 111
INDEX                : 94
INTERROGATIVE        : 81 82
LBRACKET             : 96
LENGTH               : 83 84 102 103
LESS                 : 108
LPARENTHESIS         : 79 80 86 87 94 112 113
LSEQUAL              : 106
LSQBRACKET           : 88 89 95
MINUS                : 66 71 72
MOD                  : 74
MODULE               : 
MULT                 : 75
NEW                  : 78 79 85 86 87 97
NEXT                 : 
NIL                  : 25
NOT                  : 
NOTEQUAL             : 107
NOTS                 : 
NUMBER               : 69 71
NUML                 : 
OR                   : 
ORS                  : 
PLUS                 : 65
POINT                : 78 79 81 82 83 84 85 86 87 94 97 102 103 110 110 111 111
PRINT                : 29 30 32
PUTC                 : 
PUTS                 : 26 27 28 31
RBRACKET             : 96
REDO                 : 
RESCUE               : 
RETURN               : 112
RPARENTHESIS         : 79 80 86 87 94 112 113
RSQBRACKET           : 88 89 95
SELF                 : 
SEMICOLON            : 
STRING               : 78 79 80
STRINGV              : 77
TRUE                 : 23
UNDEF                : 
UNTIL                : 
WHEN                 : 
WHILE                : 46 47 48 49
error                : 

Nonterminals, with rules where they appear

algoritmo            : 46 47 48 49 51 52 52 112 113
arraycontent         : 87 88 89 92 93 94
arreglo              : 7 35 94 95
asignar              : 1 60
assigns              : 13 40
boolean              : 11 39 48 59
cadena               : 5 28 30 81 83
comparador           : 46 47 50 51 52
estructurasControl   : 14 38
expression           : 3 31 32 33 47 57 61 63 65 66 73 74 75 76
factor               : 68 86 87 90 92 95 100 110 110 111 111
fcontenido           : 112 113 115
funcion1             : 22
hash                 : 9 37 102
hashcontent          : 96 99
hashcontentvalue     : 98 99
instrucciones        : 0
metodocadena         : 6 34
metodohash           : 10
metodosarreglo       : 8 36
noasignar            : 2
oputs                : 15
putsenx              : 17
putss                : 16
sentenIF             : 18 41
sentenWHILE          : 21 45
sentenifelse         : 20 43
sentenifp            : 19 42
string               : 4 27 29 79 80 82 84 91 93 98 99 101
term                 : 50 51 52 65 66 67 73 74 75 76
variables            : 12 44 46 46 47 49 50 51 52 57 58 58 59 60 61 62 62 63 64 64 102 103 114 115

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignar
    (2) instrucciones -> . noasignar
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . assigns
    (14) noasignar -> . estructurasControl
    (15) noasignar -> . oputs
    (16) noasignar -> . putss
    (17) noasignar -> . putsenx
    (18) noasignar -> . sentenIF
    (19) noasignar -> . sentenifp
    (20) noasignar -> . sentenifelse
    (21) noasignar -> . sentenWHILE
    (22) noasignar -> . funcion1
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (77) string -> . STRINGV
    (78) cadena -> . STRING POINT NEW
    (79) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (81) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (82) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (83) metodocadena -> . cadena POINT LENGTH
    (84) metodocadena -> . string POINT LENGTH
    (85) arreglo -> . ARRAY POINT NEW
    (86) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (88) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (89) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (94) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (95) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (96) hash -> . LBRACKET hashcontent RBRACKET
    (97) hash -> . HASH POINT NEW
    (102) metodohash -> . variables ASSIGN hash POINT LENGTH
    (103) metodohash -> . variables POINT LENGTH
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (110) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END
    (111) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO END
    (26) oputs -> . PUTS
    (27) putss -> . PUTS string
    (28) putss -> . PUTS cadena
    (29) putss -> . PRINT string
    (30) putss -> . PRINT cadena
    (31) putsenx -> . PUTS expression
    (32) putsenx -> . PRINT expression
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (112) funcion1 -> . DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (113) funcion1 -> . DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 26
    STRING          shift and go to state 27
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    FOR             shift and go to state 40
    PUTS            shift and go to state 42
    PRINT           shift and go to state 43
    IF              shift and go to state 41
    WHILE           shift and go to state 44
    DEF             shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    instrucciones                  shift and go to state 1
    asignar                        shift and go to state 2
    noasignar                      shift and go to state 3
    expression                     shift and go to state 4
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    boolean                        shift and go to state 12
    variables                      shift and go to state 13
    assigns                        shift and go to state 14
    estructurasControl             shift and go to state 15
    oputs                          shift and go to state 16
    putss                          shift and go to state 17
    putsenx                        shift and go to state 18
    sentenIF                       shift and go to state 19
    sentenifp                      shift and go to state 20
    sentenifelse                   shift and go to state 21
    sentenWHILE                    shift and go to state 22
    funcion1                       shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 29

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignar .

    $end            reduce using rule 1 (instrucciones -> asignar .)


state 3

    (2) instrucciones -> noasignar .

    $end            reduce using rule 2 (instrucciones -> noasignar .)


state 4

    (3) asignar -> expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (73) expression -> expression . DIVISION term
    (74) expression -> expression . MOD term
    (75) expression -> expression . MULT term
    (76) expression -> expression . EXP term

    $end            reduce using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53


state 5

    (4) asignar -> string .
    (82) metodocadena -> string . POINT EMPTY INTERROGATIVE
    (84) metodocadena -> string . POINT LENGTH

    $end            reduce using rule 4 (asignar -> string .)
    END             reduce using rule 4 (asignar -> string .)
    ELSE            reduce using rule 4 (asignar -> string .)
    RETURN          reduce using rule 4 (asignar -> string .)
    POINT           shift and go to state 54


state 6

    (5) asignar -> cadena .
    (81) metodocadena -> cadena . POINT EMPTY INTERROGATIVE
    (83) metodocadena -> cadena . POINT LENGTH

    $end            reduce using rule 5 (asignar -> cadena .)
    END             reduce using rule 5 (asignar -> cadena .)
    ELSE            reduce using rule 5 (asignar -> cadena .)
    RETURN          reduce using rule 5 (asignar -> cadena .)
    POINT           shift and go to state 55


state 7

    (6) asignar -> metodocadena .

    $end            reduce using rule 6 (asignar -> metodocadena .)
    END             reduce using rule 6 (asignar -> metodocadena .)
    ELSE            reduce using rule 6 (asignar -> metodocadena .)
    RETURN          reduce using rule 6 (asignar -> metodocadena .)


state 8

    (7) asignar -> arreglo .
    (94) metodosarreglo -> arreglo . POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (95) metodosarreglo -> arreglo . LSQBRACKET factor RSQBRACKET

    $end            reduce using rule 7 (asignar -> arreglo .)
    END             reduce using rule 7 (asignar -> arreglo .)
    ELSE            reduce using rule 7 (asignar -> arreglo .)
    RETURN          reduce using rule 7 (asignar -> arreglo .)
    POINT           shift and go to state 56
    LSQBRACKET      shift and go to state 57


state 9

    (8) asignar -> metodosarreglo .

    $end            reduce using rule 8 (asignar -> metodosarreglo .)
    END             reduce using rule 8 (asignar -> metodosarreglo .)
    ELSE            reduce using rule 8 (asignar -> metodosarreglo .)
    RETURN          reduce using rule 8 (asignar -> metodosarreglo .)


state 10

    (9) asignar -> hash .

    $end            reduce using rule 9 (asignar -> hash .)
    END             reduce using rule 9 (asignar -> hash .)
    ELSE            reduce using rule 9 (asignar -> hash .)
    RETURN          reduce using rule 9 (asignar -> hash .)


state 11

    (10) asignar -> metodohash .

    $end            reduce using rule 10 (asignar -> metodohash .)
    END             reduce using rule 10 (asignar -> metodohash .)
    ELSE            reduce using rule 10 (asignar -> metodohash .)
    RETURN          reduce using rule 10 (asignar -> metodohash .)


state 12

    (11) asignar -> boolean .

    $end            reduce using rule 11 (asignar -> boolean .)


state 13

    (12) asignar -> variables .
    (102) metodohash -> variables . ASSIGN hash POINT LENGTH
    (103) metodohash -> variables . POINT LENGTH
    (57) assigns -> variables . ASSIGN expression
    (58) assigns -> variables . ASSIGN variables
    (59) assigns -> variables . ASSIGN boolean
    (60) assigns -> variables . ASSIGN asignar
    (61) assigns -> variables . ASSIGNPLUS expression
    (62) assigns -> variables . ASSIGNPLUS variables
    (63) assigns -> variables . ASSIGNMIN expression
    (64) assigns -> variables . ASSIGNMIN variables

    $end            reduce using rule 12 (asignar -> variables .)
    ASSIGN          shift and go to state 58
    POINT           shift and go to state 59
    ASSIGNPLUS      shift and go to state 60
    ASSIGNMIN       shift and go to state 61


state 14

    (13) asignar -> assigns .

    $end            reduce using rule 13 (asignar -> assigns .)
    END             reduce using rule 13 (asignar -> assigns .)
    ELSE            reduce using rule 13 (asignar -> assigns .)
    RETURN          reduce using rule 13 (asignar -> assigns .)


state 15

    (14) noasignar -> estructurasControl .

    $end            reduce using rule 14 (noasignar -> estructurasControl .)


state 16

    (15) noasignar -> oputs .

    $end            reduce using rule 15 (noasignar -> oputs .)


state 17

    (16) noasignar -> putss .

    $end            reduce using rule 16 (noasignar -> putss .)


state 18

    (17) noasignar -> putsenx .

    $end            reduce using rule 17 (noasignar -> putsenx .)


state 19

    (18) noasignar -> sentenIF .

    $end            reduce using rule 18 (noasignar -> sentenIF .)


state 20

    (19) noasignar -> sentenifp .

    $end            reduce using rule 19 (noasignar -> sentenifp .)


state 21

    (20) noasignar -> sentenifelse .

    $end            reduce using rule 20 (noasignar -> sentenifelse .)


state 22

    (21) noasignar -> sentenWHILE .

    $end            reduce using rule 21 (noasignar -> sentenWHILE .)


state 23

    (22) noasignar -> funcion1 .

    $end            reduce using rule 22 (noasignar -> funcion1 .)


state 24

    (67) expression -> term .

    PLUS            reduce using rule 67 (expression -> term .)
    MINUS           reduce using rule 67 (expression -> term .)
    DIVISION        reduce using rule 67 (expression -> term .)
    MOD             reduce using rule 67 (expression -> term .)
    MULT            reduce using rule 67 (expression -> term .)
    EXP             reduce using rule 67 (expression -> term .)
    $end            reduce using rule 67 (expression -> term .)
    END             reduce using rule 67 (expression -> term .)
    ELSE            reduce using rule 67 (expression -> term .)
    RETURN          reduce using rule 67 (expression -> term .)
    ARRAY           reduce using rule 67 (expression -> term .)
    LSQBRACKET      reduce using rule 67 (expression -> term .)
    LBRACKET        reduce using rule 67 (expression -> term .)
    HASH            reduce using rule 67 (expression -> term .)
    FOR             reduce using rule 67 (expression -> term .)
    TRUE            reduce using rule 67 (expression -> term .)
    FALSE           reduce using rule 67 (expression -> term .)
    NIL             reduce using rule 67 (expression -> term .)
    IF              reduce using rule 67 (expression -> term .)
    IDLOCAL         reduce using rule 67 (expression -> term .)
    IDINSTANCE      reduce using rule 67 (expression -> term .)
    IDCLASS         reduce using rule 67 (expression -> term .)
    IDGLOBAL        reduce using rule 67 (expression -> term .)
    WHILE           reduce using rule 67 (expression -> term .)
    STRING          reduce using rule 67 (expression -> term .)
    STRINGV         reduce using rule 67 (expression -> term .)
    NUMBER          reduce using rule 67 (expression -> term .)
    FLOAT           reduce using rule 67 (expression -> term .)


state 25

    (71) factor -> MINUS . NUMBER
    (72) factor -> MINUS . FLOAT

    NUMBER          shift and go to state 62
    FLOAT           shift and go to state 63


state 26

    (77) string -> STRINGV .

    POINT           reduce using rule 77 (string -> STRINGV .)
    $end            reduce using rule 77 (string -> STRINGV .)
    COMMA           reduce using rule 77 (string -> STRINGV .)
    RSQBRACKET      reduce using rule 77 (string -> STRINGV .)
    ASSIGN          reduce using rule 77 (string -> STRINGV .)
    END             reduce using rule 77 (string -> STRINGV .)
    ELSE            reduce using rule 77 (string -> STRINGV .)
    RETURN          reduce using rule 77 (string -> STRINGV .)
    RPARENTHESIS    reduce using rule 77 (string -> STRINGV .)
    RBRACKET        reduce using rule 77 (string -> STRINGV .)


state 27

    (78) cadena -> STRING . POINT NEW
    (79) cadena -> STRING . POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> STRING . LPARENTHESIS string RPARENTHESIS

    POINT           shift and go to state 64
    LPARENTHESIS    shift and go to state 65


state 28

    (85) arreglo -> ARRAY . POINT NEW
    (86) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (88) arreglo -> ARRAY . LSQBRACKET arraycontent RSQBRACKET

    POINT           shift and go to state 66
    LSQBRACKET      shift and go to state 67


state 29

    (68) term -> factor .

    PLUS            reduce using rule 68 (term -> factor .)
    MINUS           reduce using rule 68 (term -> factor .)
    DIVISION        reduce using rule 68 (term -> factor .)
    MOD             reduce using rule 68 (term -> factor .)
    MULT            reduce using rule 68 (term -> factor .)
    EXP             reduce using rule 68 (term -> factor .)
    $end            reduce using rule 68 (term -> factor .)
    END             reduce using rule 68 (term -> factor .)
    ELSE            reduce using rule 68 (term -> factor .)
    RETURN          reduce using rule 68 (term -> factor .)
    ARRAY           reduce using rule 68 (term -> factor .)
    LSQBRACKET      reduce using rule 68 (term -> factor .)
    LBRACKET        reduce using rule 68 (term -> factor .)
    HASH            reduce using rule 68 (term -> factor .)
    FOR             reduce using rule 68 (term -> factor .)
    TRUE            reduce using rule 68 (term -> factor .)
    FALSE           reduce using rule 68 (term -> factor .)
    NIL             reduce using rule 68 (term -> factor .)
    IF              reduce using rule 68 (term -> factor .)
    IDLOCAL         reduce using rule 68 (term -> factor .)
    IDINSTANCE      reduce using rule 68 (term -> factor .)
    IDCLASS         reduce using rule 68 (term -> factor .)
    IDGLOBAL        reduce using rule 68 (term -> factor .)
    WHILE           reduce using rule 68 (term -> factor .)
    STRING          reduce using rule 68 (term -> factor .)
    STRINGV         reduce using rule 68 (term -> factor .)
    NUMBER          reduce using rule 68 (term -> factor .)
    FLOAT           reduce using rule 68 (term -> factor .)


state 30

    (89) arreglo -> LSQBRACKET . arraycontent RSQBRACKET
    (90) arraycontent -> . factor
    (91) arraycontent -> . string
    (92) arraycontent -> . factor COMMA arraycontent
    (93) arraycontent -> . string COMMA arraycontent
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT
    (77) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    arraycontent                   shift and go to state 68
    factor                         shift and go to state 69
    string                         shift and go to state 70

state 31

    (96) hash -> LBRACKET . hashcontent RBRACKET
    (98) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (99) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (77) string -> . STRINGV

    STRINGV         shift and go to state 26

    hashcontent                    shift and go to state 71
    string                         shift and go to state 72

state 32

    (97) hash -> HASH . POINT NEW

    POINT           shift and go to state 73


state 33

    (23) boolean -> TRUE .

    $end            reduce using rule 23 (boolean -> TRUE .)
    ARRAY           reduce using rule 23 (boolean -> TRUE .)
    LSQBRACKET      reduce using rule 23 (boolean -> TRUE .)
    LBRACKET        reduce using rule 23 (boolean -> TRUE .)
    HASH            reduce using rule 23 (boolean -> TRUE .)
    FOR             reduce using rule 23 (boolean -> TRUE .)
    TRUE            reduce using rule 23 (boolean -> TRUE .)
    FALSE           reduce using rule 23 (boolean -> TRUE .)
    NIL             reduce using rule 23 (boolean -> TRUE .)
    IF              reduce using rule 23 (boolean -> TRUE .)
    IDLOCAL         reduce using rule 23 (boolean -> TRUE .)
    IDINSTANCE      reduce using rule 23 (boolean -> TRUE .)
    IDCLASS         reduce using rule 23 (boolean -> TRUE .)
    IDGLOBAL        reduce using rule 23 (boolean -> TRUE .)
    WHILE           reduce using rule 23 (boolean -> TRUE .)
    STRING          reduce using rule 23 (boolean -> TRUE .)
    STRINGV         reduce using rule 23 (boolean -> TRUE .)
    NUMBER          reduce using rule 23 (boolean -> TRUE .)
    FLOAT           reduce using rule 23 (boolean -> TRUE .)
    MINUS           reduce using rule 23 (boolean -> TRUE .)
    END             reduce using rule 23 (boolean -> TRUE .)
    ELSE            reduce using rule 23 (boolean -> TRUE .)
    RETURN          reduce using rule 23 (boolean -> TRUE .)


state 34

    (24) boolean -> FALSE .

    $end            reduce using rule 24 (boolean -> FALSE .)
    ARRAY           reduce using rule 24 (boolean -> FALSE .)
    LSQBRACKET      reduce using rule 24 (boolean -> FALSE .)
    LBRACKET        reduce using rule 24 (boolean -> FALSE .)
    HASH            reduce using rule 24 (boolean -> FALSE .)
    FOR             reduce using rule 24 (boolean -> FALSE .)
    TRUE            reduce using rule 24 (boolean -> FALSE .)
    FALSE           reduce using rule 24 (boolean -> FALSE .)
    NIL             reduce using rule 24 (boolean -> FALSE .)
    IF              reduce using rule 24 (boolean -> FALSE .)
    IDLOCAL         reduce using rule 24 (boolean -> FALSE .)
    IDINSTANCE      reduce using rule 24 (boolean -> FALSE .)
    IDCLASS         reduce using rule 24 (boolean -> FALSE .)
    IDGLOBAL        reduce using rule 24 (boolean -> FALSE .)
    WHILE           reduce using rule 24 (boolean -> FALSE .)
    STRING          reduce using rule 24 (boolean -> FALSE .)
    STRINGV         reduce using rule 24 (boolean -> FALSE .)
    NUMBER          reduce using rule 24 (boolean -> FALSE .)
    FLOAT           reduce using rule 24 (boolean -> FALSE .)
    MINUS           reduce using rule 24 (boolean -> FALSE .)
    END             reduce using rule 24 (boolean -> FALSE .)
    ELSE            reduce using rule 24 (boolean -> FALSE .)
    RETURN          reduce using rule 24 (boolean -> FALSE .)


state 35

    (25) boolean -> NIL .

    $end            reduce using rule 25 (boolean -> NIL .)
    ARRAY           reduce using rule 25 (boolean -> NIL .)
    LSQBRACKET      reduce using rule 25 (boolean -> NIL .)
    LBRACKET        reduce using rule 25 (boolean -> NIL .)
    HASH            reduce using rule 25 (boolean -> NIL .)
    FOR             reduce using rule 25 (boolean -> NIL .)
    TRUE            reduce using rule 25 (boolean -> NIL .)
    FALSE           reduce using rule 25 (boolean -> NIL .)
    NIL             reduce using rule 25 (boolean -> NIL .)
    IF              reduce using rule 25 (boolean -> NIL .)
    IDLOCAL         reduce using rule 25 (boolean -> NIL .)
    IDINSTANCE      reduce using rule 25 (boolean -> NIL .)
    IDCLASS         reduce using rule 25 (boolean -> NIL .)
    IDGLOBAL        reduce using rule 25 (boolean -> NIL .)
    WHILE           reduce using rule 25 (boolean -> NIL .)
    STRING          reduce using rule 25 (boolean -> NIL .)
    STRINGV         reduce using rule 25 (boolean -> NIL .)
    NUMBER          reduce using rule 25 (boolean -> NIL .)
    FLOAT           reduce using rule 25 (boolean -> NIL .)
    MINUS           reduce using rule 25 (boolean -> NIL .)
    END             reduce using rule 25 (boolean -> NIL .)
    ELSE            reduce using rule 25 (boolean -> NIL .)
    RETURN          reduce using rule 25 (boolean -> NIL .)


state 36

    (53) variables -> IDLOCAL .

    ASSIGN          reduce using rule 53 (variables -> IDLOCAL .)
    POINT           reduce using rule 53 (variables -> IDLOCAL .)
    ASSIGNPLUS      reduce using rule 53 (variables -> IDLOCAL .)
    ASSIGNMIN       reduce using rule 53 (variables -> IDLOCAL .)
    $end            reduce using rule 53 (variables -> IDLOCAL .)
    COMPARE         reduce using rule 53 (variables -> IDLOCAL .)
    GREQUAL         reduce using rule 53 (variables -> IDLOCAL .)
    LSEQUAL         reduce using rule 53 (variables -> IDLOCAL .)
    NOTEQUAL        reduce using rule 53 (variables -> IDLOCAL .)
    LESS            reduce using rule 53 (variables -> IDLOCAL .)
    GREATER         reduce using rule 53 (variables -> IDLOCAL .)
    ARRAY           reduce using rule 53 (variables -> IDLOCAL .)
    LSQBRACKET      reduce using rule 53 (variables -> IDLOCAL .)
    LBRACKET        reduce using rule 53 (variables -> IDLOCAL .)
    HASH            reduce using rule 53 (variables -> IDLOCAL .)
    FOR             reduce using rule 53 (variables -> IDLOCAL .)
    TRUE            reduce using rule 53 (variables -> IDLOCAL .)
    FALSE           reduce using rule 53 (variables -> IDLOCAL .)
    NIL             reduce using rule 53 (variables -> IDLOCAL .)
    IF              reduce using rule 53 (variables -> IDLOCAL .)
    IDLOCAL         reduce using rule 53 (variables -> IDLOCAL .)
    IDINSTANCE      reduce using rule 53 (variables -> IDLOCAL .)
    IDCLASS         reduce using rule 53 (variables -> IDLOCAL .)
    IDGLOBAL        reduce using rule 53 (variables -> IDLOCAL .)
    WHILE           reduce using rule 53 (variables -> IDLOCAL .)
    STRING          reduce using rule 53 (variables -> IDLOCAL .)
    STRINGV         reduce using rule 53 (variables -> IDLOCAL .)
    NUMBER          reduce using rule 53 (variables -> IDLOCAL .)
    FLOAT           reduce using rule 53 (variables -> IDLOCAL .)
    MINUS           reduce using rule 53 (variables -> IDLOCAL .)
    END             reduce using rule 53 (variables -> IDLOCAL .)
    ELSE            reduce using rule 53 (variables -> IDLOCAL .)
    RETURN          reduce using rule 53 (variables -> IDLOCAL .)
    COMMA           reduce using rule 53 (variables -> IDLOCAL .)
    RPARENTHESIS    reduce using rule 53 (variables -> IDLOCAL .)


state 37

    (54) variables -> IDINSTANCE .

    ASSIGN          reduce using rule 54 (variables -> IDINSTANCE .)
    POINT           reduce using rule 54 (variables -> IDINSTANCE .)
    ASSIGNPLUS      reduce using rule 54 (variables -> IDINSTANCE .)
    ASSIGNMIN       reduce using rule 54 (variables -> IDINSTANCE .)
    $end            reduce using rule 54 (variables -> IDINSTANCE .)
    COMPARE         reduce using rule 54 (variables -> IDINSTANCE .)
    GREQUAL         reduce using rule 54 (variables -> IDINSTANCE .)
    LSEQUAL         reduce using rule 54 (variables -> IDINSTANCE .)
    NOTEQUAL        reduce using rule 54 (variables -> IDINSTANCE .)
    LESS            reduce using rule 54 (variables -> IDINSTANCE .)
    GREATER         reduce using rule 54 (variables -> IDINSTANCE .)
    ARRAY           reduce using rule 54 (variables -> IDINSTANCE .)
    LSQBRACKET      reduce using rule 54 (variables -> IDINSTANCE .)
    LBRACKET        reduce using rule 54 (variables -> IDINSTANCE .)
    HASH            reduce using rule 54 (variables -> IDINSTANCE .)
    FOR             reduce using rule 54 (variables -> IDINSTANCE .)
    TRUE            reduce using rule 54 (variables -> IDINSTANCE .)
    FALSE           reduce using rule 54 (variables -> IDINSTANCE .)
    NIL             reduce using rule 54 (variables -> IDINSTANCE .)
    IF              reduce using rule 54 (variables -> IDINSTANCE .)
    IDLOCAL         reduce using rule 54 (variables -> IDINSTANCE .)
    IDINSTANCE      reduce using rule 54 (variables -> IDINSTANCE .)
    IDCLASS         reduce using rule 54 (variables -> IDINSTANCE .)
    IDGLOBAL        reduce using rule 54 (variables -> IDINSTANCE .)
    WHILE           reduce using rule 54 (variables -> IDINSTANCE .)
    STRING          reduce using rule 54 (variables -> IDINSTANCE .)
    STRINGV         reduce using rule 54 (variables -> IDINSTANCE .)
    NUMBER          reduce using rule 54 (variables -> IDINSTANCE .)
    FLOAT           reduce using rule 54 (variables -> IDINSTANCE .)
    MINUS           reduce using rule 54 (variables -> IDINSTANCE .)
    END             reduce using rule 54 (variables -> IDINSTANCE .)
    ELSE            reduce using rule 54 (variables -> IDINSTANCE .)
    RETURN          reduce using rule 54 (variables -> IDINSTANCE .)
    COMMA           reduce using rule 54 (variables -> IDINSTANCE .)
    RPARENTHESIS    reduce using rule 54 (variables -> IDINSTANCE .)


state 38

    (55) variables -> IDCLASS .

    ASSIGN          reduce using rule 55 (variables -> IDCLASS .)
    POINT           reduce using rule 55 (variables -> IDCLASS .)
    ASSIGNPLUS      reduce using rule 55 (variables -> IDCLASS .)
    ASSIGNMIN       reduce using rule 55 (variables -> IDCLASS .)
    $end            reduce using rule 55 (variables -> IDCLASS .)
    COMPARE         reduce using rule 55 (variables -> IDCLASS .)
    GREQUAL         reduce using rule 55 (variables -> IDCLASS .)
    LSEQUAL         reduce using rule 55 (variables -> IDCLASS .)
    NOTEQUAL        reduce using rule 55 (variables -> IDCLASS .)
    LESS            reduce using rule 55 (variables -> IDCLASS .)
    GREATER         reduce using rule 55 (variables -> IDCLASS .)
    ARRAY           reduce using rule 55 (variables -> IDCLASS .)
    LSQBRACKET      reduce using rule 55 (variables -> IDCLASS .)
    LBRACKET        reduce using rule 55 (variables -> IDCLASS .)
    HASH            reduce using rule 55 (variables -> IDCLASS .)
    FOR             reduce using rule 55 (variables -> IDCLASS .)
    TRUE            reduce using rule 55 (variables -> IDCLASS .)
    FALSE           reduce using rule 55 (variables -> IDCLASS .)
    NIL             reduce using rule 55 (variables -> IDCLASS .)
    IF              reduce using rule 55 (variables -> IDCLASS .)
    IDLOCAL         reduce using rule 55 (variables -> IDCLASS .)
    IDINSTANCE      reduce using rule 55 (variables -> IDCLASS .)
    IDCLASS         reduce using rule 55 (variables -> IDCLASS .)
    IDGLOBAL        reduce using rule 55 (variables -> IDCLASS .)
    WHILE           reduce using rule 55 (variables -> IDCLASS .)
    STRING          reduce using rule 55 (variables -> IDCLASS .)
    STRINGV         reduce using rule 55 (variables -> IDCLASS .)
    NUMBER          reduce using rule 55 (variables -> IDCLASS .)
    FLOAT           reduce using rule 55 (variables -> IDCLASS .)
    MINUS           reduce using rule 55 (variables -> IDCLASS .)
    END             reduce using rule 55 (variables -> IDCLASS .)
    ELSE            reduce using rule 55 (variables -> IDCLASS .)
    RETURN          reduce using rule 55 (variables -> IDCLASS .)
    COMMA           reduce using rule 55 (variables -> IDCLASS .)
    RPARENTHESIS    reduce using rule 55 (variables -> IDCLASS .)


state 39

    (56) variables -> IDGLOBAL .

    ASSIGN          reduce using rule 56 (variables -> IDGLOBAL .)
    POINT           reduce using rule 56 (variables -> IDGLOBAL .)
    ASSIGNPLUS      reduce using rule 56 (variables -> IDGLOBAL .)
    ASSIGNMIN       reduce using rule 56 (variables -> IDGLOBAL .)
    $end            reduce using rule 56 (variables -> IDGLOBAL .)
    COMPARE         reduce using rule 56 (variables -> IDGLOBAL .)
    GREQUAL         reduce using rule 56 (variables -> IDGLOBAL .)
    LSEQUAL         reduce using rule 56 (variables -> IDGLOBAL .)
    NOTEQUAL        reduce using rule 56 (variables -> IDGLOBAL .)
    LESS            reduce using rule 56 (variables -> IDGLOBAL .)
    GREATER         reduce using rule 56 (variables -> IDGLOBAL .)
    ARRAY           reduce using rule 56 (variables -> IDGLOBAL .)
    LSQBRACKET      reduce using rule 56 (variables -> IDGLOBAL .)
    LBRACKET        reduce using rule 56 (variables -> IDGLOBAL .)
    HASH            reduce using rule 56 (variables -> IDGLOBAL .)
    FOR             reduce using rule 56 (variables -> IDGLOBAL .)
    TRUE            reduce using rule 56 (variables -> IDGLOBAL .)
    FALSE           reduce using rule 56 (variables -> IDGLOBAL .)
    NIL             reduce using rule 56 (variables -> IDGLOBAL .)
    IF              reduce using rule 56 (variables -> IDGLOBAL .)
    IDLOCAL         reduce using rule 56 (variables -> IDGLOBAL .)
    IDINSTANCE      reduce using rule 56 (variables -> IDGLOBAL .)
    IDCLASS         reduce using rule 56 (variables -> IDGLOBAL .)
    IDGLOBAL        reduce using rule 56 (variables -> IDGLOBAL .)
    WHILE           reduce using rule 56 (variables -> IDGLOBAL .)
    STRING          reduce using rule 56 (variables -> IDGLOBAL .)
    STRINGV         reduce using rule 56 (variables -> IDGLOBAL .)
    NUMBER          reduce using rule 56 (variables -> IDGLOBAL .)
    FLOAT           reduce using rule 56 (variables -> IDGLOBAL .)
    MINUS           reduce using rule 56 (variables -> IDGLOBAL .)
    END             reduce using rule 56 (variables -> IDGLOBAL .)
    ELSE            reduce using rule 56 (variables -> IDGLOBAL .)
    RETURN          reduce using rule 56 (variables -> IDGLOBAL .)
    COMMA           reduce using rule 56 (variables -> IDGLOBAL .)
    RPARENTHESIS    reduce using rule 56 (variables -> IDGLOBAL .)


state 40

    (110) estructurasControl -> FOR . IDLOCAL IN factor POINT POINT factor DO BREAK IF END
    (111) estructurasControl -> FOR . IDLOCAL IN factor POINT POINT factor DO END

    IDLOCAL         shift and go to state 74


state 41

    (50) sentenIF -> IF . variables comparador term
    (51) sentenifp -> IF . variables comparador term algoritmo END
    (52) sentenifelse -> IF . variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    variables                      shift and go to state 75

state 42

    (26) oputs -> PUTS .
    (27) putss -> PUTS . string
    (28) putss -> PUTS . cadena
    (31) putsenx -> PUTS . expression
    (77) string -> . STRINGV
    (78) cadena -> . STRING POINT NEW
    (79) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    $end            reduce using rule 26 (oputs -> PUTS .)
    STRINGV         shift and go to state 26
    STRING          shift and go to state 27
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    string                         shift and go to state 76
    cadena                         shift and go to state 77
    expression                     shift and go to state 78
    term                           shift and go to state 24
    factor                         shift and go to state 29

state 43

    (29) putss -> PRINT . string
    (30) putss -> PRINT . cadena
    (32) putsenx -> PRINT . expression
    (77) string -> . STRINGV
    (78) cadena -> . STRING POINT NEW
    (79) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 26
    STRING          shift and go to state 27
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    string                         shift and go to state 79
    cadena                         shift and go to state 80
    expression                     shift and go to state 81
    term                           shift and go to state 24
    factor                         shift and go to state 29

state 44

    (46) sentenWHILE -> WHILE . variables comparador variables algoritmo END
    (47) sentenWHILE -> WHILE . variables comparador expression algoritmo END
    (48) sentenWHILE -> WHILE . boolean algoritmo END
    (49) sentenWHILE -> WHILE . variables algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    variables                      shift and go to state 82
    boolean                        shift and go to state 83

state 45

    (112) funcion1 -> DEF . IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (113) funcion1 -> DEF . IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END

    IDLOCAL         shift and go to state 84


state 46

    (69) factor -> NUMBER .

    PLUS            reduce using rule 69 (factor -> NUMBER .)
    MINUS           reduce using rule 69 (factor -> NUMBER .)
    DIVISION        reduce using rule 69 (factor -> NUMBER .)
    MOD             reduce using rule 69 (factor -> NUMBER .)
    MULT            reduce using rule 69 (factor -> NUMBER .)
    EXP             reduce using rule 69 (factor -> NUMBER .)
    $end            reduce using rule 69 (factor -> NUMBER .)
    COMMA           reduce using rule 69 (factor -> NUMBER .)
    RSQBRACKET      reduce using rule 69 (factor -> NUMBER .)
    END             reduce using rule 69 (factor -> NUMBER .)
    ELSE            reduce using rule 69 (factor -> NUMBER .)
    RETURN          reduce using rule 69 (factor -> NUMBER .)
    ARRAY           reduce using rule 69 (factor -> NUMBER .)
    LSQBRACKET      reduce using rule 69 (factor -> NUMBER .)
    LBRACKET        reduce using rule 69 (factor -> NUMBER .)
    HASH            reduce using rule 69 (factor -> NUMBER .)
    FOR             reduce using rule 69 (factor -> NUMBER .)
    TRUE            reduce using rule 69 (factor -> NUMBER .)
    FALSE           reduce using rule 69 (factor -> NUMBER .)
    NIL             reduce using rule 69 (factor -> NUMBER .)
    IF              reduce using rule 69 (factor -> NUMBER .)
    IDLOCAL         reduce using rule 69 (factor -> NUMBER .)
    IDINSTANCE      reduce using rule 69 (factor -> NUMBER .)
    IDCLASS         reduce using rule 69 (factor -> NUMBER .)
    IDGLOBAL        reduce using rule 69 (factor -> NUMBER .)
    WHILE           reduce using rule 69 (factor -> NUMBER .)
    STRING          reduce using rule 69 (factor -> NUMBER .)
    STRINGV         reduce using rule 69 (factor -> NUMBER .)
    NUMBER          reduce using rule 69 (factor -> NUMBER .)
    FLOAT           reduce using rule 69 (factor -> NUMBER .)
    RPARENTHESIS    reduce using rule 69 (factor -> NUMBER .)
    POINT           reduce using rule 69 (factor -> NUMBER .)
    RBRACKET        reduce using rule 69 (factor -> NUMBER .)
    DO              reduce using rule 69 (factor -> NUMBER .)


state 47

    (70) factor -> FLOAT .

    PLUS            reduce using rule 70 (factor -> FLOAT .)
    MINUS           reduce using rule 70 (factor -> FLOAT .)
    DIVISION        reduce using rule 70 (factor -> FLOAT .)
    MOD             reduce using rule 70 (factor -> FLOAT .)
    MULT            reduce using rule 70 (factor -> FLOAT .)
    EXP             reduce using rule 70 (factor -> FLOAT .)
    $end            reduce using rule 70 (factor -> FLOAT .)
    COMMA           reduce using rule 70 (factor -> FLOAT .)
    RSQBRACKET      reduce using rule 70 (factor -> FLOAT .)
    END             reduce using rule 70 (factor -> FLOAT .)
    ELSE            reduce using rule 70 (factor -> FLOAT .)
    RETURN          reduce using rule 70 (factor -> FLOAT .)
    ARRAY           reduce using rule 70 (factor -> FLOAT .)
    LSQBRACKET      reduce using rule 70 (factor -> FLOAT .)
    LBRACKET        reduce using rule 70 (factor -> FLOAT .)
    HASH            reduce using rule 70 (factor -> FLOAT .)
    FOR             reduce using rule 70 (factor -> FLOAT .)
    TRUE            reduce using rule 70 (factor -> FLOAT .)
    FALSE           reduce using rule 70 (factor -> FLOAT .)
    NIL             reduce using rule 70 (factor -> FLOAT .)
    IF              reduce using rule 70 (factor -> FLOAT .)
    IDLOCAL         reduce using rule 70 (factor -> FLOAT .)
    IDINSTANCE      reduce using rule 70 (factor -> FLOAT .)
    IDCLASS         reduce using rule 70 (factor -> FLOAT .)
    IDGLOBAL        reduce using rule 70 (factor -> FLOAT .)
    WHILE           reduce using rule 70 (factor -> FLOAT .)
    STRING          reduce using rule 70 (factor -> FLOAT .)
    STRINGV         reduce using rule 70 (factor -> FLOAT .)
    NUMBER          reduce using rule 70 (factor -> FLOAT .)
    FLOAT           reduce using rule 70 (factor -> FLOAT .)
    RPARENTHESIS    reduce using rule 70 (factor -> FLOAT .)
    POINT           reduce using rule 70 (factor -> FLOAT .)
    RBRACKET        reduce using rule 70 (factor -> FLOAT .)
    DO              reduce using rule 70 (factor -> FLOAT .)


state 48

    (65) expression -> expression PLUS . term
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    term                           shift and go to state 85
    factor                         shift and go to state 29

state 49

    (66) expression -> expression MINUS . term
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    term                           shift and go to state 86
    factor                         shift and go to state 29

state 50

    (73) expression -> expression DIVISION . term
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    term                           shift and go to state 87
    factor                         shift and go to state 29

state 51

    (74) expression -> expression MOD . term
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    term                           shift and go to state 88
    factor                         shift and go to state 29

state 52

    (75) expression -> expression MULT . term
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    term                           shift and go to state 89
    factor                         shift and go to state 29

state 53

    (76) expression -> expression EXP . term
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    term                           shift and go to state 90
    factor                         shift and go to state 29

state 54

    (82) metodocadena -> string POINT . EMPTY INTERROGATIVE
    (84) metodocadena -> string POINT . LENGTH

    EMPTY           shift and go to state 91
    LENGTH          shift and go to state 92


state 55

    (81) metodocadena -> cadena POINT . EMPTY INTERROGATIVE
    (83) metodocadena -> cadena POINT . LENGTH

    EMPTY           shift and go to state 93
    LENGTH          shift and go to state 94


state 56

    (94) metodosarreglo -> arreglo POINT . INDEX LPARENTHESIS arraycontent RPARENTHESIS

    INDEX           shift and go to state 95


state 57

    (95) metodosarreglo -> arreglo LSQBRACKET . factor RSQBRACKET
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    factor                         shift and go to state 96

state 58

    (102) metodohash -> variables ASSIGN . hash POINT LENGTH
    (57) assigns -> variables ASSIGN . expression
    (58) assigns -> variables ASSIGN . variables
    (59) assigns -> variables ASSIGN . boolean
    (60) assigns -> variables ASSIGN . asignar
    (96) hash -> . LBRACKET hashcontent RBRACKET
    (97) hash -> . HASH POINT NEW
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . assigns
    (68) term -> . factor
    (77) string -> . STRINGV
    (78) cadena -> . STRING POINT NEW
    (79) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (81) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (82) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (83) metodocadena -> . cadena POINT LENGTH
    (84) metodocadena -> . string POINT LENGTH
    (85) arreglo -> . ARRAY POINT NEW
    (86) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (88) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (89) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (94) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (95) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (102) metodohash -> . variables ASSIGN hash POINT LENGTH
    (103) metodohash -> . variables POINT LENGTH
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    STRINGV         shift and go to state 26
    STRING          shift and go to state 27
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 97
    hash                           shift and go to state 98
    expression                     shift and go to state 99
    boolean                        shift and go to state 100
    asignar                        shift and go to state 101
    term                           shift and go to state 24
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    metodohash                     shift and go to state 11
    assigns                        shift and go to state 14
    factor                         shift and go to state 29

state 59

    (103) metodohash -> variables POINT . LENGTH

    LENGTH          shift and go to state 102


state 60

    (61) assigns -> variables ASSIGNPLUS . expression
    (62) assigns -> variables ASSIGNPLUS . variables
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 103
    expression                     shift and go to state 104
    term                           shift and go to state 24
    factor                         shift and go to state 29

state 61

    (63) assigns -> variables ASSIGNMIN . expression
    (64) assigns -> variables ASSIGNMIN . variables
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 24
    factor                         shift and go to state 29

state 62

    (71) factor -> MINUS NUMBER .

    PLUS            reduce using rule 71 (factor -> MINUS NUMBER .)
    MINUS           reduce using rule 71 (factor -> MINUS NUMBER .)
    DIVISION        reduce using rule 71 (factor -> MINUS NUMBER .)
    MOD             reduce using rule 71 (factor -> MINUS NUMBER .)
    MULT            reduce using rule 71 (factor -> MINUS NUMBER .)
    EXP             reduce using rule 71 (factor -> MINUS NUMBER .)
    $end            reduce using rule 71 (factor -> MINUS NUMBER .)
    COMMA           reduce using rule 71 (factor -> MINUS NUMBER .)
    RSQBRACKET      reduce using rule 71 (factor -> MINUS NUMBER .)
    END             reduce using rule 71 (factor -> MINUS NUMBER .)
    ELSE            reduce using rule 71 (factor -> MINUS NUMBER .)
    RETURN          reduce using rule 71 (factor -> MINUS NUMBER .)
    ARRAY           reduce using rule 71 (factor -> MINUS NUMBER .)
    LSQBRACKET      reduce using rule 71 (factor -> MINUS NUMBER .)
    LBRACKET        reduce using rule 71 (factor -> MINUS NUMBER .)
    HASH            reduce using rule 71 (factor -> MINUS NUMBER .)
    FOR             reduce using rule 71 (factor -> MINUS NUMBER .)
    TRUE            reduce using rule 71 (factor -> MINUS NUMBER .)
    FALSE           reduce using rule 71 (factor -> MINUS NUMBER .)
    NIL             reduce using rule 71 (factor -> MINUS NUMBER .)
    IF              reduce using rule 71 (factor -> MINUS NUMBER .)
    IDLOCAL         reduce using rule 71 (factor -> MINUS NUMBER .)
    IDINSTANCE      reduce using rule 71 (factor -> MINUS NUMBER .)
    IDCLASS         reduce using rule 71 (factor -> MINUS NUMBER .)
    IDGLOBAL        reduce using rule 71 (factor -> MINUS NUMBER .)
    WHILE           reduce using rule 71 (factor -> MINUS NUMBER .)
    STRING          reduce using rule 71 (factor -> MINUS NUMBER .)
    STRINGV         reduce using rule 71 (factor -> MINUS NUMBER .)
    NUMBER          reduce using rule 71 (factor -> MINUS NUMBER .)
    FLOAT           reduce using rule 71 (factor -> MINUS NUMBER .)
    RPARENTHESIS    reduce using rule 71 (factor -> MINUS NUMBER .)
    POINT           reduce using rule 71 (factor -> MINUS NUMBER .)
    RBRACKET        reduce using rule 71 (factor -> MINUS NUMBER .)
    DO              reduce using rule 71 (factor -> MINUS NUMBER .)


state 63

    (72) factor -> MINUS FLOAT .

    PLUS            reduce using rule 72 (factor -> MINUS FLOAT .)
    MINUS           reduce using rule 72 (factor -> MINUS FLOAT .)
    DIVISION        reduce using rule 72 (factor -> MINUS FLOAT .)
    MOD             reduce using rule 72 (factor -> MINUS FLOAT .)
    MULT            reduce using rule 72 (factor -> MINUS FLOAT .)
    EXP             reduce using rule 72 (factor -> MINUS FLOAT .)
    $end            reduce using rule 72 (factor -> MINUS FLOAT .)
    COMMA           reduce using rule 72 (factor -> MINUS FLOAT .)
    RSQBRACKET      reduce using rule 72 (factor -> MINUS FLOAT .)
    END             reduce using rule 72 (factor -> MINUS FLOAT .)
    ELSE            reduce using rule 72 (factor -> MINUS FLOAT .)
    RETURN          reduce using rule 72 (factor -> MINUS FLOAT .)
    ARRAY           reduce using rule 72 (factor -> MINUS FLOAT .)
    LSQBRACKET      reduce using rule 72 (factor -> MINUS FLOAT .)
    LBRACKET        reduce using rule 72 (factor -> MINUS FLOAT .)
    HASH            reduce using rule 72 (factor -> MINUS FLOAT .)
    FOR             reduce using rule 72 (factor -> MINUS FLOAT .)
    TRUE            reduce using rule 72 (factor -> MINUS FLOAT .)
    FALSE           reduce using rule 72 (factor -> MINUS FLOAT .)
    NIL             reduce using rule 72 (factor -> MINUS FLOAT .)
    IF              reduce using rule 72 (factor -> MINUS FLOAT .)
    IDLOCAL         reduce using rule 72 (factor -> MINUS FLOAT .)
    IDINSTANCE      reduce using rule 72 (factor -> MINUS FLOAT .)
    IDCLASS         reduce using rule 72 (factor -> MINUS FLOAT .)
    IDGLOBAL        reduce using rule 72 (factor -> MINUS FLOAT .)
    WHILE           reduce using rule 72 (factor -> MINUS FLOAT .)
    STRING          reduce using rule 72 (factor -> MINUS FLOAT .)
    STRINGV         reduce using rule 72 (factor -> MINUS FLOAT .)
    NUMBER          reduce using rule 72 (factor -> MINUS FLOAT .)
    FLOAT           reduce using rule 72 (factor -> MINUS FLOAT .)
    RPARENTHESIS    reduce using rule 72 (factor -> MINUS FLOAT .)
    POINT           reduce using rule 72 (factor -> MINUS FLOAT .)
    RBRACKET        reduce using rule 72 (factor -> MINUS FLOAT .)
    DO              reduce using rule 72 (factor -> MINUS FLOAT .)


state 64

    (78) cadena -> STRING POINT . NEW
    (79) cadena -> STRING POINT . NEW LPARENTHESIS string RPARENTHESIS

    NEW             shift and go to state 107


state 65

    (80) cadena -> STRING LPARENTHESIS . string RPARENTHESIS
    (77) string -> . STRINGV

    STRINGV         shift and go to state 26

    string                         shift and go to state 108

state 66

    (85) arreglo -> ARRAY POINT . NEW
    (86) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    NEW             shift and go to state 109


state 67

    (88) arreglo -> ARRAY LSQBRACKET . arraycontent RSQBRACKET
    (90) arraycontent -> . factor
    (91) arraycontent -> . string
    (92) arraycontent -> . factor COMMA arraycontent
    (93) arraycontent -> . string COMMA arraycontent
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT
    (77) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    arraycontent                   shift and go to state 110
    factor                         shift and go to state 69
    string                         shift and go to state 70

state 68

    (89) arreglo -> LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 111


state 69

    (90) arraycontent -> factor .
    (92) arraycontent -> factor . COMMA arraycontent

    RSQBRACKET      reduce using rule 90 (arraycontent -> factor .)
    RPARENTHESIS    reduce using rule 90 (arraycontent -> factor .)
    COMMA           shift and go to state 112


state 70

    (91) arraycontent -> string .
    (93) arraycontent -> string . COMMA arraycontent

    RSQBRACKET      reduce using rule 91 (arraycontent -> string .)
    RPARENTHESIS    reduce using rule 91 (arraycontent -> string .)
    COMMA           shift and go to state 113


state 71

    (96) hash -> LBRACKET hashcontent . RBRACKET

    RBRACKET        shift and go to state 114


state 72

    (98) hashcontent -> string . ASSIGN GREATER hashcontentvalue
    (99) hashcontent -> string . ASSIGN GREATER hashcontentvalue COMMA hashcontent

    ASSIGN          shift and go to state 115


state 73

    (97) hash -> HASH POINT . NEW

    NEW             shift and go to state 116


state 74

    (110) estructurasControl -> FOR IDLOCAL . IN factor POINT POINT factor DO BREAK IF END
    (111) estructurasControl -> FOR IDLOCAL . IN factor POINT POINT factor DO END

    IN              shift and go to state 117


state 75

    (50) sentenIF -> IF variables . comparador term
    (51) sentenifp -> IF variables . comparador term algoritmo END
    (52) sentenifelse -> IF variables . comparador term algoritmo ELSE algoritmo END
    (104) comparador -> . COMPARE
    (105) comparador -> . GREQUAL
    (106) comparador -> . LSEQUAL
    (107) comparador -> . NOTEQUAL
    (108) comparador -> . LESS
    (109) comparador -> . GREATER

    COMPARE         shift and go to state 119
    GREQUAL         shift and go to state 120
    LSEQUAL         shift and go to state 121
    NOTEQUAL        shift and go to state 122
    LESS            shift and go to state 123
    GREATER         shift and go to state 124

    comparador                     shift and go to state 118

state 76

    (27) putss -> PUTS string .

    $end            reduce using rule 27 (putss -> PUTS string .)


state 77

    (28) putss -> PUTS cadena .

    $end            reduce using rule 28 (putss -> PUTS cadena .)


state 78

    (31) putsenx -> PUTS expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (73) expression -> expression . DIVISION term
    (74) expression -> expression . MOD term
    (75) expression -> expression . MULT term
    (76) expression -> expression . EXP term

    $end            reduce using rule 31 (putsenx -> PUTS expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53


state 79

    (29) putss -> PRINT string .

    $end            reduce using rule 29 (putss -> PRINT string .)


state 80

    (30) putss -> PRINT cadena .

    $end            reduce using rule 30 (putss -> PRINT cadena .)


state 81

    (32) putsenx -> PRINT expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (73) expression -> expression . DIVISION term
    (74) expression -> expression . MOD term
    (75) expression -> expression . MULT term
    (76) expression -> expression . EXP term

    $end            reduce using rule 32 (putsenx -> PRINT expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53


state 82

    (46) sentenWHILE -> WHILE variables . comparador variables algoritmo END
    (47) sentenWHILE -> WHILE variables . comparador expression algoritmo END
    (49) sentenWHILE -> WHILE variables . algoritmo END
    (104) comparador -> . COMPARE
    (105) comparador -> . GREQUAL
    (106) comparador -> . LSEQUAL
    (107) comparador -> . NOTEQUAL
    (108) comparador -> . LESS
    (109) comparador -> . GREATER
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (81) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (82) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (83) metodocadena -> . cadena POINT LENGTH
    (84) metodocadena -> . string POINT LENGTH
    (85) arreglo -> . ARRAY POINT NEW
    (86) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (88) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (89) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (94) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (95) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (96) hash -> . LBRACKET hashcontent RBRACKET
    (97) hash -> . HASH POINT NEW
    (110) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END
    (111) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (68) term -> . factor
    (78) cadena -> . STRING POINT NEW
    (79) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (77) string -> . STRINGV
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    COMPARE         shift and go to state 119
    GREQUAL         shift and go to state 120
    LSEQUAL         shift and go to state 121
    NOTEQUAL        shift and go to state 122
    LESS            shift and go to state 123
    GREATER         shift and go to state 124
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 125
    comparador                     shift and go to state 126
    algoritmo                      shift and go to state 127
    expression                     shift and go to state 128
    metodocadena                   shift and go to state 129
    arreglo                        shift and go to state 130
    metodosarreglo                 shift and go to state 131
    hash                           shift and go to state 132
    estructurasControl             shift and go to state 133
    boolean                        shift and go to state 134
    assigns                        shift and go to state 135
    sentenIF                       shift and go to state 136
    sentenifp                      shift and go to state 137
    sentenifelse                   shift and go to state 138
    sentenWHILE                    shift and go to state 139
    term                           shift and go to state 24
    cadena                         shift and go to state 140
    string                         shift and go to state 141
    factor                         shift and go to state 29

state 83

    (48) sentenWHILE -> WHILE boolean . algoritmo END
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (81) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (82) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (83) metodocadena -> . cadena POINT LENGTH
    (84) metodocadena -> . string POINT LENGTH
    (85) arreglo -> . ARRAY POINT NEW
    (86) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (88) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (89) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (94) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (95) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (96) hash -> . LBRACKET hashcontent RBRACKET
    (97) hash -> . HASH POINT NEW
    (110) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END
    (111) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (68) term -> . factor
    (78) cadena -> . STRING POINT NEW
    (79) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (77) string -> . STRINGV
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    boolean                        shift and go to state 134
    algoritmo                      shift and go to state 142
    expression                     shift and go to state 128
    metodocadena                   shift and go to state 129
    arreglo                        shift and go to state 130
    metodosarreglo                 shift and go to state 131
    hash                           shift and go to state 132
    estructurasControl             shift and go to state 133
    assigns                        shift and go to state 135
    sentenIF                       shift and go to state 136
    sentenifp                      shift and go to state 137
    sentenifelse                   shift and go to state 138
    variables                      shift and go to state 125
    sentenWHILE                    shift and go to state 139
    term                           shift and go to state 24
    cadena                         shift and go to state 140
    string                         shift and go to state 141
    factor                         shift and go to state 29

state 84

    (112) funcion1 -> DEF IDLOCAL . LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (113) funcion1 -> DEF IDLOCAL . LPARENTHESIS fcontenido RPARENTHESIS algoritmo END

    LPARENTHESIS    shift and go to state 143


state 85

    (65) expression -> expression PLUS term .

    PLUS            reduce using rule 65 (expression -> expression PLUS term .)
    MINUS           reduce using rule 65 (expression -> expression PLUS term .)
    DIVISION        reduce using rule 65 (expression -> expression PLUS term .)
    MOD             reduce using rule 65 (expression -> expression PLUS term .)
    MULT            reduce using rule 65 (expression -> expression PLUS term .)
    EXP             reduce using rule 65 (expression -> expression PLUS term .)
    $end            reduce using rule 65 (expression -> expression PLUS term .)
    END             reduce using rule 65 (expression -> expression PLUS term .)
    ELSE            reduce using rule 65 (expression -> expression PLUS term .)
    RETURN          reduce using rule 65 (expression -> expression PLUS term .)
    ARRAY           reduce using rule 65 (expression -> expression PLUS term .)
    LSQBRACKET      reduce using rule 65 (expression -> expression PLUS term .)
    LBRACKET        reduce using rule 65 (expression -> expression PLUS term .)
    HASH            reduce using rule 65 (expression -> expression PLUS term .)
    FOR             reduce using rule 65 (expression -> expression PLUS term .)
    TRUE            reduce using rule 65 (expression -> expression PLUS term .)
    FALSE           reduce using rule 65 (expression -> expression PLUS term .)
    NIL             reduce using rule 65 (expression -> expression PLUS term .)
    IF              reduce using rule 65 (expression -> expression PLUS term .)
    IDLOCAL         reduce using rule 65 (expression -> expression PLUS term .)
    IDINSTANCE      reduce using rule 65 (expression -> expression PLUS term .)
    IDCLASS         reduce using rule 65 (expression -> expression PLUS term .)
    IDGLOBAL        reduce using rule 65 (expression -> expression PLUS term .)
    WHILE           reduce using rule 65 (expression -> expression PLUS term .)
    STRING          reduce using rule 65 (expression -> expression PLUS term .)
    STRINGV         reduce using rule 65 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 65 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 65 (expression -> expression PLUS term .)


state 86

    (66) expression -> expression MINUS term .

    PLUS            reduce using rule 66 (expression -> expression MINUS term .)
    MINUS           reduce using rule 66 (expression -> expression MINUS term .)
    DIVISION        reduce using rule 66 (expression -> expression MINUS term .)
    MOD             reduce using rule 66 (expression -> expression MINUS term .)
    MULT            reduce using rule 66 (expression -> expression MINUS term .)
    EXP             reduce using rule 66 (expression -> expression MINUS term .)
    $end            reduce using rule 66 (expression -> expression MINUS term .)
    END             reduce using rule 66 (expression -> expression MINUS term .)
    ELSE            reduce using rule 66 (expression -> expression MINUS term .)
    RETURN          reduce using rule 66 (expression -> expression MINUS term .)
    ARRAY           reduce using rule 66 (expression -> expression MINUS term .)
    LSQBRACKET      reduce using rule 66 (expression -> expression MINUS term .)
    LBRACKET        reduce using rule 66 (expression -> expression MINUS term .)
    HASH            reduce using rule 66 (expression -> expression MINUS term .)
    FOR             reduce using rule 66 (expression -> expression MINUS term .)
    TRUE            reduce using rule 66 (expression -> expression MINUS term .)
    FALSE           reduce using rule 66 (expression -> expression MINUS term .)
    NIL             reduce using rule 66 (expression -> expression MINUS term .)
    IF              reduce using rule 66 (expression -> expression MINUS term .)
    IDLOCAL         reduce using rule 66 (expression -> expression MINUS term .)
    IDINSTANCE      reduce using rule 66 (expression -> expression MINUS term .)
    IDCLASS         reduce using rule 66 (expression -> expression MINUS term .)
    IDGLOBAL        reduce using rule 66 (expression -> expression MINUS term .)
    WHILE           reduce using rule 66 (expression -> expression MINUS term .)
    STRING          reduce using rule 66 (expression -> expression MINUS term .)
    STRINGV         reduce using rule 66 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 66 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 66 (expression -> expression MINUS term .)


state 87

    (73) expression -> expression DIVISION term .

    PLUS            reduce using rule 73 (expression -> expression DIVISION term .)
    MINUS           reduce using rule 73 (expression -> expression DIVISION term .)
    DIVISION        reduce using rule 73 (expression -> expression DIVISION term .)
    MOD             reduce using rule 73 (expression -> expression DIVISION term .)
    MULT            reduce using rule 73 (expression -> expression DIVISION term .)
    EXP             reduce using rule 73 (expression -> expression DIVISION term .)
    $end            reduce using rule 73 (expression -> expression DIVISION term .)
    END             reduce using rule 73 (expression -> expression DIVISION term .)
    ELSE            reduce using rule 73 (expression -> expression DIVISION term .)
    RETURN          reduce using rule 73 (expression -> expression DIVISION term .)
    ARRAY           reduce using rule 73 (expression -> expression DIVISION term .)
    LSQBRACKET      reduce using rule 73 (expression -> expression DIVISION term .)
    LBRACKET        reduce using rule 73 (expression -> expression DIVISION term .)
    HASH            reduce using rule 73 (expression -> expression DIVISION term .)
    FOR             reduce using rule 73 (expression -> expression DIVISION term .)
    TRUE            reduce using rule 73 (expression -> expression DIVISION term .)
    FALSE           reduce using rule 73 (expression -> expression DIVISION term .)
    NIL             reduce using rule 73 (expression -> expression DIVISION term .)
    IF              reduce using rule 73 (expression -> expression DIVISION term .)
    IDLOCAL         reduce using rule 73 (expression -> expression DIVISION term .)
    IDINSTANCE      reduce using rule 73 (expression -> expression DIVISION term .)
    IDCLASS         reduce using rule 73 (expression -> expression DIVISION term .)
    IDGLOBAL        reduce using rule 73 (expression -> expression DIVISION term .)
    WHILE           reduce using rule 73 (expression -> expression DIVISION term .)
    STRING          reduce using rule 73 (expression -> expression DIVISION term .)
    STRINGV         reduce using rule 73 (expression -> expression DIVISION term .)
    NUMBER          reduce using rule 73 (expression -> expression DIVISION term .)
    FLOAT           reduce using rule 73 (expression -> expression DIVISION term .)


state 88

    (74) expression -> expression MOD term .

    PLUS            reduce using rule 74 (expression -> expression MOD term .)
    MINUS           reduce using rule 74 (expression -> expression MOD term .)
    DIVISION        reduce using rule 74 (expression -> expression MOD term .)
    MOD             reduce using rule 74 (expression -> expression MOD term .)
    MULT            reduce using rule 74 (expression -> expression MOD term .)
    EXP             reduce using rule 74 (expression -> expression MOD term .)
    $end            reduce using rule 74 (expression -> expression MOD term .)
    END             reduce using rule 74 (expression -> expression MOD term .)
    ELSE            reduce using rule 74 (expression -> expression MOD term .)
    RETURN          reduce using rule 74 (expression -> expression MOD term .)
    ARRAY           reduce using rule 74 (expression -> expression MOD term .)
    LSQBRACKET      reduce using rule 74 (expression -> expression MOD term .)
    LBRACKET        reduce using rule 74 (expression -> expression MOD term .)
    HASH            reduce using rule 74 (expression -> expression MOD term .)
    FOR             reduce using rule 74 (expression -> expression MOD term .)
    TRUE            reduce using rule 74 (expression -> expression MOD term .)
    FALSE           reduce using rule 74 (expression -> expression MOD term .)
    NIL             reduce using rule 74 (expression -> expression MOD term .)
    IF              reduce using rule 74 (expression -> expression MOD term .)
    IDLOCAL         reduce using rule 74 (expression -> expression MOD term .)
    IDINSTANCE      reduce using rule 74 (expression -> expression MOD term .)
    IDCLASS         reduce using rule 74 (expression -> expression MOD term .)
    IDGLOBAL        reduce using rule 74 (expression -> expression MOD term .)
    WHILE           reduce using rule 74 (expression -> expression MOD term .)
    STRING          reduce using rule 74 (expression -> expression MOD term .)
    STRINGV         reduce using rule 74 (expression -> expression MOD term .)
    NUMBER          reduce using rule 74 (expression -> expression MOD term .)
    FLOAT           reduce using rule 74 (expression -> expression MOD term .)


state 89

    (75) expression -> expression MULT term .

    PLUS            reduce using rule 75 (expression -> expression MULT term .)
    MINUS           reduce using rule 75 (expression -> expression MULT term .)
    DIVISION        reduce using rule 75 (expression -> expression MULT term .)
    MOD             reduce using rule 75 (expression -> expression MULT term .)
    MULT            reduce using rule 75 (expression -> expression MULT term .)
    EXP             reduce using rule 75 (expression -> expression MULT term .)
    $end            reduce using rule 75 (expression -> expression MULT term .)
    END             reduce using rule 75 (expression -> expression MULT term .)
    ELSE            reduce using rule 75 (expression -> expression MULT term .)
    RETURN          reduce using rule 75 (expression -> expression MULT term .)
    ARRAY           reduce using rule 75 (expression -> expression MULT term .)
    LSQBRACKET      reduce using rule 75 (expression -> expression MULT term .)
    LBRACKET        reduce using rule 75 (expression -> expression MULT term .)
    HASH            reduce using rule 75 (expression -> expression MULT term .)
    FOR             reduce using rule 75 (expression -> expression MULT term .)
    TRUE            reduce using rule 75 (expression -> expression MULT term .)
    FALSE           reduce using rule 75 (expression -> expression MULT term .)
    NIL             reduce using rule 75 (expression -> expression MULT term .)
    IF              reduce using rule 75 (expression -> expression MULT term .)
    IDLOCAL         reduce using rule 75 (expression -> expression MULT term .)
    IDINSTANCE      reduce using rule 75 (expression -> expression MULT term .)
    IDCLASS         reduce using rule 75 (expression -> expression MULT term .)
    IDGLOBAL        reduce using rule 75 (expression -> expression MULT term .)
    WHILE           reduce using rule 75 (expression -> expression MULT term .)
    STRING          reduce using rule 75 (expression -> expression MULT term .)
    STRINGV         reduce using rule 75 (expression -> expression MULT term .)
    NUMBER          reduce using rule 75 (expression -> expression MULT term .)
    FLOAT           reduce using rule 75 (expression -> expression MULT term .)


state 90

    (76) expression -> expression EXP term .

    PLUS            reduce using rule 76 (expression -> expression EXP term .)
    MINUS           reduce using rule 76 (expression -> expression EXP term .)
    DIVISION        reduce using rule 76 (expression -> expression EXP term .)
    MOD             reduce using rule 76 (expression -> expression EXP term .)
    MULT            reduce using rule 76 (expression -> expression EXP term .)
    EXP             reduce using rule 76 (expression -> expression EXP term .)
    $end            reduce using rule 76 (expression -> expression EXP term .)
    END             reduce using rule 76 (expression -> expression EXP term .)
    ELSE            reduce using rule 76 (expression -> expression EXP term .)
    RETURN          reduce using rule 76 (expression -> expression EXP term .)
    ARRAY           reduce using rule 76 (expression -> expression EXP term .)
    LSQBRACKET      reduce using rule 76 (expression -> expression EXP term .)
    LBRACKET        reduce using rule 76 (expression -> expression EXP term .)
    HASH            reduce using rule 76 (expression -> expression EXP term .)
    FOR             reduce using rule 76 (expression -> expression EXP term .)
    TRUE            reduce using rule 76 (expression -> expression EXP term .)
    FALSE           reduce using rule 76 (expression -> expression EXP term .)
    NIL             reduce using rule 76 (expression -> expression EXP term .)
    IF              reduce using rule 76 (expression -> expression EXP term .)
    IDLOCAL         reduce using rule 76 (expression -> expression EXP term .)
    IDINSTANCE      reduce using rule 76 (expression -> expression EXP term .)
    IDCLASS         reduce using rule 76 (expression -> expression EXP term .)
    IDGLOBAL        reduce using rule 76 (expression -> expression EXP term .)
    WHILE           reduce using rule 76 (expression -> expression EXP term .)
    STRING          reduce using rule 76 (expression -> expression EXP term .)
    STRINGV         reduce using rule 76 (expression -> expression EXP term .)
    NUMBER          reduce using rule 76 (expression -> expression EXP term .)
    FLOAT           reduce using rule 76 (expression -> expression EXP term .)


state 91

    (82) metodocadena -> string POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 144


state 92

    (84) metodocadena -> string POINT LENGTH .

    $end            reduce using rule 84 (metodocadena -> string POINT LENGTH .)
    END             reduce using rule 84 (metodocadena -> string POINT LENGTH .)
    ELSE            reduce using rule 84 (metodocadena -> string POINT LENGTH .)
    RETURN          reduce using rule 84 (metodocadena -> string POINT LENGTH .)


state 93

    (81) metodocadena -> cadena POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 145


state 94

    (83) metodocadena -> cadena POINT LENGTH .

    $end            reduce using rule 83 (metodocadena -> cadena POINT LENGTH .)
    END             reduce using rule 83 (metodocadena -> cadena POINT LENGTH .)
    ELSE            reduce using rule 83 (metodocadena -> cadena POINT LENGTH .)
    RETURN          reduce using rule 83 (metodocadena -> cadena POINT LENGTH .)


state 95

    (94) metodosarreglo -> arreglo POINT INDEX . LPARENTHESIS arraycontent RPARENTHESIS

    LPARENTHESIS    shift and go to state 146


state 96

    (95) metodosarreglo -> arreglo LSQBRACKET factor . RSQBRACKET

    RSQBRACKET      shift and go to state 147


state 97

    (58) assigns -> variables ASSIGN variables .
    (12) asignar -> variables .
    (102) metodohash -> variables . ASSIGN hash POINT LENGTH
    (103) metodohash -> variables . POINT LENGTH
    (57) assigns -> variables . ASSIGN expression
    (58) assigns -> variables . ASSIGN variables
    (59) assigns -> variables . ASSIGN boolean
    (60) assigns -> variables . ASSIGN asignar
    (61) assigns -> variables . ASSIGNPLUS expression
    (62) assigns -> variables . ASSIGNPLUS variables
    (63) assigns -> variables . ASSIGNMIN expression
    (64) assigns -> variables . ASSIGNMIN variables

  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
    $end            reduce using rule 12 (asignar -> variables .)
    END             reduce using rule 12 (asignar -> variables .)
    ELSE            reduce using rule 12 (asignar -> variables .)
    RETURN          reduce using rule 12 (asignar -> variables .)
    ASSIGN          shift and go to state 58
    POINT           shift and go to state 59
    ASSIGNPLUS      shift and go to state 60
    ASSIGNMIN       shift and go to state 61

  ! $end            [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! END             [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! ELSE            [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! RETURN          [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]


state 98

    (102) metodohash -> variables ASSIGN hash . POINT LENGTH
    (9) asignar -> hash .

    POINT           shift and go to state 148
    $end            reduce using rule 9 (asignar -> hash .)
    END             reduce using rule 9 (asignar -> hash .)
    ELSE            reduce using rule 9 (asignar -> hash .)
    RETURN          reduce using rule 9 (asignar -> hash .)


state 99

    (57) assigns -> variables ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (73) expression -> expression . DIVISION term
    (74) expression -> expression . MOD term
    (75) expression -> expression . MULT term
    (76) expression -> expression . EXP term
    (3) asignar -> expression .

  ! reduce/reduce conflict for $end resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for END resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53
    $end            reduce using rule 3 (asignar -> expression .)
    END             reduce using rule 3 (asignar -> expression .)
    ELSE            reduce using rule 3 (asignar -> expression .)
    RETURN          reduce using rule 3 (asignar -> expression .)

  ! $end            [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! END             [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! ELSE            [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! RETURN          [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]


state 100

    (59) assigns -> variables ASSIGN boolean .
    (11) asignar -> boolean .

  ! reduce/reduce conflict for $end resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for END resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for ELSE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for RETURN resolved using rule 11 (asignar -> boolean .)
    $end            reduce using rule 11 (asignar -> boolean .)
    END             reduce using rule 11 (asignar -> boolean .)
    ELSE            reduce using rule 11 (asignar -> boolean .)
    RETURN          reduce using rule 11 (asignar -> boolean .)

  ! $end            [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! END             [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! ELSE            [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! RETURN          [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]


state 101

    (60) assigns -> variables ASSIGN asignar .

    $end            reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    END             reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    ELSE            reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    RETURN          reduce using rule 60 (assigns -> variables ASSIGN asignar .)


state 102

    (103) metodohash -> variables POINT LENGTH .

    $end            reduce using rule 103 (metodohash -> variables POINT LENGTH .)
    END             reduce using rule 103 (metodohash -> variables POINT LENGTH .)
    ELSE            reduce using rule 103 (metodohash -> variables POINT LENGTH .)
    RETURN          reduce using rule 103 (metodohash -> variables POINT LENGTH .)


state 103

    (62) assigns -> variables ASSIGNPLUS variables .

    $end            reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    END             reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    ELSE            reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    RETURN          reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)


state 104

    (61) assigns -> variables ASSIGNPLUS expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (73) expression -> expression . DIVISION term
    (74) expression -> expression . MOD term
    (75) expression -> expression . MULT term
    (76) expression -> expression . EXP term

    $end            reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    END             reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    ELSE            reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    RETURN          reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53


state 105

    (64) assigns -> variables ASSIGNMIN variables .

    $end            reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    END             reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    ELSE            reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    RETURN          reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)


state 106

    (63) assigns -> variables ASSIGNMIN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (73) expression -> expression . DIVISION term
    (74) expression -> expression . MOD term
    (75) expression -> expression . MULT term
    (76) expression -> expression . EXP term

    $end            reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    END             reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    ELSE            reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    RETURN          reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53


state 107

    (78) cadena -> STRING POINT NEW .
    (79) cadena -> STRING POINT NEW . LPARENTHESIS string RPARENTHESIS

    POINT           reduce using rule 78 (cadena -> STRING POINT NEW .)
    $end            reduce using rule 78 (cadena -> STRING POINT NEW .)
    END             reduce using rule 78 (cadena -> STRING POINT NEW .)
    ELSE            reduce using rule 78 (cadena -> STRING POINT NEW .)
    RETURN          reduce using rule 78 (cadena -> STRING POINT NEW .)
    LPARENTHESIS    shift and go to state 149


state 108

    (80) cadena -> STRING LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 150


state 109

    (85) arreglo -> ARRAY POINT NEW .
    (86) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    POINT           reduce using rule 85 (arreglo -> ARRAY POINT NEW .)
    LSQBRACKET      reduce using rule 85 (arreglo -> ARRAY POINT NEW .)
    $end            reduce using rule 85 (arreglo -> ARRAY POINT NEW .)
    END             reduce using rule 85 (arreglo -> ARRAY POINT NEW .)
    ELSE            reduce using rule 85 (arreglo -> ARRAY POINT NEW .)
    RETURN          reduce using rule 85 (arreglo -> ARRAY POINT NEW .)
    LPARENTHESIS    shift and go to state 151


state 110

    (88) arreglo -> ARRAY LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 152


state 111

    (89) arreglo -> LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 89 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 89 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 89 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    END             reduce using rule 89 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    ELSE            reduce using rule 89 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    RETURN          reduce using rule 89 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)


state 112

    (92) arraycontent -> factor COMMA . arraycontent
    (90) arraycontent -> . factor
    (91) arraycontent -> . string
    (92) arraycontent -> . factor COMMA arraycontent
    (93) arraycontent -> . string COMMA arraycontent
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT
    (77) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    factor                         shift and go to state 69
    arraycontent                   shift and go to state 153
    string                         shift and go to state 70

state 113

    (93) arraycontent -> string COMMA . arraycontent
    (90) arraycontent -> . factor
    (91) arraycontent -> . string
    (92) arraycontent -> . factor COMMA arraycontent
    (93) arraycontent -> . string COMMA arraycontent
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT
    (77) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    string                         shift and go to state 70
    arraycontent                   shift and go to state 154
    factor                         shift and go to state 69

state 114

    (96) hash -> LBRACKET hashcontent RBRACKET .

    $end            reduce using rule 96 (hash -> LBRACKET hashcontent RBRACKET .)
    POINT           reduce using rule 96 (hash -> LBRACKET hashcontent RBRACKET .)
    END             reduce using rule 96 (hash -> LBRACKET hashcontent RBRACKET .)
    ELSE            reduce using rule 96 (hash -> LBRACKET hashcontent RBRACKET .)
    RETURN          reduce using rule 96 (hash -> LBRACKET hashcontent RBRACKET .)


state 115

    (98) hashcontent -> string ASSIGN . GREATER hashcontentvalue
    (99) hashcontent -> string ASSIGN . GREATER hashcontentvalue COMMA hashcontent

    GREATER         shift and go to state 155


state 116

    (97) hash -> HASH POINT NEW .

    $end            reduce using rule 97 (hash -> HASH POINT NEW .)
    POINT           reduce using rule 97 (hash -> HASH POINT NEW .)
    END             reduce using rule 97 (hash -> HASH POINT NEW .)
    ELSE            reduce using rule 97 (hash -> HASH POINT NEW .)
    RETURN          reduce using rule 97 (hash -> HASH POINT NEW .)


state 117

    (110) estructurasControl -> FOR IDLOCAL IN . factor POINT POINT factor DO BREAK IF END
    (111) estructurasControl -> FOR IDLOCAL IN . factor POINT POINT factor DO END
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    factor                         shift and go to state 156

state 118

    (50) sentenIF -> IF variables comparador . term
    (51) sentenifp -> IF variables comparador . term algoritmo END
    (52) sentenifelse -> IF variables comparador . term algoritmo ELSE algoritmo END
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    term                           shift and go to state 157
    factor                         shift and go to state 29

state 119

    (104) comparador -> COMPARE .

    NUMBER          reduce using rule 104 (comparador -> COMPARE .)
    FLOAT           reduce using rule 104 (comparador -> COMPARE .)
    MINUS           reduce using rule 104 (comparador -> COMPARE .)
    IDLOCAL         reduce using rule 104 (comparador -> COMPARE .)
    IDINSTANCE      reduce using rule 104 (comparador -> COMPARE .)
    IDCLASS         reduce using rule 104 (comparador -> COMPARE .)
    IDGLOBAL        reduce using rule 104 (comparador -> COMPARE .)


state 120

    (105) comparador -> GREQUAL .

    NUMBER          reduce using rule 105 (comparador -> GREQUAL .)
    FLOAT           reduce using rule 105 (comparador -> GREQUAL .)
    MINUS           reduce using rule 105 (comparador -> GREQUAL .)
    IDLOCAL         reduce using rule 105 (comparador -> GREQUAL .)
    IDINSTANCE      reduce using rule 105 (comparador -> GREQUAL .)
    IDCLASS         reduce using rule 105 (comparador -> GREQUAL .)
    IDGLOBAL        reduce using rule 105 (comparador -> GREQUAL .)


state 121

    (106) comparador -> LSEQUAL .

    NUMBER          reduce using rule 106 (comparador -> LSEQUAL .)
    FLOAT           reduce using rule 106 (comparador -> LSEQUAL .)
    MINUS           reduce using rule 106 (comparador -> LSEQUAL .)
    IDLOCAL         reduce using rule 106 (comparador -> LSEQUAL .)
    IDINSTANCE      reduce using rule 106 (comparador -> LSEQUAL .)
    IDCLASS         reduce using rule 106 (comparador -> LSEQUAL .)
    IDGLOBAL        reduce using rule 106 (comparador -> LSEQUAL .)


state 122

    (107) comparador -> NOTEQUAL .

    NUMBER          reduce using rule 107 (comparador -> NOTEQUAL .)
    FLOAT           reduce using rule 107 (comparador -> NOTEQUAL .)
    MINUS           reduce using rule 107 (comparador -> NOTEQUAL .)
    IDLOCAL         reduce using rule 107 (comparador -> NOTEQUAL .)
    IDINSTANCE      reduce using rule 107 (comparador -> NOTEQUAL .)
    IDCLASS         reduce using rule 107 (comparador -> NOTEQUAL .)
    IDGLOBAL        reduce using rule 107 (comparador -> NOTEQUAL .)


state 123

    (108) comparador -> LESS .

    NUMBER          reduce using rule 108 (comparador -> LESS .)
    FLOAT           reduce using rule 108 (comparador -> LESS .)
    MINUS           reduce using rule 108 (comparador -> LESS .)
    IDLOCAL         reduce using rule 108 (comparador -> LESS .)
    IDINSTANCE      reduce using rule 108 (comparador -> LESS .)
    IDCLASS         reduce using rule 108 (comparador -> LESS .)
    IDGLOBAL        reduce using rule 108 (comparador -> LESS .)


state 124

    (109) comparador -> GREATER .

    NUMBER          reduce using rule 109 (comparador -> GREATER .)
    FLOAT           reduce using rule 109 (comparador -> GREATER .)
    MINUS           reduce using rule 109 (comparador -> GREATER .)
    IDLOCAL         reduce using rule 109 (comparador -> GREATER .)
    IDINSTANCE      reduce using rule 109 (comparador -> GREATER .)
    IDCLASS         reduce using rule 109 (comparador -> GREATER .)
    IDGLOBAL        reduce using rule 109 (comparador -> GREATER .)


state 125

    (44) algoritmo -> variables .
    (57) assigns -> variables . ASSIGN expression
    (58) assigns -> variables . ASSIGN variables
    (59) assigns -> variables . ASSIGN boolean
    (60) assigns -> variables . ASSIGN asignar
    (61) assigns -> variables . ASSIGNPLUS expression
    (62) assigns -> variables . ASSIGNPLUS variables
    (63) assigns -> variables . ASSIGNMIN expression
    (64) assigns -> variables . ASSIGNMIN variables

    END             reduce using rule 44 (algoritmo -> variables .)
    ELSE            reduce using rule 44 (algoritmo -> variables .)
    RETURN          reduce using rule 44 (algoritmo -> variables .)
    ASSIGN          shift and go to state 158
    ASSIGNPLUS      shift and go to state 60
    ASSIGNMIN       shift and go to state 61


state 126

    (46) sentenWHILE -> WHILE variables comparador . variables algoritmo END
    (47) sentenWHILE -> WHILE variables comparador . expression algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 159
    expression                     shift and go to state 160
    term                           shift and go to state 24
    factor                         shift and go to state 29

state 127

    (49) sentenWHILE -> WHILE variables algoritmo . END

    END             shift and go to state 161


state 128

    (33) algoritmo -> expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (73) expression -> expression . DIVISION term
    (74) expression -> expression . MOD term
    (75) expression -> expression . MULT term
    (76) expression -> expression . EXP term

    END             reduce using rule 33 (algoritmo -> expression .)
    ELSE            reduce using rule 33 (algoritmo -> expression .)
    RETURN          reduce using rule 33 (algoritmo -> expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53


state 129

    (34) algoritmo -> metodocadena .

    END             reduce using rule 34 (algoritmo -> metodocadena .)
    ELSE            reduce using rule 34 (algoritmo -> metodocadena .)
    RETURN          reduce using rule 34 (algoritmo -> metodocadena .)


state 130

    (35) algoritmo -> arreglo .
    (94) metodosarreglo -> arreglo . POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (95) metodosarreglo -> arreglo . LSQBRACKET factor RSQBRACKET

    END             reduce using rule 35 (algoritmo -> arreglo .)
    ELSE            reduce using rule 35 (algoritmo -> arreglo .)
    RETURN          reduce using rule 35 (algoritmo -> arreglo .)
    POINT           shift and go to state 56
    LSQBRACKET      shift and go to state 57


state 131

    (36) algoritmo -> metodosarreglo .

    END             reduce using rule 36 (algoritmo -> metodosarreglo .)
    ELSE            reduce using rule 36 (algoritmo -> metodosarreglo .)
    RETURN          reduce using rule 36 (algoritmo -> metodosarreglo .)


state 132

    (37) algoritmo -> hash .

    END             reduce using rule 37 (algoritmo -> hash .)
    ELSE            reduce using rule 37 (algoritmo -> hash .)
    RETURN          reduce using rule 37 (algoritmo -> hash .)


state 133

    (38) algoritmo -> estructurasControl .

    END             reduce using rule 38 (algoritmo -> estructurasControl .)
    ELSE            reduce using rule 38 (algoritmo -> estructurasControl .)
    RETURN          reduce using rule 38 (algoritmo -> estructurasControl .)


state 134

    (39) algoritmo -> boolean .

    END             reduce using rule 39 (algoritmo -> boolean .)
    ELSE            reduce using rule 39 (algoritmo -> boolean .)
    RETURN          reduce using rule 39 (algoritmo -> boolean .)


state 135

    (40) algoritmo -> assigns .

    END             reduce using rule 40 (algoritmo -> assigns .)
    ELSE            reduce using rule 40 (algoritmo -> assigns .)
    RETURN          reduce using rule 40 (algoritmo -> assigns .)


state 136

    (41) algoritmo -> sentenIF .

    END             reduce using rule 41 (algoritmo -> sentenIF .)
    ELSE            reduce using rule 41 (algoritmo -> sentenIF .)
    RETURN          reduce using rule 41 (algoritmo -> sentenIF .)


state 137

    (42) algoritmo -> sentenifp .

    END             reduce using rule 42 (algoritmo -> sentenifp .)
    ELSE            reduce using rule 42 (algoritmo -> sentenifp .)
    RETURN          reduce using rule 42 (algoritmo -> sentenifp .)


state 138

    (43) algoritmo -> sentenifelse .

    END             reduce using rule 43 (algoritmo -> sentenifelse .)
    ELSE            reduce using rule 43 (algoritmo -> sentenifelse .)
    RETURN          reduce using rule 43 (algoritmo -> sentenifelse .)


state 139

    (45) algoritmo -> sentenWHILE .

    END             reduce using rule 45 (algoritmo -> sentenWHILE .)
    ELSE            reduce using rule 45 (algoritmo -> sentenWHILE .)
    RETURN          reduce using rule 45 (algoritmo -> sentenWHILE .)


state 140

    (81) metodocadena -> cadena . POINT EMPTY INTERROGATIVE
    (83) metodocadena -> cadena . POINT LENGTH

    POINT           shift and go to state 55


state 141

    (82) metodocadena -> string . POINT EMPTY INTERROGATIVE
    (84) metodocadena -> string . POINT LENGTH

    POINT           shift and go to state 54


state 142

    (48) sentenWHILE -> WHILE boolean algoritmo . END

    END             shift and go to state 162


state 143

    (112) funcion1 -> DEF IDLOCAL LPARENTHESIS . fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (113) funcion1 -> DEF IDLOCAL LPARENTHESIS . fcontenido RPARENTHESIS algoritmo END
    (114) fcontenido -> . variables
    (115) fcontenido -> . variables COMMA fcontenido
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    fcontenido                     shift and go to state 163
    variables                      shift and go to state 164

state 144

    (82) metodocadena -> string POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 82 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    END             reduce using rule 82 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    ELSE            reduce using rule 82 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    RETURN          reduce using rule 82 (metodocadena -> string POINT EMPTY INTERROGATIVE .)


state 145

    (81) metodocadena -> cadena POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 81 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    END             reduce using rule 81 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    ELSE            reduce using rule 81 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    RETURN          reduce using rule 81 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)


state 146

    (94) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS . arraycontent RPARENTHESIS
    (90) arraycontent -> . factor
    (91) arraycontent -> . string
    (92) arraycontent -> . factor COMMA arraycontent
    (93) arraycontent -> . string COMMA arraycontent
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT
    (77) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    arraycontent                   shift and go to state 165
    factor                         shift and go to state 69
    string                         shift and go to state 70

state 147

    (95) metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .

    $end            reduce using rule 95 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    END             reduce using rule 95 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    ELSE            reduce using rule 95 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    RETURN          reduce using rule 95 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)


state 148

    (102) metodohash -> variables ASSIGN hash POINT . LENGTH

    LENGTH          shift and go to state 166


state 149

    (79) cadena -> STRING POINT NEW LPARENTHESIS . string RPARENTHESIS
    (77) string -> . STRINGV

    STRINGV         shift and go to state 26

    string                         shift and go to state 167

state 150

    (80) cadena -> STRING LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 80 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 80 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    END             reduce using rule 80 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    ELSE            reduce using rule 80 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    RETURN          reduce using rule 80 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)


state 151

    (86) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor RPARENTHESIS
    (87) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor COMMA arraycontent RPARENTHESIS
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    factor                         shift and go to state 168

state 152

    (88) arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 88 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 88 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 88 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    END             reduce using rule 88 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    ELSE            reduce using rule 88 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    RETURN          reduce using rule 88 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)


state 153

    (92) arraycontent -> factor COMMA arraycontent .

    RSQBRACKET      reduce using rule 92 (arraycontent -> factor COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 92 (arraycontent -> factor COMMA arraycontent .)


state 154

    (93) arraycontent -> string COMMA arraycontent .

    RSQBRACKET      reduce using rule 93 (arraycontent -> string COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 93 (arraycontent -> string COMMA arraycontent .)


state 155

    (98) hashcontent -> string ASSIGN GREATER . hashcontentvalue
    (99) hashcontent -> string ASSIGN GREATER . hashcontentvalue COMMA hashcontent
    (100) hashcontentvalue -> . factor
    (101) hashcontentvalue -> . string
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT
    (77) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    string                         shift and go to state 169
    hashcontentvalue               shift and go to state 170
    factor                         shift and go to state 171

state 156

    (110) estructurasControl -> FOR IDLOCAL IN factor . POINT POINT factor DO BREAK IF END
    (111) estructurasControl -> FOR IDLOCAL IN factor . POINT POINT factor DO END

    POINT           shift and go to state 172


state 157

    (50) sentenIF -> IF variables comparador term .
    (51) sentenifp -> IF variables comparador term . algoritmo END
    (52) sentenifelse -> IF variables comparador term . algoritmo ELSE algoritmo END
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (81) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (82) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (83) metodocadena -> . cadena POINT LENGTH
    (84) metodocadena -> . string POINT LENGTH
    (85) arreglo -> . ARRAY POINT NEW
    (86) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (88) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (89) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (94) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (95) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (96) hash -> . LBRACKET hashcontent RBRACKET
    (97) hash -> . HASH POINT NEW
    (110) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END
    (111) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (68) term -> . factor
    (78) cadena -> . STRING POINT NEW
    (79) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (77) string -> . STRINGV
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    $end            reduce using rule 50 (sentenIF -> IF variables comparador term .)
    END             reduce using rule 50 (sentenIF -> IF variables comparador term .)
    ELSE            reduce using rule 50 (sentenIF -> IF variables comparador term .)
    RETURN          reduce using rule 50 (sentenIF -> IF variables comparador term .)
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 125
    term                           shift and go to state 24
    algoritmo                      shift and go to state 173
    expression                     shift and go to state 128
    metodocadena                   shift and go to state 129
    arreglo                        shift and go to state 130
    metodosarreglo                 shift and go to state 131
    hash                           shift and go to state 132
    estructurasControl             shift and go to state 133
    boolean                        shift and go to state 134
    assigns                        shift and go to state 135
    sentenIF                       shift and go to state 136
    sentenifp                      shift and go to state 137
    sentenifelse                   shift and go to state 138
    sentenWHILE                    shift and go to state 139
    cadena                         shift and go to state 140
    string                         shift and go to state 141
    factor                         shift and go to state 29

state 158

    (57) assigns -> variables ASSIGN . expression
    (58) assigns -> variables ASSIGN . variables
    (59) assigns -> variables ASSIGN . boolean
    (60) assigns -> variables ASSIGN . asignar
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . assigns
    (68) term -> . factor
    (77) string -> . STRINGV
    (78) cadena -> . STRING POINT NEW
    (79) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (81) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (82) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (83) metodocadena -> . cadena POINT LENGTH
    (84) metodocadena -> . string POINT LENGTH
    (85) arreglo -> . ARRAY POINT NEW
    (86) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (88) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (89) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (94) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (95) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (96) hash -> . LBRACKET hashcontent RBRACKET
    (97) hash -> . HASH POINT NEW
    (102) metodohash -> . variables ASSIGN hash POINT LENGTH
    (103) metodohash -> . variables POINT LENGTH
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    STRINGV         shift and go to state 26
    STRING          shift and go to state 27
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 97
    expression                     shift and go to state 99
    boolean                        shift and go to state 100
    asignar                        shift and go to state 101
    term                           shift and go to state 24
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    assigns                        shift and go to state 14
    factor                         shift and go to state 29

state 159

    (46) sentenWHILE -> WHILE variables comparador variables . algoritmo END
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (81) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (82) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (83) metodocadena -> . cadena POINT LENGTH
    (84) metodocadena -> . string POINT LENGTH
    (85) arreglo -> . ARRAY POINT NEW
    (86) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (88) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (89) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (94) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (95) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (96) hash -> . LBRACKET hashcontent RBRACKET
    (97) hash -> . HASH POINT NEW
    (110) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END
    (111) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (68) term -> . factor
    (78) cadena -> . STRING POINT NEW
    (79) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (77) string -> . STRINGV
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 125
    algoritmo                      shift and go to state 174
    expression                     shift and go to state 128
    metodocadena                   shift and go to state 129
    arreglo                        shift and go to state 130
    metodosarreglo                 shift and go to state 131
    hash                           shift and go to state 132
    estructurasControl             shift and go to state 133
    boolean                        shift and go to state 134
    assigns                        shift and go to state 135
    sentenIF                       shift and go to state 136
    sentenifp                      shift and go to state 137
    sentenifelse                   shift and go to state 138
    sentenWHILE                    shift and go to state 139
    term                           shift and go to state 24
    cadena                         shift and go to state 140
    string                         shift and go to state 141
    factor                         shift and go to state 29

state 160

    (47) sentenWHILE -> WHILE variables comparador expression . algoritmo END
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (73) expression -> expression . DIVISION term
    (74) expression -> expression . MOD term
    (75) expression -> expression . MULT term
    (76) expression -> expression . EXP term
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (81) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (82) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (83) metodocadena -> . cadena POINT LENGTH
    (84) metodocadena -> . string POINT LENGTH
    (85) arreglo -> . ARRAY POINT NEW
    (86) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (88) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (89) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (94) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (95) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (96) hash -> . LBRACKET hashcontent RBRACKET
    (97) hash -> . HASH POINT NEW
    (110) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END
    (111) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (68) term -> . factor
    (78) cadena -> . STRING POINT NEW
    (79) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (77) string -> . STRINGV
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    PLUS            shift and go to state 48
    MINUS           shift and go to state 176
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47

    variables                      shift and go to state 125
    expression                     shift and go to state 128
    algoritmo                      shift and go to state 175
    term                           shift and go to state 24
    metodocadena                   shift and go to state 129
    arreglo                        shift and go to state 130
    metodosarreglo                 shift and go to state 131
    hash                           shift and go to state 132
    estructurasControl             shift and go to state 133
    boolean                        shift and go to state 134
    assigns                        shift and go to state 135
    sentenIF                       shift and go to state 136
    sentenifp                      shift and go to state 137
    sentenifelse                   shift and go to state 138
    sentenWHILE                    shift and go to state 139
    cadena                         shift and go to state 140
    string                         shift and go to state 141
    factor                         shift and go to state 29

state 161

    (49) sentenWHILE -> WHILE variables algoritmo END .

    $end            reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    END             reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    ELSE            reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    RETURN          reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)


state 162

    (48) sentenWHILE -> WHILE boolean algoritmo END .

    $end            reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    END             reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    ELSE            reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    RETURN          reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)


state 163

    (112) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido . RPARENTHESIS algoritmo RETURN IDLOCAL END
    (113) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido . RPARENTHESIS algoritmo END

    RPARENTHESIS    shift and go to state 177


state 164

    (114) fcontenido -> variables .
    (115) fcontenido -> variables . COMMA fcontenido

    RPARENTHESIS    reduce using rule 114 (fcontenido -> variables .)
    COMMA           shift and go to state 178


state 165

    (94) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 179


state 166

    (102) metodohash -> variables ASSIGN hash POINT LENGTH .

    $end            reduce using rule 102 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    END             reduce using rule 102 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    ELSE            reduce using rule 102 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    RETURN          reduce using rule 102 (metodohash -> variables ASSIGN hash POINT LENGTH .)


state 167

    (79) cadena -> STRING POINT NEW LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 180


state 168

    (86) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . RPARENTHESIS
    (87) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . COMMA arraycontent RPARENTHESIS

    RPARENTHESIS    shift and go to state 181
    COMMA           shift and go to state 182


state 169

    (101) hashcontentvalue -> string .

    COMMA           reduce using rule 101 (hashcontentvalue -> string .)
    RBRACKET        reduce using rule 101 (hashcontentvalue -> string .)


state 170

    (98) hashcontent -> string ASSIGN GREATER hashcontentvalue .
    (99) hashcontent -> string ASSIGN GREATER hashcontentvalue . COMMA hashcontent

    RBRACKET        reduce using rule 98 (hashcontent -> string ASSIGN GREATER hashcontentvalue .)
    COMMA           shift and go to state 183


state 171

    (100) hashcontentvalue -> factor .

    COMMA           reduce using rule 100 (hashcontentvalue -> factor .)
    RBRACKET        reduce using rule 100 (hashcontentvalue -> factor .)


state 172

    (110) estructurasControl -> FOR IDLOCAL IN factor POINT . POINT factor DO BREAK IF END
    (111) estructurasControl -> FOR IDLOCAL IN factor POINT . POINT factor DO END

    POINT           shift and go to state 184


state 173

    (51) sentenifp -> IF variables comparador term algoritmo . END
    (52) sentenifelse -> IF variables comparador term algoritmo . ELSE algoritmo END

    END             shift and go to state 185
    ELSE            shift and go to state 186


state 174

    (46) sentenWHILE -> WHILE variables comparador variables algoritmo . END

    END             shift and go to state 187


state 175

    (47) sentenWHILE -> WHILE variables comparador expression algoritmo . END

    END             shift and go to state 188


state 176

    (66) expression -> expression MINUS . term
    (71) factor -> MINUS . NUMBER
    (72) factor -> MINUS . FLOAT
    (68) term -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 189
    FLOAT           shift and go to state 190
    MINUS           shift and go to state 25

    term                           shift and go to state 86
    factor                         shift and go to state 29

state 177

    (112) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS . algoritmo RETURN IDLOCAL END
    (113) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS . algoritmo END
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (81) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (82) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (83) metodocadena -> . cadena POINT LENGTH
    (84) metodocadena -> . string POINT LENGTH
    (85) arreglo -> . ARRAY POINT NEW
    (86) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (88) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (89) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (94) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (95) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (96) hash -> . LBRACKET hashcontent RBRACKET
    (97) hash -> . HASH POINT NEW
    (110) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END
    (111) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (68) term -> . factor
    (78) cadena -> . STRING POINT NEW
    (79) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (77) string -> . STRINGV
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    algoritmo                      shift and go to state 191
    expression                     shift and go to state 128
    metodocadena                   shift and go to state 129
    arreglo                        shift and go to state 130
    metodosarreglo                 shift and go to state 131
    hash                           shift and go to state 132
    estructurasControl             shift and go to state 133
    boolean                        shift and go to state 134
    assigns                        shift and go to state 135
    sentenIF                       shift and go to state 136
    sentenifp                      shift and go to state 137
    sentenifelse                   shift and go to state 138
    variables                      shift and go to state 125
    sentenWHILE                    shift and go to state 139
    term                           shift and go to state 24
    cadena                         shift and go to state 140
    string                         shift and go to state 141
    factor                         shift and go to state 29

state 178

    (115) fcontenido -> variables COMMA . fcontenido
    (114) fcontenido -> . variables
    (115) fcontenido -> . variables COMMA fcontenido
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    variables                      shift and go to state 164
    fcontenido                     shift and go to state 192

state 179

    (94) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .

    $end            reduce using rule 94 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    END             reduce using rule 94 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    ELSE            reduce using rule 94 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    RETURN          reduce using rule 94 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)


state 180

    (79) cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 79 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 79 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    END             reduce using rule 79 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    ELSE            reduce using rule 79 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    RETURN          reduce using rule 79 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)


state 181

    (86) arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .

    POINT           reduce using rule 86 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    LSQBRACKET      reduce using rule 86 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    $end            reduce using rule 86 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    END             reduce using rule 86 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    ELSE            reduce using rule 86 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    RETURN          reduce using rule 86 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)


state 182

    (87) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA . arraycontent RPARENTHESIS
    (90) arraycontent -> . factor
    (91) arraycontent -> . string
    (92) arraycontent -> . factor COMMA arraycontent
    (93) arraycontent -> . string COMMA arraycontent
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT
    (77) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    factor                         shift and go to state 69
    arraycontent                   shift and go to state 193
    string                         shift and go to state 70

state 183

    (99) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA . hashcontent
    (98) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (99) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (77) string -> . STRINGV

    STRINGV         shift and go to state 26

    string                         shift and go to state 72
    hashcontent                    shift and go to state 194

state 184

    (110) estructurasControl -> FOR IDLOCAL IN factor POINT POINT . factor DO BREAK IF END
    (111) estructurasControl -> FOR IDLOCAL IN factor POINT POINT . factor DO END
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    factor                         shift and go to state 195

state 185

    (51) sentenifp -> IF variables comparador term algoritmo END .

    $end            reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    END             reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    ELSE            reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    RETURN          reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)


state 186

    (52) sentenifelse -> IF variables comparador term algoritmo ELSE . algoritmo END
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . term
    (73) expression -> . expression DIVISION term
    (74) expression -> . expression MOD term
    (75) expression -> . expression MULT term
    (76) expression -> . expression EXP term
    (81) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (82) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (83) metodocadena -> . cadena POINT LENGTH
    (84) metodocadena -> . string POINT LENGTH
    (85) arreglo -> . ARRAY POINT NEW
    (86) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (87) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (88) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (89) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (94) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (95) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (96) hash -> . LBRACKET hashcontent RBRACKET
    (97) hash -> . HASH POINT NEW
    (110) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END
    (111) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (68) term -> . factor
    (78) cadena -> . STRING POINT NEW
    (79) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (80) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (77) string -> . STRINGV
    (69) factor -> . NUMBER
    (70) factor -> . FLOAT
    (71) factor -> . MINUS NUMBER
    (72) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 125
    term                           shift and go to state 24
    algoritmo                      shift and go to state 196
    expression                     shift and go to state 128
    metodocadena                   shift and go to state 129
    arreglo                        shift and go to state 130
    metodosarreglo                 shift and go to state 131
    hash                           shift and go to state 132
    estructurasControl             shift and go to state 133
    boolean                        shift and go to state 134
    assigns                        shift and go to state 135
    sentenIF                       shift and go to state 136
    sentenifp                      shift and go to state 137
    sentenifelse                   shift and go to state 138
    sentenWHILE                    shift and go to state 139
    cadena                         shift and go to state 140
    string                         shift and go to state 141
    factor                         shift and go to state 29

state 187

    (46) sentenWHILE -> WHILE variables comparador variables algoritmo END .

    $end            reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    END             reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    ELSE            reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    RETURN          reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)


state 188

    (47) sentenWHILE -> WHILE variables comparador expression algoritmo END .

    $end            reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    END             reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    ELSE            reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    RETURN          reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)


state 189

    (71) factor -> MINUS NUMBER .
    (69) factor -> NUMBER .

  ! reduce/reduce conflict for PLUS resolved using rule 69 (factor -> NUMBER .)
  ! reduce/reduce conflict for MINUS resolved using rule 69 (factor -> NUMBER .)
  ! reduce/reduce conflict for DIVISION resolved using rule 69 (factor -> NUMBER .)
  ! reduce/reduce conflict for MOD resolved using rule 69 (factor -> NUMBER .)
  ! reduce/reduce conflict for MULT resolved using rule 69 (factor -> NUMBER .)
  ! reduce/reduce conflict for EXP resolved using rule 69 (factor -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 69 (factor -> NUMBER .)
    PLUS            reduce using rule 69 (factor -> NUMBER .)
    MINUS           reduce using rule 69 (factor -> NUMBER .)
    DIVISION        reduce using rule 69 (factor -> NUMBER .)
    MOD             reduce using rule 69 (factor -> NUMBER .)
    MULT            reduce using rule 69 (factor -> NUMBER .)
    EXP             reduce using rule 69 (factor -> NUMBER .)
    ARRAY           reduce using rule 69 (factor -> NUMBER .)
    LSQBRACKET      reduce using rule 69 (factor -> NUMBER .)
    LBRACKET        reduce using rule 69 (factor -> NUMBER .)
    HASH            reduce using rule 69 (factor -> NUMBER .)
    FOR             reduce using rule 69 (factor -> NUMBER .)
    TRUE            reduce using rule 69 (factor -> NUMBER .)
    FALSE           reduce using rule 69 (factor -> NUMBER .)
    NIL             reduce using rule 69 (factor -> NUMBER .)
    IF              reduce using rule 69 (factor -> NUMBER .)
    IDLOCAL         reduce using rule 69 (factor -> NUMBER .)
    IDINSTANCE      reduce using rule 69 (factor -> NUMBER .)
    IDCLASS         reduce using rule 69 (factor -> NUMBER .)
    IDGLOBAL        reduce using rule 69 (factor -> NUMBER .)
    WHILE           reduce using rule 69 (factor -> NUMBER .)
    STRING          reduce using rule 69 (factor -> NUMBER .)
    STRINGV         reduce using rule 69 (factor -> NUMBER .)
    NUMBER          reduce using rule 69 (factor -> NUMBER .)
    FLOAT           reduce using rule 69 (factor -> NUMBER .)
    END             reduce using rule 69 (factor -> NUMBER .)

  ! PLUS            [ reduce using rule 71 (factor -> MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 71 (factor -> MINUS NUMBER .) ]
  ! DIVISION        [ reduce using rule 71 (factor -> MINUS NUMBER .) ]
  ! MOD             [ reduce using rule 71 (factor -> MINUS NUMBER .) ]
  ! MULT            [ reduce using rule 71 (factor -> MINUS NUMBER .) ]
  ! EXP             [ reduce using rule 71 (factor -> MINUS NUMBER .) ]
  ! END             [ reduce using rule 71 (factor -> MINUS NUMBER .) ]


state 190

    (72) factor -> MINUS FLOAT .
    (70) factor -> FLOAT .

  ! reduce/reduce conflict for PLUS resolved using rule 70 (factor -> FLOAT .)
  ! reduce/reduce conflict for MINUS resolved using rule 70 (factor -> FLOAT .)
  ! reduce/reduce conflict for DIVISION resolved using rule 70 (factor -> FLOAT .)
  ! reduce/reduce conflict for MOD resolved using rule 70 (factor -> FLOAT .)
  ! reduce/reduce conflict for MULT resolved using rule 70 (factor -> FLOAT .)
  ! reduce/reduce conflict for EXP resolved using rule 70 (factor -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 70 (factor -> FLOAT .)
    PLUS            reduce using rule 70 (factor -> FLOAT .)
    MINUS           reduce using rule 70 (factor -> FLOAT .)
    DIVISION        reduce using rule 70 (factor -> FLOAT .)
    MOD             reduce using rule 70 (factor -> FLOAT .)
    MULT            reduce using rule 70 (factor -> FLOAT .)
    EXP             reduce using rule 70 (factor -> FLOAT .)
    ARRAY           reduce using rule 70 (factor -> FLOAT .)
    LSQBRACKET      reduce using rule 70 (factor -> FLOAT .)
    LBRACKET        reduce using rule 70 (factor -> FLOAT .)
    HASH            reduce using rule 70 (factor -> FLOAT .)
    FOR             reduce using rule 70 (factor -> FLOAT .)
    TRUE            reduce using rule 70 (factor -> FLOAT .)
    FALSE           reduce using rule 70 (factor -> FLOAT .)
    NIL             reduce using rule 70 (factor -> FLOAT .)
    IF              reduce using rule 70 (factor -> FLOAT .)
    IDLOCAL         reduce using rule 70 (factor -> FLOAT .)
    IDINSTANCE      reduce using rule 70 (factor -> FLOAT .)
    IDCLASS         reduce using rule 70 (factor -> FLOAT .)
    IDGLOBAL        reduce using rule 70 (factor -> FLOAT .)
    WHILE           reduce using rule 70 (factor -> FLOAT .)
    STRING          reduce using rule 70 (factor -> FLOAT .)
    STRINGV         reduce using rule 70 (factor -> FLOAT .)
    NUMBER          reduce using rule 70 (factor -> FLOAT .)
    FLOAT           reduce using rule 70 (factor -> FLOAT .)
    END             reduce using rule 70 (factor -> FLOAT .)

  ! PLUS            [ reduce using rule 72 (factor -> MINUS FLOAT .) ]
  ! MINUS           [ reduce using rule 72 (factor -> MINUS FLOAT .) ]
  ! DIVISION        [ reduce using rule 72 (factor -> MINUS FLOAT .) ]
  ! MOD             [ reduce using rule 72 (factor -> MINUS FLOAT .) ]
  ! MULT            [ reduce using rule 72 (factor -> MINUS FLOAT .) ]
  ! EXP             [ reduce using rule 72 (factor -> MINUS FLOAT .) ]
  ! END             [ reduce using rule 72 (factor -> MINUS FLOAT .) ]


state 191

    (112) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo . RETURN IDLOCAL END
    (113) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo . END

    RETURN          shift and go to state 197
    END             shift and go to state 198


state 192

    (115) fcontenido -> variables COMMA fcontenido .

    RPARENTHESIS    reduce using rule 115 (fcontenido -> variables COMMA fcontenido .)


state 193

    (87) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 199


state 194

    (99) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .

    RBRACKET        reduce using rule 99 (hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .)


state 195

    (110) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor . DO BREAK IF END
    (111) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor . DO END

    DO              shift and go to state 200


state 196

    (52) sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo . END

    END             shift and go to state 201


state 197

    (112) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN . IDLOCAL END

    IDLOCAL         shift and go to state 202


state 198

    (113) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END .

    $end            reduce using rule 113 (funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END .)


state 199

    (87) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .

    POINT           reduce using rule 87 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    LSQBRACKET      reduce using rule 87 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    $end            reduce using rule 87 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    END             reduce using rule 87 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    ELSE            reduce using rule 87 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    RETURN          reduce using rule 87 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)


state 200

    (110) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO . BREAK IF END
    (111) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO . END

    BREAK           shift and go to state 203
    END             shift and go to state 204


state 201

    (52) sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .

    $end            reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    END             reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    ELSE            reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    RETURN          reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)


state 202

    (112) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL . END

    END             shift and go to state 205


state 203

    (110) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO BREAK . IF END

    IF              shift and go to state 206


state 204

    (111) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO END .

    $end            reduce using rule 111 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO END .)
    END             reduce using rule 111 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO END .)
    ELSE            reduce using rule 111 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO END .)
    RETURN          reduce using rule 111 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO END .)


state 205

    (112) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END .

    $end            reduce using rule 112 (funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END .)


state 206

    (110) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF . END

    END             shift and go to state 207


state 207

    (110) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END .

    $end            reduce using rule 110 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END .)
    END             reduce using rule 110 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END .)
    ELSE            reduce using rule 110 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END .)
    RETURN          reduce using rule 110 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO BREAK IF END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 97 resolved using rule (asignar -> variables)
WARNING: rejected rule (assigns -> variables ASSIGN variables) in state 97
WARNING: reduce/reduce conflict in state 99 resolved using rule (asignar -> expression)
WARNING: rejected rule (assigns -> variables ASSIGN expression) in state 99
WARNING: reduce/reduce conflict in state 100 resolved using rule (asignar -> boolean)
WARNING: rejected rule (assigns -> variables ASSIGN boolean) in state 100
WARNING: reduce/reduce conflict in state 189 resolved using rule (factor -> NUMBER)
WARNING: rejected rule (factor -> MINUS NUMBER) in state 189
WARNING: reduce/reduce conflict in state 190 resolved using rule (factor -> FLOAT)
WARNING: rejected rule (factor -> MINUS FLOAT) in state 190
WARNING: Rule (assigns -> variables ASSIGN variables) is never reduced
WARNING: Rule (assigns -> variables ASSIGN expression) is never reduced
WARNING: Rule (assigns -> variables ASSIGN boolean) is never reduced
