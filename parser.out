Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ANDS
    BREAK
    BSLASH
    CASE
    CLASS
    COMENTARIO
    COMID
    COMIS
    COMPARE
    DEF
    DEFINED
    DO
    ELSE
    ELSIF
    END
    ENSURE
    EXP
    FOR
    GETS
    GREQUAL
    HASH
    IDENTIFIER
    IF
    IN
    LESS
    LSEQUAL
    MODULE
    NEXT
    NOT
    NOTEQUAL
    NOTS
    NUML
    OR
    ORS
    PRINT
    PUTC
    PUTS
    REDO
    RESCUE
    RETURN
    SELF
    SEMICOLON
    UNDEF
    UNTIL
    WHEN
    WHILE

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> expression
Rule 2     instrucciones -> cadena
Rule 3     instrucciones -> arreglo
Rule 4     instrucciones -> string
Rule 5     instrucciones -> hash
Rule 6     instrucciones -> boolean
Rule 7     instrucciones -> variables
Rule 8     instrucciones -> assigns
Rule 9     boolean -> TRUE
Rule 10    boolean -> FALSE
Rule 11    boolean -> NIL
Rule 12    variables -> IDLOCAL
Rule 13    variables -> IDINSTANCE
Rule 14    variables -> IDCLASS
Rule 15    variables -> IDGLOBAL
Rule 16    assigns -> variables ASSIGN expression
Rule 17    assigns -> variables ASSIGN variables
Rule 18    assigns -> variables ASSIGNPLUS expression
Rule 19    assigns -> variables ASSIGNPLUS variables
Rule 20    assigns -> variables ASSIGNMIN expression
Rule 21    assigns -> variables ASSIGNMIN variables
Rule 22    expression -> expression PLUS term
Rule 23    expression -> expression MINUS term
Rule 24    expression -> term
Rule 25    term -> factor
Rule 26    factor -> NUMBER
Rule 27    factor -> FLOAT
Rule 28    factor -> MINUS NUMBER
Rule 29    factor -> MINUS FLOAT
Rule 30    expression -> expression DIVISION term
Rule 31    expression -> expression MOD term
Rule 32    expression -> expression MULT term
Rule 33    string -> STRINGV
Rule 34    cadena -> type POINT type
Rule 35    cadena -> type POINT type LPARENTHESIS string RPARENTHESIS
Rule 36    cadena -> type LPARENTHESIS string RPARENTHESIS
Rule 37    arreglo -> type POINT type LPARENTHESIS factor RPARENTHESIS
Rule 38    arreglo -> type POINT type LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
Rule 39    arreglo -> type LSQBRACKET arraycontent RSQBRACKET
Rule 40    arraycontent -> factor
Rule 41    arraycontent -> string
Rule 42    arraycontent -> factor COMMA arraycontent
Rule 43    arraycontent -> string COMMA arraycontent
Rule 44    hash -> LBRACKET hashcontent RBRACKET
Rule 45    hashcontent -> string ASSIGN GREATER hashcontentvalue
Rule 46    hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent
Rule 47    hashcontentvalue -> factor
Rule 48    hashcontentvalue -> string
Rule 49    type -> STRING
Rule 50    type -> ARRAY
Rule 51    type -> NEW

Terminals, with rules where they appear

AND                  : 
ANDS                 : 
ARRAY                : 50
ASSIGN               : 16 17 45 46
ASSIGNMIN            : 20 21
ASSIGNPLUS           : 18 19
BREAK                : 
BSLASH               : 
CASE                 : 
CLASS                : 
COMENTARIO           : 
COMID                : 
COMIS                : 
COMMA                : 38 42 43 46
COMPARE              : 
DEF                  : 
DEFINED              : 
DIVISION             : 30
DO                   : 
ELSE                 : 
ELSIF                : 
END                  : 
ENSURE               : 
EXP                  : 
FALSE                : 10
FLOAT                : 27 29
FOR                  : 
GETS                 : 
GREATER              : 45 46
GREQUAL              : 
HASH                 : 
IDCLASS              : 14
IDENTIFIER           : 
IDGLOBAL             : 15
IDINSTANCE           : 13
IDLOCAL              : 12
IF                   : 
IN                   : 
LBRACKET             : 44
LESS                 : 
LPARENTHESIS         : 35 36 37 38
LSEQUAL              : 
LSQBRACKET           : 39
MINUS                : 23 28 29
MOD                  : 31
MODULE               : 
MULT                 : 32
NEW                  : 51
NEXT                 : 
NIL                  : 11
NOT                  : 
NOTEQUAL             : 
NOTS                 : 
NUMBER               : 26 28
NUML                 : 
OR                   : 
ORS                  : 
PLUS                 : 22
POINT                : 34 35 37 38
PRINT                : 
PUTC                 : 
PUTS                 : 
RBRACKET             : 44
REDO                 : 
RESCUE               : 
RETURN               : 
RPARENTHESIS         : 35 36 37 38
RSQBRACKET           : 39
SELF                 : 
SEMICOLON            : 
STRING               : 49
STRINGV              : 33
TRUE                 : 9
UNDEF                : 
UNTIL                : 
WHEN                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

arraycontent         : 38 39 42 43
arreglo              : 3
assigns              : 8
boolean              : 6
cadena               : 2
expression           : 1 16 18 20 22 23 30 31 32
factor               : 25 37 38 40 42 47
hash                 : 5
hashcontent          : 44 46
hashcontentvalue     : 45 46
instrucciones        : 0
string               : 4 35 36 41 43 45 46 48
term                 : 22 23 24 30 31 32
type                 : 34 34 35 35 36 37 37 38 38 39
variables            : 7 16 17 17 18 19 19 20 21 21

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . expression
    (2) instrucciones -> . cadena
    (3) instrucciones -> . arreglo
    (4) instrucciones -> . string
    (5) instrucciones -> . hash
    (6) instrucciones -> . boolean
    (7) instrucciones -> . variables
    (8) instrucciones -> . assigns
    (22) expression -> . expression PLUS term
    (23) expression -> . expression MINUS term
    (24) expression -> . term
    (30) expression -> . expression DIVISION term
    (31) expression -> . expression MOD term
    (32) expression -> . expression MULT term
    (34) cadena -> . type POINT type
    (35) cadena -> . type POINT type LPARENTHESIS string RPARENTHESIS
    (36) cadena -> . type LPARENTHESIS string RPARENTHESIS
    (37) arreglo -> . type POINT type LPARENTHESIS factor RPARENTHESIS
    (38) arreglo -> . type POINT type LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (39) arreglo -> . type LSQBRACKET arraycontent RSQBRACKET
    (33) string -> . STRINGV
    (44) hash -> . LBRACKET hashcontent RBRACKET
    (9) boolean -> . TRUE
    (10) boolean -> . FALSE
    (11) boolean -> . NIL
    (12) variables -> . IDLOCAL
    (13) variables -> . IDINSTANCE
    (14) variables -> . IDCLASS
    (15) variables -> . IDGLOBAL
    (16) assigns -> . variables ASSIGN expression
    (17) assigns -> . variables ASSIGN variables
    (18) assigns -> . variables ASSIGNPLUS expression
    (19) assigns -> . variables ASSIGNPLUS variables
    (20) assigns -> . variables ASSIGNMIN expression
    (21) assigns -> . variables ASSIGNMIN variables
    (25) term -> . factor
    (49) type -> . STRING
    (50) type -> . ARRAY
    (51) type -> . NEW
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 14
    LBRACKET        shift and go to state 15
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NIL             shift and go to state 18
    IDLOCAL         shift and go to state 19
    IDINSTANCE      shift and go to state 20
    IDCLASS         shift and go to state 21
    IDGLOBAL        shift and go to state 22
    STRING          shift and go to state 23
    ARRAY           shift and go to state 24
    NEW             shift and go to state 25
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11

    instrucciones                  shift and go to state 1
    expression                     shift and go to state 2
    cadena                         shift and go to state 3
    arreglo                        shift and go to state 4
    string                         shift and go to state 5
    hash                           shift and go to state 6
    boolean                        shift and go to state 7
    variables                      shift and go to state 8
    assigns                        shift and go to state 9
    term                           shift and go to state 10
    type                           shift and go to state 12
    factor                         shift and go to state 13

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> expression .
    (22) expression -> expression . PLUS term
    (23) expression -> expression . MINUS term
    (30) expression -> expression . DIVISION term
    (31) expression -> expression . MOD term
    (32) expression -> expression . MULT term

    $end            reduce using rule 1 (instrucciones -> expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVISION        shift and go to state 30
    MOD             shift and go to state 31
    MULT            shift and go to state 32


state 3

    (2) instrucciones -> cadena .

    $end            reduce using rule 2 (instrucciones -> cadena .)


state 4

    (3) instrucciones -> arreglo .

    $end            reduce using rule 3 (instrucciones -> arreglo .)


state 5

    (4) instrucciones -> string .

    $end            reduce using rule 4 (instrucciones -> string .)


state 6

    (5) instrucciones -> hash .

    $end            reduce using rule 5 (instrucciones -> hash .)


state 7

    (6) instrucciones -> boolean .

    $end            reduce using rule 6 (instrucciones -> boolean .)


state 8

    (7) instrucciones -> variables .
    (16) assigns -> variables . ASSIGN expression
    (17) assigns -> variables . ASSIGN variables
    (18) assigns -> variables . ASSIGNPLUS expression
    (19) assigns -> variables . ASSIGNPLUS variables
    (20) assigns -> variables . ASSIGNMIN expression
    (21) assigns -> variables . ASSIGNMIN variables

    $end            reduce using rule 7 (instrucciones -> variables .)
    ASSIGN          shift and go to state 33
    ASSIGNPLUS      shift and go to state 34
    ASSIGNMIN       shift and go to state 35


state 9

    (8) instrucciones -> assigns .

    $end            reduce using rule 8 (instrucciones -> assigns .)


state 10

    (24) expression -> term .

    PLUS            reduce using rule 24 (expression -> term .)
    MINUS           reduce using rule 24 (expression -> term .)
    DIVISION        reduce using rule 24 (expression -> term .)
    MOD             reduce using rule 24 (expression -> term .)
    MULT            reduce using rule 24 (expression -> term .)
    $end            reduce using rule 24 (expression -> term .)


state 11

    (28) factor -> MINUS . NUMBER
    (29) factor -> MINUS . FLOAT

    NUMBER          shift and go to state 36
    FLOAT           shift and go to state 37


state 12

    (34) cadena -> type . POINT type
    (35) cadena -> type . POINT type LPARENTHESIS string RPARENTHESIS
    (36) cadena -> type . LPARENTHESIS string RPARENTHESIS
    (37) arreglo -> type . POINT type LPARENTHESIS factor RPARENTHESIS
    (38) arreglo -> type . POINT type LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (39) arreglo -> type . LSQBRACKET arraycontent RSQBRACKET

    POINT           shift and go to state 38
    LPARENTHESIS    shift and go to state 39
    LSQBRACKET      shift and go to state 40


state 13

    (25) term -> factor .

    PLUS            reduce using rule 25 (term -> factor .)
    MINUS           reduce using rule 25 (term -> factor .)
    DIVISION        reduce using rule 25 (term -> factor .)
    MOD             reduce using rule 25 (term -> factor .)
    MULT            reduce using rule 25 (term -> factor .)
    $end            reduce using rule 25 (term -> factor .)


state 14

    (33) string -> STRINGV .

    $end            reduce using rule 33 (string -> STRINGV .)
    ASSIGN          reduce using rule 33 (string -> STRINGV .)
    RPARENTHESIS    reduce using rule 33 (string -> STRINGV .)
    COMMA           reduce using rule 33 (string -> STRINGV .)
    RSQBRACKET      reduce using rule 33 (string -> STRINGV .)
    RBRACKET        reduce using rule 33 (string -> STRINGV .)


state 15

    (44) hash -> LBRACKET . hashcontent RBRACKET
    (45) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (46) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (33) string -> . STRINGV

    STRINGV         shift and go to state 14

    hashcontent                    shift and go to state 41
    string                         shift and go to state 42

state 16

    (9) boolean -> TRUE .

    $end            reduce using rule 9 (boolean -> TRUE .)


state 17

    (10) boolean -> FALSE .

    $end            reduce using rule 10 (boolean -> FALSE .)


state 18

    (11) boolean -> NIL .

    $end            reduce using rule 11 (boolean -> NIL .)


state 19

    (12) variables -> IDLOCAL .

    ASSIGN          reduce using rule 12 (variables -> IDLOCAL .)
    ASSIGNPLUS      reduce using rule 12 (variables -> IDLOCAL .)
    ASSIGNMIN       reduce using rule 12 (variables -> IDLOCAL .)
    $end            reduce using rule 12 (variables -> IDLOCAL .)


state 20

    (13) variables -> IDINSTANCE .

    ASSIGN          reduce using rule 13 (variables -> IDINSTANCE .)
    ASSIGNPLUS      reduce using rule 13 (variables -> IDINSTANCE .)
    ASSIGNMIN       reduce using rule 13 (variables -> IDINSTANCE .)
    $end            reduce using rule 13 (variables -> IDINSTANCE .)


state 21

    (14) variables -> IDCLASS .

    ASSIGN          reduce using rule 14 (variables -> IDCLASS .)
    ASSIGNPLUS      reduce using rule 14 (variables -> IDCLASS .)
    ASSIGNMIN       reduce using rule 14 (variables -> IDCLASS .)
    $end            reduce using rule 14 (variables -> IDCLASS .)


state 22

    (15) variables -> IDGLOBAL .

    ASSIGN          reduce using rule 15 (variables -> IDGLOBAL .)
    ASSIGNPLUS      reduce using rule 15 (variables -> IDGLOBAL .)
    ASSIGNMIN       reduce using rule 15 (variables -> IDGLOBAL .)
    $end            reduce using rule 15 (variables -> IDGLOBAL .)


state 23

    (49) type -> STRING .

    POINT           reduce using rule 49 (type -> STRING .)
    LPARENTHESIS    reduce using rule 49 (type -> STRING .)
    LSQBRACKET      reduce using rule 49 (type -> STRING .)
    $end            reduce using rule 49 (type -> STRING .)


state 24

    (50) type -> ARRAY .

    POINT           reduce using rule 50 (type -> ARRAY .)
    LPARENTHESIS    reduce using rule 50 (type -> ARRAY .)
    LSQBRACKET      reduce using rule 50 (type -> ARRAY .)
    $end            reduce using rule 50 (type -> ARRAY .)


state 25

    (51) type -> NEW .

    POINT           reduce using rule 51 (type -> NEW .)
    LPARENTHESIS    reduce using rule 51 (type -> NEW .)
    LSQBRACKET      reduce using rule 51 (type -> NEW .)
    $end            reduce using rule 51 (type -> NEW .)


state 26

    (26) factor -> NUMBER .

    PLUS            reduce using rule 26 (factor -> NUMBER .)
    MINUS           reduce using rule 26 (factor -> NUMBER .)
    DIVISION        reduce using rule 26 (factor -> NUMBER .)
    MOD             reduce using rule 26 (factor -> NUMBER .)
    MULT            reduce using rule 26 (factor -> NUMBER .)
    $end            reduce using rule 26 (factor -> NUMBER .)
    COMMA           reduce using rule 26 (factor -> NUMBER .)
    RSQBRACKET      reduce using rule 26 (factor -> NUMBER .)
    RPARENTHESIS    reduce using rule 26 (factor -> NUMBER .)
    RBRACKET        reduce using rule 26 (factor -> NUMBER .)


state 27

    (27) factor -> FLOAT .

    PLUS            reduce using rule 27 (factor -> FLOAT .)
    MINUS           reduce using rule 27 (factor -> FLOAT .)
    DIVISION        reduce using rule 27 (factor -> FLOAT .)
    MOD             reduce using rule 27 (factor -> FLOAT .)
    MULT            reduce using rule 27 (factor -> FLOAT .)
    $end            reduce using rule 27 (factor -> FLOAT .)
    COMMA           reduce using rule 27 (factor -> FLOAT .)
    RSQBRACKET      reduce using rule 27 (factor -> FLOAT .)
    RPARENTHESIS    reduce using rule 27 (factor -> FLOAT .)
    RBRACKET        reduce using rule 27 (factor -> FLOAT .)


state 28

    (22) expression -> expression PLUS . term
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11

    term                           shift and go to state 43
    factor                         shift and go to state 13

state 29

    (23) expression -> expression MINUS . term
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11

    term                           shift and go to state 44
    factor                         shift and go to state 13

state 30

    (30) expression -> expression DIVISION . term
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11

    term                           shift and go to state 45
    factor                         shift and go to state 13

state 31

    (31) expression -> expression MOD . term
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11

    term                           shift and go to state 46
    factor                         shift and go to state 13

state 32

    (32) expression -> expression MULT . term
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11

    term                           shift and go to state 47
    factor                         shift and go to state 13

state 33

    (16) assigns -> variables ASSIGN . expression
    (17) assigns -> variables ASSIGN . variables
    (22) expression -> . expression PLUS term
    (23) expression -> . expression MINUS term
    (24) expression -> . term
    (30) expression -> . expression DIVISION term
    (31) expression -> . expression MOD term
    (32) expression -> . expression MULT term
    (12) variables -> . IDLOCAL
    (13) variables -> . IDINSTANCE
    (14) variables -> . IDCLASS
    (15) variables -> . IDGLOBAL
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 19
    IDINSTANCE      shift and go to state 20
    IDCLASS         shift and go to state 21
    IDGLOBAL        shift and go to state 22
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11

    variables                      shift and go to state 48
    expression                     shift and go to state 49
    term                           shift and go to state 10
    factor                         shift and go to state 13

state 34

    (18) assigns -> variables ASSIGNPLUS . expression
    (19) assigns -> variables ASSIGNPLUS . variables
    (22) expression -> . expression PLUS term
    (23) expression -> . expression MINUS term
    (24) expression -> . term
    (30) expression -> . expression DIVISION term
    (31) expression -> . expression MOD term
    (32) expression -> . expression MULT term
    (12) variables -> . IDLOCAL
    (13) variables -> . IDINSTANCE
    (14) variables -> . IDCLASS
    (15) variables -> . IDGLOBAL
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 19
    IDINSTANCE      shift and go to state 20
    IDCLASS         shift and go to state 21
    IDGLOBAL        shift and go to state 22
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11

    variables                      shift and go to state 50
    expression                     shift and go to state 51
    term                           shift and go to state 10
    factor                         shift and go to state 13

state 35

    (20) assigns -> variables ASSIGNMIN . expression
    (21) assigns -> variables ASSIGNMIN . variables
    (22) expression -> . expression PLUS term
    (23) expression -> . expression MINUS term
    (24) expression -> . term
    (30) expression -> . expression DIVISION term
    (31) expression -> . expression MOD term
    (32) expression -> . expression MULT term
    (12) variables -> . IDLOCAL
    (13) variables -> . IDINSTANCE
    (14) variables -> . IDCLASS
    (15) variables -> . IDGLOBAL
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 19
    IDINSTANCE      shift and go to state 20
    IDCLASS         shift and go to state 21
    IDGLOBAL        shift and go to state 22
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11

    variables                      shift and go to state 52
    expression                     shift and go to state 53
    term                           shift and go to state 10
    factor                         shift and go to state 13

state 36

    (28) factor -> MINUS NUMBER .

    PLUS            reduce using rule 28 (factor -> MINUS NUMBER .)
    MINUS           reduce using rule 28 (factor -> MINUS NUMBER .)
    DIVISION        reduce using rule 28 (factor -> MINUS NUMBER .)
    MOD             reduce using rule 28 (factor -> MINUS NUMBER .)
    MULT            reduce using rule 28 (factor -> MINUS NUMBER .)
    $end            reduce using rule 28 (factor -> MINUS NUMBER .)
    COMMA           reduce using rule 28 (factor -> MINUS NUMBER .)
    RSQBRACKET      reduce using rule 28 (factor -> MINUS NUMBER .)
    RPARENTHESIS    reduce using rule 28 (factor -> MINUS NUMBER .)
    RBRACKET        reduce using rule 28 (factor -> MINUS NUMBER .)


state 37

    (29) factor -> MINUS FLOAT .

    PLUS            reduce using rule 29 (factor -> MINUS FLOAT .)
    MINUS           reduce using rule 29 (factor -> MINUS FLOAT .)
    DIVISION        reduce using rule 29 (factor -> MINUS FLOAT .)
    MOD             reduce using rule 29 (factor -> MINUS FLOAT .)
    MULT            reduce using rule 29 (factor -> MINUS FLOAT .)
    $end            reduce using rule 29 (factor -> MINUS FLOAT .)
    COMMA           reduce using rule 29 (factor -> MINUS FLOAT .)
    RSQBRACKET      reduce using rule 29 (factor -> MINUS FLOAT .)
    RPARENTHESIS    reduce using rule 29 (factor -> MINUS FLOAT .)
    RBRACKET        reduce using rule 29 (factor -> MINUS FLOAT .)


state 38

    (34) cadena -> type POINT . type
    (35) cadena -> type POINT . type LPARENTHESIS string RPARENTHESIS
    (37) arreglo -> type POINT . type LPARENTHESIS factor RPARENTHESIS
    (38) arreglo -> type POINT . type LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (49) type -> . STRING
    (50) type -> . ARRAY
    (51) type -> . NEW

    STRING          shift and go to state 23
    ARRAY           shift and go to state 24
    NEW             shift and go to state 25

    type                           shift and go to state 54

state 39

    (36) cadena -> type LPARENTHESIS . string RPARENTHESIS
    (33) string -> . STRINGV

    STRINGV         shift and go to state 14

    string                         shift and go to state 55

state 40

    (39) arreglo -> type LSQBRACKET . arraycontent RSQBRACKET
    (40) arraycontent -> . factor
    (41) arraycontent -> . string
    (42) arraycontent -> . factor COMMA arraycontent
    (43) arraycontent -> . string COMMA arraycontent
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT
    (33) string -> . STRINGV

    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11
    STRINGV         shift and go to state 14

    arraycontent                   shift and go to state 56
    factor                         shift and go to state 57
    string                         shift and go to state 58

state 41

    (44) hash -> LBRACKET hashcontent . RBRACKET

    RBRACKET        shift and go to state 59


state 42

    (45) hashcontent -> string . ASSIGN GREATER hashcontentvalue
    (46) hashcontent -> string . ASSIGN GREATER hashcontentvalue COMMA hashcontent

    ASSIGN          shift and go to state 60


state 43

    (22) expression -> expression PLUS term .

    PLUS            reduce using rule 22 (expression -> expression PLUS term .)
    MINUS           reduce using rule 22 (expression -> expression PLUS term .)
    DIVISION        reduce using rule 22 (expression -> expression PLUS term .)
    MOD             reduce using rule 22 (expression -> expression PLUS term .)
    MULT            reduce using rule 22 (expression -> expression PLUS term .)
    $end            reduce using rule 22 (expression -> expression PLUS term .)


state 44

    (23) expression -> expression MINUS term .

    PLUS            reduce using rule 23 (expression -> expression MINUS term .)
    MINUS           reduce using rule 23 (expression -> expression MINUS term .)
    DIVISION        reduce using rule 23 (expression -> expression MINUS term .)
    MOD             reduce using rule 23 (expression -> expression MINUS term .)
    MULT            reduce using rule 23 (expression -> expression MINUS term .)
    $end            reduce using rule 23 (expression -> expression MINUS term .)


state 45

    (30) expression -> expression DIVISION term .

    PLUS            reduce using rule 30 (expression -> expression DIVISION term .)
    MINUS           reduce using rule 30 (expression -> expression DIVISION term .)
    DIVISION        reduce using rule 30 (expression -> expression DIVISION term .)
    MOD             reduce using rule 30 (expression -> expression DIVISION term .)
    MULT            reduce using rule 30 (expression -> expression DIVISION term .)
    $end            reduce using rule 30 (expression -> expression DIVISION term .)


state 46

    (31) expression -> expression MOD term .

    PLUS            reduce using rule 31 (expression -> expression MOD term .)
    MINUS           reduce using rule 31 (expression -> expression MOD term .)
    DIVISION        reduce using rule 31 (expression -> expression MOD term .)
    MOD             reduce using rule 31 (expression -> expression MOD term .)
    MULT            reduce using rule 31 (expression -> expression MOD term .)
    $end            reduce using rule 31 (expression -> expression MOD term .)


state 47

    (32) expression -> expression MULT term .

    PLUS            reduce using rule 32 (expression -> expression MULT term .)
    MINUS           reduce using rule 32 (expression -> expression MULT term .)
    DIVISION        reduce using rule 32 (expression -> expression MULT term .)
    MOD             reduce using rule 32 (expression -> expression MULT term .)
    MULT            reduce using rule 32 (expression -> expression MULT term .)
    $end            reduce using rule 32 (expression -> expression MULT term .)


state 48

    (17) assigns -> variables ASSIGN variables .

    $end            reduce using rule 17 (assigns -> variables ASSIGN variables .)


state 49

    (16) assigns -> variables ASSIGN expression .
    (22) expression -> expression . PLUS term
    (23) expression -> expression . MINUS term
    (30) expression -> expression . DIVISION term
    (31) expression -> expression . MOD term
    (32) expression -> expression . MULT term

    $end            reduce using rule 16 (assigns -> variables ASSIGN expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVISION        shift and go to state 30
    MOD             shift and go to state 31
    MULT            shift and go to state 32


state 50

    (19) assigns -> variables ASSIGNPLUS variables .

    $end            reduce using rule 19 (assigns -> variables ASSIGNPLUS variables .)


state 51

    (18) assigns -> variables ASSIGNPLUS expression .
    (22) expression -> expression . PLUS term
    (23) expression -> expression . MINUS term
    (30) expression -> expression . DIVISION term
    (31) expression -> expression . MOD term
    (32) expression -> expression . MULT term

    $end            reduce using rule 18 (assigns -> variables ASSIGNPLUS expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVISION        shift and go to state 30
    MOD             shift and go to state 31
    MULT            shift and go to state 32


state 52

    (21) assigns -> variables ASSIGNMIN variables .

    $end            reduce using rule 21 (assigns -> variables ASSIGNMIN variables .)


state 53

    (20) assigns -> variables ASSIGNMIN expression .
    (22) expression -> expression . PLUS term
    (23) expression -> expression . MINUS term
    (30) expression -> expression . DIVISION term
    (31) expression -> expression . MOD term
    (32) expression -> expression . MULT term

    $end            reduce using rule 20 (assigns -> variables ASSIGNMIN expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVISION        shift and go to state 30
    MOD             shift and go to state 31
    MULT            shift and go to state 32


state 54

    (34) cadena -> type POINT type .
    (35) cadena -> type POINT type . LPARENTHESIS string RPARENTHESIS
    (37) arreglo -> type POINT type . LPARENTHESIS factor RPARENTHESIS
    (38) arreglo -> type POINT type . LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    $end            reduce using rule 34 (cadena -> type POINT type .)
    LPARENTHESIS    shift and go to state 61


state 55

    (36) cadena -> type LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 62


state 56

    (39) arreglo -> type LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 63


state 57

    (40) arraycontent -> factor .
    (42) arraycontent -> factor . COMMA arraycontent

    RSQBRACKET      reduce using rule 40 (arraycontent -> factor .)
    RPARENTHESIS    reduce using rule 40 (arraycontent -> factor .)
    COMMA           shift and go to state 64


state 58

    (41) arraycontent -> string .
    (43) arraycontent -> string . COMMA arraycontent

    RSQBRACKET      reduce using rule 41 (arraycontent -> string .)
    RPARENTHESIS    reduce using rule 41 (arraycontent -> string .)
    COMMA           shift and go to state 65


state 59

    (44) hash -> LBRACKET hashcontent RBRACKET .

    $end            reduce using rule 44 (hash -> LBRACKET hashcontent RBRACKET .)


state 60

    (45) hashcontent -> string ASSIGN . GREATER hashcontentvalue
    (46) hashcontent -> string ASSIGN . GREATER hashcontentvalue COMMA hashcontent

    GREATER         shift and go to state 66


state 61

    (35) cadena -> type POINT type LPARENTHESIS . string RPARENTHESIS
    (37) arreglo -> type POINT type LPARENTHESIS . factor RPARENTHESIS
    (38) arreglo -> type POINT type LPARENTHESIS . factor COMMA arraycontent RPARENTHESIS
    (33) string -> . STRINGV
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 14
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11

    string                         shift and go to state 67
    factor                         shift and go to state 68

state 62

    (36) cadena -> type LPARENTHESIS string RPARENTHESIS .

    $end            reduce using rule 36 (cadena -> type LPARENTHESIS string RPARENTHESIS .)


state 63

    (39) arreglo -> type LSQBRACKET arraycontent RSQBRACKET .

    $end            reduce using rule 39 (arreglo -> type LSQBRACKET arraycontent RSQBRACKET .)


state 64

    (42) arraycontent -> factor COMMA . arraycontent
    (40) arraycontent -> . factor
    (41) arraycontent -> . string
    (42) arraycontent -> . factor COMMA arraycontent
    (43) arraycontent -> . string COMMA arraycontent
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT
    (33) string -> . STRINGV

    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11
    STRINGV         shift and go to state 14

    factor                         shift and go to state 57
    arraycontent                   shift and go to state 69
    string                         shift and go to state 58

state 65

    (43) arraycontent -> string COMMA . arraycontent
    (40) arraycontent -> . factor
    (41) arraycontent -> . string
    (42) arraycontent -> . factor COMMA arraycontent
    (43) arraycontent -> . string COMMA arraycontent
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT
    (33) string -> . STRINGV

    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11
    STRINGV         shift and go to state 14

    string                         shift and go to state 58
    arraycontent                   shift and go to state 70
    factor                         shift and go to state 57

state 66

    (45) hashcontent -> string ASSIGN GREATER . hashcontentvalue
    (46) hashcontent -> string ASSIGN GREATER . hashcontentvalue COMMA hashcontent
    (47) hashcontentvalue -> . factor
    (48) hashcontentvalue -> . string
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT
    (33) string -> . STRINGV

    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11
    STRINGV         shift and go to state 14

    string                         shift and go to state 71
    hashcontentvalue               shift and go to state 72
    factor                         shift and go to state 73

state 67

    (35) cadena -> type POINT type LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 74


state 68

    (37) arreglo -> type POINT type LPARENTHESIS factor . RPARENTHESIS
    (38) arreglo -> type POINT type LPARENTHESIS factor . COMMA arraycontent RPARENTHESIS

    RPARENTHESIS    shift and go to state 75
    COMMA           shift and go to state 76


state 69

    (42) arraycontent -> factor COMMA arraycontent .

    RSQBRACKET      reduce using rule 42 (arraycontent -> factor COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 42 (arraycontent -> factor COMMA arraycontent .)


state 70

    (43) arraycontent -> string COMMA arraycontent .

    RSQBRACKET      reduce using rule 43 (arraycontent -> string COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 43 (arraycontent -> string COMMA arraycontent .)


state 71

    (48) hashcontentvalue -> string .

    COMMA           reduce using rule 48 (hashcontentvalue -> string .)
    RBRACKET        reduce using rule 48 (hashcontentvalue -> string .)


state 72

    (45) hashcontent -> string ASSIGN GREATER hashcontentvalue .
    (46) hashcontent -> string ASSIGN GREATER hashcontentvalue . COMMA hashcontent

    RBRACKET        reduce using rule 45 (hashcontent -> string ASSIGN GREATER hashcontentvalue .)
    COMMA           shift and go to state 77


state 73

    (47) hashcontentvalue -> factor .

    COMMA           reduce using rule 47 (hashcontentvalue -> factor .)
    RBRACKET        reduce using rule 47 (hashcontentvalue -> factor .)


state 74

    (35) cadena -> type POINT type LPARENTHESIS string RPARENTHESIS .

    $end            reduce using rule 35 (cadena -> type POINT type LPARENTHESIS string RPARENTHESIS .)


state 75

    (37) arreglo -> type POINT type LPARENTHESIS factor RPARENTHESIS .

    $end            reduce using rule 37 (arreglo -> type POINT type LPARENTHESIS factor RPARENTHESIS .)


state 76

    (38) arreglo -> type POINT type LPARENTHESIS factor COMMA . arraycontent RPARENTHESIS
    (40) arraycontent -> . factor
    (41) arraycontent -> . string
    (42) arraycontent -> . factor COMMA arraycontent
    (43) arraycontent -> . string COMMA arraycontent
    (26) factor -> . NUMBER
    (27) factor -> . FLOAT
    (28) factor -> . MINUS NUMBER
    (29) factor -> . MINUS FLOAT
    (33) string -> . STRINGV

    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    MINUS           shift and go to state 11
    STRINGV         shift and go to state 14

    factor                         shift and go to state 57
    arraycontent                   shift and go to state 78
    string                         shift and go to state 58

state 77

    (46) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA . hashcontent
    (45) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (46) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (33) string -> . STRINGV

    STRINGV         shift and go to state 14

    string                         shift and go to state 42
    hashcontent                    shift and go to state 79

state 78

    (38) arreglo -> type POINT type LPARENTHESIS factor COMMA arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 80


state 79

    (46) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .

    RBRACKET        reduce using rule 46 (hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .)


state 80

    (38) arreglo -> type POINT type LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .

    $end            reduce using rule 38 (arreglo -> type POINT type LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)

