Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ANDS
    ASSIGNMIN
    ASSIGNPLUS
    BREAK
    BSLASH
    CASE
    CLASS
    COMENTARIO
    COMID
    COMIS
    COMPARE
    DEF
    DEFINED
    DIVISION
    DO
    ELSE
    ELSIF
    END
    ENSURE
    EXP
    FOR
    GETS
    GREQUAL
    HASH
    IDCLASS
    IDENTIFIER
    IDGLOBAL
    IDINSTANCE
    IDLOCAL
    IF
    IN
    LESS
    LSEQUAL
    MOD
    MODULE
    MULT
    NEXT
    NOT
    NOTEQUAL
    NOTS
    NUML
    OR
    ORS
    PRINT
    PUTC
    PUTS
    REDO
    RESCUE
    RETURN
    SELF
    SEMICOLON
    UNDEF
    UNTIL
    WHEN
    WHILE

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> expression
Rule 2     instrucciones -> cadena
Rule 3     instrucciones -> arreglo
Rule 4     instrucciones -> string
Rule 5     instrucciones -> hash
Rule 6     instrucciones -> boolean
Rule 7     boolean -> TRUE
Rule 8     boolean -> FALSE
Rule 9     boolean -> NIL
Rule 10    expression -> expression PLUS term
Rule 11    expression -> expression MINUS term
Rule 12    expression -> term
Rule 13    term -> factor
Rule 14    factor -> NUMBER
Rule 15    factor -> FLOAT
Rule 16    factor -> MINUS NUMBER
Rule 17    factor -> MINUS FLOAT
Rule 18    string -> STRINGV
Rule 19    cadena -> type POINT type
Rule 20    cadena -> type POINT type LPARENTHESIS string RPARENTHESIS
Rule 21    cadena -> type LPARENTHESIS string RPARENTHESIS
Rule 22    arreglo -> type POINT type LPARENTHESIS factor RPARENTHESIS
Rule 23    arreglo -> type POINT type LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
Rule 24    arreglo -> type LSQBRACKET arraycontent RSQBRACKET
Rule 25    arraycontent -> factor
Rule 26    arraycontent -> string
Rule 27    arraycontent -> factor COMMA arraycontent
Rule 28    arraycontent -> string COMMA arraycontent
Rule 29    hash -> LBRACKET hashcontent RBRACKET
Rule 30    hashcontent -> string ASSIGN GREATER hashcontentvalue
Rule 31    hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent
Rule 32    hashcontentvalue -> factor
Rule 33    hashcontentvalue -> string
Rule 34    type -> STRING
Rule 35    type -> ARRAY
Rule 36    type -> NEW

Terminals, with rules where they appear

AND                  : 
ANDS                 : 
ARRAY                : 35
ASSIGN               : 30 31
ASSIGNMIN            : 
ASSIGNPLUS           : 
BREAK                : 
BSLASH               : 
CASE                 : 
CLASS                : 
COMENTARIO           : 
COMID                : 
COMIS                : 
COMMA                : 23 27 28 31
COMPARE              : 
DEF                  : 
DEFINED              : 
DIVISION             : 
DO                   : 
ELSE                 : 
ELSIF                : 
END                  : 
ENSURE               : 
EXP                  : 
FALSE                : 8
FLOAT                : 15 17
FOR                  : 
GETS                 : 
GREATER              : 30 31
GREQUAL              : 
HASH                 : 
IDCLASS              : 
IDENTIFIER           : 
IDGLOBAL             : 
IDINSTANCE           : 
IDLOCAL              : 
IF                   : 
IN                   : 
LBRACKET             : 29
LESS                 : 
LPARENTHESIS         : 20 21 22 23
LSEQUAL              : 
LSQBRACKET           : 24
MINUS                : 11 16 17
MOD                  : 
MODULE               : 
MULT                 : 
NEW                  : 36
NEXT                 : 
NIL                  : 9
NOT                  : 
NOTEQUAL             : 
NOTS                 : 
NUMBER               : 14 16
NUML                 : 
OR                   : 
ORS                  : 
PLUS                 : 10
POINT                : 19 20 22 23
PRINT                : 
PUTC                 : 
PUTS                 : 
RBRACKET             : 29
REDO                 : 
RESCUE               : 
RETURN               : 
RPARENTHESIS         : 20 21 22 23
RSQBRACKET           : 24
SELF                 : 
SEMICOLON            : 
STRING               : 34
STRINGV              : 18
TRUE                 : 7
UNDEF                : 
UNTIL                : 
WHEN                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

arraycontent         : 23 24 27 28
arreglo              : 3
boolean              : 6
cadena               : 2
expression           : 1 10 11
factor               : 13 22 23 25 27 32
hash                 : 5
hashcontent          : 29 31
hashcontentvalue     : 30 31
instrucciones        : 0
string               : 4 20 21 26 28 30 31 33
term                 : 10 11 12
type                 : 19 19 20 20 21 22 22 23 23 24

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . expression
    (2) instrucciones -> . cadena
    (3) instrucciones -> . arreglo
    (4) instrucciones -> . string
    (5) instrucciones -> . hash
    (6) instrucciones -> . boolean
    (10) expression -> . expression PLUS term
    (11) expression -> . expression MINUS term
    (12) expression -> . term
    (19) cadena -> . type POINT type
    (20) cadena -> . type POINT type LPARENTHESIS string RPARENTHESIS
    (21) cadena -> . type LPARENTHESIS string RPARENTHESIS
    (22) arreglo -> . type POINT type LPARENTHESIS factor RPARENTHESIS
    (23) arreglo -> . type POINT type LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (24) arreglo -> . type LSQBRACKET arraycontent RSQBRACKET
    (18) string -> . STRINGV
    (29) hash -> . LBRACKET hashcontent RBRACKET
    (7) boolean -> . TRUE
    (8) boolean -> . FALSE
    (9) boolean -> . NIL
    (13) term -> . factor
    (34) type -> . STRING
    (35) type -> . ARRAY
    (36) type -> . NEW
    (14) factor -> . NUMBER
    (15) factor -> . FLOAT
    (16) factor -> . MINUS NUMBER
    (17) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 12
    LBRACKET        shift and go to state 13
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    NIL             shift and go to state 16
    STRING          shift and go to state 17
    ARRAY           shift and go to state 18
    NEW             shift and go to state 19
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    MINUS           shift and go to state 9

    instrucciones                  shift and go to state 1
    expression                     shift and go to state 2
    cadena                         shift and go to state 3
    arreglo                        shift and go to state 4
    string                         shift and go to state 5
    hash                           shift and go to state 6
    boolean                        shift and go to state 7
    term                           shift and go to state 8
    type                           shift and go to state 10
    factor                         shift and go to state 11

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> expression .
    (10) expression -> expression . PLUS term
    (11) expression -> expression . MINUS term

    $end            reduce using rule 1 (instrucciones -> expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 3

    (2) instrucciones -> cadena .

    $end            reduce using rule 2 (instrucciones -> cadena .)


state 4

    (3) instrucciones -> arreglo .

    $end            reduce using rule 3 (instrucciones -> arreglo .)


state 5

    (4) instrucciones -> string .

    $end            reduce using rule 4 (instrucciones -> string .)


state 6

    (5) instrucciones -> hash .

    $end            reduce using rule 5 (instrucciones -> hash .)


state 7

    (6) instrucciones -> boolean .

    $end            reduce using rule 6 (instrucciones -> boolean .)


state 8

    (12) expression -> term .

    PLUS            reduce using rule 12 (expression -> term .)
    MINUS           reduce using rule 12 (expression -> term .)
    $end            reduce using rule 12 (expression -> term .)


state 9

    (16) factor -> MINUS . NUMBER
    (17) factor -> MINUS . FLOAT

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25


state 10

    (19) cadena -> type . POINT type
    (20) cadena -> type . POINT type LPARENTHESIS string RPARENTHESIS
    (21) cadena -> type . LPARENTHESIS string RPARENTHESIS
    (22) arreglo -> type . POINT type LPARENTHESIS factor RPARENTHESIS
    (23) arreglo -> type . POINT type LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (24) arreglo -> type . LSQBRACKET arraycontent RSQBRACKET

    POINT           shift and go to state 26
    LPARENTHESIS    shift and go to state 27
    LSQBRACKET      shift and go to state 28


state 11

    (13) term -> factor .

    PLUS            reduce using rule 13 (term -> factor .)
    MINUS           reduce using rule 13 (term -> factor .)
    $end            reduce using rule 13 (term -> factor .)


state 12

    (18) string -> STRINGV .

    $end            reduce using rule 18 (string -> STRINGV .)
    ASSIGN          reduce using rule 18 (string -> STRINGV .)
    RPARENTHESIS    reduce using rule 18 (string -> STRINGV .)
    COMMA           reduce using rule 18 (string -> STRINGV .)
    RSQBRACKET      reduce using rule 18 (string -> STRINGV .)
    RBRACKET        reduce using rule 18 (string -> STRINGV .)


state 13

    (29) hash -> LBRACKET . hashcontent RBRACKET
    (30) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (31) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (18) string -> . STRINGV

    STRINGV         shift and go to state 12

    hashcontent                    shift and go to state 29
    string                         shift and go to state 30

state 14

    (7) boolean -> TRUE .

    $end            reduce using rule 7 (boolean -> TRUE .)


state 15

    (8) boolean -> FALSE .

    $end            reduce using rule 8 (boolean -> FALSE .)


state 16

    (9) boolean -> NIL .

    $end            reduce using rule 9 (boolean -> NIL .)


state 17

    (34) type -> STRING .

    POINT           reduce using rule 34 (type -> STRING .)
    LPARENTHESIS    reduce using rule 34 (type -> STRING .)
    LSQBRACKET      reduce using rule 34 (type -> STRING .)
    $end            reduce using rule 34 (type -> STRING .)


state 18

    (35) type -> ARRAY .

    POINT           reduce using rule 35 (type -> ARRAY .)
    LPARENTHESIS    reduce using rule 35 (type -> ARRAY .)
    LSQBRACKET      reduce using rule 35 (type -> ARRAY .)
    $end            reduce using rule 35 (type -> ARRAY .)


state 19

    (36) type -> NEW .

    POINT           reduce using rule 36 (type -> NEW .)
    LPARENTHESIS    reduce using rule 36 (type -> NEW .)
    LSQBRACKET      reduce using rule 36 (type -> NEW .)
    $end            reduce using rule 36 (type -> NEW .)


state 20

    (14) factor -> NUMBER .

    PLUS            reduce using rule 14 (factor -> NUMBER .)
    MINUS           reduce using rule 14 (factor -> NUMBER .)
    $end            reduce using rule 14 (factor -> NUMBER .)
    COMMA           reduce using rule 14 (factor -> NUMBER .)
    RSQBRACKET      reduce using rule 14 (factor -> NUMBER .)
    RPARENTHESIS    reduce using rule 14 (factor -> NUMBER .)
    RBRACKET        reduce using rule 14 (factor -> NUMBER .)


state 21

    (15) factor -> FLOAT .

    PLUS            reduce using rule 15 (factor -> FLOAT .)
    MINUS           reduce using rule 15 (factor -> FLOAT .)
    $end            reduce using rule 15 (factor -> FLOAT .)
    COMMA           reduce using rule 15 (factor -> FLOAT .)
    RSQBRACKET      reduce using rule 15 (factor -> FLOAT .)
    RPARENTHESIS    reduce using rule 15 (factor -> FLOAT .)
    RBRACKET        reduce using rule 15 (factor -> FLOAT .)


state 22

    (10) expression -> expression PLUS . term
    (13) term -> . factor
    (14) factor -> . NUMBER
    (15) factor -> . FLOAT
    (16) factor -> . MINUS NUMBER
    (17) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    MINUS           shift and go to state 9

    term                           shift and go to state 31
    factor                         shift and go to state 11

state 23

    (11) expression -> expression MINUS . term
    (13) term -> . factor
    (14) factor -> . NUMBER
    (15) factor -> . FLOAT
    (16) factor -> . MINUS NUMBER
    (17) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    MINUS           shift and go to state 9

    term                           shift and go to state 32
    factor                         shift and go to state 11

state 24

    (16) factor -> MINUS NUMBER .

    PLUS            reduce using rule 16 (factor -> MINUS NUMBER .)
    MINUS           reduce using rule 16 (factor -> MINUS NUMBER .)
    $end            reduce using rule 16 (factor -> MINUS NUMBER .)
    COMMA           reduce using rule 16 (factor -> MINUS NUMBER .)
    RSQBRACKET      reduce using rule 16 (factor -> MINUS NUMBER .)
    RPARENTHESIS    reduce using rule 16 (factor -> MINUS NUMBER .)
    RBRACKET        reduce using rule 16 (factor -> MINUS NUMBER .)


state 25

    (17) factor -> MINUS FLOAT .

    PLUS            reduce using rule 17 (factor -> MINUS FLOAT .)
    MINUS           reduce using rule 17 (factor -> MINUS FLOAT .)
    $end            reduce using rule 17 (factor -> MINUS FLOAT .)
    COMMA           reduce using rule 17 (factor -> MINUS FLOAT .)
    RSQBRACKET      reduce using rule 17 (factor -> MINUS FLOAT .)
    RPARENTHESIS    reduce using rule 17 (factor -> MINUS FLOAT .)
    RBRACKET        reduce using rule 17 (factor -> MINUS FLOAT .)


state 26

    (19) cadena -> type POINT . type
    (20) cadena -> type POINT . type LPARENTHESIS string RPARENTHESIS
    (22) arreglo -> type POINT . type LPARENTHESIS factor RPARENTHESIS
    (23) arreglo -> type POINT . type LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (34) type -> . STRING
    (35) type -> . ARRAY
    (36) type -> . NEW

    STRING          shift and go to state 17
    ARRAY           shift and go to state 18
    NEW             shift and go to state 19

    type                           shift and go to state 33

state 27

    (21) cadena -> type LPARENTHESIS . string RPARENTHESIS
    (18) string -> . STRINGV

    STRINGV         shift and go to state 12

    string                         shift and go to state 34

state 28

    (24) arreglo -> type LSQBRACKET . arraycontent RSQBRACKET
    (25) arraycontent -> . factor
    (26) arraycontent -> . string
    (27) arraycontent -> . factor COMMA arraycontent
    (28) arraycontent -> . string COMMA arraycontent
    (14) factor -> . NUMBER
    (15) factor -> . FLOAT
    (16) factor -> . MINUS NUMBER
    (17) factor -> . MINUS FLOAT
    (18) string -> . STRINGV

    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    MINUS           shift and go to state 9
    STRINGV         shift and go to state 12

    arraycontent                   shift and go to state 35
    factor                         shift and go to state 36
    string                         shift and go to state 37

state 29

    (29) hash -> LBRACKET hashcontent . RBRACKET

    RBRACKET        shift and go to state 38


state 30

    (30) hashcontent -> string . ASSIGN GREATER hashcontentvalue
    (31) hashcontent -> string . ASSIGN GREATER hashcontentvalue COMMA hashcontent

    ASSIGN          shift and go to state 39


state 31

    (10) expression -> expression PLUS term .

    PLUS            reduce using rule 10 (expression -> expression PLUS term .)
    MINUS           reduce using rule 10 (expression -> expression PLUS term .)
    $end            reduce using rule 10 (expression -> expression PLUS term .)


state 32

    (11) expression -> expression MINUS term .

    PLUS            reduce using rule 11 (expression -> expression MINUS term .)
    MINUS           reduce using rule 11 (expression -> expression MINUS term .)
    $end            reduce using rule 11 (expression -> expression MINUS term .)


state 33

    (19) cadena -> type POINT type .
    (20) cadena -> type POINT type . LPARENTHESIS string RPARENTHESIS
    (22) arreglo -> type POINT type . LPARENTHESIS factor RPARENTHESIS
    (23) arreglo -> type POINT type . LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    $end            reduce using rule 19 (cadena -> type POINT type .)
    LPARENTHESIS    shift and go to state 40


state 34

    (21) cadena -> type LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 41


state 35

    (24) arreglo -> type LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 42


state 36

    (25) arraycontent -> factor .
    (27) arraycontent -> factor . COMMA arraycontent

    RSQBRACKET      reduce using rule 25 (arraycontent -> factor .)
    RPARENTHESIS    reduce using rule 25 (arraycontent -> factor .)
    COMMA           shift and go to state 43


state 37

    (26) arraycontent -> string .
    (28) arraycontent -> string . COMMA arraycontent

    RSQBRACKET      reduce using rule 26 (arraycontent -> string .)
    RPARENTHESIS    reduce using rule 26 (arraycontent -> string .)
    COMMA           shift and go to state 44


state 38

    (29) hash -> LBRACKET hashcontent RBRACKET .

    $end            reduce using rule 29 (hash -> LBRACKET hashcontent RBRACKET .)


state 39

    (30) hashcontent -> string ASSIGN . GREATER hashcontentvalue
    (31) hashcontent -> string ASSIGN . GREATER hashcontentvalue COMMA hashcontent

    GREATER         shift and go to state 45


state 40

    (20) cadena -> type POINT type LPARENTHESIS . string RPARENTHESIS
    (22) arreglo -> type POINT type LPARENTHESIS . factor RPARENTHESIS
    (23) arreglo -> type POINT type LPARENTHESIS . factor COMMA arraycontent RPARENTHESIS
    (18) string -> . STRINGV
    (14) factor -> . NUMBER
    (15) factor -> . FLOAT
    (16) factor -> . MINUS NUMBER
    (17) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    MINUS           shift and go to state 9

    string                         shift and go to state 46
    factor                         shift and go to state 47

state 41

    (21) cadena -> type LPARENTHESIS string RPARENTHESIS .

    $end            reduce using rule 21 (cadena -> type LPARENTHESIS string RPARENTHESIS .)


state 42

    (24) arreglo -> type LSQBRACKET arraycontent RSQBRACKET .

    $end            reduce using rule 24 (arreglo -> type LSQBRACKET arraycontent RSQBRACKET .)


state 43

    (27) arraycontent -> factor COMMA . arraycontent
    (25) arraycontent -> . factor
    (26) arraycontent -> . string
    (27) arraycontent -> . factor COMMA arraycontent
    (28) arraycontent -> . string COMMA arraycontent
    (14) factor -> . NUMBER
    (15) factor -> . FLOAT
    (16) factor -> . MINUS NUMBER
    (17) factor -> . MINUS FLOAT
    (18) string -> . STRINGV

    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    MINUS           shift and go to state 9
    STRINGV         shift and go to state 12

    factor                         shift and go to state 36
    arraycontent                   shift and go to state 48
    string                         shift and go to state 37

state 44

    (28) arraycontent -> string COMMA . arraycontent
    (25) arraycontent -> . factor
    (26) arraycontent -> . string
    (27) arraycontent -> . factor COMMA arraycontent
    (28) arraycontent -> . string COMMA arraycontent
    (14) factor -> . NUMBER
    (15) factor -> . FLOAT
    (16) factor -> . MINUS NUMBER
    (17) factor -> . MINUS FLOAT
    (18) string -> . STRINGV

    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    MINUS           shift and go to state 9
    STRINGV         shift and go to state 12

    string                         shift and go to state 37
    arraycontent                   shift and go to state 49
    factor                         shift and go to state 36

state 45

    (30) hashcontent -> string ASSIGN GREATER . hashcontentvalue
    (31) hashcontent -> string ASSIGN GREATER . hashcontentvalue COMMA hashcontent
    (32) hashcontentvalue -> . factor
    (33) hashcontentvalue -> . string
    (14) factor -> . NUMBER
    (15) factor -> . FLOAT
    (16) factor -> . MINUS NUMBER
    (17) factor -> . MINUS FLOAT
    (18) string -> . STRINGV

    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    MINUS           shift and go to state 9
    STRINGV         shift and go to state 12

    string                         shift and go to state 50
    hashcontentvalue               shift and go to state 51
    factor                         shift and go to state 52

state 46

    (20) cadena -> type POINT type LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 53


state 47

    (22) arreglo -> type POINT type LPARENTHESIS factor . RPARENTHESIS
    (23) arreglo -> type POINT type LPARENTHESIS factor . COMMA arraycontent RPARENTHESIS

    RPARENTHESIS    shift and go to state 54
    COMMA           shift and go to state 55


state 48

    (27) arraycontent -> factor COMMA arraycontent .

    RSQBRACKET      reduce using rule 27 (arraycontent -> factor COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 27 (arraycontent -> factor COMMA arraycontent .)


state 49

    (28) arraycontent -> string COMMA arraycontent .

    RSQBRACKET      reduce using rule 28 (arraycontent -> string COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 28 (arraycontent -> string COMMA arraycontent .)


state 50

    (33) hashcontentvalue -> string .

    COMMA           reduce using rule 33 (hashcontentvalue -> string .)
    RBRACKET        reduce using rule 33 (hashcontentvalue -> string .)


state 51

    (30) hashcontent -> string ASSIGN GREATER hashcontentvalue .
    (31) hashcontent -> string ASSIGN GREATER hashcontentvalue . COMMA hashcontent

    RBRACKET        reduce using rule 30 (hashcontent -> string ASSIGN GREATER hashcontentvalue .)
    COMMA           shift and go to state 56


state 52

    (32) hashcontentvalue -> factor .

    COMMA           reduce using rule 32 (hashcontentvalue -> factor .)
    RBRACKET        reduce using rule 32 (hashcontentvalue -> factor .)


state 53

    (20) cadena -> type POINT type LPARENTHESIS string RPARENTHESIS .

    $end            reduce using rule 20 (cadena -> type POINT type LPARENTHESIS string RPARENTHESIS .)


state 54

    (22) arreglo -> type POINT type LPARENTHESIS factor RPARENTHESIS .

    $end            reduce using rule 22 (arreglo -> type POINT type LPARENTHESIS factor RPARENTHESIS .)


state 55

    (23) arreglo -> type POINT type LPARENTHESIS factor COMMA . arraycontent RPARENTHESIS
    (25) arraycontent -> . factor
    (26) arraycontent -> . string
    (27) arraycontent -> . factor COMMA arraycontent
    (28) arraycontent -> . string COMMA arraycontent
    (14) factor -> . NUMBER
    (15) factor -> . FLOAT
    (16) factor -> . MINUS NUMBER
    (17) factor -> . MINUS FLOAT
    (18) string -> . STRINGV

    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    MINUS           shift and go to state 9
    STRINGV         shift and go to state 12

    factor                         shift and go to state 36
    arraycontent                   shift and go to state 57
    string                         shift and go to state 37

state 56

    (31) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA . hashcontent
    (30) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (31) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (18) string -> . STRINGV

    STRINGV         shift and go to state 12

    string                         shift and go to state 30
    hashcontent                    shift and go to state 58

state 57

    (23) arreglo -> type POINT type LPARENTHESIS factor COMMA arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 59


state 58

    (31) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .

    RBRACKET        reduce using rule 31 (hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .)


state 59

    (23) arreglo -> type POINT type LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .

    $end            reduce using rule 23 (arreglo -> type POINT type LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)

