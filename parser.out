Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ANDS
    BSLASH
    CASE
    CLASS
    COMENTARIO
    COMID
    COMIS
    DEF
    DEFINED
    ELSE
    ELSIF
    ENSURE
    EXP
    GETS
    IDENTIFIER
    MODULE
    NEXT
    NOT
    NOTS
    NUML
    OR
    ORS
    PUTC
    REDO
    RESCUE
    RETURN
    SELF
    SEMICOLON
    UNDEF
    UNTIL
    WHEN
    WHILE

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> expression
Rule 2     instrucciones -> string
Rule 3     instrucciones -> cadena
Rule 4     instrucciones -> metodocadena
Rule 5     instrucciones -> arreglo
Rule 6     instrucciones -> metodosarreglo
Rule 7     instrucciones -> hash
Rule 8     instrucciones -> estructurasControl
Rule 9     instrucciones -> boolean
Rule 10    instrucciones -> variables
Rule 11    instrucciones -> assigns
Rule 12    instrucciones -> oputs
Rule 13    instrucciones -> putss
Rule 14    instrucciones -> putsenx
Rule 15    instrucciones -> sentenIF
Rule 16    boolean -> TRUE
Rule 17    boolean -> FALSE
Rule 18    boolean -> NIL
Rule 19    oputs -> PUTS
Rule 20    putss -> PUTS string
Rule 21    putss -> PUTS cadena
Rule 22    putss -> PRINT string
Rule 23    putss -> PRINT cadena
Rule 24    putsenx -> PUTS expression
Rule 25    putsenx -> PRINT expression
Rule 26    variables -> IDLOCAL
Rule 27    variables -> IDINSTANCE
Rule 28    variables -> IDCLASS
Rule 29    variables -> IDGLOBAL
Rule 30    assigns -> variables ASSIGN expression
Rule 31    assigns -> variables ASSIGN variables
Rule 32    assigns -> variables ASSIGNPLUS expression
Rule 33    assigns -> variables ASSIGNPLUS variables
Rule 34    assigns -> variables ASSIGNMIN expression
Rule 35    assigns -> variables ASSIGNMIN variables
Rule 36    expression -> expression PLUS term
Rule 37    expression -> expression MINUS term
Rule 38    expression -> term
Rule 39    term -> factor
Rule 40    factor -> NUMBER
Rule 41    factor -> FLOAT
Rule 42    factor -> MINUS NUMBER
Rule 43    factor -> MINUS FLOAT
Rule 44    expression -> expression DIVISION term
Rule 45    expression -> expression MOD term
Rule 46    expression -> expression MULT term
Rule 47    string -> STRINGV
Rule 48    cadena -> STRING POINT NEW
Rule 49    cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS
Rule 50    cadena -> STRING LPARENTHESIS string RPARENTHESIS
Rule 51    metodocadena -> cadena POINT EMPTY INTERROGATIVE
Rule 52    metodocadena -> string POINT EMPTY INTERROGATIVE
Rule 53    metodocadena -> cadena POINT LENGTH
Rule 54    metodocadena -> string POINT LENGTH
Rule 55    arreglo -> ARRAY POINT NEW
Rule 56    arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
Rule 57    arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
Rule 58    arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET
Rule 59    arreglo -> LSQBRACKET arraycontent RSQBRACKET
Rule 60    arraycontent -> factor
Rule 61    arraycontent -> string
Rule 62    arraycontent -> factor COMMA arraycontent
Rule 63    arraycontent -> string COMMA arraycontent
Rule 64    metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
Rule 65    metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET
Rule 66    hash -> LBRACKET hashcontent RBRACKET
Rule 67    hash -> HASH POINT NEW
Rule 68    hashcontent -> string ASSIGN GREATER hashcontentvalue
Rule 69    hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent
Rule 70    hashcontentvalue -> factor
Rule 71    hashcontentvalue -> string
Rule 72    sentenIF -> IF comparador term
Rule 73    comparador -> COMPARE
Rule 74    comparador -> GREQUAL
Rule 75    comparador -> LSEQUAL
Rule 76    comparador -> NOTEQUAL
Rule 77    comparador -> LESS
Rule 78    comparador -> GREATER
Rule 79    estructurasControl -> FOR factor IN factor POINT POINT factor DO BREAK IF END
Rule 80    estructurasControl -> FOR factor IN factor POINT POINT factor DO END

Terminals, with rules where they appear

AND                  : 
ANDS                 : 
ARRAY                : 55 56 57 58
ASSIGN               : 30 31 68 69
ASSIGNMIN            : 34 35
ASSIGNPLUS           : 32 33
BREAK                : 79
BSLASH               : 
CASE                 : 
CLASS                : 
COMENTARIO           : 
COMID                : 
COMIS                : 
COMMA                : 57 62 63 69
COMPARE              : 73
DEF                  : 
DEFINED              : 
DIVISION             : 44
DO                   : 79 80
ELSE                 : 
ELSIF                : 
EMPTY                : 51 52
END                  : 79 80
ENSURE               : 
EXP                  : 
FALSE                : 17
FLOAT                : 41 43
FOR                  : 79 80
GETS                 : 
GREATER              : 68 69 78
GREQUAL              : 74
HASH                 : 67
IDCLASS              : 28
IDENTIFIER           : 
IDGLOBAL             : 29
IDINSTANCE           : 27
IDLOCAL              : 26
IF                   : 72 79
IN                   : 79 80
INDEX                : 64
INTERROGATIVE        : 51 52
LBRACKET             : 66
LENGTH               : 53 54
LESS                 : 77
LPARENTHESIS         : 49 50 56 57 64
LSEQUAL              : 75
LSQBRACKET           : 58 59 65
MINUS                : 37 42 43
MOD                  : 45
MODULE               : 
MULT                 : 46
NEW                  : 48 49 55 56 57 67
NEXT                 : 
NIL                  : 18
NOT                  : 
NOTEQUAL             : 76
NOTS                 : 
NUMBER               : 40 42
NUML                 : 
OR                   : 
ORS                  : 
PLUS                 : 36
POINT                : 48 49 51 52 53 54 55 56 57 64 67 79 79 80 80
PRINT                : 22 23 25
PUTC                 : 
PUTS                 : 19 20 21 24
RBRACKET             : 66
REDO                 : 
RESCUE               : 
RETURN               : 
RPARENTHESIS         : 49 50 56 57 64
RSQBRACKET           : 58 59 65
SELF                 : 
SEMICOLON            : 
STRING               : 48 49 50
STRINGV              : 47
TRUE                 : 16
UNDEF                : 
UNTIL                : 
WHEN                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

arraycontent         : 57 58 59 62 63 64
arreglo              : 5 64 65
assigns              : 11
boolean              : 9
cadena               : 3 21 23 51 53
comparador           : 72
estructurasControl   : 8
expression           : 1 24 25 30 32 34 36 37 44 45 46
factor               : 39 56 57 60 62 65 70 79 79 79 80 80 80
hash                 : 7
hashcontent          : 66 69
hashcontentvalue     : 68 69
instrucciones        : 0
metodocadena         : 4
metodosarreglo       : 6
oputs                : 12
putsenx              : 14
putss                : 13
sentenIF             : 15
string               : 2 20 22 49 50 52 54 61 63 68 69 71
term                 : 36 37 38 44 45 46 72
variables            : 10 30 31 31 32 33 33 34 35 35

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . expression
    (2) instrucciones -> . string
    (3) instrucciones -> . cadena
    (4) instrucciones -> . metodocadena
    (5) instrucciones -> . arreglo
    (6) instrucciones -> . metodosarreglo
    (7) instrucciones -> . hash
    (8) instrucciones -> . estructurasControl
    (9) instrucciones -> . boolean
    (10) instrucciones -> . variables
    (11) instrucciones -> . assigns
    (12) instrucciones -> . oputs
    (13) instrucciones -> . putss
    (14) instrucciones -> . putsenx
    (15) instrucciones -> . sentenIF
    (36) expression -> . expression PLUS term
    (37) expression -> . expression MINUS term
    (38) expression -> . term
    (44) expression -> . expression DIVISION term
    (45) expression -> . expression MOD term
    (46) expression -> . expression MULT term
    (47) string -> . STRINGV
    (48) cadena -> . STRING POINT NEW
    (49) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (50) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (51) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (52) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (53) metodocadena -> . cadena POINT LENGTH
    (54) metodocadena -> . string POINT LENGTH
    (55) arreglo -> . ARRAY POINT NEW
    (56) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (57) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (58) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (59) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (64) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (65) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (66) hash -> . LBRACKET hashcontent RBRACKET
    (67) hash -> . HASH POINT NEW
    (79) estructurasControl -> . FOR factor IN factor POINT POINT factor DO BREAK IF END
    (80) estructurasControl -> . FOR factor IN factor POINT POINT factor DO END
    (16) boolean -> . TRUE
    (17) boolean -> . FALSE
    (18) boolean -> . NIL
    (26) variables -> . IDLOCAL
    (27) variables -> . IDINSTANCE
    (28) variables -> . IDCLASS
    (29) variables -> . IDGLOBAL
    (30) assigns -> . variables ASSIGN expression
    (31) assigns -> . variables ASSIGN variables
    (32) assigns -> . variables ASSIGNPLUS expression
    (33) assigns -> . variables ASSIGNPLUS variables
    (34) assigns -> . variables ASSIGNMIN expression
    (35) assigns -> . variables ASSIGNMIN variables
    (19) oputs -> . PUTS
    (20) putss -> . PUTS string
    (21) putss -> . PUTS cadena
    (22) putss -> . PRINT string
    (23) putss -> . PRINT cadena
    (24) putsenx -> . PUTS expression
    (25) putsenx -> . PRINT expression
    (72) sentenIF -> . IF comparador term
    (39) term -> . factor
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 19
    STRING          shift and go to state 20
    ARRAY           shift and go to state 21
    LSQBRACKET      shift and go to state 23
    LBRACKET        shift and go to state 24
    HASH            shift and go to state 25
    FOR             shift and go to state 26
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    NIL             shift and go to state 30
    IDLOCAL         shift and go to state 31
    IDINSTANCE      shift and go to state 32
    IDCLASS         shift and go to state 33
    IDGLOBAL        shift and go to state 34
    PUTS            shift and go to state 35
    PRINT           shift and go to state 36
    IF              shift and go to state 27
    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    instrucciones                  shift and go to state 1
    expression                     shift and go to state 2
    string                         shift and go to state 3
    cadena                         shift and go to state 4
    metodocadena                   shift and go to state 5
    arreglo                        shift and go to state 6
    metodosarreglo                 shift and go to state 7
    hash                           shift and go to state 8
    estructurasControl             shift and go to state 9
    boolean                        shift and go to state 10
    variables                      shift and go to state 11
    assigns                        shift and go to state 12
    oputs                          shift and go to state 13
    putss                          shift and go to state 14
    putsenx                        shift and go to state 15
    sentenIF                       shift and go to state 16
    term                           shift and go to state 17
    factor                         shift and go to state 22

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> expression .
    (36) expression -> expression . PLUS term
    (37) expression -> expression . MINUS term
    (44) expression -> expression . DIVISION term
    (45) expression -> expression . MOD term
    (46) expression -> expression . MULT term

    $end            reduce using rule 1 (instrucciones -> expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    DIVISION        shift and go to state 41
    MOD             shift and go to state 42
    MULT            shift and go to state 43


state 3

    (2) instrucciones -> string .
    (52) metodocadena -> string . POINT EMPTY INTERROGATIVE
    (54) metodocadena -> string . POINT LENGTH

    $end            reduce using rule 2 (instrucciones -> string .)
    POINT           shift and go to state 44


state 4

    (3) instrucciones -> cadena .
    (51) metodocadena -> cadena . POINT EMPTY INTERROGATIVE
    (53) metodocadena -> cadena . POINT LENGTH

    $end            reduce using rule 3 (instrucciones -> cadena .)
    POINT           shift and go to state 45


state 5

    (4) instrucciones -> metodocadena .

    $end            reduce using rule 4 (instrucciones -> metodocadena .)


state 6

    (5) instrucciones -> arreglo .
    (64) metodosarreglo -> arreglo . POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (65) metodosarreglo -> arreglo . LSQBRACKET factor RSQBRACKET

    $end            reduce using rule 5 (instrucciones -> arreglo .)
    POINT           shift and go to state 46
    LSQBRACKET      shift and go to state 47


state 7

    (6) instrucciones -> metodosarreglo .

    $end            reduce using rule 6 (instrucciones -> metodosarreglo .)


state 8

    (7) instrucciones -> hash .

    $end            reduce using rule 7 (instrucciones -> hash .)


state 9

    (8) instrucciones -> estructurasControl .

    $end            reduce using rule 8 (instrucciones -> estructurasControl .)


state 10

    (9) instrucciones -> boolean .

    $end            reduce using rule 9 (instrucciones -> boolean .)


state 11

    (10) instrucciones -> variables .
    (30) assigns -> variables . ASSIGN expression
    (31) assigns -> variables . ASSIGN variables
    (32) assigns -> variables . ASSIGNPLUS expression
    (33) assigns -> variables . ASSIGNPLUS variables
    (34) assigns -> variables . ASSIGNMIN expression
    (35) assigns -> variables . ASSIGNMIN variables

    $end            reduce using rule 10 (instrucciones -> variables .)
    ASSIGN          shift and go to state 48
    ASSIGNPLUS      shift and go to state 49
    ASSIGNMIN       shift and go to state 50


state 12

    (11) instrucciones -> assigns .

    $end            reduce using rule 11 (instrucciones -> assigns .)


state 13

    (12) instrucciones -> oputs .

    $end            reduce using rule 12 (instrucciones -> oputs .)


state 14

    (13) instrucciones -> putss .

    $end            reduce using rule 13 (instrucciones -> putss .)


state 15

    (14) instrucciones -> putsenx .

    $end            reduce using rule 14 (instrucciones -> putsenx .)


state 16

    (15) instrucciones -> sentenIF .

    $end            reduce using rule 15 (instrucciones -> sentenIF .)


state 17

    (38) expression -> term .

    PLUS            reduce using rule 38 (expression -> term .)
    MINUS           reduce using rule 38 (expression -> term .)
    DIVISION        reduce using rule 38 (expression -> term .)
    MOD             reduce using rule 38 (expression -> term .)
    MULT            reduce using rule 38 (expression -> term .)
    $end            reduce using rule 38 (expression -> term .)


state 18

    (42) factor -> MINUS . NUMBER
    (43) factor -> MINUS . FLOAT

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52


state 19

    (47) string -> STRINGV .

    POINT           reduce using rule 47 (string -> STRINGV .)
    $end            reduce using rule 47 (string -> STRINGV .)
    COMMA           reduce using rule 47 (string -> STRINGV .)
    RSQBRACKET      reduce using rule 47 (string -> STRINGV .)
    ASSIGN          reduce using rule 47 (string -> STRINGV .)
    RPARENTHESIS    reduce using rule 47 (string -> STRINGV .)
    RBRACKET        reduce using rule 47 (string -> STRINGV .)


state 20

    (48) cadena -> STRING . POINT NEW
    (49) cadena -> STRING . POINT NEW LPARENTHESIS string RPARENTHESIS
    (50) cadena -> STRING . LPARENTHESIS string RPARENTHESIS

    POINT           shift and go to state 53
    LPARENTHESIS    shift and go to state 54


state 21

    (55) arreglo -> ARRAY . POINT NEW
    (56) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor RPARENTHESIS
    (57) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (58) arreglo -> ARRAY . LSQBRACKET arraycontent RSQBRACKET

    POINT           shift and go to state 55
    LSQBRACKET      shift and go to state 56


state 22

    (39) term -> factor .

    PLUS            reduce using rule 39 (term -> factor .)
    MINUS           reduce using rule 39 (term -> factor .)
    DIVISION        reduce using rule 39 (term -> factor .)
    MOD             reduce using rule 39 (term -> factor .)
    MULT            reduce using rule 39 (term -> factor .)
    $end            reduce using rule 39 (term -> factor .)


state 23

    (59) arreglo -> LSQBRACKET . arraycontent RSQBRACKET
    (60) arraycontent -> . factor
    (61) arraycontent -> . string
    (62) arraycontent -> . factor COMMA arraycontent
    (63) arraycontent -> . string COMMA arraycontent
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT
    (47) string -> . STRINGV

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18
    STRINGV         shift and go to state 19

    arraycontent                   shift and go to state 57
    factor                         shift and go to state 58
    string                         shift and go to state 59

state 24

    (66) hash -> LBRACKET . hashcontent RBRACKET
    (68) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (69) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (47) string -> . STRINGV

    STRINGV         shift and go to state 19

    hashcontent                    shift and go to state 60
    string                         shift and go to state 61

state 25

    (67) hash -> HASH . POINT NEW

    POINT           shift and go to state 62


state 26

    (79) estructurasControl -> FOR . factor IN factor POINT POINT factor DO BREAK IF END
    (80) estructurasControl -> FOR . factor IN factor POINT POINT factor DO END
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    factor                         shift and go to state 63

state 27

    (72) sentenIF -> IF . comparador term
    (73) comparador -> . COMPARE
    (74) comparador -> . GREQUAL
    (75) comparador -> . LSEQUAL
    (76) comparador -> . NOTEQUAL
    (77) comparador -> . LESS
    (78) comparador -> . GREATER

    COMPARE         shift and go to state 65
    GREQUAL         shift and go to state 66
    LSEQUAL         shift and go to state 67
    NOTEQUAL        shift and go to state 68
    LESS            shift and go to state 69
    GREATER         shift and go to state 70

    comparador                     shift and go to state 64

state 28

    (16) boolean -> TRUE .

    $end            reduce using rule 16 (boolean -> TRUE .)


state 29

    (17) boolean -> FALSE .

    $end            reduce using rule 17 (boolean -> FALSE .)


state 30

    (18) boolean -> NIL .

    $end            reduce using rule 18 (boolean -> NIL .)


state 31

    (26) variables -> IDLOCAL .

    ASSIGN          reduce using rule 26 (variables -> IDLOCAL .)
    ASSIGNPLUS      reduce using rule 26 (variables -> IDLOCAL .)
    ASSIGNMIN       reduce using rule 26 (variables -> IDLOCAL .)
    $end            reduce using rule 26 (variables -> IDLOCAL .)


state 32

    (27) variables -> IDINSTANCE .

    ASSIGN          reduce using rule 27 (variables -> IDINSTANCE .)
    ASSIGNPLUS      reduce using rule 27 (variables -> IDINSTANCE .)
    ASSIGNMIN       reduce using rule 27 (variables -> IDINSTANCE .)
    $end            reduce using rule 27 (variables -> IDINSTANCE .)


state 33

    (28) variables -> IDCLASS .

    ASSIGN          reduce using rule 28 (variables -> IDCLASS .)
    ASSIGNPLUS      reduce using rule 28 (variables -> IDCLASS .)
    ASSIGNMIN       reduce using rule 28 (variables -> IDCLASS .)
    $end            reduce using rule 28 (variables -> IDCLASS .)


state 34

    (29) variables -> IDGLOBAL .

    ASSIGN          reduce using rule 29 (variables -> IDGLOBAL .)
    ASSIGNPLUS      reduce using rule 29 (variables -> IDGLOBAL .)
    ASSIGNMIN       reduce using rule 29 (variables -> IDGLOBAL .)
    $end            reduce using rule 29 (variables -> IDGLOBAL .)


state 35

    (19) oputs -> PUTS .
    (20) putss -> PUTS . string
    (21) putss -> PUTS . cadena
    (24) putsenx -> PUTS . expression
    (47) string -> . STRINGV
    (48) cadena -> . STRING POINT NEW
    (49) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (50) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (36) expression -> . expression PLUS term
    (37) expression -> . expression MINUS term
    (38) expression -> . term
    (44) expression -> . expression DIVISION term
    (45) expression -> . expression MOD term
    (46) expression -> . expression MULT term
    (39) term -> . factor
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    $end            reduce using rule 19 (oputs -> PUTS .)
    STRINGV         shift and go to state 19
    STRING          shift and go to state 20
    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    string                         shift and go to state 71
    cadena                         shift and go to state 72
    expression                     shift and go to state 73
    term                           shift and go to state 17
    factor                         shift and go to state 22

state 36

    (22) putss -> PRINT . string
    (23) putss -> PRINT . cadena
    (25) putsenx -> PRINT . expression
    (47) string -> . STRINGV
    (48) cadena -> . STRING POINT NEW
    (49) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (50) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (36) expression -> . expression PLUS term
    (37) expression -> . expression MINUS term
    (38) expression -> . term
    (44) expression -> . expression DIVISION term
    (45) expression -> . expression MOD term
    (46) expression -> . expression MULT term
    (39) term -> . factor
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 19
    STRING          shift and go to state 20
    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    string                         shift and go to state 74
    cadena                         shift and go to state 75
    expression                     shift and go to state 76
    term                           shift and go to state 17
    factor                         shift and go to state 22

state 37

    (40) factor -> NUMBER .

    PLUS            reduce using rule 40 (factor -> NUMBER .)
    MINUS           reduce using rule 40 (factor -> NUMBER .)
    DIVISION        reduce using rule 40 (factor -> NUMBER .)
    MOD             reduce using rule 40 (factor -> NUMBER .)
    MULT            reduce using rule 40 (factor -> NUMBER .)
    $end            reduce using rule 40 (factor -> NUMBER .)
    COMMA           reduce using rule 40 (factor -> NUMBER .)
    RSQBRACKET      reduce using rule 40 (factor -> NUMBER .)
    IN              reduce using rule 40 (factor -> NUMBER .)
    RPARENTHESIS    reduce using rule 40 (factor -> NUMBER .)
    POINT           reduce using rule 40 (factor -> NUMBER .)
    RBRACKET        reduce using rule 40 (factor -> NUMBER .)
    DO              reduce using rule 40 (factor -> NUMBER .)


state 38

    (41) factor -> FLOAT .

    PLUS            reduce using rule 41 (factor -> FLOAT .)
    MINUS           reduce using rule 41 (factor -> FLOAT .)
    DIVISION        reduce using rule 41 (factor -> FLOAT .)
    MOD             reduce using rule 41 (factor -> FLOAT .)
    MULT            reduce using rule 41 (factor -> FLOAT .)
    $end            reduce using rule 41 (factor -> FLOAT .)
    COMMA           reduce using rule 41 (factor -> FLOAT .)
    RSQBRACKET      reduce using rule 41 (factor -> FLOAT .)
    IN              reduce using rule 41 (factor -> FLOAT .)
    RPARENTHESIS    reduce using rule 41 (factor -> FLOAT .)
    POINT           reduce using rule 41 (factor -> FLOAT .)
    RBRACKET        reduce using rule 41 (factor -> FLOAT .)
    DO              reduce using rule 41 (factor -> FLOAT .)


state 39

    (36) expression -> expression PLUS . term
    (39) term -> . factor
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    term                           shift and go to state 77
    factor                         shift and go to state 22

state 40

    (37) expression -> expression MINUS . term
    (39) term -> . factor
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    term                           shift and go to state 78
    factor                         shift and go to state 22

state 41

    (44) expression -> expression DIVISION . term
    (39) term -> . factor
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    term                           shift and go to state 79
    factor                         shift and go to state 22

state 42

    (45) expression -> expression MOD . term
    (39) term -> . factor
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    term                           shift and go to state 80
    factor                         shift and go to state 22

state 43

    (46) expression -> expression MULT . term
    (39) term -> . factor
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    term                           shift and go to state 81
    factor                         shift and go to state 22

state 44

    (52) metodocadena -> string POINT . EMPTY INTERROGATIVE
    (54) metodocadena -> string POINT . LENGTH

    EMPTY           shift and go to state 82
    LENGTH          shift and go to state 83


state 45

    (51) metodocadena -> cadena POINT . EMPTY INTERROGATIVE
    (53) metodocadena -> cadena POINT . LENGTH

    EMPTY           shift and go to state 84
    LENGTH          shift and go to state 85


state 46

    (64) metodosarreglo -> arreglo POINT . INDEX LPARENTHESIS arraycontent RPARENTHESIS

    INDEX           shift and go to state 86


state 47

    (65) metodosarreglo -> arreglo LSQBRACKET . factor RSQBRACKET
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    factor                         shift and go to state 87

state 48

    (30) assigns -> variables ASSIGN . expression
    (31) assigns -> variables ASSIGN . variables
    (36) expression -> . expression PLUS term
    (37) expression -> . expression MINUS term
    (38) expression -> . term
    (44) expression -> . expression DIVISION term
    (45) expression -> . expression MOD term
    (46) expression -> . expression MULT term
    (26) variables -> . IDLOCAL
    (27) variables -> . IDINSTANCE
    (28) variables -> . IDCLASS
    (29) variables -> . IDGLOBAL
    (39) term -> . factor
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 31
    IDINSTANCE      shift and go to state 32
    IDCLASS         shift and go to state 33
    IDGLOBAL        shift and go to state 34
    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    variables                      shift and go to state 88
    expression                     shift and go to state 89
    term                           shift and go to state 17
    factor                         shift and go to state 22

state 49

    (32) assigns -> variables ASSIGNPLUS . expression
    (33) assigns -> variables ASSIGNPLUS . variables
    (36) expression -> . expression PLUS term
    (37) expression -> . expression MINUS term
    (38) expression -> . term
    (44) expression -> . expression DIVISION term
    (45) expression -> . expression MOD term
    (46) expression -> . expression MULT term
    (26) variables -> . IDLOCAL
    (27) variables -> . IDINSTANCE
    (28) variables -> . IDCLASS
    (29) variables -> . IDGLOBAL
    (39) term -> . factor
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 31
    IDINSTANCE      shift and go to state 32
    IDCLASS         shift and go to state 33
    IDGLOBAL        shift and go to state 34
    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    variables                      shift and go to state 90
    expression                     shift and go to state 91
    term                           shift and go to state 17
    factor                         shift and go to state 22

state 50

    (34) assigns -> variables ASSIGNMIN . expression
    (35) assigns -> variables ASSIGNMIN . variables
    (36) expression -> . expression PLUS term
    (37) expression -> . expression MINUS term
    (38) expression -> . term
    (44) expression -> . expression DIVISION term
    (45) expression -> . expression MOD term
    (46) expression -> . expression MULT term
    (26) variables -> . IDLOCAL
    (27) variables -> . IDINSTANCE
    (28) variables -> . IDCLASS
    (29) variables -> . IDGLOBAL
    (39) term -> . factor
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 31
    IDINSTANCE      shift and go to state 32
    IDCLASS         shift and go to state 33
    IDGLOBAL        shift and go to state 34
    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    variables                      shift and go to state 92
    expression                     shift and go to state 93
    term                           shift and go to state 17
    factor                         shift and go to state 22

state 51

    (42) factor -> MINUS NUMBER .

    PLUS            reduce using rule 42 (factor -> MINUS NUMBER .)
    MINUS           reduce using rule 42 (factor -> MINUS NUMBER .)
    DIVISION        reduce using rule 42 (factor -> MINUS NUMBER .)
    MOD             reduce using rule 42 (factor -> MINUS NUMBER .)
    MULT            reduce using rule 42 (factor -> MINUS NUMBER .)
    $end            reduce using rule 42 (factor -> MINUS NUMBER .)
    COMMA           reduce using rule 42 (factor -> MINUS NUMBER .)
    RSQBRACKET      reduce using rule 42 (factor -> MINUS NUMBER .)
    IN              reduce using rule 42 (factor -> MINUS NUMBER .)
    RPARENTHESIS    reduce using rule 42 (factor -> MINUS NUMBER .)
    POINT           reduce using rule 42 (factor -> MINUS NUMBER .)
    RBRACKET        reduce using rule 42 (factor -> MINUS NUMBER .)
    DO              reduce using rule 42 (factor -> MINUS NUMBER .)


state 52

    (43) factor -> MINUS FLOAT .

    PLUS            reduce using rule 43 (factor -> MINUS FLOAT .)
    MINUS           reduce using rule 43 (factor -> MINUS FLOAT .)
    DIVISION        reduce using rule 43 (factor -> MINUS FLOAT .)
    MOD             reduce using rule 43 (factor -> MINUS FLOAT .)
    MULT            reduce using rule 43 (factor -> MINUS FLOAT .)
    $end            reduce using rule 43 (factor -> MINUS FLOAT .)
    COMMA           reduce using rule 43 (factor -> MINUS FLOAT .)
    RSQBRACKET      reduce using rule 43 (factor -> MINUS FLOAT .)
    IN              reduce using rule 43 (factor -> MINUS FLOAT .)
    RPARENTHESIS    reduce using rule 43 (factor -> MINUS FLOAT .)
    POINT           reduce using rule 43 (factor -> MINUS FLOAT .)
    RBRACKET        reduce using rule 43 (factor -> MINUS FLOAT .)
    DO              reduce using rule 43 (factor -> MINUS FLOAT .)


state 53

    (48) cadena -> STRING POINT . NEW
    (49) cadena -> STRING POINT . NEW LPARENTHESIS string RPARENTHESIS

    NEW             shift and go to state 94


state 54

    (50) cadena -> STRING LPARENTHESIS . string RPARENTHESIS
    (47) string -> . STRINGV

    STRINGV         shift and go to state 19

    string                         shift and go to state 95

state 55

    (55) arreglo -> ARRAY POINT . NEW
    (56) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor RPARENTHESIS
    (57) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    NEW             shift and go to state 96


state 56

    (58) arreglo -> ARRAY LSQBRACKET . arraycontent RSQBRACKET
    (60) arraycontent -> . factor
    (61) arraycontent -> . string
    (62) arraycontent -> . factor COMMA arraycontent
    (63) arraycontent -> . string COMMA arraycontent
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT
    (47) string -> . STRINGV

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18
    STRINGV         shift and go to state 19

    arraycontent                   shift and go to state 97
    factor                         shift and go to state 58
    string                         shift and go to state 59

state 57

    (59) arreglo -> LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 98


state 58

    (60) arraycontent -> factor .
    (62) arraycontent -> factor . COMMA arraycontent

    RSQBRACKET      reduce using rule 60 (arraycontent -> factor .)
    RPARENTHESIS    reduce using rule 60 (arraycontent -> factor .)
    COMMA           shift and go to state 99


state 59

    (61) arraycontent -> string .
    (63) arraycontent -> string . COMMA arraycontent

    RSQBRACKET      reduce using rule 61 (arraycontent -> string .)
    RPARENTHESIS    reduce using rule 61 (arraycontent -> string .)
    COMMA           shift and go to state 100


state 60

    (66) hash -> LBRACKET hashcontent . RBRACKET

    RBRACKET        shift and go to state 101


state 61

    (68) hashcontent -> string . ASSIGN GREATER hashcontentvalue
    (69) hashcontent -> string . ASSIGN GREATER hashcontentvalue COMMA hashcontent

    ASSIGN          shift and go to state 102


state 62

    (67) hash -> HASH POINT . NEW

    NEW             shift and go to state 103


state 63

    (79) estructurasControl -> FOR factor . IN factor POINT POINT factor DO BREAK IF END
    (80) estructurasControl -> FOR factor . IN factor POINT POINT factor DO END

    IN              shift and go to state 104


state 64

    (72) sentenIF -> IF comparador . term
    (39) term -> . factor
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    term                           shift and go to state 105
    factor                         shift and go to state 22

state 65

    (73) comparador -> COMPARE .

    NUMBER          reduce using rule 73 (comparador -> COMPARE .)
    FLOAT           reduce using rule 73 (comparador -> COMPARE .)
    MINUS           reduce using rule 73 (comparador -> COMPARE .)


state 66

    (74) comparador -> GREQUAL .

    NUMBER          reduce using rule 74 (comparador -> GREQUAL .)
    FLOAT           reduce using rule 74 (comparador -> GREQUAL .)
    MINUS           reduce using rule 74 (comparador -> GREQUAL .)


state 67

    (75) comparador -> LSEQUAL .

    NUMBER          reduce using rule 75 (comparador -> LSEQUAL .)
    FLOAT           reduce using rule 75 (comparador -> LSEQUAL .)
    MINUS           reduce using rule 75 (comparador -> LSEQUAL .)


state 68

    (76) comparador -> NOTEQUAL .

    NUMBER          reduce using rule 76 (comparador -> NOTEQUAL .)
    FLOAT           reduce using rule 76 (comparador -> NOTEQUAL .)
    MINUS           reduce using rule 76 (comparador -> NOTEQUAL .)


state 69

    (77) comparador -> LESS .

    NUMBER          reduce using rule 77 (comparador -> LESS .)
    FLOAT           reduce using rule 77 (comparador -> LESS .)
    MINUS           reduce using rule 77 (comparador -> LESS .)


state 70

    (78) comparador -> GREATER .

    NUMBER          reduce using rule 78 (comparador -> GREATER .)
    FLOAT           reduce using rule 78 (comparador -> GREATER .)
    MINUS           reduce using rule 78 (comparador -> GREATER .)


state 71

    (20) putss -> PUTS string .

    $end            reduce using rule 20 (putss -> PUTS string .)


state 72

    (21) putss -> PUTS cadena .

    $end            reduce using rule 21 (putss -> PUTS cadena .)


state 73

    (24) putsenx -> PUTS expression .
    (36) expression -> expression . PLUS term
    (37) expression -> expression . MINUS term
    (44) expression -> expression . DIVISION term
    (45) expression -> expression . MOD term
    (46) expression -> expression . MULT term

    $end            reduce using rule 24 (putsenx -> PUTS expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    DIVISION        shift and go to state 41
    MOD             shift and go to state 42
    MULT            shift and go to state 43


state 74

    (22) putss -> PRINT string .

    $end            reduce using rule 22 (putss -> PRINT string .)


state 75

    (23) putss -> PRINT cadena .

    $end            reduce using rule 23 (putss -> PRINT cadena .)


state 76

    (25) putsenx -> PRINT expression .
    (36) expression -> expression . PLUS term
    (37) expression -> expression . MINUS term
    (44) expression -> expression . DIVISION term
    (45) expression -> expression . MOD term
    (46) expression -> expression . MULT term

    $end            reduce using rule 25 (putsenx -> PRINT expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    DIVISION        shift and go to state 41
    MOD             shift and go to state 42
    MULT            shift and go to state 43


state 77

    (36) expression -> expression PLUS term .

    PLUS            reduce using rule 36 (expression -> expression PLUS term .)
    MINUS           reduce using rule 36 (expression -> expression PLUS term .)
    DIVISION        reduce using rule 36 (expression -> expression PLUS term .)
    MOD             reduce using rule 36 (expression -> expression PLUS term .)
    MULT            reduce using rule 36 (expression -> expression PLUS term .)
    $end            reduce using rule 36 (expression -> expression PLUS term .)


state 78

    (37) expression -> expression MINUS term .

    PLUS            reduce using rule 37 (expression -> expression MINUS term .)
    MINUS           reduce using rule 37 (expression -> expression MINUS term .)
    DIVISION        reduce using rule 37 (expression -> expression MINUS term .)
    MOD             reduce using rule 37 (expression -> expression MINUS term .)
    MULT            reduce using rule 37 (expression -> expression MINUS term .)
    $end            reduce using rule 37 (expression -> expression MINUS term .)


state 79

    (44) expression -> expression DIVISION term .

    PLUS            reduce using rule 44 (expression -> expression DIVISION term .)
    MINUS           reduce using rule 44 (expression -> expression DIVISION term .)
    DIVISION        reduce using rule 44 (expression -> expression DIVISION term .)
    MOD             reduce using rule 44 (expression -> expression DIVISION term .)
    MULT            reduce using rule 44 (expression -> expression DIVISION term .)
    $end            reduce using rule 44 (expression -> expression DIVISION term .)


state 80

    (45) expression -> expression MOD term .

    PLUS            reduce using rule 45 (expression -> expression MOD term .)
    MINUS           reduce using rule 45 (expression -> expression MOD term .)
    DIVISION        reduce using rule 45 (expression -> expression MOD term .)
    MOD             reduce using rule 45 (expression -> expression MOD term .)
    MULT            reduce using rule 45 (expression -> expression MOD term .)
    $end            reduce using rule 45 (expression -> expression MOD term .)


state 81

    (46) expression -> expression MULT term .

    PLUS            reduce using rule 46 (expression -> expression MULT term .)
    MINUS           reduce using rule 46 (expression -> expression MULT term .)
    DIVISION        reduce using rule 46 (expression -> expression MULT term .)
    MOD             reduce using rule 46 (expression -> expression MULT term .)
    MULT            reduce using rule 46 (expression -> expression MULT term .)
    $end            reduce using rule 46 (expression -> expression MULT term .)


state 82

    (52) metodocadena -> string POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 106


state 83

    (54) metodocadena -> string POINT LENGTH .

    $end            reduce using rule 54 (metodocadena -> string POINT LENGTH .)


state 84

    (51) metodocadena -> cadena POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 107


state 85

    (53) metodocadena -> cadena POINT LENGTH .

    $end            reduce using rule 53 (metodocadena -> cadena POINT LENGTH .)


state 86

    (64) metodosarreglo -> arreglo POINT INDEX . LPARENTHESIS arraycontent RPARENTHESIS

    LPARENTHESIS    shift and go to state 108


state 87

    (65) metodosarreglo -> arreglo LSQBRACKET factor . RSQBRACKET

    RSQBRACKET      shift and go to state 109


state 88

    (31) assigns -> variables ASSIGN variables .

    $end            reduce using rule 31 (assigns -> variables ASSIGN variables .)


state 89

    (30) assigns -> variables ASSIGN expression .
    (36) expression -> expression . PLUS term
    (37) expression -> expression . MINUS term
    (44) expression -> expression . DIVISION term
    (45) expression -> expression . MOD term
    (46) expression -> expression . MULT term

    $end            reduce using rule 30 (assigns -> variables ASSIGN expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    DIVISION        shift and go to state 41
    MOD             shift and go to state 42
    MULT            shift and go to state 43


state 90

    (33) assigns -> variables ASSIGNPLUS variables .

    $end            reduce using rule 33 (assigns -> variables ASSIGNPLUS variables .)


state 91

    (32) assigns -> variables ASSIGNPLUS expression .
    (36) expression -> expression . PLUS term
    (37) expression -> expression . MINUS term
    (44) expression -> expression . DIVISION term
    (45) expression -> expression . MOD term
    (46) expression -> expression . MULT term

    $end            reduce using rule 32 (assigns -> variables ASSIGNPLUS expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    DIVISION        shift and go to state 41
    MOD             shift and go to state 42
    MULT            shift and go to state 43


state 92

    (35) assigns -> variables ASSIGNMIN variables .

    $end            reduce using rule 35 (assigns -> variables ASSIGNMIN variables .)


state 93

    (34) assigns -> variables ASSIGNMIN expression .
    (36) expression -> expression . PLUS term
    (37) expression -> expression . MINUS term
    (44) expression -> expression . DIVISION term
    (45) expression -> expression . MOD term
    (46) expression -> expression . MULT term

    $end            reduce using rule 34 (assigns -> variables ASSIGNMIN expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    DIVISION        shift and go to state 41
    MOD             shift and go to state 42
    MULT            shift and go to state 43


state 94

    (48) cadena -> STRING POINT NEW .
    (49) cadena -> STRING POINT NEW . LPARENTHESIS string RPARENTHESIS

    POINT           reduce using rule 48 (cadena -> STRING POINT NEW .)
    $end            reduce using rule 48 (cadena -> STRING POINT NEW .)
    LPARENTHESIS    shift and go to state 110


state 95

    (50) cadena -> STRING LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 111


state 96

    (55) arreglo -> ARRAY POINT NEW .
    (56) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor RPARENTHESIS
    (57) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    POINT           reduce using rule 55 (arreglo -> ARRAY POINT NEW .)
    LSQBRACKET      reduce using rule 55 (arreglo -> ARRAY POINT NEW .)
    $end            reduce using rule 55 (arreglo -> ARRAY POINT NEW .)
    LPARENTHESIS    shift and go to state 112


state 97

    (58) arreglo -> ARRAY LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 113


state 98

    (59) arreglo -> LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 59 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 59 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 59 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)


state 99

    (62) arraycontent -> factor COMMA . arraycontent
    (60) arraycontent -> . factor
    (61) arraycontent -> . string
    (62) arraycontent -> . factor COMMA arraycontent
    (63) arraycontent -> . string COMMA arraycontent
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT
    (47) string -> . STRINGV

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18
    STRINGV         shift and go to state 19

    factor                         shift and go to state 58
    arraycontent                   shift and go to state 114
    string                         shift and go to state 59

state 100

    (63) arraycontent -> string COMMA . arraycontent
    (60) arraycontent -> . factor
    (61) arraycontent -> . string
    (62) arraycontent -> . factor COMMA arraycontent
    (63) arraycontent -> . string COMMA arraycontent
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT
    (47) string -> . STRINGV

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18
    STRINGV         shift and go to state 19

    string                         shift and go to state 59
    arraycontent                   shift and go to state 115
    factor                         shift and go to state 58

state 101

    (66) hash -> LBRACKET hashcontent RBRACKET .

    $end            reduce using rule 66 (hash -> LBRACKET hashcontent RBRACKET .)


state 102

    (68) hashcontent -> string ASSIGN . GREATER hashcontentvalue
    (69) hashcontent -> string ASSIGN . GREATER hashcontentvalue COMMA hashcontent

    GREATER         shift and go to state 116


state 103

    (67) hash -> HASH POINT NEW .

    $end            reduce using rule 67 (hash -> HASH POINT NEW .)


state 104

    (79) estructurasControl -> FOR factor IN . factor POINT POINT factor DO BREAK IF END
    (80) estructurasControl -> FOR factor IN . factor POINT POINT factor DO END
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    factor                         shift and go to state 117

state 105

    (72) sentenIF -> IF comparador term .

    $end            reduce using rule 72 (sentenIF -> IF comparador term .)


state 106

    (52) metodocadena -> string POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 52 (metodocadena -> string POINT EMPTY INTERROGATIVE .)


state 107

    (51) metodocadena -> cadena POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 51 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)


state 108

    (64) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS . arraycontent RPARENTHESIS
    (60) arraycontent -> . factor
    (61) arraycontent -> . string
    (62) arraycontent -> . factor COMMA arraycontent
    (63) arraycontent -> . string COMMA arraycontent
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT
    (47) string -> . STRINGV

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18
    STRINGV         shift and go to state 19

    arraycontent                   shift and go to state 118
    factor                         shift and go to state 58
    string                         shift and go to state 59

state 109

    (65) metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .

    $end            reduce using rule 65 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)


state 110

    (49) cadena -> STRING POINT NEW LPARENTHESIS . string RPARENTHESIS
    (47) string -> . STRINGV

    STRINGV         shift and go to state 19

    string                         shift and go to state 119

state 111

    (50) cadena -> STRING LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 50 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 50 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)


state 112

    (56) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor RPARENTHESIS
    (57) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor COMMA arraycontent RPARENTHESIS
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    factor                         shift and go to state 120

state 113

    (58) arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 58 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 58 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 58 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)


state 114

    (62) arraycontent -> factor COMMA arraycontent .

    RSQBRACKET      reduce using rule 62 (arraycontent -> factor COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 62 (arraycontent -> factor COMMA arraycontent .)


state 115

    (63) arraycontent -> string COMMA arraycontent .

    RSQBRACKET      reduce using rule 63 (arraycontent -> string COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 63 (arraycontent -> string COMMA arraycontent .)


state 116

    (68) hashcontent -> string ASSIGN GREATER . hashcontentvalue
    (69) hashcontent -> string ASSIGN GREATER . hashcontentvalue COMMA hashcontent
    (70) hashcontentvalue -> . factor
    (71) hashcontentvalue -> . string
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT
    (47) string -> . STRINGV

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18
    STRINGV         shift and go to state 19

    string                         shift and go to state 121
    hashcontentvalue               shift and go to state 122
    factor                         shift and go to state 123

state 117

    (79) estructurasControl -> FOR factor IN factor . POINT POINT factor DO BREAK IF END
    (80) estructurasControl -> FOR factor IN factor . POINT POINT factor DO END

    POINT           shift and go to state 124


state 118

    (64) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 125


state 119

    (49) cadena -> STRING POINT NEW LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 126


state 120

    (56) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . RPARENTHESIS
    (57) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . COMMA arraycontent RPARENTHESIS

    RPARENTHESIS    shift and go to state 127
    COMMA           shift and go to state 128


state 121

    (71) hashcontentvalue -> string .

    COMMA           reduce using rule 71 (hashcontentvalue -> string .)
    RBRACKET        reduce using rule 71 (hashcontentvalue -> string .)


state 122

    (68) hashcontent -> string ASSIGN GREATER hashcontentvalue .
    (69) hashcontent -> string ASSIGN GREATER hashcontentvalue . COMMA hashcontent

    RBRACKET        reduce using rule 68 (hashcontent -> string ASSIGN GREATER hashcontentvalue .)
    COMMA           shift and go to state 129


state 123

    (70) hashcontentvalue -> factor .

    COMMA           reduce using rule 70 (hashcontentvalue -> factor .)
    RBRACKET        reduce using rule 70 (hashcontentvalue -> factor .)


state 124

    (79) estructurasControl -> FOR factor IN factor POINT . POINT factor DO BREAK IF END
    (80) estructurasControl -> FOR factor IN factor POINT . POINT factor DO END

    POINT           shift and go to state 130


state 125

    (64) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .

    $end            reduce using rule 64 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)


state 126

    (49) cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 49 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 49 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)


state 127

    (56) arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .

    POINT           reduce using rule 56 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    LSQBRACKET      reduce using rule 56 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    $end            reduce using rule 56 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)


state 128

    (57) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA . arraycontent RPARENTHESIS
    (60) arraycontent -> . factor
    (61) arraycontent -> . string
    (62) arraycontent -> . factor COMMA arraycontent
    (63) arraycontent -> . string COMMA arraycontent
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT
    (47) string -> . STRINGV

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18
    STRINGV         shift and go to state 19

    factor                         shift and go to state 58
    arraycontent                   shift and go to state 131
    string                         shift and go to state 59

state 129

    (69) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA . hashcontent
    (68) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (69) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (47) string -> . STRINGV

    STRINGV         shift and go to state 19

    string                         shift and go to state 61
    hashcontent                    shift and go to state 132

state 130

    (79) estructurasControl -> FOR factor IN factor POINT POINT . factor DO BREAK IF END
    (80) estructurasControl -> FOR factor IN factor POINT POINT . factor DO END
    (40) factor -> . NUMBER
    (41) factor -> . FLOAT
    (42) factor -> . MINUS NUMBER
    (43) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 37
    FLOAT           shift and go to state 38
    MINUS           shift and go to state 18

    factor                         shift and go to state 133

state 131

    (57) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 134


state 132

    (69) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .

    RBRACKET        reduce using rule 69 (hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .)


state 133

    (79) estructurasControl -> FOR factor IN factor POINT POINT factor . DO BREAK IF END
    (80) estructurasControl -> FOR factor IN factor POINT POINT factor . DO END

    DO              shift and go to state 135


state 134

    (57) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .

    POINT           reduce using rule 57 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    LSQBRACKET      reduce using rule 57 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    $end            reduce using rule 57 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)


state 135

    (79) estructurasControl -> FOR factor IN factor POINT POINT factor DO . BREAK IF END
    (80) estructurasControl -> FOR factor IN factor POINT POINT factor DO . END

    BREAK           shift and go to state 136
    END             shift and go to state 137


state 136

    (79) estructurasControl -> FOR factor IN factor POINT POINT factor DO BREAK . IF END

    IF              shift and go to state 138


state 137

    (80) estructurasControl -> FOR factor IN factor POINT POINT factor DO END .

    $end            reduce using rule 80 (estructurasControl -> FOR factor IN factor POINT POINT factor DO END .)


state 138

    (79) estructurasControl -> FOR factor IN factor POINT POINT factor DO BREAK IF . END

    END             shift and go to state 139


state 139

    (79) estructurasControl -> FOR factor IN factor POINT POINT factor DO BREAK IF END .

    $end            reduce using rule 79 (estructurasControl -> FOR factor IN factor POINT POINT factor DO BREAK IF END .)

