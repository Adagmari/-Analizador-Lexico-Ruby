Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ANDS
    BSLASH
    CASE
    CLASS
    COMENTARIO
    COMID
    COMIS
    DEF
    DEFINED
    ELSE
    ELSIF
    ENSURE
    GETS
    IDENTIFIER
    MODULE
    NEXT
    NOT
    NOTS
    NUML
    OR
    ORS
    PUTC
    REDO
    RESCUE
    RETURN
    SELF
    SEMICOLON
    UNDEF
    UNTIL
    WHEN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignar
Rule 2     instrucciones -> noasignar
Rule 3     asignar -> expression
Rule 4     asignar -> string
Rule 5     asignar -> cadena
Rule 6     asignar -> metodocadena
Rule 7     asignar -> arreglo
Rule 8     asignar -> metodosarreglo
Rule 9     asignar -> hash
Rule 10    asignar -> metodohash
Rule 11    asignar -> boolean
Rule 12    asignar -> variables
Rule 13    asignar -> assigns
Rule 14    noasignar -> estructurasControl
Rule 15    noasignar -> oputs
Rule 16    noasignar -> putss
Rule 17    noasignar -> putsenx
Rule 18    noasignar -> sentenIF
Rule 19    noasignar -> sentenWHILE
Rule 20    boolean -> TRUE
Rule 21    boolean -> FALSE
Rule 22    boolean -> NIL
Rule 23    oputs -> PUTS
Rule 24    putss -> PUTS string
Rule 25    putss -> PUTS cadena
Rule 26    putss -> PRINT string
Rule 27    putss -> PRINT cadena
Rule 28    putsenx -> PUTS expression
Rule 29    putsenx -> PRINT expression
Rule 30    algoritmo -> expression
Rule 31    algoritmo -> metodocadena
Rule 32    algoritmo -> arreglo
Rule 33    algoritmo -> metodosarreglo
Rule 34    algoritmo -> hash
Rule 35    algoritmo -> estructurasControl
Rule 36    algoritmo -> boolean
Rule 37    algoritmo -> assigns
Rule 38    algoritmo -> sentenIF
Rule 39    algoritmo -> sentenWHILE
Rule 40    sentenWHILE -> WHILE variables comparador variables algoritmo END
Rule 41    sentenWHILE -> WHILE variables comparador expression algoritmo END
Rule 42    sentenWHILE -> WHILE boolean algoritmo END
Rule 43    sentenWHILE -> WHILE variables algoritmo END
Rule 44    variables -> IDLOCAL
Rule 45    variables -> IDINSTANCE
Rule 46    variables -> IDCLASS
Rule 47    variables -> IDGLOBAL
Rule 48    assigns -> variables ASSIGN expression
Rule 49    assigns -> variables ASSIGN variables
Rule 50    assigns -> variables ASSIGN boolean
Rule 51    assigns -> variables ASSIGN asignar
Rule 52    assigns -> variables ASSIGNPLUS expression
Rule 53    assigns -> variables ASSIGNPLUS variables
Rule 54    assigns -> variables ASSIGNMIN expression
Rule 55    assigns -> variables ASSIGNMIN variables
Rule 56    expression -> expression PLUS term
Rule 57    expression -> expression MINUS term
Rule 58    expression -> term
Rule 59    term -> factor
Rule 60    factor -> NUMBER
Rule 61    factor -> FLOAT
Rule 62    factor -> MINUS NUMBER
Rule 63    factor -> MINUS FLOAT
Rule 64    expression -> expression DIVISION term
Rule 65    expression -> expression MOD term
Rule 66    expression -> expression MULT term
Rule 67    expression -> expression EXP term
Rule 68    string -> STRINGV
Rule 69    cadena -> STRING POINT NEW
Rule 70    cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS
Rule 71    cadena -> STRING LPARENTHESIS string RPARENTHESIS
Rule 72    metodocadena -> cadena POINT EMPTY INTERROGATIVE
Rule 73    metodocadena -> string POINT EMPTY INTERROGATIVE
Rule 74    metodocadena -> cadena POINT LENGTH
Rule 75    metodocadena -> string POINT LENGTH
Rule 76    arreglo -> ARRAY POINT NEW
Rule 77    arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
Rule 78    arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
Rule 79    arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET
Rule 80    arreglo -> LSQBRACKET arraycontent RSQBRACKET
Rule 81    arraycontent -> factor
Rule 82    arraycontent -> string
Rule 83    arraycontent -> factor COMMA arraycontent
Rule 84    arraycontent -> string COMMA arraycontent
Rule 85    metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
Rule 86    metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET
Rule 87    hash -> LBRACKET hashcontent RBRACKET
Rule 88    hash -> HASH POINT NEW
Rule 89    hashcontent -> string ASSIGN GREATER hashcontentvalue
Rule 90    hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent
Rule 91    hashcontentvalue -> factor
Rule 92    hashcontentvalue -> string
Rule 93    metodohash -> variables ASSIGN hash POINT LENGTH
Rule 94    metodohash -> variables POINT LENGTH
Rule 95    sentenIF -> IF comparador term
Rule 96    comparador -> COMPARE
Rule 97    comparador -> GREQUAL
Rule 98    comparador -> LSEQUAL
Rule 99    comparador -> NOTEQUAL
Rule 100   comparador -> LESS
Rule 101   comparador -> GREATER
Rule 102   estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
Rule 103   estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
Rule 104   forcontent -> forcontentvalue
Rule 105   forcontent -> forcontentvalue forcontent
Rule 106   forcontentvalue -> expression
Rule 107   forcontentvalue -> algoritmo

Terminals, with rules where they appear

AND                  : 
ANDS                 : 
ARRAY                : 76 77 78 79
ASSIGN               : 48 49 50 51 89 90 93
ASSIGNMIN            : 54 55
ASSIGNPLUS           : 52 53
BREAK                : 102
BSLASH               : 
CASE                 : 
CLASS                : 
COMENTARIO           : 
COMID                : 
COMIS                : 
COMMA                : 78 83 84 90
COMPARE              : 96
DEF                  : 
DEFINED              : 
DIVISION             : 64
DO                   : 102 103
ELSE                 : 
ELSIF                : 
EMPTY                : 72 73
END                  : 40 41 42 43 102 103
ENSURE               : 
EXP                  : 67
FALSE                : 21
FLOAT                : 61 63
FOR                  : 102 103
GETS                 : 
GREATER              : 89 90 101
GREQUAL              : 97
HASH                 : 88
IDCLASS              : 46
IDENTIFIER           : 
IDGLOBAL             : 47
IDINSTANCE           : 45
IDLOCAL              : 44 102 103
IF                   : 95 102
IN                   : 102 103
INDEX                : 85
INTERROGATIVE        : 72 73
LBRACKET             : 87
LENGTH               : 74 75 93 94
LESS                 : 100
LPARENTHESIS         : 70 71 77 78 85
LSEQUAL              : 98
LSQBRACKET           : 79 80 86
MINUS                : 57 62 63
MOD                  : 65
MODULE               : 
MULT                 : 66
NEW                  : 69 70 76 77 78 88
NEXT                 : 
NIL                  : 22
NOT                  : 
NOTEQUAL             : 99
NOTS                 : 
NUMBER               : 60 62
NUML                 : 
OR                   : 
ORS                  : 
PLUS                 : 56
POINT                : 69 70 72 73 74 75 76 77 78 85 88 93 94 102 102 103 103
PRINT                : 26 27 29
PUTC                 : 
PUTS                 : 23 24 25 28
RBRACKET             : 87
REDO                 : 
RESCUE               : 
RETURN               : 
RPARENTHESIS         : 70 71 77 78 85
RSQBRACKET           : 79 80 86
SELF                 : 
SEMICOLON            : 
STRING               : 69 70 71
STRINGV              : 68
TRUE                 : 20
UNDEF                : 
UNTIL                : 
WHEN                 : 
WHILE                : 40 41 42 43
error                : 

Nonterminals, with rules where they appear

algoritmo            : 40 41 42 43 107
arraycontent         : 78 79 80 83 84 85
arreglo              : 7 32 85 86
asignar              : 1 51
assigns              : 13 37
boolean              : 11 36 42 50
cadena               : 5 25 27 72 74
comparador           : 40 41 95
estructurasControl   : 14 35
expression           : 3 28 29 30 41 48 52 54 56 57 64 65 66 67 106
factor               : 59 77 78 81 83 86 91 102 102 103 103
forcontent           : 102 103 105
forcontentvalue      : 102 104 105
hash                 : 9 34 93
hashcontent          : 87 90
hashcontentvalue     : 89 90
instrucciones        : 0
metodocadena         : 6 31
metodohash           : 10
metodosarreglo       : 8 33
noasignar            : 2
oputs                : 15
putsenx              : 17
putss                : 16
sentenIF             : 18 38
sentenWHILE          : 19 39
string               : 4 24 26 70 71 73 75 82 84 89 90 92
term                 : 56 57 58 64 65 66 67 95
variables            : 12 40 40 41 43 48 49 49 50 51 52 53 53 54 55 55 93 94

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignar
    (2) instrucciones -> . noasignar
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . assigns
    (14) noasignar -> . estructurasControl
    (15) noasignar -> . oputs
    (16) noasignar -> . putss
    (17) noasignar -> . putsenx
    (18) noasignar -> . sentenIF
    (19) noasignar -> . sentenWHILE
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (68) string -> . STRINGV
    (69) cadena -> . STRING POINT NEW
    (70) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (72) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (73) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (74) metodocadena -> . cadena POINT LENGTH
    (75) metodocadena -> . string POINT LENGTH
    (76) arreglo -> . ARRAY POINT NEW
    (77) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (79) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (80) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (85) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (86) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (87) hash -> . LBRACKET hashcontent RBRACKET
    (88) hash -> . HASH POINT NEW
    (93) metodohash -> . variables ASSIGN hash POINT LENGTH
    (94) metodohash -> . variables POINT LENGTH
    (20) boolean -> . TRUE
    (21) boolean -> . FALSE
    (22) boolean -> . NIL
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL
    (48) assigns -> . variables ASSIGN expression
    (49) assigns -> . variables ASSIGN variables
    (50) assigns -> . variables ASSIGN boolean
    (51) assigns -> . variables ASSIGN asignar
    (52) assigns -> . variables ASSIGNPLUS expression
    (53) assigns -> . variables ASSIGNPLUS variables
    (54) assigns -> . variables ASSIGNMIN expression
    (55) assigns -> . variables ASSIGNMIN variables
    (102) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (23) oputs -> . PUTS
    (24) putss -> . PUTS string
    (25) putss -> . PUTS cadena
    (26) putss -> . PRINT string
    (27) putss -> . PRINT cadena
    (28) putsenx -> . PUTS expression
    (29) putsenx -> . PRINT expression
    (95) sentenIF -> . IF comparador term
    (40) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (41) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (42) sentenWHILE -> . WHILE boolean algoritmo END
    (43) sentenWHILE -> . WHILE variables algoritmo END
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 23
    STRING          shift and go to state 24
    ARRAY           shift and go to state 25
    LSQBRACKET      shift and go to state 27
    LBRACKET        shift and go to state 28
    HASH            shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32
    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36
    FOR             shift and go to state 37
    PUTS            shift and go to state 39
    PRINT           shift and go to state 40
    IF              shift and go to state 38
    WHILE           shift and go to state 41
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    instrucciones                  shift and go to state 1
    asignar                        shift and go to state 2
    noasignar                      shift and go to state 3
    expression                     shift and go to state 4
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    boolean                        shift and go to state 12
    variables                      shift and go to state 13
    assigns                        shift and go to state 14
    estructurasControl             shift and go to state 15
    oputs                          shift and go to state 16
    putss                          shift and go to state 17
    putsenx                        shift and go to state 18
    sentenIF                       shift and go to state 19
    sentenWHILE                    shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 26

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignar .

    $end            reduce using rule 1 (instrucciones -> asignar .)


state 3

    (2) instrucciones -> noasignar .

    $end            reduce using rule 2 (instrucciones -> noasignar .)


state 4

    (3) asignar -> expression .
    (56) expression -> expression . PLUS term
    (57) expression -> expression . MINUS term
    (64) expression -> expression . DIVISION term
    (65) expression -> expression . MOD term
    (66) expression -> expression . MULT term
    (67) expression -> expression . EXP term

    $end            reduce using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    DIVISION        shift and go to state 46
    MOD             shift and go to state 47
    MULT            shift and go to state 48
    EXP             shift and go to state 49


state 5

    (4) asignar -> string .
    (73) metodocadena -> string . POINT EMPTY INTERROGATIVE
    (75) metodocadena -> string . POINT LENGTH

    $end            reduce using rule 4 (asignar -> string .)
    END             reduce using rule 4 (asignar -> string .)
    ARRAY           reduce using rule 4 (asignar -> string .)
    LSQBRACKET      reduce using rule 4 (asignar -> string .)
    LBRACKET        reduce using rule 4 (asignar -> string .)
    HASH            reduce using rule 4 (asignar -> string .)
    FOR             reduce using rule 4 (asignar -> string .)
    TRUE            reduce using rule 4 (asignar -> string .)
    FALSE           reduce using rule 4 (asignar -> string .)
    NIL             reduce using rule 4 (asignar -> string .)
    IF              reduce using rule 4 (asignar -> string .)
    WHILE           reduce using rule 4 (asignar -> string .)
    NUMBER          reduce using rule 4 (asignar -> string .)
    FLOAT           reduce using rule 4 (asignar -> string .)
    MINUS           reduce using rule 4 (asignar -> string .)
    STRING          reduce using rule 4 (asignar -> string .)
    STRINGV         reduce using rule 4 (asignar -> string .)
    IDLOCAL         reduce using rule 4 (asignar -> string .)
    IDINSTANCE      reduce using rule 4 (asignar -> string .)
    IDCLASS         reduce using rule 4 (asignar -> string .)
    IDGLOBAL        reduce using rule 4 (asignar -> string .)
    BREAK           reduce using rule 4 (asignar -> string .)
    POINT           shift and go to state 50


state 6

    (5) asignar -> cadena .
    (72) metodocadena -> cadena . POINT EMPTY INTERROGATIVE
    (74) metodocadena -> cadena . POINT LENGTH

    $end            reduce using rule 5 (asignar -> cadena .)
    END             reduce using rule 5 (asignar -> cadena .)
    ARRAY           reduce using rule 5 (asignar -> cadena .)
    LSQBRACKET      reduce using rule 5 (asignar -> cadena .)
    LBRACKET        reduce using rule 5 (asignar -> cadena .)
    HASH            reduce using rule 5 (asignar -> cadena .)
    FOR             reduce using rule 5 (asignar -> cadena .)
    TRUE            reduce using rule 5 (asignar -> cadena .)
    FALSE           reduce using rule 5 (asignar -> cadena .)
    NIL             reduce using rule 5 (asignar -> cadena .)
    IF              reduce using rule 5 (asignar -> cadena .)
    WHILE           reduce using rule 5 (asignar -> cadena .)
    NUMBER          reduce using rule 5 (asignar -> cadena .)
    FLOAT           reduce using rule 5 (asignar -> cadena .)
    MINUS           reduce using rule 5 (asignar -> cadena .)
    STRING          reduce using rule 5 (asignar -> cadena .)
    STRINGV         reduce using rule 5 (asignar -> cadena .)
    IDLOCAL         reduce using rule 5 (asignar -> cadena .)
    IDINSTANCE      reduce using rule 5 (asignar -> cadena .)
    IDCLASS         reduce using rule 5 (asignar -> cadena .)
    IDGLOBAL        reduce using rule 5 (asignar -> cadena .)
    BREAK           reduce using rule 5 (asignar -> cadena .)
    POINT           shift and go to state 51


state 7

    (6) asignar -> metodocadena .

    $end            reduce using rule 6 (asignar -> metodocadena .)
    END             reduce using rule 6 (asignar -> metodocadena .)
    ARRAY           reduce using rule 6 (asignar -> metodocadena .)
    LSQBRACKET      reduce using rule 6 (asignar -> metodocadena .)
    LBRACKET        reduce using rule 6 (asignar -> metodocadena .)
    HASH            reduce using rule 6 (asignar -> metodocadena .)
    FOR             reduce using rule 6 (asignar -> metodocadena .)
    TRUE            reduce using rule 6 (asignar -> metodocadena .)
    FALSE           reduce using rule 6 (asignar -> metodocadena .)
    NIL             reduce using rule 6 (asignar -> metodocadena .)
    IF              reduce using rule 6 (asignar -> metodocadena .)
    WHILE           reduce using rule 6 (asignar -> metodocadena .)
    NUMBER          reduce using rule 6 (asignar -> metodocadena .)
    FLOAT           reduce using rule 6 (asignar -> metodocadena .)
    MINUS           reduce using rule 6 (asignar -> metodocadena .)
    STRING          reduce using rule 6 (asignar -> metodocadena .)
    STRINGV         reduce using rule 6 (asignar -> metodocadena .)
    IDLOCAL         reduce using rule 6 (asignar -> metodocadena .)
    IDINSTANCE      reduce using rule 6 (asignar -> metodocadena .)
    IDCLASS         reduce using rule 6 (asignar -> metodocadena .)
    IDGLOBAL        reduce using rule 6 (asignar -> metodocadena .)
    BREAK           reduce using rule 6 (asignar -> metodocadena .)


state 8

    (7) asignar -> arreglo .
    (85) metodosarreglo -> arreglo . POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (86) metodosarreglo -> arreglo . LSQBRACKET factor RSQBRACKET

  ! shift/reduce conflict for LSQBRACKET resolved as shift
    $end            reduce using rule 7 (asignar -> arreglo .)
    END             reduce using rule 7 (asignar -> arreglo .)
    ARRAY           reduce using rule 7 (asignar -> arreglo .)
    LBRACKET        reduce using rule 7 (asignar -> arreglo .)
    HASH            reduce using rule 7 (asignar -> arreglo .)
    FOR             reduce using rule 7 (asignar -> arreglo .)
    TRUE            reduce using rule 7 (asignar -> arreglo .)
    FALSE           reduce using rule 7 (asignar -> arreglo .)
    NIL             reduce using rule 7 (asignar -> arreglo .)
    IF              reduce using rule 7 (asignar -> arreglo .)
    WHILE           reduce using rule 7 (asignar -> arreglo .)
    NUMBER          reduce using rule 7 (asignar -> arreglo .)
    FLOAT           reduce using rule 7 (asignar -> arreglo .)
    MINUS           reduce using rule 7 (asignar -> arreglo .)
    STRING          reduce using rule 7 (asignar -> arreglo .)
    STRINGV         reduce using rule 7 (asignar -> arreglo .)
    IDLOCAL         reduce using rule 7 (asignar -> arreglo .)
    IDINSTANCE      reduce using rule 7 (asignar -> arreglo .)
    IDCLASS         reduce using rule 7 (asignar -> arreglo .)
    IDGLOBAL        reduce using rule 7 (asignar -> arreglo .)
    BREAK           reduce using rule 7 (asignar -> arreglo .)
    POINT           shift and go to state 52
    LSQBRACKET      shift and go to state 53

  ! LSQBRACKET      [ reduce using rule 7 (asignar -> arreglo .) ]


state 9

    (8) asignar -> metodosarreglo .

    $end            reduce using rule 8 (asignar -> metodosarreglo .)
    END             reduce using rule 8 (asignar -> metodosarreglo .)
    ARRAY           reduce using rule 8 (asignar -> metodosarreglo .)
    LSQBRACKET      reduce using rule 8 (asignar -> metodosarreglo .)
    LBRACKET        reduce using rule 8 (asignar -> metodosarreglo .)
    HASH            reduce using rule 8 (asignar -> metodosarreglo .)
    FOR             reduce using rule 8 (asignar -> metodosarreglo .)
    TRUE            reduce using rule 8 (asignar -> metodosarreglo .)
    FALSE           reduce using rule 8 (asignar -> metodosarreglo .)
    NIL             reduce using rule 8 (asignar -> metodosarreglo .)
    IF              reduce using rule 8 (asignar -> metodosarreglo .)
    WHILE           reduce using rule 8 (asignar -> metodosarreglo .)
    NUMBER          reduce using rule 8 (asignar -> metodosarreglo .)
    FLOAT           reduce using rule 8 (asignar -> metodosarreglo .)
    MINUS           reduce using rule 8 (asignar -> metodosarreglo .)
    STRING          reduce using rule 8 (asignar -> metodosarreglo .)
    STRINGV         reduce using rule 8 (asignar -> metodosarreglo .)
    IDLOCAL         reduce using rule 8 (asignar -> metodosarreglo .)
    IDINSTANCE      reduce using rule 8 (asignar -> metodosarreglo .)
    IDCLASS         reduce using rule 8 (asignar -> metodosarreglo .)
    IDGLOBAL        reduce using rule 8 (asignar -> metodosarreglo .)
    BREAK           reduce using rule 8 (asignar -> metodosarreglo .)


state 10

    (9) asignar -> hash .

    $end            reduce using rule 9 (asignar -> hash .)
    END             reduce using rule 9 (asignar -> hash .)
    ARRAY           reduce using rule 9 (asignar -> hash .)
    LSQBRACKET      reduce using rule 9 (asignar -> hash .)
    LBRACKET        reduce using rule 9 (asignar -> hash .)
    HASH            reduce using rule 9 (asignar -> hash .)
    FOR             reduce using rule 9 (asignar -> hash .)
    TRUE            reduce using rule 9 (asignar -> hash .)
    FALSE           reduce using rule 9 (asignar -> hash .)
    NIL             reduce using rule 9 (asignar -> hash .)
    IF              reduce using rule 9 (asignar -> hash .)
    WHILE           reduce using rule 9 (asignar -> hash .)
    NUMBER          reduce using rule 9 (asignar -> hash .)
    FLOAT           reduce using rule 9 (asignar -> hash .)
    MINUS           reduce using rule 9 (asignar -> hash .)
    STRING          reduce using rule 9 (asignar -> hash .)
    STRINGV         reduce using rule 9 (asignar -> hash .)
    IDLOCAL         reduce using rule 9 (asignar -> hash .)
    IDINSTANCE      reduce using rule 9 (asignar -> hash .)
    IDCLASS         reduce using rule 9 (asignar -> hash .)
    IDGLOBAL        reduce using rule 9 (asignar -> hash .)
    BREAK           reduce using rule 9 (asignar -> hash .)


state 11

    (10) asignar -> metodohash .

    $end            reduce using rule 10 (asignar -> metodohash .)
    END             reduce using rule 10 (asignar -> metodohash .)
    ARRAY           reduce using rule 10 (asignar -> metodohash .)
    LSQBRACKET      reduce using rule 10 (asignar -> metodohash .)
    LBRACKET        reduce using rule 10 (asignar -> metodohash .)
    HASH            reduce using rule 10 (asignar -> metodohash .)
    FOR             reduce using rule 10 (asignar -> metodohash .)
    TRUE            reduce using rule 10 (asignar -> metodohash .)
    FALSE           reduce using rule 10 (asignar -> metodohash .)
    NIL             reduce using rule 10 (asignar -> metodohash .)
    IF              reduce using rule 10 (asignar -> metodohash .)
    WHILE           reduce using rule 10 (asignar -> metodohash .)
    NUMBER          reduce using rule 10 (asignar -> metodohash .)
    FLOAT           reduce using rule 10 (asignar -> metodohash .)
    MINUS           reduce using rule 10 (asignar -> metodohash .)
    STRING          reduce using rule 10 (asignar -> metodohash .)
    STRINGV         reduce using rule 10 (asignar -> metodohash .)
    IDLOCAL         reduce using rule 10 (asignar -> metodohash .)
    IDINSTANCE      reduce using rule 10 (asignar -> metodohash .)
    IDCLASS         reduce using rule 10 (asignar -> metodohash .)
    IDGLOBAL        reduce using rule 10 (asignar -> metodohash .)
    BREAK           reduce using rule 10 (asignar -> metodohash .)


state 12

    (11) asignar -> boolean .

    $end            reduce using rule 11 (asignar -> boolean .)


state 13

    (12) asignar -> variables .
    (93) metodohash -> variables . ASSIGN hash POINT LENGTH
    (94) metodohash -> variables . POINT LENGTH
    (48) assigns -> variables . ASSIGN expression
    (49) assigns -> variables . ASSIGN variables
    (50) assigns -> variables . ASSIGN boolean
    (51) assigns -> variables . ASSIGN asignar
    (52) assigns -> variables . ASSIGNPLUS expression
    (53) assigns -> variables . ASSIGNPLUS variables
    (54) assigns -> variables . ASSIGNMIN expression
    (55) assigns -> variables . ASSIGNMIN variables

    $end            reduce using rule 12 (asignar -> variables .)
    ASSIGN          shift and go to state 54
    POINT           shift and go to state 55
    ASSIGNPLUS      shift and go to state 56
    ASSIGNMIN       shift and go to state 57


state 14

    (13) asignar -> assigns .

    $end            reduce using rule 13 (asignar -> assigns .)
    END             reduce using rule 13 (asignar -> assigns .)
    ARRAY           reduce using rule 13 (asignar -> assigns .)
    LSQBRACKET      reduce using rule 13 (asignar -> assigns .)
    LBRACKET        reduce using rule 13 (asignar -> assigns .)
    HASH            reduce using rule 13 (asignar -> assigns .)
    FOR             reduce using rule 13 (asignar -> assigns .)
    TRUE            reduce using rule 13 (asignar -> assigns .)
    FALSE           reduce using rule 13 (asignar -> assigns .)
    NIL             reduce using rule 13 (asignar -> assigns .)
    IF              reduce using rule 13 (asignar -> assigns .)
    WHILE           reduce using rule 13 (asignar -> assigns .)
    NUMBER          reduce using rule 13 (asignar -> assigns .)
    FLOAT           reduce using rule 13 (asignar -> assigns .)
    MINUS           reduce using rule 13 (asignar -> assigns .)
    STRING          reduce using rule 13 (asignar -> assigns .)
    STRINGV         reduce using rule 13 (asignar -> assigns .)
    IDLOCAL         reduce using rule 13 (asignar -> assigns .)
    IDINSTANCE      reduce using rule 13 (asignar -> assigns .)
    IDCLASS         reduce using rule 13 (asignar -> assigns .)
    IDGLOBAL        reduce using rule 13 (asignar -> assigns .)
    BREAK           reduce using rule 13 (asignar -> assigns .)


state 15

    (14) noasignar -> estructurasControl .

    $end            reduce using rule 14 (noasignar -> estructurasControl .)


state 16

    (15) noasignar -> oputs .

    $end            reduce using rule 15 (noasignar -> oputs .)


state 17

    (16) noasignar -> putss .

    $end            reduce using rule 16 (noasignar -> putss .)


state 18

    (17) noasignar -> putsenx .

    $end            reduce using rule 17 (noasignar -> putsenx .)


state 19

    (18) noasignar -> sentenIF .

    $end            reduce using rule 18 (noasignar -> sentenIF .)


state 20

    (19) noasignar -> sentenWHILE .

    $end            reduce using rule 19 (noasignar -> sentenWHILE .)


state 21

    (58) expression -> term .

    PLUS            reduce using rule 58 (expression -> term .)
    MINUS           reduce using rule 58 (expression -> term .)
    DIVISION        reduce using rule 58 (expression -> term .)
    MOD             reduce using rule 58 (expression -> term .)
    MULT            reduce using rule 58 (expression -> term .)
    EXP             reduce using rule 58 (expression -> term .)
    $end            reduce using rule 58 (expression -> term .)
    END             reduce using rule 58 (expression -> term .)
    ARRAY           reduce using rule 58 (expression -> term .)
    LSQBRACKET      reduce using rule 58 (expression -> term .)
    LBRACKET        reduce using rule 58 (expression -> term .)
    HASH            reduce using rule 58 (expression -> term .)
    FOR             reduce using rule 58 (expression -> term .)
    TRUE            reduce using rule 58 (expression -> term .)
    FALSE           reduce using rule 58 (expression -> term .)
    NIL             reduce using rule 58 (expression -> term .)
    IF              reduce using rule 58 (expression -> term .)
    WHILE           reduce using rule 58 (expression -> term .)
    NUMBER          reduce using rule 58 (expression -> term .)
    FLOAT           reduce using rule 58 (expression -> term .)
    STRING          reduce using rule 58 (expression -> term .)
    STRINGV         reduce using rule 58 (expression -> term .)
    IDLOCAL         reduce using rule 58 (expression -> term .)
    IDINSTANCE      reduce using rule 58 (expression -> term .)
    IDCLASS         reduce using rule 58 (expression -> term .)
    IDGLOBAL        reduce using rule 58 (expression -> term .)
    BREAK           reduce using rule 58 (expression -> term .)


state 22

    (62) factor -> MINUS . NUMBER
    (63) factor -> MINUS . FLOAT

    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59


state 23

    (68) string -> STRINGV .

    POINT           reduce using rule 68 (string -> STRINGV .)
    $end            reduce using rule 68 (string -> STRINGV .)
    COMMA           reduce using rule 68 (string -> STRINGV .)
    RSQBRACKET      reduce using rule 68 (string -> STRINGV .)
    ASSIGN          reduce using rule 68 (string -> STRINGV .)
    END             reduce using rule 68 (string -> STRINGV .)
    ARRAY           reduce using rule 68 (string -> STRINGV .)
    LSQBRACKET      reduce using rule 68 (string -> STRINGV .)
    LBRACKET        reduce using rule 68 (string -> STRINGV .)
    HASH            reduce using rule 68 (string -> STRINGV .)
    FOR             reduce using rule 68 (string -> STRINGV .)
    TRUE            reduce using rule 68 (string -> STRINGV .)
    FALSE           reduce using rule 68 (string -> STRINGV .)
    NIL             reduce using rule 68 (string -> STRINGV .)
    IF              reduce using rule 68 (string -> STRINGV .)
    WHILE           reduce using rule 68 (string -> STRINGV .)
    NUMBER          reduce using rule 68 (string -> STRINGV .)
    FLOAT           reduce using rule 68 (string -> STRINGV .)
    MINUS           reduce using rule 68 (string -> STRINGV .)
    STRING          reduce using rule 68 (string -> STRINGV .)
    STRINGV         reduce using rule 68 (string -> STRINGV .)
    IDLOCAL         reduce using rule 68 (string -> STRINGV .)
    IDINSTANCE      reduce using rule 68 (string -> STRINGV .)
    IDCLASS         reduce using rule 68 (string -> STRINGV .)
    IDGLOBAL        reduce using rule 68 (string -> STRINGV .)
    BREAK           reduce using rule 68 (string -> STRINGV .)
    RPARENTHESIS    reduce using rule 68 (string -> STRINGV .)
    RBRACKET        reduce using rule 68 (string -> STRINGV .)


state 24

    (69) cadena -> STRING . POINT NEW
    (70) cadena -> STRING . POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> STRING . LPARENTHESIS string RPARENTHESIS

    POINT           shift and go to state 60
    LPARENTHESIS    shift and go to state 61


state 25

    (76) arreglo -> ARRAY . POINT NEW
    (77) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (79) arreglo -> ARRAY . LSQBRACKET arraycontent RSQBRACKET

    POINT           shift and go to state 62
    LSQBRACKET      shift and go to state 63


state 26

    (59) term -> factor .

    PLUS            reduce using rule 59 (term -> factor .)
    MINUS           reduce using rule 59 (term -> factor .)
    DIVISION        reduce using rule 59 (term -> factor .)
    MOD             reduce using rule 59 (term -> factor .)
    MULT            reduce using rule 59 (term -> factor .)
    EXP             reduce using rule 59 (term -> factor .)
    $end            reduce using rule 59 (term -> factor .)
    END             reduce using rule 59 (term -> factor .)
    ARRAY           reduce using rule 59 (term -> factor .)
    LSQBRACKET      reduce using rule 59 (term -> factor .)
    LBRACKET        reduce using rule 59 (term -> factor .)
    HASH            reduce using rule 59 (term -> factor .)
    FOR             reduce using rule 59 (term -> factor .)
    TRUE            reduce using rule 59 (term -> factor .)
    FALSE           reduce using rule 59 (term -> factor .)
    NIL             reduce using rule 59 (term -> factor .)
    IF              reduce using rule 59 (term -> factor .)
    WHILE           reduce using rule 59 (term -> factor .)
    NUMBER          reduce using rule 59 (term -> factor .)
    FLOAT           reduce using rule 59 (term -> factor .)
    STRING          reduce using rule 59 (term -> factor .)
    STRINGV         reduce using rule 59 (term -> factor .)
    IDLOCAL         reduce using rule 59 (term -> factor .)
    IDINSTANCE      reduce using rule 59 (term -> factor .)
    IDCLASS         reduce using rule 59 (term -> factor .)
    IDGLOBAL        reduce using rule 59 (term -> factor .)
    BREAK           reduce using rule 59 (term -> factor .)


state 27

    (80) arreglo -> LSQBRACKET . arraycontent RSQBRACKET
    (81) arraycontent -> . factor
    (82) arraycontent -> . string
    (83) arraycontent -> . factor COMMA arraycontent
    (84) arraycontent -> . string COMMA arraycontent
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT
    (68) string -> . STRINGV

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22
    STRINGV         shift and go to state 23

    arraycontent                   shift and go to state 64
    factor                         shift and go to state 65
    string                         shift and go to state 66

state 28

    (87) hash -> LBRACKET . hashcontent RBRACKET
    (89) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (90) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (68) string -> . STRINGV

    STRINGV         shift and go to state 23

    hashcontent                    shift and go to state 67
    string                         shift and go to state 68

state 29

    (88) hash -> HASH . POINT NEW

    POINT           shift and go to state 69


state 30

    (20) boolean -> TRUE .

    $end            reduce using rule 20 (boolean -> TRUE .)
    ARRAY           reduce using rule 20 (boolean -> TRUE .)
    LSQBRACKET      reduce using rule 20 (boolean -> TRUE .)
    LBRACKET        reduce using rule 20 (boolean -> TRUE .)
    HASH            reduce using rule 20 (boolean -> TRUE .)
    FOR             reduce using rule 20 (boolean -> TRUE .)
    TRUE            reduce using rule 20 (boolean -> TRUE .)
    FALSE           reduce using rule 20 (boolean -> TRUE .)
    NIL             reduce using rule 20 (boolean -> TRUE .)
    IF              reduce using rule 20 (boolean -> TRUE .)
    WHILE           reduce using rule 20 (boolean -> TRUE .)
    STRING          reduce using rule 20 (boolean -> TRUE .)
    STRINGV         reduce using rule 20 (boolean -> TRUE .)
    IDLOCAL         reduce using rule 20 (boolean -> TRUE .)
    IDINSTANCE      reduce using rule 20 (boolean -> TRUE .)
    IDCLASS         reduce using rule 20 (boolean -> TRUE .)
    IDGLOBAL        reduce using rule 20 (boolean -> TRUE .)
    NUMBER          reduce using rule 20 (boolean -> TRUE .)
    FLOAT           reduce using rule 20 (boolean -> TRUE .)
    MINUS           reduce using rule 20 (boolean -> TRUE .)
    END             reduce using rule 20 (boolean -> TRUE .)
    BREAK           reduce using rule 20 (boolean -> TRUE .)


state 31

    (21) boolean -> FALSE .

    $end            reduce using rule 21 (boolean -> FALSE .)
    ARRAY           reduce using rule 21 (boolean -> FALSE .)
    LSQBRACKET      reduce using rule 21 (boolean -> FALSE .)
    LBRACKET        reduce using rule 21 (boolean -> FALSE .)
    HASH            reduce using rule 21 (boolean -> FALSE .)
    FOR             reduce using rule 21 (boolean -> FALSE .)
    TRUE            reduce using rule 21 (boolean -> FALSE .)
    FALSE           reduce using rule 21 (boolean -> FALSE .)
    NIL             reduce using rule 21 (boolean -> FALSE .)
    IF              reduce using rule 21 (boolean -> FALSE .)
    WHILE           reduce using rule 21 (boolean -> FALSE .)
    STRING          reduce using rule 21 (boolean -> FALSE .)
    STRINGV         reduce using rule 21 (boolean -> FALSE .)
    IDLOCAL         reduce using rule 21 (boolean -> FALSE .)
    IDINSTANCE      reduce using rule 21 (boolean -> FALSE .)
    IDCLASS         reduce using rule 21 (boolean -> FALSE .)
    IDGLOBAL        reduce using rule 21 (boolean -> FALSE .)
    NUMBER          reduce using rule 21 (boolean -> FALSE .)
    FLOAT           reduce using rule 21 (boolean -> FALSE .)
    MINUS           reduce using rule 21 (boolean -> FALSE .)
    END             reduce using rule 21 (boolean -> FALSE .)
    BREAK           reduce using rule 21 (boolean -> FALSE .)


state 32

    (22) boolean -> NIL .

    $end            reduce using rule 22 (boolean -> NIL .)
    ARRAY           reduce using rule 22 (boolean -> NIL .)
    LSQBRACKET      reduce using rule 22 (boolean -> NIL .)
    LBRACKET        reduce using rule 22 (boolean -> NIL .)
    HASH            reduce using rule 22 (boolean -> NIL .)
    FOR             reduce using rule 22 (boolean -> NIL .)
    TRUE            reduce using rule 22 (boolean -> NIL .)
    FALSE           reduce using rule 22 (boolean -> NIL .)
    NIL             reduce using rule 22 (boolean -> NIL .)
    IF              reduce using rule 22 (boolean -> NIL .)
    WHILE           reduce using rule 22 (boolean -> NIL .)
    STRING          reduce using rule 22 (boolean -> NIL .)
    STRINGV         reduce using rule 22 (boolean -> NIL .)
    IDLOCAL         reduce using rule 22 (boolean -> NIL .)
    IDINSTANCE      reduce using rule 22 (boolean -> NIL .)
    IDCLASS         reduce using rule 22 (boolean -> NIL .)
    IDGLOBAL        reduce using rule 22 (boolean -> NIL .)
    NUMBER          reduce using rule 22 (boolean -> NIL .)
    FLOAT           reduce using rule 22 (boolean -> NIL .)
    MINUS           reduce using rule 22 (boolean -> NIL .)
    END             reduce using rule 22 (boolean -> NIL .)
    BREAK           reduce using rule 22 (boolean -> NIL .)


state 33

    (44) variables -> IDLOCAL .

    ASSIGN          reduce using rule 44 (variables -> IDLOCAL .)
    POINT           reduce using rule 44 (variables -> IDLOCAL .)
    ASSIGNPLUS      reduce using rule 44 (variables -> IDLOCAL .)
    ASSIGNMIN       reduce using rule 44 (variables -> IDLOCAL .)
    $end            reduce using rule 44 (variables -> IDLOCAL .)
    COMPARE         reduce using rule 44 (variables -> IDLOCAL .)
    GREQUAL         reduce using rule 44 (variables -> IDLOCAL .)
    LSEQUAL         reduce using rule 44 (variables -> IDLOCAL .)
    NOTEQUAL        reduce using rule 44 (variables -> IDLOCAL .)
    LESS            reduce using rule 44 (variables -> IDLOCAL .)
    GREATER         reduce using rule 44 (variables -> IDLOCAL .)
    ARRAY           reduce using rule 44 (variables -> IDLOCAL .)
    LSQBRACKET      reduce using rule 44 (variables -> IDLOCAL .)
    LBRACKET        reduce using rule 44 (variables -> IDLOCAL .)
    HASH            reduce using rule 44 (variables -> IDLOCAL .)
    FOR             reduce using rule 44 (variables -> IDLOCAL .)
    TRUE            reduce using rule 44 (variables -> IDLOCAL .)
    FALSE           reduce using rule 44 (variables -> IDLOCAL .)
    NIL             reduce using rule 44 (variables -> IDLOCAL .)
    IF              reduce using rule 44 (variables -> IDLOCAL .)
    WHILE           reduce using rule 44 (variables -> IDLOCAL .)
    STRING          reduce using rule 44 (variables -> IDLOCAL .)
    STRINGV         reduce using rule 44 (variables -> IDLOCAL .)
    IDLOCAL         reduce using rule 44 (variables -> IDLOCAL .)
    IDINSTANCE      reduce using rule 44 (variables -> IDLOCAL .)
    IDCLASS         reduce using rule 44 (variables -> IDLOCAL .)
    IDGLOBAL        reduce using rule 44 (variables -> IDLOCAL .)
    NUMBER          reduce using rule 44 (variables -> IDLOCAL .)
    FLOAT           reduce using rule 44 (variables -> IDLOCAL .)
    MINUS           reduce using rule 44 (variables -> IDLOCAL .)
    END             reduce using rule 44 (variables -> IDLOCAL .)
    BREAK           reduce using rule 44 (variables -> IDLOCAL .)


state 34

    (45) variables -> IDINSTANCE .

    ASSIGN          reduce using rule 45 (variables -> IDINSTANCE .)
    POINT           reduce using rule 45 (variables -> IDINSTANCE .)
    ASSIGNPLUS      reduce using rule 45 (variables -> IDINSTANCE .)
    ASSIGNMIN       reduce using rule 45 (variables -> IDINSTANCE .)
    $end            reduce using rule 45 (variables -> IDINSTANCE .)
    COMPARE         reduce using rule 45 (variables -> IDINSTANCE .)
    GREQUAL         reduce using rule 45 (variables -> IDINSTANCE .)
    LSEQUAL         reduce using rule 45 (variables -> IDINSTANCE .)
    NOTEQUAL        reduce using rule 45 (variables -> IDINSTANCE .)
    LESS            reduce using rule 45 (variables -> IDINSTANCE .)
    GREATER         reduce using rule 45 (variables -> IDINSTANCE .)
    ARRAY           reduce using rule 45 (variables -> IDINSTANCE .)
    LSQBRACKET      reduce using rule 45 (variables -> IDINSTANCE .)
    LBRACKET        reduce using rule 45 (variables -> IDINSTANCE .)
    HASH            reduce using rule 45 (variables -> IDINSTANCE .)
    FOR             reduce using rule 45 (variables -> IDINSTANCE .)
    TRUE            reduce using rule 45 (variables -> IDINSTANCE .)
    FALSE           reduce using rule 45 (variables -> IDINSTANCE .)
    NIL             reduce using rule 45 (variables -> IDINSTANCE .)
    IF              reduce using rule 45 (variables -> IDINSTANCE .)
    WHILE           reduce using rule 45 (variables -> IDINSTANCE .)
    STRING          reduce using rule 45 (variables -> IDINSTANCE .)
    STRINGV         reduce using rule 45 (variables -> IDINSTANCE .)
    IDLOCAL         reduce using rule 45 (variables -> IDINSTANCE .)
    IDINSTANCE      reduce using rule 45 (variables -> IDINSTANCE .)
    IDCLASS         reduce using rule 45 (variables -> IDINSTANCE .)
    IDGLOBAL        reduce using rule 45 (variables -> IDINSTANCE .)
    NUMBER          reduce using rule 45 (variables -> IDINSTANCE .)
    FLOAT           reduce using rule 45 (variables -> IDINSTANCE .)
    MINUS           reduce using rule 45 (variables -> IDINSTANCE .)
    END             reduce using rule 45 (variables -> IDINSTANCE .)
    BREAK           reduce using rule 45 (variables -> IDINSTANCE .)


state 35

    (46) variables -> IDCLASS .

    ASSIGN          reduce using rule 46 (variables -> IDCLASS .)
    POINT           reduce using rule 46 (variables -> IDCLASS .)
    ASSIGNPLUS      reduce using rule 46 (variables -> IDCLASS .)
    ASSIGNMIN       reduce using rule 46 (variables -> IDCLASS .)
    $end            reduce using rule 46 (variables -> IDCLASS .)
    COMPARE         reduce using rule 46 (variables -> IDCLASS .)
    GREQUAL         reduce using rule 46 (variables -> IDCLASS .)
    LSEQUAL         reduce using rule 46 (variables -> IDCLASS .)
    NOTEQUAL        reduce using rule 46 (variables -> IDCLASS .)
    LESS            reduce using rule 46 (variables -> IDCLASS .)
    GREATER         reduce using rule 46 (variables -> IDCLASS .)
    ARRAY           reduce using rule 46 (variables -> IDCLASS .)
    LSQBRACKET      reduce using rule 46 (variables -> IDCLASS .)
    LBRACKET        reduce using rule 46 (variables -> IDCLASS .)
    HASH            reduce using rule 46 (variables -> IDCLASS .)
    FOR             reduce using rule 46 (variables -> IDCLASS .)
    TRUE            reduce using rule 46 (variables -> IDCLASS .)
    FALSE           reduce using rule 46 (variables -> IDCLASS .)
    NIL             reduce using rule 46 (variables -> IDCLASS .)
    IF              reduce using rule 46 (variables -> IDCLASS .)
    WHILE           reduce using rule 46 (variables -> IDCLASS .)
    STRING          reduce using rule 46 (variables -> IDCLASS .)
    STRINGV         reduce using rule 46 (variables -> IDCLASS .)
    IDLOCAL         reduce using rule 46 (variables -> IDCLASS .)
    IDINSTANCE      reduce using rule 46 (variables -> IDCLASS .)
    IDCLASS         reduce using rule 46 (variables -> IDCLASS .)
    IDGLOBAL        reduce using rule 46 (variables -> IDCLASS .)
    NUMBER          reduce using rule 46 (variables -> IDCLASS .)
    FLOAT           reduce using rule 46 (variables -> IDCLASS .)
    MINUS           reduce using rule 46 (variables -> IDCLASS .)
    END             reduce using rule 46 (variables -> IDCLASS .)
    BREAK           reduce using rule 46 (variables -> IDCLASS .)


state 36

    (47) variables -> IDGLOBAL .

    ASSIGN          reduce using rule 47 (variables -> IDGLOBAL .)
    POINT           reduce using rule 47 (variables -> IDGLOBAL .)
    ASSIGNPLUS      reduce using rule 47 (variables -> IDGLOBAL .)
    ASSIGNMIN       reduce using rule 47 (variables -> IDGLOBAL .)
    $end            reduce using rule 47 (variables -> IDGLOBAL .)
    COMPARE         reduce using rule 47 (variables -> IDGLOBAL .)
    GREQUAL         reduce using rule 47 (variables -> IDGLOBAL .)
    LSEQUAL         reduce using rule 47 (variables -> IDGLOBAL .)
    NOTEQUAL        reduce using rule 47 (variables -> IDGLOBAL .)
    LESS            reduce using rule 47 (variables -> IDGLOBAL .)
    GREATER         reduce using rule 47 (variables -> IDGLOBAL .)
    ARRAY           reduce using rule 47 (variables -> IDGLOBAL .)
    LSQBRACKET      reduce using rule 47 (variables -> IDGLOBAL .)
    LBRACKET        reduce using rule 47 (variables -> IDGLOBAL .)
    HASH            reduce using rule 47 (variables -> IDGLOBAL .)
    FOR             reduce using rule 47 (variables -> IDGLOBAL .)
    TRUE            reduce using rule 47 (variables -> IDGLOBAL .)
    FALSE           reduce using rule 47 (variables -> IDGLOBAL .)
    NIL             reduce using rule 47 (variables -> IDGLOBAL .)
    IF              reduce using rule 47 (variables -> IDGLOBAL .)
    WHILE           reduce using rule 47 (variables -> IDGLOBAL .)
    STRING          reduce using rule 47 (variables -> IDGLOBAL .)
    STRINGV         reduce using rule 47 (variables -> IDGLOBAL .)
    IDLOCAL         reduce using rule 47 (variables -> IDGLOBAL .)
    IDINSTANCE      reduce using rule 47 (variables -> IDGLOBAL .)
    IDCLASS         reduce using rule 47 (variables -> IDGLOBAL .)
    IDGLOBAL        reduce using rule 47 (variables -> IDGLOBAL .)
    NUMBER          reduce using rule 47 (variables -> IDGLOBAL .)
    FLOAT           reduce using rule 47 (variables -> IDGLOBAL .)
    MINUS           reduce using rule 47 (variables -> IDGLOBAL .)
    END             reduce using rule 47 (variables -> IDGLOBAL .)
    BREAK           reduce using rule 47 (variables -> IDGLOBAL .)


state 37

    (102) estructurasControl -> FOR . IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> FOR . IDLOCAL IN factor POINT POINT factor DO forcontent END

    IDLOCAL         shift and go to state 70


state 38

    (95) sentenIF -> IF . comparador term
    (96) comparador -> . COMPARE
    (97) comparador -> . GREQUAL
    (98) comparador -> . LSEQUAL
    (99) comparador -> . NOTEQUAL
    (100) comparador -> . LESS
    (101) comparador -> . GREATER

    COMPARE         shift and go to state 72
    GREQUAL         shift and go to state 73
    LSEQUAL         shift and go to state 74
    NOTEQUAL        shift and go to state 75
    LESS            shift and go to state 76
    GREATER         shift and go to state 77

    comparador                     shift and go to state 71

state 39

    (23) oputs -> PUTS .
    (24) putss -> PUTS . string
    (25) putss -> PUTS . cadena
    (28) putsenx -> PUTS . expression
    (68) string -> . STRINGV
    (69) cadena -> . STRING POINT NEW
    (70) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    $end            reduce using rule 23 (oputs -> PUTS .)
    STRINGV         shift and go to state 23
    STRING          shift and go to state 24
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    string                         shift and go to state 78
    cadena                         shift and go to state 79
    expression                     shift and go to state 80
    term                           shift and go to state 21
    factor                         shift and go to state 26

state 40

    (26) putss -> PRINT . string
    (27) putss -> PRINT . cadena
    (29) putsenx -> PRINT . expression
    (68) string -> . STRINGV
    (69) cadena -> . STRING POINT NEW
    (70) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 23
    STRING          shift and go to state 24
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    string                         shift and go to state 81
    cadena                         shift and go to state 82
    expression                     shift and go to state 83
    term                           shift and go to state 21
    factor                         shift and go to state 26

state 41

    (40) sentenWHILE -> WHILE . variables comparador variables algoritmo END
    (41) sentenWHILE -> WHILE . variables comparador expression algoritmo END
    (42) sentenWHILE -> WHILE . boolean algoritmo END
    (43) sentenWHILE -> WHILE . variables algoritmo END
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL
    (20) boolean -> . TRUE
    (21) boolean -> . FALSE
    (22) boolean -> . NIL

    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32

    variables                      shift and go to state 84
    boolean                        shift and go to state 85

state 42

    (60) factor -> NUMBER .

    PLUS            reduce using rule 60 (factor -> NUMBER .)
    MINUS           reduce using rule 60 (factor -> NUMBER .)
    DIVISION        reduce using rule 60 (factor -> NUMBER .)
    MOD             reduce using rule 60 (factor -> NUMBER .)
    MULT            reduce using rule 60 (factor -> NUMBER .)
    EXP             reduce using rule 60 (factor -> NUMBER .)
    $end            reduce using rule 60 (factor -> NUMBER .)
    COMMA           reduce using rule 60 (factor -> NUMBER .)
    RSQBRACKET      reduce using rule 60 (factor -> NUMBER .)
    END             reduce using rule 60 (factor -> NUMBER .)
    ARRAY           reduce using rule 60 (factor -> NUMBER .)
    LSQBRACKET      reduce using rule 60 (factor -> NUMBER .)
    LBRACKET        reduce using rule 60 (factor -> NUMBER .)
    HASH            reduce using rule 60 (factor -> NUMBER .)
    FOR             reduce using rule 60 (factor -> NUMBER .)
    TRUE            reduce using rule 60 (factor -> NUMBER .)
    FALSE           reduce using rule 60 (factor -> NUMBER .)
    NIL             reduce using rule 60 (factor -> NUMBER .)
    IF              reduce using rule 60 (factor -> NUMBER .)
    WHILE           reduce using rule 60 (factor -> NUMBER .)
    NUMBER          reduce using rule 60 (factor -> NUMBER .)
    FLOAT           reduce using rule 60 (factor -> NUMBER .)
    STRING          reduce using rule 60 (factor -> NUMBER .)
    STRINGV         reduce using rule 60 (factor -> NUMBER .)
    IDLOCAL         reduce using rule 60 (factor -> NUMBER .)
    IDINSTANCE      reduce using rule 60 (factor -> NUMBER .)
    IDCLASS         reduce using rule 60 (factor -> NUMBER .)
    IDGLOBAL        reduce using rule 60 (factor -> NUMBER .)
    BREAK           reduce using rule 60 (factor -> NUMBER .)
    RPARENTHESIS    reduce using rule 60 (factor -> NUMBER .)
    POINT           reduce using rule 60 (factor -> NUMBER .)
    RBRACKET        reduce using rule 60 (factor -> NUMBER .)
    DO              reduce using rule 60 (factor -> NUMBER .)


state 43

    (61) factor -> FLOAT .

    PLUS            reduce using rule 61 (factor -> FLOAT .)
    MINUS           reduce using rule 61 (factor -> FLOAT .)
    DIVISION        reduce using rule 61 (factor -> FLOAT .)
    MOD             reduce using rule 61 (factor -> FLOAT .)
    MULT            reduce using rule 61 (factor -> FLOAT .)
    EXP             reduce using rule 61 (factor -> FLOAT .)
    $end            reduce using rule 61 (factor -> FLOAT .)
    COMMA           reduce using rule 61 (factor -> FLOAT .)
    RSQBRACKET      reduce using rule 61 (factor -> FLOAT .)
    END             reduce using rule 61 (factor -> FLOAT .)
    ARRAY           reduce using rule 61 (factor -> FLOAT .)
    LSQBRACKET      reduce using rule 61 (factor -> FLOAT .)
    LBRACKET        reduce using rule 61 (factor -> FLOAT .)
    HASH            reduce using rule 61 (factor -> FLOAT .)
    FOR             reduce using rule 61 (factor -> FLOAT .)
    TRUE            reduce using rule 61 (factor -> FLOAT .)
    FALSE           reduce using rule 61 (factor -> FLOAT .)
    NIL             reduce using rule 61 (factor -> FLOAT .)
    IF              reduce using rule 61 (factor -> FLOAT .)
    WHILE           reduce using rule 61 (factor -> FLOAT .)
    NUMBER          reduce using rule 61 (factor -> FLOAT .)
    FLOAT           reduce using rule 61 (factor -> FLOAT .)
    STRING          reduce using rule 61 (factor -> FLOAT .)
    STRINGV         reduce using rule 61 (factor -> FLOAT .)
    IDLOCAL         reduce using rule 61 (factor -> FLOAT .)
    IDINSTANCE      reduce using rule 61 (factor -> FLOAT .)
    IDCLASS         reduce using rule 61 (factor -> FLOAT .)
    IDGLOBAL        reduce using rule 61 (factor -> FLOAT .)
    BREAK           reduce using rule 61 (factor -> FLOAT .)
    RPARENTHESIS    reduce using rule 61 (factor -> FLOAT .)
    POINT           reduce using rule 61 (factor -> FLOAT .)
    RBRACKET        reduce using rule 61 (factor -> FLOAT .)
    DO              reduce using rule 61 (factor -> FLOAT .)


state 44

    (56) expression -> expression PLUS . term
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    term                           shift and go to state 86
    factor                         shift and go to state 26

state 45

    (57) expression -> expression MINUS . term
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    term                           shift and go to state 87
    factor                         shift and go to state 26

state 46

    (64) expression -> expression DIVISION . term
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    term                           shift and go to state 88
    factor                         shift and go to state 26

state 47

    (65) expression -> expression MOD . term
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    term                           shift and go to state 89
    factor                         shift and go to state 26

state 48

    (66) expression -> expression MULT . term
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    term                           shift and go to state 90
    factor                         shift and go to state 26

state 49

    (67) expression -> expression EXP . term
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    term                           shift and go to state 91
    factor                         shift and go to state 26

state 50

    (73) metodocadena -> string POINT . EMPTY INTERROGATIVE
    (75) metodocadena -> string POINT . LENGTH

    EMPTY           shift and go to state 92
    LENGTH          shift and go to state 93


state 51

    (72) metodocadena -> cadena POINT . EMPTY INTERROGATIVE
    (74) metodocadena -> cadena POINT . LENGTH

    EMPTY           shift and go to state 94
    LENGTH          shift and go to state 95


state 52

    (85) metodosarreglo -> arreglo POINT . INDEX LPARENTHESIS arraycontent RPARENTHESIS

    INDEX           shift and go to state 96


state 53

    (86) metodosarreglo -> arreglo LSQBRACKET . factor RSQBRACKET
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    factor                         shift and go to state 97

state 54

    (93) metodohash -> variables ASSIGN . hash POINT LENGTH
    (48) assigns -> variables ASSIGN . expression
    (49) assigns -> variables ASSIGN . variables
    (50) assigns -> variables ASSIGN . boolean
    (51) assigns -> variables ASSIGN . asignar
    (87) hash -> . LBRACKET hashcontent RBRACKET
    (88) hash -> . HASH POINT NEW
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL
    (20) boolean -> . TRUE
    (21) boolean -> . FALSE
    (22) boolean -> . NIL
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . assigns
    (59) term -> . factor
    (68) string -> . STRINGV
    (69) cadena -> . STRING POINT NEW
    (70) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (72) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (73) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (74) metodocadena -> . cadena POINT LENGTH
    (75) metodocadena -> . string POINT LENGTH
    (76) arreglo -> . ARRAY POINT NEW
    (77) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (79) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (80) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (85) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (86) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (93) metodohash -> . variables ASSIGN hash POINT LENGTH
    (94) metodohash -> . variables POINT LENGTH
    (48) assigns -> . variables ASSIGN expression
    (49) assigns -> . variables ASSIGN variables
    (50) assigns -> . variables ASSIGN boolean
    (51) assigns -> . variables ASSIGN asignar
    (52) assigns -> . variables ASSIGNPLUS expression
    (53) assigns -> . variables ASSIGNPLUS variables
    (54) assigns -> . variables ASSIGNMIN expression
    (55) assigns -> . variables ASSIGNMIN variables
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    LBRACKET        shift and go to state 28
    HASH            shift and go to state 29
    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32
    STRINGV         shift and go to state 23
    STRING          shift and go to state 24
    ARRAY           shift and go to state 25
    LSQBRACKET      shift and go to state 27
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    variables                      shift and go to state 98
    hash                           shift and go to state 99
    expression                     shift and go to state 100
    boolean                        shift and go to state 101
    asignar                        shift and go to state 102
    term                           shift and go to state 21
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    metodohash                     shift and go to state 11
    assigns                        shift and go to state 14
    factor                         shift and go to state 26

state 55

    (94) metodohash -> variables POINT . LENGTH

    LENGTH          shift and go to state 103


state 56

    (52) assigns -> variables ASSIGNPLUS . expression
    (53) assigns -> variables ASSIGNPLUS . variables
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    variables                      shift and go to state 104
    expression                     shift and go to state 105
    term                           shift and go to state 21
    factor                         shift and go to state 26

state 57

    (54) assigns -> variables ASSIGNMIN . expression
    (55) assigns -> variables ASSIGNMIN . variables
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    variables                      shift and go to state 106
    expression                     shift and go to state 107
    term                           shift and go to state 21
    factor                         shift and go to state 26

state 58

    (62) factor -> MINUS NUMBER .

    PLUS            reduce using rule 62 (factor -> MINUS NUMBER .)
    MINUS           reduce using rule 62 (factor -> MINUS NUMBER .)
    DIVISION        reduce using rule 62 (factor -> MINUS NUMBER .)
    MOD             reduce using rule 62 (factor -> MINUS NUMBER .)
    MULT            reduce using rule 62 (factor -> MINUS NUMBER .)
    EXP             reduce using rule 62 (factor -> MINUS NUMBER .)
    $end            reduce using rule 62 (factor -> MINUS NUMBER .)
    COMMA           reduce using rule 62 (factor -> MINUS NUMBER .)
    RSQBRACKET      reduce using rule 62 (factor -> MINUS NUMBER .)
    END             reduce using rule 62 (factor -> MINUS NUMBER .)
    ARRAY           reduce using rule 62 (factor -> MINUS NUMBER .)
    LSQBRACKET      reduce using rule 62 (factor -> MINUS NUMBER .)
    LBRACKET        reduce using rule 62 (factor -> MINUS NUMBER .)
    HASH            reduce using rule 62 (factor -> MINUS NUMBER .)
    FOR             reduce using rule 62 (factor -> MINUS NUMBER .)
    TRUE            reduce using rule 62 (factor -> MINUS NUMBER .)
    FALSE           reduce using rule 62 (factor -> MINUS NUMBER .)
    NIL             reduce using rule 62 (factor -> MINUS NUMBER .)
    IF              reduce using rule 62 (factor -> MINUS NUMBER .)
    WHILE           reduce using rule 62 (factor -> MINUS NUMBER .)
    NUMBER          reduce using rule 62 (factor -> MINUS NUMBER .)
    FLOAT           reduce using rule 62 (factor -> MINUS NUMBER .)
    STRING          reduce using rule 62 (factor -> MINUS NUMBER .)
    STRINGV         reduce using rule 62 (factor -> MINUS NUMBER .)
    IDLOCAL         reduce using rule 62 (factor -> MINUS NUMBER .)
    IDINSTANCE      reduce using rule 62 (factor -> MINUS NUMBER .)
    IDCLASS         reduce using rule 62 (factor -> MINUS NUMBER .)
    IDGLOBAL        reduce using rule 62 (factor -> MINUS NUMBER .)
    BREAK           reduce using rule 62 (factor -> MINUS NUMBER .)
    RPARENTHESIS    reduce using rule 62 (factor -> MINUS NUMBER .)
    POINT           reduce using rule 62 (factor -> MINUS NUMBER .)
    RBRACKET        reduce using rule 62 (factor -> MINUS NUMBER .)
    DO              reduce using rule 62 (factor -> MINUS NUMBER .)


state 59

    (63) factor -> MINUS FLOAT .

    PLUS            reduce using rule 63 (factor -> MINUS FLOAT .)
    MINUS           reduce using rule 63 (factor -> MINUS FLOAT .)
    DIVISION        reduce using rule 63 (factor -> MINUS FLOAT .)
    MOD             reduce using rule 63 (factor -> MINUS FLOAT .)
    MULT            reduce using rule 63 (factor -> MINUS FLOAT .)
    EXP             reduce using rule 63 (factor -> MINUS FLOAT .)
    $end            reduce using rule 63 (factor -> MINUS FLOAT .)
    COMMA           reduce using rule 63 (factor -> MINUS FLOAT .)
    RSQBRACKET      reduce using rule 63 (factor -> MINUS FLOAT .)
    END             reduce using rule 63 (factor -> MINUS FLOAT .)
    ARRAY           reduce using rule 63 (factor -> MINUS FLOAT .)
    LSQBRACKET      reduce using rule 63 (factor -> MINUS FLOAT .)
    LBRACKET        reduce using rule 63 (factor -> MINUS FLOAT .)
    HASH            reduce using rule 63 (factor -> MINUS FLOAT .)
    FOR             reduce using rule 63 (factor -> MINUS FLOAT .)
    TRUE            reduce using rule 63 (factor -> MINUS FLOAT .)
    FALSE           reduce using rule 63 (factor -> MINUS FLOAT .)
    NIL             reduce using rule 63 (factor -> MINUS FLOAT .)
    IF              reduce using rule 63 (factor -> MINUS FLOAT .)
    WHILE           reduce using rule 63 (factor -> MINUS FLOAT .)
    NUMBER          reduce using rule 63 (factor -> MINUS FLOAT .)
    FLOAT           reduce using rule 63 (factor -> MINUS FLOAT .)
    STRING          reduce using rule 63 (factor -> MINUS FLOAT .)
    STRINGV         reduce using rule 63 (factor -> MINUS FLOAT .)
    IDLOCAL         reduce using rule 63 (factor -> MINUS FLOAT .)
    IDINSTANCE      reduce using rule 63 (factor -> MINUS FLOAT .)
    IDCLASS         reduce using rule 63 (factor -> MINUS FLOAT .)
    IDGLOBAL        reduce using rule 63 (factor -> MINUS FLOAT .)
    BREAK           reduce using rule 63 (factor -> MINUS FLOAT .)
    RPARENTHESIS    reduce using rule 63 (factor -> MINUS FLOAT .)
    POINT           reduce using rule 63 (factor -> MINUS FLOAT .)
    RBRACKET        reduce using rule 63 (factor -> MINUS FLOAT .)
    DO              reduce using rule 63 (factor -> MINUS FLOAT .)


state 60

    (69) cadena -> STRING POINT . NEW
    (70) cadena -> STRING POINT . NEW LPARENTHESIS string RPARENTHESIS

    NEW             shift and go to state 108


state 61

    (71) cadena -> STRING LPARENTHESIS . string RPARENTHESIS
    (68) string -> . STRINGV

    STRINGV         shift and go to state 23

    string                         shift and go to state 109

state 62

    (76) arreglo -> ARRAY POINT . NEW
    (77) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    NEW             shift and go to state 110


state 63

    (79) arreglo -> ARRAY LSQBRACKET . arraycontent RSQBRACKET
    (81) arraycontent -> . factor
    (82) arraycontent -> . string
    (83) arraycontent -> . factor COMMA arraycontent
    (84) arraycontent -> . string COMMA arraycontent
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT
    (68) string -> . STRINGV

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22
    STRINGV         shift and go to state 23

    arraycontent                   shift and go to state 111
    factor                         shift and go to state 65
    string                         shift and go to state 66

state 64

    (80) arreglo -> LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 112


state 65

    (81) arraycontent -> factor .
    (83) arraycontent -> factor . COMMA arraycontent

    RSQBRACKET      reduce using rule 81 (arraycontent -> factor .)
    RPARENTHESIS    reduce using rule 81 (arraycontent -> factor .)
    COMMA           shift and go to state 113


state 66

    (82) arraycontent -> string .
    (84) arraycontent -> string . COMMA arraycontent

    RSQBRACKET      reduce using rule 82 (arraycontent -> string .)
    RPARENTHESIS    reduce using rule 82 (arraycontent -> string .)
    COMMA           shift and go to state 114


state 67

    (87) hash -> LBRACKET hashcontent . RBRACKET

    RBRACKET        shift and go to state 115


state 68

    (89) hashcontent -> string . ASSIGN GREATER hashcontentvalue
    (90) hashcontent -> string . ASSIGN GREATER hashcontentvalue COMMA hashcontent

    ASSIGN          shift and go to state 116


state 69

    (88) hash -> HASH POINT . NEW

    NEW             shift and go to state 117


state 70

    (102) estructurasControl -> FOR IDLOCAL . IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> FOR IDLOCAL . IN factor POINT POINT factor DO forcontent END

    IN              shift and go to state 118


state 71

    (95) sentenIF -> IF comparador . term
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    term                           shift and go to state 119
    factor                         shift and go to state 26

state 72

    (96) comparador -> COMPARE .

    NUMBER          reduce using rule 96 (comparador -> COMPARE .)
    FLOAT           reduce using rule 96 (comparador -> COMPARE .)
    MINUS           reduce using rule 96 (comparador -> COMPARE .)
    IDLOCAL         reduce using rule 96 (comparador -> COMPARE .)
    IDINSTANCE      reduce using rule 96 (comparador -> COMPARE .)
    IDCLASS         reduce using rule 96 (comparador -> COMPARE .)
    IDGLOBAL        reduce using rule 96 (comparador -> COMPARE .)


state 73

    (97) comparador -> GREQUAL .

    NUMBER          reduce using rule 97 (comparador -> GREQUAL .)
    FLOAT           reduce using rule 97 (comparador -> GREQUAL .)
    MINUS           reduce using rule 97 (comparador -> GREQUAL .)
    IDLOCAL         reduce using rule 97 (comparador -> GREQUAL .)
    IDINSTANCE      reduce using rule 97 (comparador -> GREQUAL .)
    IDCLASS         reduce using rule 97 (comparador -> GREQUAL .)
    IDGLOBAL        reduce using rule 97 (comparador -> GREQUAL .)


state 74

    (98) comparador -> LSEQUAL .

    NUMBER          reduce using rule 98 (comparador -> LSEQUAL .)
    FLOAT           reduce using rule 98 (comparador -> LSEQUAL .)
    MINUS           reduce using rule 98 (comparador -> LSEQUAL .)
    IDLOCAL         reduce using rule 98 (comparador -> LSEQUAL .)
    IDINSTANCE      reduce using rule 98 (comparador -> LSEQUAL .)
    IDCLASS         reduce using rule 98 (comparador -> LSEQUAL .)
    IDGLOBAL        reduce using rule 98 (comparador -> LSEQUAL .)


state 75

    (99) comparador -> NOTEQUAL .

    NUMBER          reduce using rule 99 (comparador -> NOTEQUAL .)
    FLOAT           reduce using rule 99 (comparador -> NOTEQUAL .)
    MINUS           reduce using rule 99 (comparador -> NOTEQUAL .)
    IDLOCAL         reduce using rule 99 (comparador -> NOTEQUAL .)
    IDINSTANCE      reduce using rule 99 (comparador -> NOTEQUAL .)
    IDCLASS         reduce using rule 99 (comparador -> NOTEQUAL .)
    IDGLOBAL        reduce using rule 99 (comparador -> NOTEQUAL .)


state 76

    (100) comparador -> LESS .

    NUMBER          reduce using rule 100 (comparador -> LESS .)
    FLOAT           reduce using rule 100 (comparador -> LESS .)
    MINUS           reduce using rule 100 (comparador -> LESS .)
    IDLOCAL         reduce using rule 100 (comparador -> LESS .)
    IDINSTANCE      reduce using rule 100 (comparador -> LESS .)
    IDCLASS         reduce using rule 100 (comparador -> LESS .)
    IDGLOBAL        reduce using rule 100 (comparador -> LESS .)


state 77

    (101) comparador -> GREATER .

    NUMBER          reduce using rule 101 (comparador -> GREATER .)
    FLOAT           reduce using rule 101 (comparador -> GREATER .)
    MINUS           reduce using rule 101 (comparador -> GREATER .)
    IDLOCAL         reduce using rule 101 (comparador -> GREATER .)
    IDINSTANCE      reduce using rule 101 (comparador -> GREATER .)
    IDCLASS         reduce using rule 101 (comparador -> GREATER .)
    IDGLOBAL        reduce using rule 101 (comparador -> GREATER .)


state 78

    (24) putss -> PUTS string .

    $end            reduce using rule 24 (putss -> PUTS string .)


state 79

    (25) putss -> PUTS cadena .

    $end            reduce using rule 25 (putss -> PUTS cadena .)


state 80

    (28) putsenx -> PUTS expression .
    (56) expression -> expression . PLUS term
    (57) expression -> expression . MINUS term
    (64) expression -> expression . DIVISION term
    (65) expression -> expression . MOD term
    (66) expression -> expression . MULT term
    (67) expression -> expression . EXP term

    $end            reduce using rule 28 (putsenx -> PUTS expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    DIVISION        shift and go to state 46
    MOD             shift and go to state 47
    MULT            shift and go to state 48
    EXP             shift and go to state 49


state 81

    (26) putss -> PRINT string .

    $end            reduce using rule 26 (putss -> PRINT string .)


state 82

    (27) putss -> PRINT cadena .

    $end            reduce using rule 27 (putss -> PRINT cadena .)


state 83

    (29) putsenx -> PRINT expression .
    (56) expression -> expression . PLUS term
    (57) expression -> expression . MINUS term
    (64) expression -> expression . DIVISION term
    (65) expression -> expression . MOD term
    (66) expression -> expression . MULT term
    (67) expression -> expression . EXP term

    $end            reduce using rule 29 (putsenx -> PRINT expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    DIVISION        shift and go to state 46
    MOD             shift and go to state 47
    MULT            shift and go to state 48
    EXP             shift and go to state 49


state 84

    (40) sentenWHILE -> WHILE variables . comparador variables algoritmo END
    (41) sentenWHILE -> WHILE variables . comparador expression algoritmo END
    (43) sentenWHILE -> WHILE variables . algoritmo END
    (96) comparador -> . COMPARE
    (97) comparador -> . GREQUAL
    (98) comparador -> . LSEQUAL
    (99) comparador -> . NOTEQUAL
    (100) comparador -> . LESS
    (101) comparador -> . GREATER
    (30) algoritmo -> . expression
    (31) algoritmo -> . metodocadena
    (32) algoritmo -> . arreglo
    (33) algoritmo -> . metodosarreglo
    (34) algoritmo -> . hash
    (35) algoritmo -> . estructurasControl
    (36) algoritmo -> . boolean
    (37) algoritmo -> . assigns
    (38) algoritmo -> . sentenIF
    (39) algoritmo -> . sentenWHILE
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (72) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (73) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (74) metodocadena -> . cadena POINT LENGTH
    (75) metodocadena -> . string POINT LENGTH
    (76) arreglo -> . ARRAY POINT NEW
    (77) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (79) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (80) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (85) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (86) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (87) hash -> . LBRACKET hashcontent RBRACKET
    (88) hash -> . HASH POINT NEW
    (102) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (20) boolean -> . TRUE
    (21) boolean -> . FALSE
    (22) boolean -> . NIL
    (48) assigns -> . variables ASSIGN expression
    (49) assigns -> . variables ASSIGN variables
    (50) assigns -> . variables ASSIGN boolean
    (51) assigns -> . variables ASSIGN asignar
    (52) assigns -> . variables ASSIGNPLUS expression
    (53) assigns -> . variables ASSIGNPLUS variables
    (54) assigns -> . variables ASSIGNMIN expression
    (55) assigns -> . variables ASSIGNMIN variables
    (95) sentenIF -> . IF comparador term
    (40) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (41) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (42) sentenWHILE -> . WHILE boolean algoritmo END
    (43) sentenWHILE -> . WHILE variables algoritmo END
    (59) term -> . factor
    (69) cadena -> . STRING POINT NEW
    (70) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (68) string -> . STRINGV
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    COMPARE         shift and go to state 72
    GREQUAL         shift and go to state 73
    LSEQUAL         shift and go to state 74
    NOTEQUAL        shift and go to state 75
    LESS            shift and go to state 76
    GREATER         shift and go to state 77
    ARRAY           shift and go to state 25
    LSQBRACKET      shift and go to state 27
    LBRACKET        shift and go to state 28
    HASH            shift and go to state 29
    FOR             shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32
    IF              shift and go to state 38
    WHILE           shift and go to state 41
    STRING          shift and go to state 24
    STRINGV         shift and go to state 23
    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    variables                      shift and go to state 120
    comparador                     shift and go to state 121
    algoritmo                      shift and go to state 122
    expression                     shift and go to state 123
    metodocadena                   shift and go to state 124
    arreglo                        shift and go to state 125
    metodosarreglo                 shift and go to state 126
    hash                           shift and go to state 127
    estructurasControl             shift and go to state 128
    boolean                        shift and go to state 129
    assigns                        shift and go to state 130
    sentenIF                       shift and go to state 131
    sentenWHILE                    shift and go to state 132
    term                           shift and go to state 21
    cadena                         shift and go to state 133
    string                         shift and go to state 134
    factor                         shift and go to state 26

state 85

    (42) sentenWHILE -> WHILE boolean . algoritmo END
    (30) algoritmo -> . expression
    (31) algoritmo -> . metodocadena
    (32) algoritmo -> . arreglo
    (33) algoritmo -> . metodosarreglo
    (34) algoritmo -> . hash
    (35) algoritmo -> . estructurasControl
    (36) algoritmo -> . boolean
    (37) algoritmo -> . assigns
    (38) algoritmo -> . sentenIF
    (39) algoritmo -> . sentenWHILE
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (72) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (73) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (74) metodocadena -> . cadena POINT LENGTH
    (75) metodocadena -> . string POINT LENGTH
    (76) arreglo -> . ARRAY POINT NEW
    (77) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (79) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (80) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (85) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (86) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (87) hash -> . LBRACKET hashcontent RBRACKET
    (88) hash -> . HASH POINT NEW
    (102) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (20) boolean -> . TRUE
    (21) boolean -> . FALSE
    (22) boolean -> . NIL
    (48) assigns -> . variables ASSIGN expression
    (49) assigns -> . variables ASSIGN variables
    (50) assigns -> . variables ASSIGN boolean
    (51) assigns -> . variables ASSIGN asignar
    (52) assigns -> . variables ASSIGNPLUS expression
    (53) assigns -> . variables ASSIGNPLUS variables
    (54) assigns -> . variables ASSIGNMIN expression
    (55) assigns -> . variables ASSIGNMIN variables
    (95) sentenIF -> . IF comparador term
    (40) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (41) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (42) sentenWHILE -> . WHILE boolean algoritmo END
    (43) sentenWHILE -> . WHILE variables algoritmo END
    (59) term -> . factor
    (69) cadena -> . STRING POINT NEW
    (70) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (68) string -> . STRINGV
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 25
    LSQBRACKET      shift and go to state 27
    LBRACKET        shift and go to state 28
    HASH            shift and go to state 29
    FOR             shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32
    IF              shift and go to state 38
    WHILE           shift and go to state 41
    STRING          shift and go to state 24
    STRINGV         shift and go to state 23
    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    boolean                        shift and go to state 129
    algoritmo                      shift and go to state 135
    expression                     shift and go to state 123
    metodocadena                   shift and go to state 124
    arreglo                        shift and go to state 125
    metodosarreglo                 shift and go to state 126
    hash                           shift and go to state 127
    estructurasControl             shift and go to state 128
    assigns                        shift and go to state 130
    sentenIF                       shift and go to state 131
    sentenWHILE                    shift and go to state 132
    term                           shift and go to state 21
    cadena                         shift and go to state 133
    string                         shift and go to state 134
    factor                         shift and go to state 26
    variables                      shift and go to state 120

state 86

    (56) expression -> expression PLUS term .

    PLUS            reduce using rule 56 (expression -> expression PLUS term .)
    MINUS           reduce using rule 56 (expression -> expression PLUS term .)
    DIVISION        reduce using rule 56 (expression -> expression PLUS term .)
    MOD             reduce using rule 56 (expression -> expression PLUS term .)
    MULT            reduce using rule 56 (expression -> expression PLUS term .)
    EXP             reduce using rule 56 (expression -> expression PLUS term .)
    $end            reduce using rule 56 (expression -> expression PLUS term .)
    END             reduce using rule 56 (expression -> expression PLUS term .)
    ARRAY           reduce using rule 56 (expression -> expression PLUS term .)
    LSQBRACKET      reduce using rule 56 (expression -> expression PLUS term .)
    LBRACKET        reduce using rule 56 (expression -> expression PLUS term .)
    HASH            reduce using rule 56 (expression -> expression PLUS term .)
    FOR             reduce using rule 56 (expression -> expression PLUS term .)
    TRUE            reduce using rule 56 (expression -> expression PLUS term .)
    FALSE           reduce using rule 56 (expression -> expression PLUS term .)
    NIL             reduce using rule 56 (expression -> expression PLUS term .)
    IF              reduce using rule 56 (expression -> expression PLUS term .)
    WHILE           reduce using rule 56 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 56 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 56 (expression -> expression PLUS term .)
    STRING          reduce using rule 56 (expression -> expression PLUS term .)
    STRINGV         reduce using rule 56 (expression -> expression PLUS term .)
    IDLOCAL         reduce using rule 56 (expression -> expression PLUS term .)
    IDINSTANCE      reduce using rule 56 (expression -> expression PLUS term .)
    IDCLASS         reduce using rule 56 (expression -> expression PLUS term .)
    IDGLOBAL        reduce using rule 56 (expression -> expression PLUS term .)
    BREAK           reduce using rule 56 (expression -> expression PLUS term .)


state 87

    (57) expression -> expression MINUS term .

    PLUS            reduce using rule 57 (expression -> expression MINUS term .)
    MINUS           reduce using rule 57 (expression -> expression MINUS term .)
    DIVISION        reduce using rule 57 (expression -> expression MINUS term .)
    MOD             reduce using rule 57 (expression -> expression MINUS term .)
    MULT            reduce using rule 57 (expression -> expression MINUS term .)
    EXP             reduce using rule 57 (expression -> expression MINUS term .)
    $end            reduce using rule 57 (expression -> expression MINUS term .)
    END             reduce using rule 57 (expression -> expression MINUS term .)
    ARRAY           reduce using rule 57 (expression -> expression MINUS term .)
    LSQBRACKET      reduce using rule 57 (expression -> expression MINUS term .)
    LBRACKET        reduce using rule 57 (expression -> expression MINUS term .)
    HASH            reduce using rule 57 (expression -> expression MINUS term .)
    FOR             reduce using rule 57 (expression -> expression MINUS term .)
    TRUE            reduce using rule 57 (expression -> expression MINUS term .)
    FALSE           reduce using rule 57 (expression -> expression MINUS term .)
    NIL             reduce using rule 57 (expression -> expression MINUS term .)
    IF              reduce using rule 57 (expression -> expression MINUS term .)
    WHILE           reduce using rule 57 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 57 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 57 (expression -> expression MINUS term .)
    STRING          reduce using rule 57 (expression -> expression MINUS term .)
    STRINGV         reduce using rule 57 (expression -> expression MINUS term .)
    IDLOCAL         reduce using rule 57 (expression -> expression MINUS term .)
    IDINSTANCE      reduce using rule 57 (expression -> expression MINUS term .)
    IDCLASS         reduce using rule 57 (expression -> expression MINUS term .)
    IDGLOBAL        reduce using rule 57 (expression -> expression MINUS term .)
    BREAK           reduce using rule 57 (expression -> expression MINUS term .)


state 88

    (64) expression -> expression DIVISION term .

    PLUS            reduce using rule 64 (expression -> expression DIVISION term .)
    MINUS           reduce using rule 64 (expression -> expression DIVISION term .)
    DIVISION        reduce using rule 64 (expression -> expression DIVISION term .)
    MOD             reduce using rule 64 (expression -> expression DIVISION term .)
    MULT            reduce using rule 64 (expression -> expression DIVISION term .)
    EXP             reduce using rule 64 (expression -> expression DIVISION term .)
    $end            reduce using rule 64 (expression -> expression DIVISION term .)
    END             reduce using rule 64 (expression -> expression DIVISION term .)
    ARRAY           reduce using rule 64 (expression -> expression DIVISION term .)
    LSQBRACKET      reduce using rule 64 (expression -> expression DIVISION term .)
    LBRACKET        reduce using rule 64 (expression -> expression DIVISION term .)
    HASH            reduce using rule 64 (expression -> expression DIVISION term .)
    FOR             reduce using rule 64 (expression -> expression DIVISION term .)
    TRUE            reduce using rule 64 (expression -> expression DIVISION term .)
    FALSE           reduce using rule 64 (expression -> expression DIVISION term .)
    NIL             reduce using rule 64 (expression -> expression DIVISION term .)
    IF              reduce using rule 64 (expression -> expression DIVISION term .)
    WHILE           reduce using rule 64 (expression -> expression DIVISION term .)
    NUMBER          reduce using rule 64 (expression -> expression DIVISION term .)
    FLOAT           reduce using rule 64 (expression -> expression DIVISION term .)
    STRING          reduce using rule 64 (expression -> expression DIVISION term .)
    STRINGV         reduce using rule 64 (expression -> expression DIVISION term .)
    IDLOCAL         reduce using rule 64 (expression -> expression DIVISION term .)
    IDINSTANCE      reduce using rule 64 (expression -> expression DIVISION term .)
    IDCLASS         reduce using rule 64 (expression -> expression DIVISION term .)
    IDGLOBAL        reduce using rule 64 (expression -> expression DIVISION term .)
    BREAK           reduce using rule 64 (expression -> expression DIVISION term .)


state 89

    (65) expression -> expression MOD term .

    PLUS            reduce using rule 65 (expression -> expression MOD term .)
    MINUS           reduce using rule 65 (expression -> expression MOD term .)
    DIVISION        reduce using rule 65 (expression -> expression MOD term .)
    MOD             reduce using rule 65 (expression -> expression MOD term .)
    MULT            reduce using rule 65 (expression -> expression MOD term .)
    EXP             reduce using rule 65 (expression -> expression MOD term .)
    $end            reduce using rule 65 (expression -> expression MOD term .)
    END             reduce using rule 65 (expression -> expression MOD term .)
    ARRAY           reduce using rule 65 (expression -> expression MOD term .)
    LSQBRACKET      reduce using rule 65 (expression -> expression MOD term .)
    LBRACKET        reduce using rule 65 (expression -> expression MOD term .)
    HASH            reduce using rule 65 (expression -> expression MOD term .)
    FOR             reduce using rule 65 (expression -> expression MOD term .)
    TRUE            reduce using rule 65 (expression -> expression MOD term .)
    FALSE           reduce using rule 65 (expression -> expression MOD term .)
    NIL             reduce using rule 65 (expression -> expression MOD term .)
    IF              reduce using rule 65 (expression -> expression MOD term .)
    WHILE           reduce using rule 65 (expression -> expression MOD term .)
    NUMBER          reduce using rule 65 (expression -> expression MOD term .)
    FLOAT           reduce using rule 65 (expression -> expression MOD term .)
    STRING          reduce using rule 65 (expression -> expression MOD term .)
    STRINGV         reduce using rule 65 (expression -> expression MOD term .)
    IDLOCAL         reduce using rule 65 (expression -> expression MOD term .)
    IDINSTANCE      reduce using rule 65 (expression -> expression MOD term .)
    IDCLASS         reduce using rule 65 (expression -> expression MOD term .)
    IDGLOBAL        reduce using rule 65 (expression -> expression MOD term .)
    BREAK           reduce using rule 65 (expression -> expression MOD term .)


state 90

    (66) expression -> expression MULT term .

    PLUS            reduce using rule 66 (expression -> expression MULT term .)
    MINUS           reduce using rule 66 (expression -> expression MULT term .)
    DIVISION        reduce using rule 66 (expression -> expression MULT term .)
    MOD             reduce using rule 66 (expression -> expression MULT term .)
    MULT            reduce using rule 66 (expression -> expression MULT term .)
    EXP             reduce using rule 66 (expression -> expression MULT term .)
    $end            reduce using rule 66 (expression -> expression MULT term .)
    END             reduce using rule 66 (expression -> expression MULT term .)
    ARRAY           reduce using rule 66 (expression -> expression MULT term .)
    LSQBRACKET      reduce using rule 66 (expression -> expression MULT term .)
    LBRACKET        reduce using rule 66 (expression -> expression MULT term .)
    HASH            reduce using rule 66 (expression -> expression MULT term .)
    FOR             reduce using rule 66 (expression -> expression MULT term .)
    TRUE            reduce using rule 66 (expression -> expression MULT term .)
    FALSE           reduce using rule 66 (expression -> expression MULT term .)
    NIL             reduce using rule 66 (expression -> expression MULT term .)
    IF              reduce using rule 66 (expression -> expression MULT term .)
    WHILE           reduce using rule 66 (expression -> expression MULT term .)
    NUMBER          reduce using rule 66 (expression -> expression MULT term .)
    FLOAT           reduce using rule 66 (expression -> expression MULT term .)
    STRING          reduce using rule 66 (expression -> expression MULT term .)
    STRINGV         reduce using rule 66 (expression -> expression MULT term .)
    IDLOCAL         reduce using rule 66 (expression -> expression MULT term .)
    IDINSTANCE      reduce using rule 66 (expression -> expression MULT term .)
    IDCLASS         reduce using rule 66 (expression -> expression MULT term .)
    IDGLOBAL        reduce using rule 66 (expression -> expression MULT term .)
    BREAK           reduce using rule 66 (expression -> expression MULT term .)


state 91

    (67) expression -> expression EXP term .

    PLUS            reduce using rule 67 (expression -> expression EXP term .)
    MINUS           reduce using rule 67 (expression -> expression EXP term .)
    DIVISION        reduce using rule 67 (expression -> expression EXP term .)
    MOD             reduce using rule 67 (expression -> expression EXP term .)
    MULT            reduce using rule 67 (expression -> expression EXP term .)
    EXP             reduce using rule 67 (expression -> expression EXP term .)
    $end            reduce using rule 67 (expression -> expression EXP term .)
    END             reduce using rule 67 (expression -> expression EXP term .)
    ARRAY           reduce using rule 67 (expression -> expression EXP term .)
    LSQBRACKET      reduce using rule 67 (expression -> expression EXP term .)
    LBRACKET        reduce using rule 67 (expression -> expression EXP term .)
    HASH            reduce using rule 67 (expression -> expression EXP term .)
    FOR             reduce using rule 67 (expression -> expression EXP term .)
    TRUE            reduce using rule 67 (expression -> expression EXP term .)
    FALSE           reduce using rule 67 (expression -> expression EXP term .)
    NIL             reduce using rule 67 (expression -> expression EXP term .)
    IF              reduce using rule 67 (expression -> expression EXP term .)
    WHILE           reduce using rule 67 (expression -> expression EXP term .)
    NUMBER          reduce using rule 67 (expression -> expression EXP term .)
    FLOAT           reduce using rule 67 (expression -> expression EXP term .)
    STRING          reduce using rule 67 (expression -> expression EXP term .)
    STRINGV         reduce using rule 67 (expression -> expression EXP term .)
    IDLOCAL         reduce using rule 67 (expression -> expression EXP term .)
    IDINSTANCE      reduce using rule 67 (expression -> expression EXP term .)
    IDCLASS         reduce using rule 67 (expression -> expression EXP term .)
    IDGLOBAL        reduce using rule 67 (expression -> expression EXP term .)
    BREAK           reduce using rule 67 (expression -> expression EXP term .)


state 92

    (73) metodocadena -> string POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 136


state 93

    (75) metodocadena -> string POINT LENGTH .

    $end            reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    END             reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    ARRAY           reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    LSQBRACKET      reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    LBRACKET        reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    HASH            reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    FOR             reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    TRUE            reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    FALSE           reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    NIL             reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    IF              reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    WHILE           reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    NUMBER          reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    FLOAT           reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    MINUS           reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    STRING          reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    STRINGV         reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    IDLOCAL         reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    IDINSTANCE      reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    IDCLASS         reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    IDGLOBAL        reduce using rule 75 (metodocadena -> string POINT LENGTH .)
    BREAK           reduce using rule 75 (metodocadena -> string POINT LENGTH .)


state 94

    (72) metodocadena -> cadena POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 137


state 95

    (74) metodocadena -> cadena POINT LENGTH .

    $end            reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    END             reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    ARRAY           reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    LSQBRACKET      reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    LBRACKET        reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    HASH            reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    FOR             reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    TRUE            reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    FALSE           reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    NIL             reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    IF              reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    WHILE           reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    NUMBER          reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    FLOAT           reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    MINUS           reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    STRING          reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    STRINGV         reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    IDLOCAL         reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    IDINSTANCE      reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    IDCLASS         reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    IDGLOBAL        reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)
    BREAK           reduce using rule 74 (metodocadena -> cadena POINT LENGTH .)


state 96

    (85) metodosarreglo -> arreglo POINT INDEX . LPARENTHESIS arraycontent RPARENTHESIS

    LPARENTHESIS    shift and go to state 138


state 97

    (86) metodosarreglo -> arreglo LSQBRACKET factor . RSQBRACKET

    RSQBRACKET      shift and go to state 139


state 98

    (49) assigns -> variables ASSIGN variables .
    (12) asignar -> variables .
    (93) metodohash -> variables . ASSIGN hash POINT LENGTH
    (94) metodohash -> variables . POINT LENGTH
    (48) assigns -> variables . ASSIGN expression
    (49) assigns -> variables . ASSIGN variables
    (50) assigns -> variables . ASSIGN boolean
    (51) assigns -> variables . ASSIGN asignar
    (52) assigns -> variables . ASSIGNPLUS expression
    (53) assigns -> variables . ASSIGNPLUS variables
    (54) assigns -> variables . ASSIGNMIN expression
    (55) assigns -> variables . ASSIGNMIN variables

  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for MINUS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
    $end            reduce using rule 12 (asignar -> variables .)
    END             reduce using rule 12 (asignar -> variables .)
    ARRAY           reduce using rule 12 (asignar -> variables .)
    LSQBRACKET      reduce using rule 12 (asignar -> variables .)
    LBRACKET        reduce using rule 12 (asignar -> variables .)
    HASH            reduce using rule 12 (asignar -> variables .)
    FOR             reduce using rule 12 (asignar -> variables .)
    TRUE            reduce using rule 12 (asignar -> variables .)
    FALSE           reduce using rule 12 (asignar -> variables .)
    NIL             reduce using rule 12 (asignar -> variables .)
    IF              reduce using rule 12 (asignar -> variables .)
    WHILE           reduce using rule 12 (asignar -> variables .)
    NUMBER          reduce using rule 12 (asignar -> variables .)
    FLOAT           reduce using rule 12 (asignar -> variables .)
    MINUS           reduce using rule 12 (asignar -> variables .)
    STRING          reduce using rule 12 (asignar -> variables .)
    STRINGV         reduce using rule 12 (asignar -> variables .)
    IDLOCAL         reduce using rule 12 (asignar -> variables .)
    IDINSTANCE      reduce using rule 12 (asignar -> variables .)
    IDCLASS         reduce using rule 12 (asignar -> variables .)
    IDGLOBAL        reduce using rule 12 (asignar -> variables .)
    BREAK           reduce using rule 12 (asignar -> variables .)
    ASSIGN          shift and go to state 54
    POINT           shift and go to state 55
    ASSIGNPLUS      shift and go to state 56
    ASSIGNMIN       shift and go to state 57

  ! $end            [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! END             [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! ARRAY           [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! LSQBRACKET      [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! LBRACKET        [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! HASH            [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! FOR             [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! TRUE            [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! FALSE           [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! NIL             [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! IF              [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! WHILE           [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! NUMBER          [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! FLOAT           [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! STRING          [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! STRINGV         [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! IDLOCAL         [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! IDINSTANCE      [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! IDCLASS         [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! IDGLOBAL        [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]
  ! BREAK           [ reduce using rule 49 (assigns -> variables ASSIGN variables .) ]


state 99

    (93) metodohash -> variables ASSIGN hash . POINT LENGTH
    (9) asignar -> hash .

    POINT           shift and go to state 140
    $end            reduce using rule 9 (asignar -> hash .)
    END             reduce using rule 9 (asignar -> hash .)
    ARRAY           reduce using rule 9 (asignar -> hash .)
    LSQBRACKET      reduce using rule 9 (asignar -> hash .)
    LBRACKET        reduce using rule 9 (asignar -> hash .)
    HASH            reduce using rule 9 (asignar -> hash .)
    FOR             reduce using rule 9 (asignar -> hash .)
    TRUE            reduce using rule 9 (asignar -> hash .)
    FALSE           reduce using rule 9 (asignar -> hash .)
    NIL             reduce using rule 9 (asignar -> hash .)
    IF              reduce using rule 9 (asignar -> hash .)
    WHILE           reduce using rule 9 (asignar -> hash .)
    NUMBER          reduce using rule 9 (asignar -> hash .)
    FLOAT           reduce using rule 9 (asignar -> hash .)
    MINUS           reduce using rule 9 (asignar -> hash .)
    STRING          reduce using rule 9 (asignar -> hash .)
    STRINGV         reduce using rule 9 (asignar -> hash .)
    IDLOCAL         reduce using rule 9 (asignar -> hash .)
    IDINSTANCE      reduce using rule 9 (asignar -> hash .)
    IDCLASS         reduce using rule 9 (asignar -> hash .)
    IDGLOBAL        reduce using rule 9 (asignar -> hash .)
    BREAK           reduce using rule 9 (asignar -> hash .)


state 100

    (48) assigns -> variables ASSIGN expression .
    (56) expression -> expression . PLUS term
    (57) expression -> expression . MINUS term
    (64) expression -> expression . DIVISION term
    (65) expression -> expression . MOD term
    (66) expression -> expression . MULT term
    (67) expression -> expression . EXP term
    (3) asignar -> expression .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for END resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ARRAY resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for HASH resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NIL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (asignar -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for STRINGV resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for BREAK resolved using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    DIVISION        shift and go to state 46
    MOD             shift and go to state 47
    MULT            shift and go to state 48
    EXP             shift and go to state 49
    $end            reduce using rule 3 (asignar -> expression .)
    END             reduce using rule 3 (asignar -> expression .)
    ARRAY           reduce using rule 3 (asignar -> expression .)
    LSQBRACKET      reduce using rule 3 (asignar -> expression .)
    LBRACKET        reduce using rule 3 (asignar -> expression .)
    HASH            reduce using rule 3 (asignar -> expression .)
    FOR             reduce using rule 3 (asignar -> expression .)
    TRUE            reduce using rule 3 (asignar -> expression .)
    FALSE           reduce using rule 3 (asignar -> expression .)
    NIL             reduce using rule 3 (asignar -> expression .)
    IF              reduce using rule 3 (asignar -> expression .)
    WHILE           reduce using rule 3 (asignar -> expression .)
    NUMBER          reduce using rule 3 (asignar -> expression .)
    FLOAT           reduce using rule 3 (asignar -> expression .)
    STRING          reduce using rule 3 (asignar -> expression .)
    STRINGV         reduce using rule 3 (asignar -> expression .)
    IDLOCAL         reduce using rule 3 (asignar -> expression .)
    IDINSTANCE      reduce using rule 3 (asignar -> expression .)
    IDCLASS         reduce using rule 3 (asignar -> expression .)
    IDGLOBAL        reduce using rule 3 (asignar -> expression .)
    BREAK           reduce using rule 3 (asignar -> expression .)

  ! $end            [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! END             [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! ARRAY           [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! LSQBRACKET      [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! HASH            [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! FOR             [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! TRUE            [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! FALSE           [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! NIL             [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! IF              [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! WHILE           [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! NUMBER          [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! FLOAT           [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! STRING          [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! STRINGV         [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! IDLOCAL         [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! IDINSTANCE      [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! IDCLASS         [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! IDGLOBAL        [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! BREAK           [ reduce using rule 48 (assigns -> variables ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 3 (asignar -> expression .) ]


state 101

    (50) assigns -> variables ASSIGN boolean .
    (11) asignar -> boolean .

  ! reduce/reduce conflict for $end resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for END resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for ARRAY resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for HASH resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for FOR resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for TRUE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for FALSE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for NIL resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IF resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for WHILE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for NUMBER resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for FLOAT resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for MINUS resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for STRING resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for STRINGV resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for BREAK resolved using rule 11 (asignar -> boolean .)
    $end            reduce using rule 11 (asignar -> boolean .)
    END             reduce using rule 11 (asignar -> boolean .)
    ARRAY           reduce using rule 11 (asignar -> boolean .)
    LSQBRACKET      reduce using rule 11 (asignar -> boolean .)
    LBRACKET        reduce using rule 11 (asignar -> boolean .)
    HASH            reduce using rule 11 (asignar -> boolean .)
    FOR             reduce using rule 11 (asignar -> boolean .)
    TRUE            reduce using rule 11 (asignar -> boolean .)
    FALSE           reduce using rule 11 (asignar -> boolean .)
    NIL             reduce using rule 11 (asignar -> boolean .)
    IF              reduce using rule 11 (asignar -> boolean .)
    WHILE           reduce using rule 11 (asignar -> boolean .)
    NUMBER          reduce using rule 11 (asignar -> boolean .)
    FLOAT           reduce using rule 11 (asignar -> boolean .)
    MINUS           reduce using rule 11 (asignar -> boolean .)
    STRING          reduce using rule 11 (asignar -> boolean .)
    STRINGV         reduce using rule 11 (asignar -> boolean .)
    IDLOCAL         reduce using rule 11 (asignar -> boolean .)
    IDINSTANCE      reduce using rule 11 (asignar -> boolean .)
    IDCLASS         reduce using rule 11 (asignar -> boolean .)
    IDGLOBAL        reduce using rule 11 (asignar -> boolean .)
    BREAK           reduce using rule 11 (asignar -> boolean .)

  ! $end            [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! END             [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! ARRAY           [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! LSQBRACKET      [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! LBRACKET        [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! HASH            [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! FOR             [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! TRUE            [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! FALSE           [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! NIL             [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! IF              [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! WHILE           [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! NUMBER          [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! FLOAT           [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! MINUS           [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! STRING          [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! STRINGV         [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! IDLOCAL         [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! IDINSTANCE      [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! IDCLASS         [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! IDGLOBAL        [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]
  ! BREAK           [ reduce using rule 50 (assigns -> variables ASSIGN boolean .) ]


state 102

    (51) assigns -> variables ASSIGN asignar .

    $end            reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    END             reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    ARRAY           reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    LSQBRACKET      reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    LBRACKET        reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    HASH            reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    FOR             reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    TRUE            reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    FALSE           reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    NIL             reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    IF              reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    WHILE           reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    NUMBER          reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    FLOAT           reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    MINUS           reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    STRING          reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    STRINGV         reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    IDLOCAL         reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    IDINSTANCE      reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    IDCLASS         reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    IDGLOBAL        reduce using rule 51 (assigns -> variables ASSIGN asignar .)
    BREAK           reduce using rule 51 (assigns -> variables ASSIGN asignar .)


state 103

    (94) metodohash -> variables POINT LENGTH .

    $end            reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    END             reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    ARRAY           reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    LSQBRACKET      reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    LBRACKET        reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    HASH            reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    FOR             reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    TRUE            reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    FALSE           reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    NIL             reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    IF              reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    WHILE           reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    NUMBER          reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    FLOAT           reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    MINUS           reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    STRING          reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    STRINGV         reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    IDLOCAL         reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    IDINSTANCE      reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    IDCLASS         reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    IDGLOBAL        reduce using rule 94 (metodohash -> variables POINT LENGTH .)
    BREAK           reduce using rule 94 (metodohash -> variables POINT LENGTH .)


state 104

    (53) assigns -> variables ASSIGNPLUS variables .

    $end            reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    END             reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    ARRAY           reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    LSQBRACKET      reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    LBRACKET        reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    HASH            reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    FOR             reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    TRUE            reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    FALSE           reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    NIL             reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    IF              reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    WHILE           reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    NUMBER          reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    FLOAT           reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    MINUS           reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    STRING          reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    STRINGV         reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    IDLOCAL         reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    IDINSTANCE      reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    IDCLASS         reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    IDGLOBAL        reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)
    BREAK           reduce using rule 53 (assigns -> variables ASSIGNPLUS variables .)


state 105

    (52) assigns -> variables ASSIGNPLUS expression .
    (56) expression -> expression . PLUS term
    (57) expression -> expression . MINUS term
    (64) expression -> expression . DIVISION term
    (65) expression -> expression . MOD term
    (66) expression -> expression . MULT term
    (67) expression -> expression . EXP term

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    END             reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    ARRAY           reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    LSQBRACKET      reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    LBRACKET        reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    HASH            reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    FOR             reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    TRUE            reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    FALSE           reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    NIL             reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    IF              reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    WHILE           reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    NUMBER          reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    FLOAT           reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    STRING          reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    STRINGV         reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    IDLOCAL         reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    IDINSTANCE      reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    IDCLASS         reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    IDGLOBAL        reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    BREAK           reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    DIVISION        shift and go to state 46
    MOD             shift and go to state 47
    MULT            shift and go to state 48
    EXP             shift and go to state 49

  ! MINUS           [ reduce using rule 52 (assigns -> variables ASSIGNPLUS expression .) ]


state 106

    (55) assigns -> variables ASSIGNMIN variables .

    $end            reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    END             reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    ARRAY           reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    LSQBRACKET      reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    LBRACKET        reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    HASH            reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    FOR             reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    TRUE            reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    FALSE           reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    NIL             reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    IF              reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    WHILE           reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    NUMBER          reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    FLOAT           reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    MINUS           reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    STRING          reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    STRINGV         reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    IDLOCAL         reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    IDINSTANCE      reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    IDCLASS         reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    IDGLOBAL        reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)
    BREAK           reduce using rule 55 (assigns -> variables ASSIGNMIN variables .)


state 107

    (54) assigns -> variables ASSIGNMIN expression .
    (56) expression -> expression . PLUS term
    (57) expression -> expression . MINUS term
    (64) expression -> expression . DIVISION term
    (65) expression -> expression . MOD term
    (66) expression -> expression . MULT term
    (67) expression -> expression . EXP term

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    END             reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    ARRAY           reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    LSQBRACKET      reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    LBRACKET        reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    HASH            reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    FOR             reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    TRUE            reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    FALSE           reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    NIL             reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    IF              reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    WHILE           reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    NUMBER          reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    FLOAT           reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    STRING          reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    STRINGV         reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    IDLOCAL         reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    IDINSTANCE      reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    IDCLASS         reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    IDGLOBAL        reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    BREAK           reduce using rule 54 (assigns -> variables ASSIGNMIN expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    DIVISION        shift and go to state 46
    MOD             shift and go to state 47
    MULT            shift and go to state 48
    EXP             shift and go to state 49

  ! MINUS           [ reduce using rule 54 (assigns -> variables ASSIGNMIN expression .) ]


state 108

    (69) cadena -> STRING POINT NEW .
    (70) cadena -> STRING POINT NEW . LPARENTHESIS string RPARENTHESIS

    POINT           reduce using rule 69 (cadena -> STRING POINT NEW .)
    $end            reduce using rule 69 (cadena -> STRING POINT NEW .)
    END             reduce using rule 69 (cadena -> STRING POINT NEW .)
    ARRAY           reduce using rule 69 (cadena -> STRING POINT NEW .)
    LSQBRACKET      reduce using rule 69 (cadena -> STRING POINT NEW .)
    LBRACKET        reduce using rule 69 (cadena -> STRING POINT NEW .)
    HASH            reduce using rule 69 (cadena -> STRING POINT NEW .)
    FOR             reduce using rule 69 (cadena -> STRING POINT NEW .)
    TRUE            reduce using rule 69 (cadena -> STRING POINT NEW .)
    FALSE           reduce using rule 69 (cadena -> STRING POINT NEW .)
    NIL             reduce using rule 69 (cadena -> STRING POINT NEW .)
    IF              reduce using rule 69 (cadena -> STRING POINT NEW .)
    WHILE           reduce using rule 69 (cadena -> STRING POINT NEW .)
    NUMBER          reduce using rule 69 (cadena -> STRING POINT NEW .)
    FLOAT           reduce using rule 69 (cadena -> STRING POINT NEW .)
    MINUS           reduce using rule 69 (cadena -> STRING POINT NEW .)
    STRING          reduce using rule 69 (cadena -> STRING POINT NEW .)
    STRINGV         reduce using rule 69 (cadena -> STRING POINT NEW .)
    IDLOCAL         reduce using rule 69 (cadena -> STRING POINT NEW .)
    IDINSTANCE      reduce using rule 69 (cadena -> STRING POINT NEW .)
    IDCLASS         reduce using rule 69 (cadena -> STRING POINT NEW .)
    IDGLOBAL        reduce using rule 69 (cadena -> STRING POINT NEW .)
    BREAK           reduce using rule 69 (cadena -> STRING POINT NEW .)
    LPARENTHESIS    shift and go to state 141


state 109

    (71) cadena -> STRING LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 142


state 110

    (76) arreglo -> ARRAY POINT NEW .
    (77) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    POINT           reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    LSQBRACKET      reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    $end            reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    END             reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    ARRAY           reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    LBRACKET        reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    HASH            reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    FOR             reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    TRUE            reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    FALSE           reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    NIL             reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    IF              reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    WHILE           reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    NUMBER          reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    FLOAT           reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    MINUS           reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    STRING          reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    STRINGV         reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    IDLOCAL         reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    IDINSTANCE      reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    IDCLASS         reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    IDGLOBAL        reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    BREAK           reduce using rule 76 (arreglo -> ARRAY POINT NEW .)
    LPARENTHESIS    shift and go to state 143


state 111

    (79) arreglo -> ARRAY LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 144


state 112

    (80) arreglo -> LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    END             reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    ARRAY           reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    LBRACKET        reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    HASH            reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    FOR             reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    TRUE            reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    FALSE           reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    NIL             reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IF              reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    WHILE           reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    NUMBER          reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    FLOAT           reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    MINUS           reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    STRING          reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    STRINGV         reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDLOCAL         reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDINSTANCE      reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDCLASS         reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDGLOBAL        reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    BREAK           reduce using rule 80 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)


state 113

    (83) arraycontent -> factor COMMA . arraycontent
    (81) arraycontent -> . factor
    (82) arraycontent -> . string
    (83) arraycontent -> . factor COMMA arraycontent
    (84) arraycontent -> . string COMMA arraycontent
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT
    (68) string -> . STRINGV

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22
    STRINGV         shift and go to state 23

    factor                         shift and go to state 65
    arraycontent                   shift and go to state 145
    string                         shift and go to state 66

state 114

    (84) arraycontent -> string COMMA . arraycontent
    (81) arraycontent -> . factor
    (82) arraycontent -> . string
    (83) arraycontent -> . factor COMMA arraycontent
    (84) arraycontent -> . string COMMA arraycontent
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT
    (68) string -> . STRINGV

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22
    STRINGV         shift and go to state 23

    string                         shift and go to state 66
    arraycontent                   shift and go to state 146
    factor                         shift and go to state 65

state 115

    (87) hash -> LBRACKET hashcontent RBRACKET .

    $end            reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    POINT           reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    END             reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    ARRAY           reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    LSQBRACKET      reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    LBRACKET        reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    HASH            reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    FOR             reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    TRUE            reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    FALSE           reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    NIL             reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    IF              reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    WHILE           reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    NUMBER          reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    FLOAT           reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    MINUS           reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    STRING          reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    STRINGV         reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    IDLOCAL         reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    IDINSTANCE      reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    IDCLASS         reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    IDGLOBAL        reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)
    BREAK           reduce using rule 87 (hash -> LBRACKET hashcontent RBRACKET .)


state 116

    (89) hashcontent -> string ASSIGN . GREATER hashcontentvalue
    (90) hashcontent -> string ASSIGN . GREATER hashcontentvalue COMMA hashcontent

    GREATER         shift and go to state 147


state 117

    (88) hash -> HASH POINT NEW .

    $end            reduce using rule 88 (hash -> HASH POINT NEW .)
    POINT           reduce using rule 88 (hash -> HASH POINT NEW .)
    END             reduce using rule 88 (hash -> HASH POINT NEW .)
    ARRAY           reduce using rule 88 (hash -> HASH POINT NEW .)
    LSQBRACKET      reduce using rule 88 (hash -> HASH POINT NEW .)
    LBRACKET        reduce using rule 88 (hash -> HASH POINT NEW .)
    HASH            reduce using rule 88 (hash -> HASH POINT NEW .)
    FOR             reduce using rule 88 (hash -> HASH POINT NEW .)
    TRUE            reduce using rule 88 (hash -> HASH POINT NEW .)
    FALSE           reduce using rule 88 (hash -> HASH POINT NEW .)
    NIL             reduce using rule 88 (hash -> HASH POINT NEW .)
    IF              reduce using rule 88 (hash -> HASH POINT NEW .)
    WHILE           reduce using rule 88 (hash -> HASH POINT NEW .)
    NUMBER          reduce using rule 88 (hash -> HASH POINT NEW .)
    FLOAT           reduce using rule 88 (hash -> HASH POINT NEW .)
    MINUS           reduce using rule 88 (hash -> HASH POINT NEW .)
    STRING          reduce using rule 88 (hash -> HASH POINT NEW .)
    STRINGV         reduce using rule 88 (hash -> HASH POINT NEW .)
    IDLOCAL         reduce using rule 88 (hash -> HASH POINT NEW .)
    IDINSTANCE      reduce using rule 88 (hash -> HASH POINT NEW .)
    IDCLASS         reduce using rule 88 (hash -> HASH POINT NEW .)
    IDGLOBAL        reduce using rule 88 (hash -> HASH POINT NEW .)
    BREAK           reduce using rule 88 (hash -> HASH POINT NEW .)


state 118

    (102) estructurasControl -> FOR IDLOCAL IN . factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> FOR IDLOCAL IN . factor POINT POINT factor DO forcontent END
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    factor                         shift and go to state 148

state 119

    (95) sentenIF -> IF comparador term .

    $end            reduce using rule 95 (sentenIF -> IF comparador term .)
    END             reduce using rule 95 (sentenIF -> IF comparador term .)
    ARRAY           reduce using rule 95 (sentenIF -> IF comparador term .)
    LSQBRACKET      reduce using rule 95 (sentenIF -> IF comparador term .)
    LBRACKET        reduce using rule 95 (sentenIF -> IF comparador term .)
    HASH            reduce using rule 95 (sentenIF -> IF comparador term .)
    FOR             reduce using rule 95 (sentenIF -> IF comparador term .)
    TRUE            reduce using rule 95 (sentenIF -> IF comparador term .)
    FALSE           reduce using rule 95 (sentenIF -> IF comparador term .)
    NIL             reduce using rule 95 (sentenIF -> IF comparador term .)
    IF              reduce using rule 95 (sentenIF -> IF comparador term .)
    WHILE           reduce using rule 95 (sentenIF -> IF comparador term .)
    NUMBER          reduce using rule 95 (sentenIF -> IF comparador term .)
    FLOAT           reduce using rule 95 (sentenIF -> IF comparador term .)
    MINUS           reduce using rule 95 (sentenIF -> IF comparador term .)
    STRING          reduce using rule 95 (sentenIF -> IF comparador term .)
    STRINGV         reduce using rule 95 (sentenIF -> IF comparador term .)
    IDLOCAL         reduce using rule 95 (sentenIF -> IF comparador term .)
    IDINSTANCE      reduce using rule 95 (sentenIF -> IF comparador term .)
    IDCLASS         reduce using rule 95 (sentenIF -> IF comparador term .)
    IDGLOBAL        reduce using rule 95 (sentenIF -> IF comparador term .)
    BREAK           reduce using rule 95 (sentenIF -> IF comparador term .)


state 120

    (48) assigns -> variables . ASSIGN expression
    (49) assigns -> variables . ASSIGN variables
    (50) assigns -> variables . ASSIGN boolean
    (51) assigns -> variables . ASSIGN asignar
    (52) assigns -> variables . ASSIGNPLUS expression
    (53) assigns -> variables . ASSIGNPLUS variables
    (54) assigns -> variables . ASSIGNMIN expression
    (55) assigns -> variables . ASSIGNMIN variables

    ASSIGN          shift and go to state 149
    ASSIGNPLUS      shift and go to state 56
    ASSIGNMIN       shift and go to state 57


state 121

    (40) sentenWHILE -> WHILE variables comparador . variables algoritmo END
    (41) sentenWHILE -> WHILE variables comparador . expression algoritmo END
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    variables                      shift and go to state 150
    expression                     shift and go to state 151
    term                           shift and go to state 21
    factor                         shift and go to state 26

state 122

    (43) sentenWHILE -> WHILE variables algoritmo . END

    END             shift and go to state 152


state 123

    (30) algoritmo -> expression .
    (56) expression -> expression . PLUS term
    (57) expression -> expression . MINUS term
    (64) expression -> expression . DIVISION term
    (65) expression -> expression . MOD term
    (66) expression -> expression . MULT term
    (67) expression -> expression . EXP term

    END             reduce using rule 30 (algoritmo -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    DIVISION        shift and go to state 46
    MOD             shift and go to state 47
    MULT            shift and go to state 48
    EXP             shift and go to state 49


state 124

    (31) algoritmo -> metodocadena .

    END             reduce using rule 31 (algoritmo -> metodocadena .)
    ARRAY           reduce using rule 31 (algoritmo -> metodocadena .)
    LSQBRACKET      reduce using rule 31 (algoritmo -> metodocadena .)
    LBRACKET        reduce using rule 31 (algoritmo -> metodocadena .)
    HASH            reduce using rule 31 (algoritmo -> metodocadena .)
    FOR             reduce using rule 31 (algoritmo -> metodocadena .)
    TRUE            reduce using rule 31 (algoritmo -> metodocadena .)
    FALSE           reduce using rule 31 (algoritmo -> metodocadena .)
    NIL             reduce using rule 31 (algoritmo -> metodocadena .)
    IF              reduce using rule 31 (algoritmo -> metodocadena .)
    WHILE           reduce using rule 31 (algoritmo -> metodocadena .)
    NUMBER          reduce using rule 31 (algoritmo -> metodocadena .)
    FLOAT           reduce using rule 31 (algoritmo -> metodocadena .)
    MINUS           reduce using rule 31 (algoritmo -> metodocadena .)
    STRING          reduce using rule 31 (algoritmo -> metodocadena .)
    STRINGV         reduce using rule 31 (algoritmo -> metodocadena .)
    IDLOCAL         reduce using rule 31 (algoritmo -> metodocadena .)
    IDINSTANCE      reduce using rule 31 (algoritmo -> metodocadena .)
    IDCLASS         reduce using rule 31 (algoritmo -> metodocadena .)
    IDGLOBAL        reduce using rule 31 (algoritmo -> metodocadena .)
    BREAK           reduce using rule 31 (algoritmo -> metodocadena .)


state 125

    (32) algoritmo -> arreglo .
    (85) metodosarreglo -> arreglo . POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (86) metodosarreglo -> arreglo . LSQBRACKET factor RSQBRACKET

  ! shift/reduce conflict for LSQBRACKET resolved as shift
    END             reduce using rule 32 (algoritmo -> arreglo .)
    ARRAY           reduce using rule 32 (algoritmo -> arreglo .)
    LBRACKET        reduce using rule 32 (algoritmo -> arreglo .)
    HASH            reduce using rule 32 (algoritmo -> arreglo .)
    FOR             reduce using rule 32 (algoritmo -> arreglo .)
    TRUE            reduce using rule 32 (algoritmo -> arreglo .)
    FALSE           reduce using rule 32 (algoritmo -> arreglo .)
    NIL             reduce using rule 32 (algoritmo -> arreglo .)
    IF              reduce using rule 32 (algoritmo -> arreglo .)
    WHILE           reduce using rule 32 (algoritmo -> arreglo .)
    NUMBER          reduce using rule 32 (algoritmo -> arreglo .)
    FLOAT           reduce using rule 32 (algoritmo -> arreglo .)
    MINUS           reduce using rule 32 (algoritmo -> arreglo .)
    STRING          reduce using rule 32 (algoritmo -> arreglo .)
    STRINGV         reduce using rule 32 (algoritmo -> arreglo .)
    IDLOCAL         reduce using rule 32 (algoritmo -> arreglo .)
    IDINSTANCE      reduce using rule 32 (algoritmo -> arreglo .)
    IDCLASS         reduce using rule 32 (algoritmo -> arreglo .)
    IDGLOBAL        reduce using rule 32 (algoritmo -> arreglo .)
    BREAK           reduce using rule 32 (algoritmo -> arreglo .)
    POINT           shift and go to state 52
    LSQBRACKET      shift and go to state 53

  ! LSQBRACKET      [ reduce using rule 32 (algoritmo -> arreglo .) ]


state 126

    (33) algoritmo -> metodosarreglo .

    END             reduce using rule 33 (algoritmo -> metodosarreglo .)
    ARRAY           reduce using rule 33 (algoritmo -> metodosarreglo .)
    LSQBRACKET      reduce using rule 33 (algoritmo -> metodosarreglo .)
    LBRACKET        reduce using rule 33 (algoritmo -> metodosarreglo .)
    HASH            reduce using rule 33 (algoritmo -> metodosarreglo .)
    FOR             reduce using rule 33 (algoritmo -> metodosarreglo .)
    TRUE            reduce using rule 33 (algoritmo -> metodosarreglo .)
    FALSE           reduce using rule 33 (algoritmo -> metodosarreglo .)
    NIL             reduce using rule 33 (algoritmo -> metodosarreglo .)
    IF              reduce using rule 33 (algoritmo -> metodosarreglo .)
    WHILE           reduce using rule 33 (algoritmo -> metodosarreglo .)
    NUMBER          reduce using rule 33 (algoritmo -> metodosarreglo .)
    FLOAT           reduce using rule 33 (algoritmo -> metodosarreglo .)
    MINUS           reduce using rule 33 (algoritmo -> metodosarreglo .)
    STRING          reduce using rule 33 (algoritmo -> metodosarreglo .)
    STRINGV         reduce using rule 33 (algoritmo -> metodosarreglo .)
    IDLOCAL         reduce using rule 33 (algoritmo -> metodosarreglo .)
    IDINSTANCE      reduce using rule 33 (algoritmo -> metodosarreglo .)
    IDCLASS         reduce using rule 33 (algoritmo -> metodosarreglo .)
    IDGLOBAL        reduce using rule 33 (algoritmo -> metodosarreglo .)
    BREAK           reduce using rule 33 (algoritmo -> metodosarreglo .)


state 127

    (34) algoritmo -> hash .

    END             reduce using rule 34 (algoritmo -> hash .)
    ARRAY           reduce using rule 34 (algoritmo -> hash .)
    LSQBRACKET      reduce using rule 34 (algoritmo -> hash .)
    LBRACKET        reduce using rule 34 (algoritmo -> hash .)
    HASH            reduce using rule 34 (algoritmo -> hash .)
    FOR             reduce using rule 34 (algoritmo -> hash .)
    TRUE            reduce using rule 34 (algoritmo -> hash .)
    FALSE           reduce using rule 34 (algoritmo -> hash .)
    NIL             reduce using rule 34 (algoritmo -> hash .)
    IF              reduce using rule 34 (algoritmo -> hash .)
    WHILE           reduce using rule 34 (algoritmo -> hash .)
    NUMBER          reduce using rule 34 (algoritmo -> hash .)
    FLOAT           reduce using rule 34 (algoritmo -> hash .)
    MINUS           reduce using rule 34 (algoritmo -> hash .)
    STRING          reduce using rule 34 (algoritmo -> hash .)
    STRINGV         reduce using rule 34 (algoritmo -> hash .)
    IDLOCAL         reduce using rule 34 (algoritmo -> hash .)
    IDINSTANCE      reduce using rule 34 (algoritmo -> hash .)
    IDCLASS         reduce using rule 34 (algoritmo -> hash .)
    IDGLOBAL        reduce using rule 34 (algoritmo -> hash .)
    BREAK           reduce using rule 34 (algoritmo -> hash .)


state 128

    (35) algoritmo -> estructurasControl .

    END             reduce using rule 35 (algoritmo -> estructurasControl .)
    ARRAY           reduce using rule 35 (algoritmo -> estructurasControl .)
    LSQBRACKET      reduce using rule 35 (algoritmo -> estructurasControl .)
    LBRACKET        reduce using rule 35 (algoritmo -> estructurasControl .)
    HASH            reduce using rule 35 (algoritmo -> estructurasControl .)
    FOR             reduce using rule 35 (algoritmo -> estructurasControl .)
    TRUE            reduce using rule 35 (algoritmo -> estructurasControl .)
    FALSE           reduce using rule 35 (algoritmo -> estructurasControl .)
    NIL             reduce using rule 35 (algoritmo -> estructurasControl .)
    IF              reduce using rule 35 (algoritmo -> estructurasControl .)
    WHILE           reduce using rule 35 (algoritmo -> estructurasControl .)
    NUMBER          reduce using rule 35 (algoritmo -> estructurasControl .)
    FLOAT           reduce using rule 35 (algoritmo -> estructurasControl .)
    MINUS           reduce using rule 35 (algoritmo -> estructurasControl .)
    STRING          reduce using rule 35 (algoritmo -> estructurasControl .)
    STRINGV         reduce using rule 35 (algoritmo -> estructurasControl .)
    IDLOCAL         reduce using rule 35 (algoritmo -> estructurasControl .)
    IDINSTANCE      reduce using rule 35 (algoritmo -> estructurasControl .)
    IDCLASS         reduce using rule 35 (algoritmo -> estructurasControl .)
    IDGLOBAL        reduce using rule 35 (algoritmo -> estructurasControl .)
    BREAK           reduce using rule 35 (algoritmo -> estructurasControl .)


state 129

    (36) algoritmo -> boolean .

    END             reduce using rule 36 (algoritmo -> boolean .)
    ARRAY           reduce using rule 36 (algoritmo -> boolean .)
    LSQBRACKET      reduce using rule 36 (algoritmo -> boolean .)
    LBRACKET        reduce using rule 36 (algoritmo -> boolean .)
    HASH            reduce using rule 36 (algoritmo -> boolean .)
    FOR             reduce using rule 36 (algoritmo -> boolean .)
    TRUE            reduce using rule 36 (algoritmo -> boolean .)
    FALSE           reduce using rule 36 (algoritmo -> boolean .)
    NIL             reduce using rule 36 (algoritmo -> boolean .)
    IF              reduce using rule 36 (algoritmo -> boolean .)
    WHILE           reduce using rule 36 (algoritmo -> boolean .)
    NUMBER          reduce using rule 36 (algoritmo -> boolean .)
    FLOAT           reduce using rule 36 (algoritmo -> boolean .)
    MINUS           reduce using rule 36 (algoritmo -> boolean .)
    STRING          reduce using rule 36 (algoritmo -> boolean .)
    STRINGV         reduce using rule 36 (algoritmo -> boolean .)
    IDLOCAL         reduce using rule 36 (algoritmo -> boolean .)
    IDINSTANCE      reduce using rule 36 (algoritmo -> boolean .)
    IDCLASS         reduce using rule 36 (algoritmo -> boolean .)
    IDGLOBAL        reduce using rule 36 (algoritmo -> boolean .)
    BREAK           reduce using rule 36 (algoritmo -> boolean .)


state 130

    (37) algoritmo -> assigns .

    END             reduce using rule 37 (algoritmo -> assigns .)
    ARRAY           reduce using rule 37 (algoritmo -> assigns .)
    LSQBRACKET      reduce using rule 37 (algoritmo -> assigns .)
    LBRACKET        reduce using rule 37 (algoritmo -> assigns .)
    HASH            reduce using rule 37 (algoritmo -> assigns .)
    FOR             reduce using rule 37 (algoritmo -> assigns .)
    TRUE            reduce using rule 37 (algoritmo -> assigns .)
    FALSE           reduce using rule 37 (algoritmo -> assigns .)
    NIL             reduce using rule 37 (algoritmo -> assigns .)
    IF              reduce using rule 37 (algoritmo -> assigns .)
    WHILE           reduce using rule 37 (algoritmo -> assigns .)
    NUMBER          reduce using rule 37 (algoritmo -> assigns .)
    FLOAT           reduce using rule 37 (algoritmo -> assigns .)
    MINUS           reduce using rule 37 (algoritmo -> assigns .)
    STRING          reduce using rule 37 (algoritmo -> assigns .)
    STRINGV         reduce using rule 37 (algoritmo -> assigns .)
    IDLOCAL         reduce using rule 37 (algoritmo -> assigns .)
    IDINSTANCE      reduce using rule 37 (algoritmo -> assigns .)
    IDCLASS         reduce using rule 37 (algoritmo -> assigns .)
    IDGLOBAL        reduce using rule 37 (algoritmo -> assigns .)
    BREAK           reduce using rule 37 (algoritmo -> assigns .)


state 131

    (38) algoritmo -> sentenIF .

    END             reduce using rule 38 (algoritmo -> sentenIF .)
    ARRAY           reduce using rule 38 (algoritmo -> sentenIF .)
    LSQBRACKET      reduce using rule 38 (algoritmo -> sentenIF .)
    LBRACKET        reduce using rule 38 (algoritmo -> sentenIF .)
    HASH            reduce using rule 38 (algoritmo -> sentenIF .)
    FOR             reduce using rule 38 (algoritmo -> sentenIF .)
    TRUE            reduce using rule 38 (algoritmo -> sentenIF .)
    FALSE           reduce using rule 38 (algoritmo -> sentenIF .)
    NIL             reduce using rule 38 (algoritmo -> sentenIF .)
    IF              reduce using rule 38 (algoritmo -> sentenIF .)
    WHILE           reduce using rule 38 (algoritmo -> sentenIF .)
    NUMBER          reduce using rule 38 (algoritmo -> sentenIF .)
    FLOAT           reduce using rule 38 (algoritmo -> sentenIF .)
    MINUS           reduce using rule 38 (algoritmo -> sentenIF .)
    STRING          reduce using rule 38 (algoritmo -> sentenIF .)
    STRINGV         reduce using rule 38 (algoritmo -> sentenIF .)
    IDLOCAL         reduce using rule 38 (algoritmo -> sentenIF .)
    IDINSTANCE      reduce using rule 38 (algoritmo -> sentenIF .)
    IDCLASS         reduce using rule 38 (algoritmo -> sentenIF .)
    IDGLOBAL        reduce using rule 38 (algoritmo -> sentenIF .)
    BREAK           reduce using rule 38 (algoritmo -> sentenIF .)


state 132

    (39) algoritmo -> sentenWHILE .

    END             reduce using rule 39 (algoritmo -> sentenWHILE .)
    ARRAY           reduce using rule 39 (algoritmo -> sentenWHILE .)
    LSQBRACKET      reduce using rule 39 (algoritmo -> sentenWHILE .)
    LBRACKET        reduce using rule 39 (algoritmo -> sentenWHILE .)
    HASH            reduce using rule 39 (algoritmo -> sentenWHILE .)
    FOR             reduce using rule 39 (algoritmo -> sentenWHILE .)
    TRUE            reduce using rule 39 (algoritmo -> sentenWHILE .)
    FALSE           reduce using rule 39 (algoritmo -> sentenWHILE .)
    NIL             reduce using rule 39 (algoritmo -> sentenWHILE .)
    IF              reduce using rule 39 (algoritmo -> sentenWHILE .)
    WHILE           reduce using rule 39 (algoritmo -> sentenWHILE .)
    NUMBER          reduce using rule 39 (algoritmo -> sentenWHILE .)
    FLOAT           reduce using rule 39 (algoritmo -> sentenWHILE .)
    MINUS           reduce using rule 39 (algoritmo -> sentenWHILE .)
    STRING          reduce using rule 39 (algoritmo -> sentenWHILE .)
    STRINGV         reduce using rule 39 (algoritmo -> sentenWHILE .)
    IDLOCAL         reduce using rule 39 (algoritmo -> sentenWHILE .)
    IDINSTANCE      reduce using rule 39 (algoritmo -> sentenWHILE .)
    IDCLASS         reduce using rule 39 (algoritmo -> sentenWHILE .)
    IDGLOBAL        reduce using rule 39 (algoritmo -> sentenWHILE .)
    BREAK           reduce using rule 39 (algoritmo -> sentenWHILE .)


state 133

    (72) metodocadena -> cadena . POINT EMPTY INTERROGATIVE
    (74) metodocadena -> cadena . POINT LENGTH

    POINT           shift and go to state 51


state 134

    (73) metodocadena -> string . POINT EMPTY INTERROGATIVE
    (75) metodocadena -> string . POINT LENGTH

    POINT           shift and go to state 50


state 135

    (42) sentenWHILE -> WHILE boolean algoritmo . END

    END             shift and go to state 153


state 136

    (73) metodocadena -> string POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    END             reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    ARRAY           reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    LSQBRACKET      reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    LBRACKET        reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    HASH            reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    FOR             reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    TRUE            reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    FALSE           reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    NIL             reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IF              reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    WHILE           reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    NUMBER          reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    FLOAT           reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    MINUS           reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    STRING          reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    STRINGV         reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDLOCAL         reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDINSTANCE      reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDCLASS         reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDGLOBAL        reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    BREAK           reduce using rule 73 (metodocadena -> string POINT EMPTY INTERROGATIVE .)


state 137

    (72) metodocadena -> cadena POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    END             reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    ARRAY           reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    LSQBRACKET      reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    LBRACKET        reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    HASH            reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    FOR             reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    TRUE            reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    FALSE           reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    NIL             reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IF              reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    WHILE           reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    NUMBER          reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    FLOAT           reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    MINUS           reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    STRING          reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    STRINGV         reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDLOCAL         reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDINSTANCE      reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDCLASS         reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDGLOBAL        reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    BREAK           reduce using rule 72 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)


state 138

    (85) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS . arraycontent RPARENTHESIS
    (81) arraycontent -> . factor
    (82) arraycontent -> . string
    (83) arraycontent -> . factor COMMA arraycontent
    (84) arraycontent -> . string COMMA arraycontent
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT
    (68) string -> . STRINGV

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22
    STRINGV         shift and go to state 23

    arraycontent                   shift and go to state 154
    factor                         shift and go to state 65
    string                         shift and go to state 66

state 139

    (86) metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .

    $end            reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    END             reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    ARRAY           reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    LSQBRACKET      reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    LBRACKET        reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    HASH            reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    FOR             reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    TRUE            reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    FALSE           reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    NIL             reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IF              reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    WHILE           reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    NUMBER          reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    FLOAT           reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    MINUS           reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    STRING          reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    STRINGV         reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDLOCAL         reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDINSTANCE      reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDCLASS         reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDGLOBAL        reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    BREAK           reduce using rule 86 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)


state 140

    (93) metodohash -> variables ASSIGN hash POINT . LENGTH

    LENGTH          shift and go to state 155


state 141

    (70) cadena -> STRING POINT NEW LPARENTHESIS . string RPARENTHESIS
    (68) string -> . STRINGV

    STRINGV         shift and go to state 23

    string                         shift and go to state 156

state 142

    (71) cadena -> STRING LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    END             reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    ARRAY           reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    LSQBRACKET      reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    LBRACKET        reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    HASH            reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    FOR             reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    TRUE            reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    FALSE           reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    NIL             reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IF              reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    WHILE           reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    NUMBER          reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    FLOAT           reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    MINUS           reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    STRING          reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    STRINGV         reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDLOCAL         reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDINSTANCE      reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDCLASS         reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDGLOBAL        reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    BREAK           reduce using rule 71 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)


state 143

    (77) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor RPARENTHESIS
    (78) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor COMMA arraycontent RPARENTHESIS
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    factor                         shift and go to state 157

state 144

    (79) arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    END             reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    ARRAY           reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    LBRACKET        reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    HASH            reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    FOR             reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    TRUE            reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    FALSE           reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    NIL             reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IF              reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    WHILE           reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    NUMBER          reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    FLOAT           reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    MINUS           reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    STRING          reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    STRINGV         reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDLOCAL         reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDINSTANCE      reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDCLASS         reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDGLOBAL        reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    BREAK           reduce using rule 79 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)


state 145

    (83) arraycontent -> factor COMMA arraycontent .

    RSQBRACKET      reduce using rule 83 (arraycontent -> factor COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 83 (arraycontent -> factor COMMA arraycontent .)


state 146

    (84) arraycontent -> string COMMA arraycontent .

    RSQBRACKET      reduce using rule 84 (arraycontent -> string COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 84 (arraycontent -> string COMMA arraycontent .)


state 147

    (89) hashcontent -> string ASSIGN GREATER . hashcontentvalue
    (90) hashcontent -> string ASSIGN GREATER . hashcontentvalue COMMA hashcontent
    (91) hashcontentvalue -> . factor
    (92) hashcontentvalue -> . string
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT
    (68) string -> . STRINGV

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22
    STRINGV         shift and go to state 23

    string                         shift and go to state 158
    hashcontentvalue               shift and go to state 159
    factor                         shift and go to state 160

state 148

    (102) estructurasControl -> FOR IDLOCAL IN factor . POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> FOR IDLOCAL IN factor . POINT POINT factor DO forcontent END

    POINT           shift and go to state 161


state 149

    (48) assigns -> variables ASSIGN . expression
    (49) assigns -> variables ASSIGN . variables
    (50) assigns -> variables ASSIGN . boolean
    (51) assigns -> variables ASSIGN . asignar
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL
    (20) boolean -> . TRUE
    (21) boolean -> . FALSE
    (22) boolean -> . NIL
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . assigns
    (59) term -> . factor
    (68) string -> . STRINGV
    (69) cadena -> . STRING POINT NEW
    (70) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (72) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (73) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (74) metodocadena -> . cadena POINT LENGTH
    (75) metodocadena -> . string POINT LENGTH
    (76) arreglo -> . ARRAY POINT NEW
    (77) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (79) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (80) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (85) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (86) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (87) hash -> . LBRACKET hashcontent RBRACKET
    (88) hash -> . HASH POINT NEW
    (93) metodohash -> . variables ASSIGN hash POINT LENGTH
    (94) metodohash -> . variables POINT LENGTH
    (48) assigns -> . variables ASSIGN expression
    (49) assigns -> . variables ASSIGN variables
    (50) assigns -> . variables ASSIGN boolean
    (51) assigns -> . variables ASSIGN asignar
    (52) assigns -> . variables ASSIGNPLUS expression
    (53) assigns -> . variables ASSIGNPLUS variables
    (54) assigns -> . variables ASSIGNMIN expression
    (55) assigns -> . variables ASSIGNMIN variables
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32
    STRINGV         shift and go to state 23
    STRING          shift and go to state 24
    ARRAY           shift and go to state 25
    LSQBRACKET      shift and go to state 27
    LBRACKET        shift and go to state 28
    HASH            shift and go to state 29
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    variables                      shift and go to state 98
    expression                     shift and go to state 100
    boolean                        shift and go to state 101
    asignar                        shift and go to state 102
    term                           shift and go to state 21
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    assigns                        shift and go to state 14
    factor                         shift and go to state 26

state 150

    (40) sentenWHILE -> WHILE variables comparador variables . algoritmo END
    (30) algoritmo -> . expression
    (31) algoritmo -> . metodocadena
    (32) algoritmo -> . arreglo
    (33) algoritmo -> . metodosarreglo
    (34) algoritmo -> . hash
    (35) algoritmo -> . estructurasControl
    (36) algoritmo -> . boolean
    (37) algoritmo -> . assigns
    (38) algoritmo -> . sentenIF
    (39) algoritmo -> . sentenWHILE
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (72) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (73) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (74) metodocadena -> . cadena POINT LENGTH
    (75) metodocadena -> . string POINT LENGTH
    (76) arreglo -> . ARRAY POINT NEW
    (77) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (79) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (80) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (85) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (86) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (87) hash -> . LBRACKET hashcontent RBRACKET
    (88) hash -> . HASH POINT NEW
    (102) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (20) boolean -> . TRUE
    (21) boolean -> . FALSE
    (22) boolean -> . NIL
    (48) assigns -> . variables ASSIGN expression
    (49) assigns -> . variables ASSIGN variables
    (50) assigns -> . variables ASSIGN boolean
    (51) assigns -> . variables ASSIGN asignar
    (52) assigns -> . variables ASSIGNPLUS expression
    (53) assigns -> . variables ASSIGNPLUS variables
    (54) assigns -> . variables ASSIGNMIN expression
    (55) assigns -> . variables ASSIGNMIN variables
    (95) sentenIF -> . IF comparador term
    (40) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (41) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (42) sentenWHILE -> . WHILE boolean algoritmo END
    (43) sentenWHILE -> . WHILE variables algoritmo END
    (59) term -> . factor
    (69) cadena -> . STRING POINT NEW
    (70) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (68) string -> . STRINGV
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 25
    LSQBRACKET      shift and go to state 27
    LBRACKET        shift and go to state 28
    HASH            shift and go to state 29
    FOR             shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32
    IF              shift and go to state 38
    WHILE           shift and go to state 41
    STRING          shift and go to state 24
    STRINGV         shift and go to state 23
    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    variables                      shift and go to state 120
    algoritmo                      shift and go to state 162
    expression                     shift and go to state 123
    metodocadena                   shift and go to state 124
    arreglo                        shift and go to state 125
    metodosarreglo                 shift and go to state 126
    hash                           shift and go to state 127
    estructurasControl             shift and go to state 128
    boolean                        shift and go to state 129
    assigns                        shift and go to state 130
    sentenIF                       shift and go to state 131
    sentenWHILE                    shift and go to state 132
    term                           shift and go to state 21
    cadena                         shift and go to state 133
    string                         shift and go to state 134
    factor                         shift and go to state 26

state 151

    (41) sentenWHILE -> WHILE variables comparador expression . algoritmo END
    (56) expression -> expression . PLUS term
    (57) expression -> expression . MINUS term
    (64) expression -> expression . DIVISION term
    (65) expression -> expression . MOD term
    (66) expression -> expression . MULT term
    (67) expression -> expression . EXP term
    (30) algoritmo -> . expression
    (31) algoritmo -> . metodocadena
    (32) algoritmo -> . arreglo
    (33) algoritmo -> . metodosarreglo
    (34) algoritmo -> . hash
    (35) algoritmo -> . estructurasControl
    (36) algoritmo -> . boolean
    (37) algoritmo -> . assigns
    (38) algoritmo -> . sentenIF
    (39) algoritmo -> . sentenWHILE
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (72) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (73) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (74) metodocadena -> . cadena POINT LENGTH
    (75) metodocadena -> . string POINT LENGTH
    (76) arreglo -> . ARRAY POINT NEW
    (77) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (79) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (80) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (85) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (86) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (87) hash -> . LBRACKET hashcontent RBRACKET
    (88) hash -> . HASH POINT NEW
    (102) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (20) boolean -> . TRUE
    (21) boolean -> . FALSE
    (22) boolean -> . NIL
    (48) assigns -> . variables ASSIGN expression
    (49) assigns -> . variables ASSIGN variables
    (50) assigns -> . variables ASSIGN boolean
    (51) assigns -> . variables ASSIGN asignar
    (52) assigns -> . variables ASSIGNPLUS expression
    (53) assigns -> . variables ASSIGNPLUS variables
    (54) assigns -> . variables ASSIGNMIN expression
    (55) assigns -> . variables ASSIGNMIN variables
    (95) sentenIF -> . IF comparador term
    (40) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (41) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (42) sentenWHILE -> . WHILE boolean algoritmo END
    (43) sentenWHILE -> . WHILE variables algoritmo END
    (59) term -> . factor
    (69) cadena -> . STRING POINT NEW
    (70) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (68) string -> . STRINGV
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    PLUS            shift and go to state 44
    MINUS           shift and go to state 164
    DIVISION        shift and go to state 46
    MOD             shift and go to state 47
    MULT            shift and go to state 48
    EXP             shift and go to state 49
    ARRAY           shift and go to state 25
    LSQBRACKET      shift and go to state 27
    LBRACKET        shift and go to state 28
    HASH            shift and go to state 29
    FOR             shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32
    IF              shift and go to state 38
    WHILE           shift and go to state 41
    STRING          shift and go to state 24
    STRINGV         shift and go to state 23
    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43

    variables                      shift and go to state 120
    expression                     shift and go to state 123
    algoritmo                      shift and go to state 163
    term                           shift and go to state 21
    metodocadena                   shift and go to state 124
    arreglo                        shift and go to state 125
    metodosarreglo                 shift and go to state 126
    hash                           shift and go to state 127
    estructurasControl             shift and go to state 128
    boolean                        shift and go to state 129
    assigns                        shift and go to state 130
    sentenIF                       shift and go to state 131
    sentenWHILE                    shift and go to state 132
    cadena                         shift and go to state 133
    string                         shift and go to state 134
    factor                         shift and go to state 26

state 152

    (43) sentenWHILE -> WHILE variables algoritmo END .

    $end            reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    END             reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    ARRAY           reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    LSQBRACKET      reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    LBRACKET        reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    HASH            reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    FOR             reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    TRUE            reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    FALSE           reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    NIL             reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    IF              reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    WHILE           reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    NUMBER          reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    FLOAT           reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    MINUS           reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    STRING          reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    STRINGV         reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    IDLOCAL         reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    IDINSTANCE      reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    IDCLASS         reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    IDGLOBAL        reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)
    BREAK           reduce using rule 43 (sentenWHILE -> WHILE variables algoritmo END .)


state 153

    (42) sentenWHILE -> WHILE boolean algoritmo END .

    $end            reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    END             reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    ARRAY           reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    LSQBRACKET      reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    LBRACKET        reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    HASH            reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    FOR             reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    TRUE            reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    FALSE           reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    NIL             reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    IF              reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    WHILE           reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    NUMBER          reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    FLOAT           reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    MINUS           reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    STRING          reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    STRINGV         reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDLOCAL         reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDINSTANCE      reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDCLASS         reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDGLOBAL        reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)
    BREAK           reduce using rule 42 (sentenWHILE -> WHILE boolean algoritmo END .)


state 154

    (85) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 165


state 155

    (93) metodohash -> variables ASSIGN hash POINT LENGTH .

    $end            reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    END             reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    ARRAY           reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    LSQBRACKET      reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    LBRACKET        reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    HASH            reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    FOR             reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    TRUE            reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    FALSE           reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    NIL             reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IF              reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    WHILE           reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    NUMBER          reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    FLOAT           reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    MINUS           reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    STRING          reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    STRINGV         reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDLOCAL         reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDINSTANCE      reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDCLASS         reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDGLOBAL        reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    BREAK           reduce using rule 93 (metodohash -> variables ASSIGN hash POINT LENGTH .)


state 156

    (70) cadena -> STRING POINT NEW LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 166


state 157

    (77) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . RPARENTHESIS
    (78) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . COMMA arraycontent RPARENTHESIS

    RPARENTHESIS    shift and go to state 167
    COMMA           shift and go to state 168


state 158

    (92) hashcontentvalue -> string .

    COMMA           reduce using rule 92 (hashcontentvalue -> string .)
    RBRACKET        reduce using rule 92 (hashcontentvalue -> string .)


state 159

    (89) hashcontent -> string ASSIGN GREATER hashcontentvalue .
    (90) hashcontent -> string ASSIGN GREATER hashcontentvalue . COMMA hashcontent

    RBRACKET        reduce using rule 89 (hashcontent -> string ASSIGN GREATER hashcontentvalue .)
    COMMA           shift and go to state 169


state 160

    (91) hashcontentvalue -> factor .

    COMMA           reduce using rule 91 (hashcontentvalue -> factor .)
    RBRACKET        reduce using rule 91 (hashcontentvalue -> factor .)


state 161

    (102) estructurasControl -> FOR IDLOCAL IN factor POINT . POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> FOR IDLOCAL IN factor POINT . POINT factor DO forcontent END

    POINT           shift and go to state 170


state 162

    (40) sentenWHILE -> WHILE variables comparador variables algoritmo . END

    END             shift and go to state 171


state 163

    (41) sentenWHILE -> WHILE variables comparador expression algoritmo . END

    END             shift and go to state 172


state 164

    (57) expression -> expression MINUS . term
    (62) factor -> MINUS . NUMBER
    (63) factor -> MINUS . FLOAT
    (59) term -> . factor
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 173
    FLOAT           shift and go to state 174
    MINUS           shift and go to state 22

    term                           shift and go to state 87
    factor                         shift and go to state 26

state 165

    (85) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .

    $end            reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    END             reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    ARRAY           reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    LSQBRACKET      reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    LBRACKET        reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    HASH            reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    FOR             reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    TRUE            reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    FALSE           reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    NIL             reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IF              reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    WHILE           reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    NUMBER          reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    FLOAT           reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    MINUS           reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    STRING          reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    STRINGV         reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDLOCAL         reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDINSTANCE      reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDCLASS         reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDGLOBAL        reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    BREAK           reduce using rule 85 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)


state 166

    (70) cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    END             reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    ARRAY           reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    LSQBRACKET      reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    LBRACKET        reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    HASH            reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    FOR             reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    TRUE            reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    FALSE           reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    NIL             reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IF              reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    WHILE           reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    NUMBER          reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    FLOAT           reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    MINUS           reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    STRING          reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    STRINGV         reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDLOCAL         reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDINSTANCE      reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDCLASS         reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDGLOBAL        reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    BREAK           reduce using rule 70 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)


state 167

    (77) arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .

    POINT           reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    LSQBRACKET      reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    $end            reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    END             reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    ARRAY           reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    LBRACKET        reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    HASH            reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    FOR             reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    TRUE            reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    FALSE           reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    NIL             reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IF              reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    WHILE           reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    NUMBER          reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    FLOAT           reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    MINUS           reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    STRING          reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    STRINGV         reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDLOCAL         reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDINSTANCE      reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDCLASS         reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDGLOBAL        reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    BREAK           reduce using rule 77 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)


state 168

    (78) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA . arraycontent RPARENTHESIS
    (81) arraycontent -> . factor
    (82) arraycontent -> . string
    (83) arraycontent -> . factor COMMA arraycontent
    (84) arraycontent -> . string COMMA arraycontent
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT
    (68) string -> . STRINGV

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22
    STRINGV         shift and go to state 23

    factor                         shift and go to state 65
    arraycontent                   shift and go to state 175
    string                         shift and go to state 66

state 169

    (90) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA . hashcontent
    (89) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (90) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (68) string -> . STRINGV

    STRINGV         shift and go to state 23

    string                         shift and go to state 68
    hashcontent                    shift and go to state 176

state 170

    (102) estructurasControl -> FOR IDLOCAL IN factor POINT POINT . factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> FOR IDLOCAL IN factor POINT POINT . factor DO forcontent END
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22

    factor                         shift and go to state 177

state 171

    (40) sentenWHILE -> WHILE variables comparador variables algoritmo END .

    $end            reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    END             reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    ARRAY           reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    LSQBRACKET      reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    LBRACKET        reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    HASH            reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    FOR             reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    TRUE            reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    FALSE           reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    NIL             reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IF              reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    WHILE           reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    NUMBER          reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    FLOAT           reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    MINUS           reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    STRING          reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    STRINGV         reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDLOCAL         reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDINSTANCE      reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDCLASS         reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDGLOBAL        reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    BREAK           reduce using rule 40 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)


state 172

    (41) sentenWHILE -> WHILE variables comparador expression algoritmo END .

    $end            reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    END             reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    ARRAY           reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    LSQBRACKET      reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    LBRACKET        reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    HASH            reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    FOR             reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    TRUE            reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    FALSE           reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    NIL             reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IF              reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    WHILE           reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    NUMBER          reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    FLOAT           reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    MINUS           reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    STRING          reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    STRINGV         reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDLOCAL         reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDINSTANCE      reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDCLASS         reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDGLOBAL        reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    BREAK           reduce using rule 41 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)


state 173

    (62) factor -> MINUS NUMBER .
    (60) factor -> NUMBER .

  ! reduce/reduce conflict for PLUS resolved using rule 60 (factor -> NUMBER .)
  ! reduce/reduce conflict for MINUS resolved using rule 60 (factor -> NUMBER .)
  ! reduce/reduce conflict for DIVISION resolved using rule 60 (factor -> NUMBER .)
  ! reduce/reduce conflict for MOD resolved using rule 60 (factor -> NUMBER .)
  ! reduce/reduce conflict for MULT resolved using rule 60 (factor -> NUMBER .)
  ! reduce/reduce conflict for EXP resolved using rule 60 (factor -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 60 (factor -> NUMBER .)
    PLUS            reduce using rule 60 (factor -> NUMBER .)
    MINUS           reduce using rule 60 (factor -> NUMBER .)
    DIVISION        reduce using rule 60 (factor -> NUMBER .)
    MOD             reduce using rule 60 (factor -> NUMBER .)
    MULT            reduce using rule 60 (factor -> NUMBER .)
    EXP             reduce using rule 60 (factor -> NUMBER .)
    ARRAY           reduce using rule 60 (factor -> NUMBER .)
    LSQBRACKET      reduce using rule 60 (factor -> NUMBER .)
    LBRACKET        reduce using rule 60 (factor -> NUMBER .)
    HASH            reduce using rule 60 (factor -> NUMBER .)
    FOR             reduce using rule 60 (factor -> NUMBER .)
    TRUE            reduce using rule 60 (factor -> NUMBER .)
    FALSE           reduce using rule 60 (factor -> NUMBER .)
    NIL             reduce using rule 60 (factor -> NUMBER .)
    IF              reduce using rule 60 (factor -> NUMBER .)
    WHILE           reduce using rule 60 (factor -> NUMBER .)
    STRING          reduce using rule 60 (factor -> NUMBER .)
    STRINGV         reduce using rule 60 (factor -> NUMBER .)
    IDLOCAL         reduce using rule 60 (factor -> NUMBER .)
    IDINSTANCE      reduce using rule 60 (factor -> NUMBER .)
    IDCLASS         reduce using rule 60 (factor -> NUMBER .)
    IDGLOBAL        reduce using rule 60 (factor -> NUMBER .)
    NUMBER          reduce using rule 60 (factor -> NUMBER .)
    FLOAT           reduce using rule 60 (factor -> NUMBER .)
    END             reduce using rule 60 (factor -> NUMBER .)

  ! PLUS            [ reduce using rule 62 (factor -> MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 62 (factor -> MINUS NUMBER .) ]
  ! DIVISION        [ reduce using rule 62 (factor -> MINUS NUMBER .) ]
  ! MOD             [ reduce using rule 62 (factor -> MINUS NUMBER .) ]
  ! MULT            [ reduce using rule 62 (factor -> MINUS NUMBER .) ]
  ! EXP             [ reduce using rule 62 (factor -> MINUS NUMBER .) ]
  ! END             [ reduce using rule 62 (factor -> MINUS NUMBER .) ]


state 174

    (63) factor -> MINUS FLOAT .
    (61) factor -> FLOAT .

  ! reduce/reduce conflict for PLUS resolved using rule 61 (factor -> FLOAT .)
  ! reduce/reduce conflict for MINUS resolved using rule 61 (factor -> FLOAT .)
  ! reduce/reduce conflict for DIVISION resolved using rule 61 (factor -> FLOAT .)
  ! reduce/reduce conflict for MOD resolved using rule 61 (factor -> FLOAT .)
  ! reduce/reduce conflict for MULT resolved using rule 61 (factor -> FLOAT .)
  ! reduce/reduce conflict for EXP resolved using rule 61 (factor -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 61 (factor -> FLOAT .)
    PLUS            reduce using rule 61 (factor -> FLOAT .)
    MINUS           reduce using rule 61 (factor -> FLOAT .)
    DIVISION        reduce using rule 61 (factor -> FLOAT .)
    MOD             reduce using rule 61 (factor -> FLOAT .)
    MULT            reduce using rule 61 (factor -> FLOAT .)
    EXP             reduce using rule 61 (factor -> FLOAT .)
    ARRAY           reduce using rule 61 (factor -> FLOAT .)
    LSQBRACKET      reduce using rule 61 (factor -> FLOAT .)
    LBRACKET        reduce using rule 61 (factor -> FLOAT .)
    HASH            reduce using rule 61 (factor -> FLOAT .)
    FOR             reduce using rule 61 (factor -> FLOAT .)
    TRUE            reduce using rule 61 (factor -> FLOAT .)
    FALSE           reduce using rule 61 (factor -> FLOAT .)
    NIL             reduce using rule 61 (factor -> FLOAT .)
    IF              reduce using rule 61 (factor -> FLOAT .)
    WHILE           reduce using rule 61 (factor -> FLOAT .)
    STRING          reduce using rule 61 (factor -> FLOAT .)
    STRINGV         reduce using rule 61 (factor -> FLOAT .)
    IDLOCAL         reduce using rule 61 (factor -> FLOAT .)
    IDINSTANCE      reduce using rule 61 (factor -> FLOAT .)
    IDCLASS         reduce using rule 61 (factor -> FLOAT .)
    IDGLOBAL        reduce using rule 61 (factor -> FLOAT .)
    NUMBER          reduce using rule 61 (factor -> FLOAT .)
    FLOAT           reduce using rule 61 (factor -> FLOAT .)
    END             reduce using rule 61 (factor -> FLOAT .)

  ! PLUS            [ reduce using rule 63 (factor -> MINUS FLOAT .) ]
  ! MINUS           [ reduce using rule 63 (factor -> MINUS FLOAT .) ]
  ! DIVISION        [ reduce using rule 63 (factor -> MINUS FLOAT .) ]
  ! MOD             [ reduce using rule 63 (factor -> MINUS FLOAT .) ]
  ! MULT            [ reduce using rule 63 (factor -> MINUS FLOAT .) ]
  ! EXP             [ reduce using rule 63 (factor -> MINUS FLOAT .) ]
  ! END             [ reduce using rule 63 (factor -> MINUS FLOAT .) ]


state 175

    (78) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 178


state 176

    (90) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .

    RBRACKET        reduce using rule 90 (hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .)


state 177

    (102) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor . DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor . DO forcontent END

    DO              shift and go to state 179


state 178

    (78) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .

    POINT           reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    LSQBRACKET      reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    $end            reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    END             reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    ARRAY           reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    LBRACKET        reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    HASH            reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    FOR             reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    TRUE            reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    FALSE           reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    NIL             reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IF              reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    WHILE           reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    NUMBER          reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    FLOAT           reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    MINUS           reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    STRING          reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    STRINGV         reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDLOCAL         reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDINSTANCE      reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDCLASS         reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDGLOBAL        reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    BREAK           reduce using rule 78 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)


state 179

    (102) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO . forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO . forcontent END
    (104) forcontent -> . forcontentvalue
    (105) forcontent -> . forcontentvalue forcontent
    (106) forcontentvalue -> . expression
    (107) forcontentvalue -> . algoritmo
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (30) algoritmo -> . expression
    (31) algoritmo -> . metodocadena
    (32) algoritmo -> . arreglo
    (33) algoritmo -> . metodosarreglo
    (34) algoritmo -> . hash
    (35) algoritmo -> . estructurasControl
    (36) algoritmo -> . boolean
    (37) algoritmo -> . assigns
    (38) algoritmo -> . sentenIF
    (39) algoritmo -> . sentenWHILE
    (59) term -> . factor
    (72) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (73) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (74) metodocadena -> . cadena POINT LENGTH
    (75) metodocadena -> . string POINT LENGTH
    (76) arreglo -> . ARRAY POINT NEW
    (77) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (79) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (80) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (85) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (86) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (87) hash -> . LBRACKET hashcontent RBRACKET
    (88) hash -> . HASH POINT NEW
    (102) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (20) boolean -> . TRUE
    (21) boolean -> . FALSE
    (22) boolean -> . NIL
    (48) assigns -> . variables ASSIGN expression
    (49) assigns -> . variables ASSIGN variables
    (50) assigns -> . variables ASSIGN boolean
    (51) assigns -> . variables ASSIGN asignar
    (52) assigns -> . variables ASSIGNPLUS expression
    (53) assigns -> . variables ASSIGNPLUS variables
    (54) assigns -> . variables ASSIGNMIN expression
    (55) assigns -> . variables ASSIGNMIN variables
    (95) sentenIF -> . IF comparador term
    (40) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (41) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (42) sentenWHILE -> . WHILE boolean algoritmo END
    (43) sentenWHILE -> . WHILE variables algoritmo END
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT
    (69) cadena -> . STRING POINT NEW
    (70) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (68) string -> . STRINGV
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL

    ARRAY           shift and go to state 25
    LSQBRACKET      shift and go to state 27
    LBRACKET        shift and go to state 28
    HASH            shift and go to state 29
    FOR             shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32
    IF              shift and go to state 38
    WHILE           shift and go to state 41
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22
    STRING          shift and go to state 24
    STRINGV         shift and go to state 23
    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36

    factor                         shift and go to state 26
    forcontent                     shift and go to state 180
    forcontentvalue                shift and go to state 181
    expression                     shift and go to state 182
    algoritmo                      shift and go to state 183
    term                           shift and go to state 21
    metodocadena                   shift and go to state 124
    arreglo                        shift and go to state 125
    metodosarreglo                 shift and go to state 126
    hash                           shift and go to state 127
    estructurasControl             shift and go to state 128
    boolean                        shift and go to state 129
    assigns                        shift and go to state 130
    sentenIF                       shift and go to state 131
    sentenWHILE                    shift and go to state 132
    cadena                         shift and go to state 133
    string                         shift and go to state 134
    variables                      shift and go to state 120

state 180

    (102) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent . BREAK IF forcontentvalue END
    (103) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent . END

    BREAK           shift and go to state 184
    END             shift and go to state 185


state 181

    (104) forcontent -> forcontentvalue .
    (105) forcontent -> forcontentvalue . forcontent
    (104) forcontent -> . forcontentvalue
    (105) forcontent -> . forcontentvalue forcontent
    (106) forcontentvalue -> . expression
    (107) forcontentvalue -> . algoritmo
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (30) algoritmo -> . expression
    (31) algoritmo -> . metodocadena
    (32) algoritmo -> . arreglo
    (33) algoritmo -> . metodosarreglo
    (34) algoritmo -> . hash
    (35) algoritmo -> . estructurasControl
    (36) algoritmo -> . boolean
    (37) algoritmo -> . assigns
    (38) algoritmo -> . sentenIF
    (39) algoritmo -> . sentenWHILE
    (59) term -> . factor
    (72) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (73) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (74) metodocadena -> . cadena POINT LENGTH
    (75) metodocadena -> . string POINT LENGTH
    (76) arreglo -> . ARRAY POINT NEW
    (77) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (79) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (80) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (85) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (86) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (87) hash -> . LBRACKET hashcontent RBRACKET
    (88) hash -> . HASH POINT NEW
    (102) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (20) boolean -> . TRUE
    (21) boolean -> . FALSE
    (22) boolean -> . NIL
    (48) assigns -> . variables ASSIGN expression
    (49) assigns -> . variables ASSIGN variables
    (50) assigns -> . variables ASSIGN boolean
    (51) assigns -> . variables ASSIGN asignar
    (52) assigns -> . variables ASSIGNPLUS expression
    (53) assigns -> . variables ASSIGNPLUS variables
    (54) assigns -> . variables ASSIGNMIN expression
    (55) assigns -> . variables ASSIGNMIN variables
    (95) sentenIF -> . IF comparador term
    (40) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (41) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (42) sentenWHILE -> . WHILE boolean algoritmo END
    (43) sentenWHILE -> . WHILE variables algoritmo END
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT
    (69) cadena -> . STRING POINT NEW
    (70) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (68) string -> . STRINGV
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL

    BREAK           reduce using rule 104 (forcontent -> forcontentvalue .)
    END             reduce using rule 104 (forcontent -> forcontentvalue .)
    ARRAY           shift and go to state 25
    LSQBRACKET      shift and go to state 27
    LBRACKET        shift and go to state 28
    HASH            shift and go to state 29
    FOR             shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32
    IF              shift and go to state 38
    WHILE           shift and go to state 41
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22
    STRING          shift and go to state 24
    STRINGV         shift and go to state 23
    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36

    forcontentvalue                shift and go to state 181
    forcontent                     shift and go to state 186
    expression                     shift and go to state 182
    algoritmo                      shift and go to state 183
    term                           shift and go to state 21
    metodocadena                   shift and go to state 124
    arreglo                        shift and go to state 125
    metodosarreglo                 shift and go to state 126
    hash                           shift and go to state 127
    estructurasControl             shift and go to state 128
    boolean                        shift and go to state 129
    assigns                        shift and go to state 130
    sentenIF                       shift and go to state 131
    sentenWHILE                    shift and go to state 132
    factor                         shift and go to state 26
    cadena                         shift and go to state 133
    string                         shift and go to state 134
    variables                      shift and go to state 120

state 182

    (106) forcontentvalue -> expression .
    (56) expression -> expression . PLUS term
    (57) expression -> expression . MINUS term
    (64) expression -> expression . DIVISION term
    (65) expression -> expression . MOD term
    (66) expression -> expression . MULT term
    (67) expression -> expression . EXP term
    (30) algoritmo -> expression .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for ARRAY resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for HASH resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for NIL resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 30 (algoritmo -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for STRINGV resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for BREAK resolved using rule 30 (algoritmo -> expression .)
  ! reduce/reduce conflict for END resolved using rule 30 (algoritmo -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    DIVISION        shift and go to state 46
    MOD             shift and go to state 47
    MULT            shift and go to state 48
    EXP             shift and go to state 49
    ARRAY           reduce using rule 30 (algoritmo -> expression .)
    LSQBRACKET      reduce using rule 30 (algoritmo -> expression .)
    LBRACKET        reduce using rule 30 (algoritmo -> expression .)
    HASH            reduce using rule 30 (algoritmo -> expression .)
    FOR             reduce using rule 30 (algoritmo -> expression .)
    TRUE            reduce using rule 30 (algoritmo -> expression .)
    FALSE           reduce using rule 30 (algoritmo -> expression .)
    NIL             reduce using rule 30 (algoritmo -> expression .)
    IF              reduce using rule 30 (algoritmo -> expression .)
    WHILE           reduce using rule 30 (algoritmo -> expression .)
    NUMBER          reduce using rule 30 (algoritmo -> expression .)
    FLOAT           reduce using rule 30 (algoritmo -> expression .)
    STRING          reduce using rule 30 (algoritmo -> expression .)
    STRINGV         reduce using rule 30 (algoritmo -> expression .)
    IDLOCAL         reduce using rule 30 (algoritmo -> expression .)
    IDINSTANCE      reduce using rule 30 (algoritmo -> expression .)
    IDCLASS         reduce using rule 30 (algoritmo -> expression .)
    IDGLOBAL        reduce using rule 30 (algoritmo -> expression .)
    BREAK           reduce using rule 30 (algoritmo -> expression .)
    END             reduce using rule 30 (algoritmo -> expression .)

  ! ARRAY           [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! LSQBRACKET      [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! LBRACKET        [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! HASH            [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! FOR             [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! TRUE            [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! FALSE           [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! NIL             [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! IF              [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! WHILE           [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! NUMBER          [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! FLOAT           [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! MINUS           [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! STRING          [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! STRINGV         [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! IDLOCAL         [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! IDINSTANCE      [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! IDCLASS         [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! IDGLOBAL        [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! BREAK           [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! END             [ reduce using rule 106 (forcontentvalue -> expression .) ]
  ! MINUS           [ reduce using rule 30 (algoritmo -> expression .) ]


state 183

    (107) forcontentvalue -> algoritmo .

    ARRAY           reduce using rule 107 (forcontentvalue -> algoritmo .)
    LSQBRACKET      reduce using rule 107 (forcontentvalue -> algoritmo .)
    LBRACKET        reduce using rule 107 (forcontentvalue -> algoritmo .)
    HASH            reduce using rule 107 (forcontentvalue -> algoritmo .)
    FOR             reduce using rule 107 (forcontentvalue -> algoritmo .)
    TRUE            reduce using rule 107 (forcontentvalue -> algoritmo .)
    FALSE           reduce using rule 107 (forcontentvalue -> algoritmo .)
    NIL             reduce using rule 107 (forcontentvalue -> algoritmo .)
    IF              reduce using rule 107 (forcontentvalue -> algoritmo .)
    WHILE           reduce using rule 107 (forcontentvalue -> algoritmo .)
    NUMBER          reduce using rule 107 (forcontentvalue -> algoritmo .)
    FLOAT           reduce using rule 107 (forcontentvalue -> algoritmo .)
    MINUS           reduce using rule 107 (forcontentvalue -> algoritmo .)
    STRING          reduce using rule 107 (forcontentvalue -> algoritmo .)
    STRINGV         reduce using rule 107 (forcontentvalue -> algoritmo .)
    IDLOCAL         reduce using rule 107 (forcontentvalue -> algoritmo .)
    IDINSTANCE      reduce using rule 107 (forcontentvalue -> algoritmo .)
    IDCLASS         reduce using rule 107 (forcontentvalue -> algoritmo .)
    IDGLOBAL        reduce using rule 107 (forcontentvalue -> algoritmo .)
    BREAK           reduce using rule 107 (forcontentvalue -> algoritmo .)
    END             reduce using rule 107 (forcontentvalue -> algoritmo .)


state 184

    (102) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK . IF forcontentvalue END

    IF              shift and go to state 187


state 185

    (103) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .

    $end            reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    END             reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    ARRAY           reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    LSQBRACKET      reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    LBRACKET        reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    HASH            reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    FOR             reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    TRUE            reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    FALSE           reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    NIL             reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IF              reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    WHILE           reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    NUMBER          reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    FLOAT           reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    MINUS           reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    STRING          reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    STRINGV         reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDLOCAL         reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDINSTANCE      reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDCLASS         reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDGLOBAL        reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    BREAK           reduce using rule 103 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)


state 186

    (105) forcontent -> forcontentvalue forcontent .

    BREAK           reduce using rule 105 (forcontent -> forcontentvalue forcontent .)
    END             reduce using rule 105 (forcontent -> forcontentvalue forcontent .)


state 187

    (102) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF . forcontentvalue END
    (106) forcontentvalue -> . expression
    (107) forcontentvalue -> . algoritmo
    (56) expression -> . expression PLUS term
    (57) expression -> . expression MINUS term
    (58) expression -> . term
    (64) expression -> . expression DIVISION term
    (65) expression -> . expression MOD term
    (66) expression -> . expression MULT term
    (67) expression -> . expression EXP term
    (30) algoritmo -> . expression
    (31) algoritmo -> . metodocadena
    (32) algoritmo -> . arreglo
    (33) algoritmo -> . metodosarreglo
    (34) algoritmo -> . hash
    (35) algoritmo -> . estructurasControl
    (36) algoritmo -> . boolean
    (37) algoritmo -> . assigns
    (38) algoritmo -> . sentenIF
    (39) algoritmo -> . sentenWHILE
    (59) term -> . factor
    (72) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (73) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (74) metodocadena -> . cadena POINT LENGTH
    (75) metodocadena -> . string POINT LENGTH
    (76) arreglo -> . ARRAY POINT NEW
    (77) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (78) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (79) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (80) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (85) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (86) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (87) hash -> . LBRACKET hashcontent RBRACKET
    (88) hash -> . HASH POINT NEW
    (102) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (103) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (20) boolean -> . TRUE
    (21) boolean -> . FALSE
    (22) boolean -> . NIL
    (48) assigns -> . variables ASSIGN expression
    (49) assigns -> . variables ASSIGN variables
    (50) assigns -> . variables ASSIGN boolean
    (51) assigns -> . variables ASSIGN asignar
    (52) assigns -> . variables ASSIGNPLUS expression
    (53) assigns -> . variables ASSIGNPLUS variables
    (54) assigns -> . variables ASSIGNMIN expression
    (55) assigns -> . variables ASSIGNMIN variables
    (95) sentenIF -> . IF comparador term
    (40) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (41) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (42) sentenWHILE -> . WHILE boolean algoritmo END
    (43) sentenWHILE -> . WHILE variables algoritmo END
    (60) factor -> . NUMBER
    (61) factor -> . FLOAT
    (62) factor -> . MINUS NUMBER
    (63) factor -> . MINUS FLOAT
    (69) cadena -> . STRING POINT NEW
    (70) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (71) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (68) string -> . STRINGV
    (44) variables -> . IDLOCAL
    (45) variables -> . IDINSTANCE
    (46) variables -> . IDCLASS
    (47) variables -> . IDGLOBAL

    ARRAY           shift and go to state 25
    LSQBRACKET      shift and go to state 27
    LBRACKET        shift and go to state 28
    HASH            shift and go to state 29
    FOR             shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NIL             shift and go to state 32
    IF              shift and go to state 38
    WHILE           shift and go to state 41
    NUMBER          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 22
    STRING          shift and go to state 24
    STRINGV         shift and go to state 23
    IDLOCAL         shift and go to state 33
    IDINSTANCE      shift and go to state 34
    IDCLASS         shift and go to state 35
    IDGLOBAL        shift and go to state 36

    factor                         shift and go to state 26
    forcontentvalue                shift and go to state 188
    expression                     shift and go to state 182
    algoritmo                      shift and go to state 183
    term                           shift and go to state 21
    metodocadena                   shift and go to state 124
    arreglo                        shift and go to state 125
    metodosarreglo                 shift and go to state 126
    hash                           shift and go to state 127
    estructurasControl             shift and go to state 128
    boolean                        shift and go to state 129
    assigns                        shift and go to state 130
    sentenIF                       shift and go to state 131
    sentenWHILE                    shift and go to state 132
    cadena                         shift and go to state 133
    string                         shift and go to state 134
    variables                      shift and go to state 120

state 188

    (102) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue . END

    END             shift and go to state 189


state 189

    (102) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .

    $end            reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    END             reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    ARRAY           reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    LSQBRACKET      reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    LBRACKET        reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    HASH            reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    FOR             reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    TRUE            reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    FALSE           reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    NIL             reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IF              reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    WHILE           reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    NUMBER          reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    FLOAT           reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    MINUS           reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    STRING          reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    STRINGV         reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDLOCAL         reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDINSTANCE      reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDCLASS         reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDGLOBAL        reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    BREAK           reduce using rule 102 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LSQBRACKET in state 8 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for LSQBRACKET in state 125 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 182 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 182 resolved as shift
WARNING: reduce/reduce conflict in state 98 resolved using rule (asignar -> variables)
WARNING: rejected rule (assigns -> variables ASSIGN variables) in state 98
WARNING: reduce/reduce conflict in state 100 resolved using rule (asignar -> expression)
WARNING: rejected rule (assigns -> variables ASSIGN expression) in state 100
WARNING: reduce/reduce conflict in state 101 resolved using rule (asignar -> boolean)
WARNING: rejected rule (assigns -> variables ASSIGN boolean) in state 101
WARNING: reduce/reduce conflict in state 173 resolved using rule (factor -> NUMBER)
WARNING: rejected rule (factor -> MINUS NUMBER) in state 173
WARNING: reduce/reduce conflict in state 174 resolved using rule (factor -> FLOAT)
WARNING: rejected rule (factor -> MINUS FLOAT) in state 174
WARNING: reduce/reduce conflict in state 182 resolved using rule (algoritmo -> expression)
WARNING: rejected rule (forcontentvalue -> expression) in state 182
WARNING: Rule (assigns -> variables ASSIGN variables) is never reduced
WARNING: Rule (assigns -> variables ASSIGN expression) is never reduced
WARNING: Rule (assigns -> variables ASSIGN boolean) is never reduced
WARNING: Rule (forcontentvalue -> expression) is never reduced
