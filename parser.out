Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ARROBA
    BSLASH
    CASE
    CLASS
    COMENTARIO
    COMID
    COMIS
    DEFINED
    ELSIF
    ENSURE
    MODULE
    NEXT
    NOT
    NOTS
    OR
    PUTC
    REDO
    RESCUE
    SELF
    SEMICOLON
    UNDEF
    UNTIL
    WHEN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignar
Rule 2     instrucciones -> noasignar
Rule 3     asignar -> expression
Rule 4     asignar -> string
Rule 5     asignar -> cadena
Rule 6     asignar -> metodocadena
Rule 7     asignar -> arreglo
Rule 8     asignar -> metodosarreglo
Rule 9     asignar -> hash
Rule 10    asignar -> metodohash
Rule 11    asignar -> boolean
Rule 12    asignar -> variables
Rule 13    asignar -> reglaSemanticaComparaciones
Rule 14    asignar -> metodocadenaSemantica
Rule 15    noasignar -> estructurasControl
Rule 16    noasignar -> oputs
Rule 17    noasignar -> putss
Rule 18    noasignar -> putsenx
Rule 19    noasignar -> sentenIF
Rule 20    noasignar -> sentenifp
Rule 21    noasignar -> sentenifelse
Rule 22    noasignar -> sentenWHILE
Rule 23    noasignar -> funcion1
Rule 24    noasignar -> funcion2
Rule 25    noasignar -> funcion3
Rule 26    noasignar -> ogets
Rule 27    noasignar -> getsr
Rule 28    noasignar -> assigns
Rule 29    boolean -> TRUE
Rule 30    boolean -> FALSE
Rule 31    boolean -> NIL
Rule 32    oputs -> PUTS
Rule 33    putss -> PUTS string
Rule 34    putss -> PUTS cadena
Rule 35    putss -> PRINT string
Rule 36    putss -> PRINT cadena
Rule 37    putsenx -> PUTS expression
Rule 38    putsenx -> PRINT expression
Rule 39    algoritmo -> expression
Rule 40    algoritmo -> metodocadena
Rule 41    algoritmo -> arreglo
Rule 42    algoritmo -> metodosarreglo
Rule 43    algoritmo -> hash
Rule 44    algoritmo -> estructurasControl
Rule 45    algoritmo -> boolean
Rule 46    algoritmo -> assigns
Rule 47    algoritmo -> sentenIF
Rule 48    algoritmo -> sentenifp
Rule 49    algoritmo -> sentenifelse
Rule 50    algoritmo -> variables
Rule 51    algoritmo -> sentenWHILE
Rule 52    sentenWHILE -> WHILE variables comparador variables algoritmo END
Rule 53    sentenWHILE -> WHILE variables comparador expression algoritmo END
Rule 54    sentenWHILE -> WHILE boolean algoritmo END
Rule 55    sentenWHILE -> WHILE variables algoritmo END
Rule 56    sentenIF -> IF variables comparador term
Rule 57    sentenifp -> IF variables comparador term algoritmo END
Rule 58    sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END
Rule 59    variables -> IDLOCAL
Rule 60    variables -> IDINSTANCE
Rule 61    variables -> IDCLASS
Rule 62    variables -> IDGLOBAL
Rule 63    variables -> IDENTIFIER
Rule 64    assigns -> IDLOCAL ASSIGN expression
Rule 65    assigns -> IDINSTANCE ASSIGN expression
Rule 66    assigns -> IDCLASS ASSIGN expression
Rule 67    assigns -> IDGLOBAL ASSIGN expression
Rule 68    assigns -> IDENTIFIER ASSIGN expression
Rule 69    assigns -> IDLOCAL ASSIGN variables
Rule 70    assigns -> IDINSTANCE ASSIGN variables
Rule 71    assigns -> IDCLASS ASSIGN variables
Rule 72    assigns -> IDGLOBAL ASSIGN variables
Rule 73    assigns -> IDENTIFIER ASSIGN variables
Rule 74    assigns -> IDLOCAL ASSIGN asignar
Rule 75    assigns -> IDINSTANCE ASSIGN asignar
Rule 76    assigns -> IDCLASS ASSIGN asignar
Rule 77    assigns -> IDGLOBAL ASSIGN asignar
Rule 78    assigns -> IDENTIFIER ASSIGN asignar
Rule 79    assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones
Rule 80    assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones
Rule 81    assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones
Rule 82    assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones
Rule 83    assigns -> variables ASSIGNPLUS expression
Rule 84    assigns -> variables ASSIGNPLUS variables
Rule 85    assigns -> variables ASSIGNMIN expression
Rule 86    assigns -> variables ASSIGNMIN variables
Rule 87    expression -> expression PLUS term
Rule 88    expression -> expression MINUS term
Rule 89    expression -> expression PLUS variables
Rule 90    expression -> variables PLUS expression
Rule 91    expression -> expression MINUS variables
Rule 92    expression -> variables MINUS expression
Rule 93    expression -> term
Rule 94    term -> factor
Rule 95    term -> variables
Rule 96    factor -> NUMBER
Rule 97    factor -> FLOAT
Rule 98    factor -> NUML
Rule 99    factor -> MINUS NUMBER
Rule 100   factor -> MINUS FLOAT
Rule 101   expression -> expression DIVISION term
Rule 102   expression -> expression MOD term
Rule 103   expression -> expression MULT term
Rule 104   expression -> expression EXP term
Rule 105   string -> STRINGV
Rule 106   cadena -> STRING POINT NEW
Rule 107   cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS
Rule 108   cadena -> STRING LPARENTHESIS string RPARENTHESIS
Rule 109   metodocadena -> cadena POINT EMPTY INTERROGATIVE
Rule 110   metodocadena -> string POINT EMPTY INTERROGATIVE
Rule 111   metodocadena -> cadena POINT LENGTH
Rule 112   metodocadena -> string POINT LENGTH
Rule 113   arreglo -> ARRAY POINT NEW
Rule 114   arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
Rule 115   arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
Rule 116   arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET
Rule 117   arreglo -> LSQBRACKET arraycontent RSQBRACKET
Rule 118   arraycontent -> factor
Rule 119   arraycontent -> string
Rule 120   arraycontent -> factor COMMA arraycontent
Rule 121   arraycontent -> string COMMA arraycontent
Rule 122   metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
Rule 123   metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET
Rule 124   hash -> LBRACKET hashcontent RBRACKET
Rule 125   hash -> HASH POINT NEW
Rule 126   hashcontent -> string ASSIGN GREATER hashcontentvalue
Rule 127   hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent
Rule 128   hashcontentvalue -> factor
Rule 129   hashcontentvalue -> string
Rule 130   metodohash -> variables ASSIGN hash POINT LENGTH
Rule 131   metodohash -> variables POINT LENGTH
Rule 132   comparador -> COMPARE
Rule 133   comparador -> GREQUAL
Rule 134   comparador -> LSEQUAL
Rule 135   comparador -> NOTEQUAL
Rule 136   comparador -> LESS
Rule 137   comparador -> GREATER
Rule 138   estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
Rule 139   estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
Rule 140   forcontent -> forcontentvalue
Rule 141   forcontent -> forcontentvalue forcontent
Rule 142   forcontentvalue -> expression
Rule 143   forcontentvalue -> algoritmo
Rule 144   funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
Rule 145   funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END
Rule 146   fcontenido -> variables
Rule 147   fcontenido -> variables COMMA fcontenido
Rule 148   values -> term
Rule 149   values -> boolean
Rule 150   values -> cadena
Rule 151   values -> arreglo
Rule 152   valuedefect -> variables ASSIGN values
Rule 153   valuedefect -> variables COMMA fcontenido
Rule 154   valuedefect -> variables COMMA valuedefect
Rule 155   funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END
Rule 156   funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo END
Rule 157   funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END
Rule 158   funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END
Rule 159   value2 -> variables
Rule 160   value2 -> boolean
Rule 161   value2 -> term
Rule 162   value2 -> expression
Rule 163   value2 -> cadena
Rule 164   reglaSemanticaComparaciones -> value2 COMPARE value2
Rule 165   reglaSemanticaComparaciones -> value2 LESS value2
Rule 166   reglaSemanticaComparaciones -> value2 GREATER value2
Rule 167   reglaSemanticaComparaciones -> value2 GREQUAL value2
Rule 168   reglaSemanticaComparaciones -> value2 LSEQUAL value2
Rule 169   reglaSemanticaComparaciones -> value2 NOTEQUAL value2
Rule 170   reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones
Rule 171   reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones
Rule 172   metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE
Rule 173   metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE
Rule 174   metodocadena -> PUTS cadena POINT LENGTH
Rule 175   metodocadena -> PUTS string POINT LENGTH
Rule 176   ogets -> GETS
Rule 177   getsr -> IDLOCAL ASSIGN GETS

Terminals, with rules where they appear

AND                  : 
ANDS                 : 170
ARRAY                : 113 114 115 116
ARROBA               : 
ASSIGN               : 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 126 127 130 152 177
ASSIGNMIN            : 85 86
ASSIGNPLUS           : 83 84
BREAK                : 138
BSLASH               : 
CASE                 : 
CLASS                : 
COMENTARIO           : 
COMID                : 
COMIS                : 
COMMA                : 115 120 121 127 147 153 154
COMPARE              : 132 164
DEF                  : 144 145 155 156 157 158
DEFINED              : 
DIVISION             : 101
DO                   : 138 139
ELSE                 : 58
ELSIF                : 
EMPTY                : 109 110 172 173
END                  : 52 53 54 55 57 58 138 139 144 145 155 156 157 158
ENSURE               : 
EXP                  : 104
FALSE                : 30
FLOAT                : 97 100
FOR                  : 138 139
GETS                 : 176 177
GREATER              : 126 127 137 166
GREQUAL              : 133 167
HASH                 : 125
IDCLASS              : 61 66 71 76 81
IDENTIFIER           : 63 68 73 78
IDGLOBAL             : 62 67 72 77 82
IDINSTANCE           : 60 65 70 75 80
IDLOCAL              : 59 64 69 74 79 138 139 144 144 145 155 156 157 157 158 158 177
IF                   : 56 57 58 138
IN                   : 138 139
INDEX                : 122
INTERROGATIVE        : 109 110 172 173
LBRACKET             : 124
LENGTH               : 111 112 130 131 174 175
LESS                 : 136 165
LPARENTHESIS         : 107 108 114 115 122 144 145 155 156 157 158
LSEQUAL              : 134 168
LSQBRACKET           : 116 117 123
MINUS                : 88 91 92 99 100
MOD                  : 102
MODULE               : 
MULT                 : 103 157 158
NEW                  : 106 107 113 114 115 125
NEXT                 : 
NIL                  : 31
NOT                  : 
NOTEQUAL             : 135 169
NOTS                 : 
NUMBER               : 96 99
NUML                 : 98
OR                   : 
ORS                  : 171
PLUS                 : 87 89 90
POINT                : 106 107 109 110 111 112 113 114 115 122 125 130 131 138 138 139 139 172 173 174 175
PRINT                : 35 36 38
PUTC                 : 
PUTS                 : 32 33 34 37 172 173 174 175
RBRACKET             : 124
REDO                 : 
RESCUE               : 
RETURN               : 144 155 157
RPARENTHESIS         : 107 108 114 115 122 144 145 155 156 157 158
RSQBRACKET           : 116 117 123
SELF                 : 
SEMICOLON            : 
STRING               : 106 107 108
STRINGV              : 105
TRUE                 : 29
UNDEF                : 
UNTIL                : 
WHEN                 : 
WHILE                : 52 53 54 55
error                : 

Nonterminals, with rules where they appear

algoritmo            : 52 53 54 55 57 58 58 143 144 145 155 156 157 158
arraycontent         : 115 116 117 120 121 122
arreglo              : 7 41 122 123 151
asignar              : 1 74 75 76 77 78
assigns              : 28 46
boolean              : 11 45 54 149 160
cadena               : 5 34 36 109 111 150 163 172 174
comparador           : 52 53 56 57 58
estructurasControl   : 15 44
expression           : 3 37 38 39 53 64 65 66 67 68 83 85 87 88 89 90 91 92 101 102 103 104 142 162
factor               : 94 114 115 118 120 123 128 138 138 139 139
fcontenido           : 144 145 147 153
forcontent           : 138 139 141
forcontentvalue      : 138 140 141
funcion1             : 23
funcion2             : 24
funcion3             : 25
getsr                : 27
hash                 : 9 43 130
hashcontent          : 124 127
hashcontentvalue     : 126 127
instrucciones        : 0
metodocadena         : 6 40
metodocadenaSemantica : 14
metodohash           : 10
metodosarreglo       : 8 42
noasignar            : 2
ogets                : 26
oputs                : 16
putsenx              : 18
putss                : 17
reglaSemanticaComparaciones : 13 79 80 81 82 170 170 171 171
sentenIF             : 19 47
sentenWHILE          : 22 51
sentenifelse         : 21 49
sentenifp            : 20 48
string               : 4 33 35 107 108 110 112 119 121 126 127 129 173 175
term                 : 56 57 58 87 88 93 101 102 103 104 148 161
value2               : 164 164 165 165 166 166 167 167 168 168 169 169
valuedefect          : 154 155 156
values               : 152
variables            : 12 50 52 52 53 55 56 57 58 69 70 71 72 73 83 84 84 85 86 86 89 90 91 92 95 130 131 146 147 152 153 154 155 157 159

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignar
    (2) instrucciones -> . noasignar
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . reglaSemanticaComparaciones
    (14) asignar -> . metodocadenaSemantica
    (15) noasignar -> . estructurasControl
    (16) noasignar -> . oputs
    (17) noasignar -> . putss
    (18) noasignar -> . putsenx
    (19) noasignar -> . sentenIF
    (20) noasignar -> . sentenifp
    (21) noasignar -> . sentenifelse
    (22) noasignar -> . sentenWHILE
    (23) noasignar -> . funcion1
    (24) noasignar -> . funcion2
    (25) noasignar -> . funcion3
    (26) noasignar -> . ogets
    (27) noasignar -> . getsr
    (28) noasignar -> . assigns
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (105) string -> . STRINGV
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (130) metodohash -> . variables ASSIGN hash POINT LENGTH
    (131) metodohash -> . variables POINT LENGTH
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (164) reglaSemanticaComparaciones -> . value2 COMPARE value2
    (165) reglaSemanticaComparaciones -> . value2 LESS value2
    (166) reglaSemanticaComparaciones -> . value2 GREATER value2
    (167) reglaSemanticaComparaciones -> . value2 GREQUAL value2
    (168) reglaSemanticaComparaciones -> . value2 LSEQUAL value2
    (169) reglaSemanticaComparaciones -> . value2 NOTEQUAL value2
    (170) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ORS reglaSemanticaComparaciones
    (172) metodocadenaSemantica -> . PUTS cadena POINT EMPTY INTERROGATIVE
    (173) metodocadenaSemantica -> . PUTS string POINT EMPTY INTERROGATIVE
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (32) oputs -> . PUTS
    (33) putss -> . PUTS string
    (34) putss -> . PUTS cadena
    (35) putss -> . PRINT string
    (36) putss -> . PRINT cadena
    (37) putsenx -> . PUTS expression
    (38) putsenx -> . PRINT expression
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (144) funcion1 -> . DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (145) funcion1 -> . DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END
    (155) funcion2 -> . DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END
    (156) funcion2 -> . DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo END
    (157) funcion3 -> . DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END
    (158) funcion3 -> . DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END
    (176) ogets -> . GETS
    (177) getsr -> . IDLOCAL ASSIGN GETS
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (94) term -> . factor
    (95) term -> . variables
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 32
    STRING          shift and go to state 33
    PUTS            shift and go to state 34
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IDLOCAL         shift and go to state 43
    IDINSTANCE      shift and go to state 44
    IDCLASS         shift and go to state 45
    IDGLOBAL        shift and go to state 46
    IDENTIFIER      shift and go to state 47
    FOR             shift and go to state 49
    PRINT           shift and go to state 51
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    DEF             shift and go to state 53
    GETS            shift and go to state 54
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    instrucciones                  shift and go to state 1
    asignar                        shift and go to state 2
    noasignar                      shift and go to state 3
    expression                     shift and go to state 4
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    boolean                        shift and go to state 12
    variables                      shift and go to state 13
    reglaSemanticaComparaciones    shift and go to state 14
    metodocadenaSemantica          shift and go to state 15
    estructurasControl             shift and go to state 16
    oputs                          shift and go to state 17
    putss                          shift and go to state 18
    putsenx                        shift and go to state 19
    sentenIF                       shift and go to state 20
    sentenifp                      shift and go to state 21
    sentenifelse                   shift and go to state 22
    sentenWHILE                    shift and go to state 23
    funcion1                       shift and go to state 24
    funcion2                       shift and go to state 25
    funcion3                       shift and go to state 26
    ogets                          shift and go to state 27
    getsr                          shift and go to state 28
    assigns                        shift and go to state 29
    term                           shift and go to state 30
    factor                         shift and go to state 36
    value2                         shift and go to state 48

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignar .

    $end            reduce using rule 1 (instrucciones -> asignar .)


state 3

    (2) instrucciones -> noasignar .

    $end            reduce using rule 2 (instrucciones -> noasignar .)


state 4

    (3) asignar -> expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term
    (162) value2 -> expression .

    $end            reduce using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63
    COMPARE         reduce using rule 162 (value2 -> expression .)
    LESS            reduce using rule 162 (value2 -> expression .)
    GREATER         reduce using rule 162 (value2 -> expression .)
    GREQUAL         reduce using rule 162 (value2 -> expression .)
    LSEQUAL         reduce using rule 162 (value2 -> expression .)
    NOTEQUAL        reduce using rule 162 (value2 -> expression .)


state 5

    (4) asignar -> string .
    (110) metodocadena -> string . POINT EMPTY INTERROGATIVE
    (112) metodocadena -> string . POINT LENGTH

    $end            reduce using rule 4 (asignar -> string .)
    END             reduce using rule 4 (asignar -> string .)
    ELSE            reduce using rule 4 (asignar -> string .)
    RETURN          reduce using rule 4 (asignar -> string .)
    IDLOCAL         reduce using rule 4 (asignar -> string .)
    IDINSTANCE      reduce using rule 4 (asignar -> string .)
    IDCLASS         reduce using rule 4 (asignar -> string .)
    IDGLOBAL        reduce using rule 4 (asignar -> string .)
    IDENTIFIER      reduce using rule 4 (asignar -> string .)
    PUTS            reduce using rule 4 (asignar -> string .)
    ARRAY           reduce using rule 4 (asignar -> string .)
    LSQBRACKET      reduce using rule 4 (asignar -> string .)
    LBRACKET        reduce using rule 4 (asignar -> string .)
    HASH            reduce using rule 4 (asignar -> string .)
    FOR             reduce using rule 4 (asignar -> string .)
    TRUE            reduce using rule 4 (asignar -> string .)
    FALSE           reduce using rule 4 (asignar -> string .)
    NIL             reduce using rule 4 (asignar -> string .)
    IF              reduce using rule 4 (asignar -> string .)
    WHILE           reduce using rule 4 (asignar -> string .)
    NUMBER          reduce using rule 4 (asignar -> string .)
    FLOAT           reduce using rule 4 (asignar -> string .)
    NUML            reduce using rule 4 (asignar -> string .)
    MINUS           reduce using rule 4 (asignar -> string .)
    STRING          reduce using rule 4 (asignar -> string .)
    STRINGV         reduce using rule 4 (asignar -> string .)
    BREAK           reduce using rule 4 (asignar -> string .)
    POINT           shift and go to state 64


state 6

    (5) asignar -> cadena .
    (109) metodocadena -> cadena . POINT EMPTY INTERROGATIVE
    (111) metodocadena -> cadena . POINT LENGTH
    (163) value2 -> cadena .

    $end            reduce using rule 5 (asignar -> cadena .)
    END             reduce using rule 5 (asignar -> cadena .)
    ELSE            reduce using rule 5 (asignar -> cadena .)
    RETURN          reduce using rule 5 (asignar -> cadena .)
    IDLOCAL         reduce using rule 5 (asignar -> cadena .)
    IDINSTANCE      reduce using rule 5 (asignar -> cadena .)
    IDCLASS         reduce using rule 5 (asignar -> cadena .)
    IDGLOBAL        reduce using rule 5 (asignar -> cadena .)
    IDENTIFIER      reduce using rule 5 (asignar -> cadena .)
    PUTS            reduce using rule 5 (asignar -> cadena .)
    ARRAY           reduce using rule 5 (asignar -> cadena .)
    LSQBRACKET      reduce using rule 5 (asignar -> cadena .)
    LBRACKET        reduce using rule 5 (asignar -> cadena .)
    HASH            reduce using rule 5 (asignar -> cadena .)
    FOR             reduce using rule 5 (asignar -> cadena .)
    TRUE            reduce using rule 5 (asignar -> cadena .)
    FALSE           reduce using rule 5 (asignar -> cadena .)
    NIL             reduce using rule 5 (asignar -> cadena .)
    IF              reduce using rule 5 (asignar -> cadena .)
    WHILE           reduce using rule 5 (asignar -> cadena .)
    NUMBER          reduce using rule 5 (asignar -> cadena .)
    FLOAT           reduce using rule 5 (asignar -> cadena .)
    NUML            reduce using rule 5 (asignar -> cadena .)
    MINUS           reduce using rule 5 (asignar -> cadena .)
    STRING          reduce using rule 5 (asignar -> cadena .)
    STRINGV         reduce using rule 5 (asignar -> cadena .)
    BREAK           reduce using rule 5 (asignar -> cadena .)
    POINT           shift and go to state 65
    COMPARE         reduce using rule 163 (value2 -> cadena .)
    LESS            reduce using rule 163 (value2 -> cadena .)
    GREATER         reduce using rule 163 (value2 -> cadena .)
    GREQUAL         reduce using rule 163 (value2 -> cadena .)
    LSEQUAL         reduce using rule 163 (value2 -> cadena .)
    NOTEQUAL        reduce using rule 163 (value2 -> cadena .)


state 7

    (6) asignar -> metodocadena .

    $end            reduce using rule 6 (asignar -> metodocadena .)
    END             reduce using rule 6 (asignar -> metodocadena .)
    ELSE            reduce using rule 6 (asignar -> metodocadena .)
    RETURN          reduce using rule 6 (asignar -> metodocadena .)
    IDLOCAL         reduce using rule 6 (asignar -> metodocadena .)
    IDINSTANCE      reduce using rule 6 (asignar -> metodocadena .)
    IDCLASS         reduce using rule 6 (asignar -> metodocadena .)
    IDGLOBAL        reduce using rule 6 (asignar -> metodocadena .)
    IDENTIFIER      reduce using rule 6 (asignar -> metodocadena .)
    PUTS            reduce using rule 6 (asignar -> metodocadena .)
    ARRAY           reduce using rule 6 (asignar -> metodocadena .)
    LSQBRACKET      reduce using rule 6 (asignar -> metodocadena .)
    LBRACKET        reduce using rule 6 (asignar -> metodocadena .)
    HASH            reduce using rule 6 (asignar -> metodocadena .)
    FOR             reduce using rule 6 (asignar -> metodocadena .)
    TRUE            reduce using rule 6 (asignar -> metodocadena .)
    FALSE           reduce using rule 6 (asignar -> metodocadena .)
    NIL             reduce using rule 6 (asignar -> metodocadena .)
    IF              reduce using rule 6 (asignar -> metodocadena .)
    WHILE           reduce using rule 6 (asignar -> metodocadena .)
    NUMBER          reduce using rule 6 (asignar -> metodocadena .)
    FLOAT           reduce using rule 6 (asignar -> metodocadena .)
    NUML            reduce using rule 6 (asignar -> metodocadena .)
    MINUS           reduce using rule 6 (asignar -> metodocadena .)
    STRING          reduce using rule 6 (asignar -> metodocadena .)
    STRINGV         reduce using rule 6 (asignar -> metodocadena .)
    BREAK           reduce using rule 6 (asignar -> metodocadena .)


state 8

    (7) asignar -> arreglo .
    (122) metodosarreglo -> arreglo . POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> arreglo . LSQBRACKET factor RSQBRACKET

  ! shift/reduce conflict for LSQBRACKET resolved as shift
    $end            reduce using rule 7 (asignar -> arreglo .)
    END             reduce using rule 7 (asignar -> arreglo .)
    ELSE            reduce using rule 7 (asignar -> arreglo .)
    RETURN          reduce using rule 7 (asignar -> arreglo .)
    IDLOCAL         reduce using rule 7 (asignar -> arreglo .)
    IDINSTANCE      reduce using rule 7 (asignar -> arreglo .)
    IDCLASS         reduce using rule 7 (asignar -> arreglo .)
    IDGLOBAL        reduce using rule 7 (asignar -> arreglo .)
    IDENTIFIER      reduce using rule 7 (asignar -> arreglo .)
    PUTS            reduce using rule 7 (asignar -> arreglo .)
    ARRAY           reduce using rule 7 (asignar -> arreglo .)
    LBRACKET        reduce using rule 7 (asignar -> arreglo .)
    HASH            reduce using rule 7 (asignar -> arreglo .)
    FOR             reduce using rule 7 (asignar -> arreglo .)
    TRUE            reduce using rule 7 (asignar -> arreglo .)
    FALSE           reduce using rule 7 (asignar -> arreglo .)
    NIL             reduce using rule 7 (asignar -> arreglo .)
    IF              reduce using rule 7 (asignar -> arreglo .)
    WHILE           reduce using rule 7 (asignar -> arreglo .)
    NUMBER          reduce using rule 7 (asignar -> arreglo .)
    FLOAT           reduce using rule 7 (asignar -> arreglo .)
    NUML            reduce using rule 7 (asignar -> arreglo .)
    MINUS           reduce using rule 7 (asignar -> arreglo .)
    STRING          reduce using rule 7 (asignar -> arreglo .)
    STRINGV         reduce using rule 7 (asignar -> arreglo .)
    BREAK           reduce using rule 7 (asignar -> arreglo .)
    POINT           shift and go to state 66
    LSQBRACKET      shift and go to state 67

  ! LSQBRACKET      [ reduce using rule 7 (asignar -> arreglo .) ]


state 9

    (8) asignar -> metodosarreglo .

    $end            reduce using rule 8 (asignar -> metodosarreglo .)
    END             reduce using rule 8 (asignar -> metodosarreglo .)
    ELSE            reduce using rule 8 (asignar -> metodosarreglo .)
    RETURN          reduce using rule 8 (asignar -> metodosarreglo .)
    IDLOCAL         reduce using rule 8 (asignar -> metodosarreglo .)
    IDINSTANCE      reduce using rule 8 (asignar -> metodosarreglo .)
    IDCLASS         reduce using rule 8 (asignar -> metodosarreglo .)
    IDGLOBAL        reduce using rule 8 (asignar -> metodosarreglo .)
    IDENTIFIER      reduce using rule 8 (asignar -> metodosarreglo .)
    PUTS            reduce using rule 8 (asignar -> metodosarreglo .)
    ARRAY           reduce using rule 8 (asignar -> metodosarreglo .)
    LSQBRACKET      reduce using rule 8 (asignar -> metodosarreglo .)
    LBRACKET        reduce using rule 8 (asignar -> metodosarreglo .)
    HASH            reduce using rule 8 (asignar -> metodosarreglo .)
    FOR             reduce using rule 8 (asignar -> metodosarreglo .)
    TRUE            reduce using rule 8 (asignar -> metodosarreglo .)
    FALSE           reduce using rule 8 (asignar -> metodosarreglo .)
    NIL             reduce using rule 8 (asignar -> metodosarreglo .)
    IF              reduce using rule 8 (asignar -> metodosarreglo .)
    WHILE           reduce using rule 8 (asignar -> metodosarreglo .)
    NUMBER          reduce using rule 8 (asignar -> metodosarreglo .)
    FLOAT           reduce using rule 8 (asignar -> metodosarreglo .)
    NUML            reduce using rule 8 (asignar -> metodosarreglo .)
    MINUS           reduce using rule 8 (asignar -> metodosarreglo .)
    STRING          reduce using rule 8 (asignar -> metodosarreglo .)
    STRINGV         reduce using rule 8 (asignar -> metodosarreglo .)
    BREAK           reduce using rule 8 (asignar -> metodosarreglo .)


state 10

    (9) asignar -> hash .

    $end            reduce using rule 9 (asignar -> hash .)
    END             reduce using rule 9 (asignar -> hash .)
    ELSE            reduce using rule 9 (asignar -> hash .)
    RETURN          reduce using rule 9 (asignar -> hash .)
    IDLOCAL         reduce using rule 9 (asignar -> hash .)
    IDINSTANCE      reduce using rule 9 (asignar -> hash .)
    IDCLASS         reduce using rule 9 (asignar -> hash .)
    IDGLOBAL        reduce using rule 9 (asignar -> hash .)
    IDENTIFIER      reduce using rule 9 (asignar -> hash .)
    PUTS            reduce using rule 9 (asignar -> hash .)
    ARRAY           reduce using rule 9 (asignar -> hash .)
    LSQBRACKET      reduce using rule 9 (asignar -> hash .)
    LBRACKET        reduce using rule 9 (asignar -> hash .)
    HASH            reduce using rule 9 (asignar -> hash .)
    FOR             reduce using rule 9 (asignar -> hash .)
    TRUE            reduce using rule 9 (asignar -> hash .)
    FALSE           reduce using rule 9 (asignar -> hash .)
    NIL             reduce using rule 9 (asignar -> hash .)
    IF              reduce using rule 9 (asignar -> hash .)
    WHILE           reduce using rule 9 (asignar -> hash .)
    NUMBER          reduce using rule 9 (asignar -> hash .)
    FLOAT           reduce using rule 9 (asignar -> hash .)
    NUML            reduce using rule 9 (asignar -> hash .)
    MINUS           reduce using rule 9 (asignar -> hash .)
    STRING          reduce using rule 9 (asignar -> hash .)
    STRINGV         reduce using rule 9 (asignar -> hash .)
    BREAK           reduce using rule 9 (asignar -> hash .)


state 11

    (10) asignar -> metodohash .

    $end            reduce using rule 10 (asignar -> metodohash .)
    END             reduce using rule 10 (asignar -> metodohash .)
    ELSE            reduce using rule 10 (asignar -> metodohash .)
    RETURN          reduce using rule 10 (asignar -> metodohash .)
    IDLOCAL         reduce using rule 10 (asignar -> metodohash .)
    IDINSTANCE      reduce using rule 10 (asignar -> metodohash .)
    IDCLASS         reduce using rule 10 (asignar -> metodohash .)
    IDGLOBAL        reduce using rule 10 (asignar -> metodohash .)
    IDENTIFIER      reduce using rule 10 (asignar -> metodohash .)
    PUTS            reduce using rule 10 (asignar -> metodohash .)
    ARRAY           reduce using rule 10 (asignar -> metodohash .)
    LSQBRACKET      reduce using rule 10 (asignar -> metodohash .)
    LBRACKET        reduce using rule 10 (asignar -> metodohash .)
    HASH            reduce using rule 10 (asignar -> metodohash .)
    FOR             reduce using rule 10 (asignar -> metodohash .)
    TRUE            reduce using rule 10 (asignar -> metodohash .)
    FALSE           reduce using rule 10 (asignar -> metodohash .)
    NIL             reduce using rule 10 (asignar -> metodohash .)
    IF              reduce using rule 10 (asignar -> metodohash .)
    WHILE           reduce using rule 10 (asignar -> metodohash .)
    NUMBER          reduce using rule 10 (asignar -> metodohash .)
    FLOAT           reduce using rule 10 (asignar -> metodohash .)
    NUML            reduce using rule 10 (asignar -> metodohash .)
    MINUS           reduce using rule 10 (asignar -> metodohash .)
    STRING          reduce using rule 10 (asignar -> metodohash .)
    STRINGV         reduce using rule 10 (asignar -> metodohash .)
    BREAK           reduce using rule 10 (asignar -> metodohash .)


state 12

    (11) asignar -> boolean .
    (160) value2 -> boolean .

    $end            reduce using rule 11 (asignar -> boolean .)
    END             reduce using rule 11 (asignar -> boolean .)
    ELSE            reduce using rule 11 (asignar -> boolean .)
    RETURN          reduce using rule 11 (asignar -> boolean .)
    IDLOCAL         reduce using rule 11 (asignar -> boolean .)
    IDINSTANCE      reduce using rule 11 (asignar -> boolean .)
    IDCLASS         reduce using rule 11 (asignar -> boolean .)
    IDGLOBAL        reduce using rule 11 (asignar -> boolean .)
    IDENTIFIER      reduce using rule 11 (asignar -> boolean .)
    PUTS            reduce using rule 11 (asignar -> boolean .)
    ARRAY           reduce using rule 11 (asignar -> boolean .)
    LSQBRACKET      reduce using rule 11 (asignar -> boolean .)
    LBRACKET        reduce using rule 11 (asignar -> boolean .)
    HASH            reduce using rule 11 (asignar -> boolean .)
    FOR             reduce using rule 11 (asignar -> boolean .)
    TRUE            reduce using rule 11 (asignar -> boolean .)
    FALSE           reduce using rule 11 (asignar -> boolean .)
    NIL             reduce using rule 11 (asignar -> boolean .)
    IF              reduce using rule 11 (asignar -> boolean .)
    WHILE           reduce using rule 11 (asignar -> boolean .)
    NUMBER          reduce using rule 11 (asignar -> boolean .)
    FLOAT           reduce using rule 11 (asignar -> boolean .)
    NUML            reduce using rule 11 (asignar -> boolean .)
    MINUS           reduce using rule 11 (asignar -> boolean .)
    STRING          reduce using rule 11 (asignar -> boolean .)
    STRINGV         reduce using rule 11 (asignar -> boolean .)
    BREAK           reduce using rule 11 (asignar -> boolean .)
    COMPARE         reduce using rule 160 (value2 -> boolean .)
    LESS            reduce using rule 160 (value2 -> boolean .)
    GREATER         reduce using rule 160 (value2 -> boolean .)
    GREQUAL         reduce using rule 160 (value2 -> boolean .)
    LSEQUAL         reduce using rule 160 (value2 -> boolean .)
    NOTEQUAL        reduce using rule 160 (value2 -> boolean .)


state 13

    (12) asignar -> variables .
    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression
    (130) metodohash -> variables . ASSIGN hash POINT LENGTH
    (131) metodohash -> variables . POINT LENGTH
    (83) assigns -> variables . ASSIGNPLUS expression
    (84) assigns -> variables . ASSIGNPLUS variables
    (85) assigns -> variables . ASSIGNMIN expression
    (86) assigns -> variables . ASSIGNMIN variables
    (95) term -> variables .
    (159) value2 -> variables .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for COMPARE resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LESS resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREATER resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LSEQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 95 (term -> variables .)
    $end            reduce using rule 12 (asignar -> variables .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    ASSIGN          shift and go to state 70
    POINT           shift and go to state 71
    ASSIGNPLUS      shift and go to state 72
    ASSIGNMIN       shift and go to state 73
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)
    COMPARE         reduce using rule 95 (term -> variables .)
    LESS            reduce using rule 95 (term -> variables .)
    GREATER         reduce using rule 95 (term -> variables .)
    GREQUAL         reduce using rule 95 (term -> variables .)
    LSEQUAL         reduce using rule 95 (term -> variables .)
    NOTEQUAL        reduce using rule 95 (term -> variables .)

  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! $end            [ reduce using rule 95 (term -> variables .) ]
  ! COMPARE         [ reduce using rule 159 (value2 -> variables .) ]
  ! LESS            [ reduce using rule 159 (value2 -> variables .) ]
  ! GREATER         [ reduce using rule 159 (value2 -> variables .) ]
  ! GREQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! LSEQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! NOTEQUAL        [ reduce using rule 159 (value2 -> variables .) ]


state 14

    (13) asignar -> reglaSemanticaComparaciones .
    (170) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ORS reglaSemanticaComparaciones

    $end            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    END             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ELSE            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    RETURN          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDLOCAL         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDINSTANCE      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDCLASS         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDGLOBAL        reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDENTIFIER      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    PUTS            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ARRAY           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    LSQBRACKET      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    LBRACKET        reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    HASH            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FOR             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    TRUE            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FALSE           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NIL             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IF              reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    WHILE           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NUMBER          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FLOAT           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NUML            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    MINUS           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    STRING          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    STRINGV         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    BREAK           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ANDS            shift and go to state 74
    ORS             shift and go to state 75


state 15

    (14) asignar -> metodocadenaSemantica .

    $end            reduce using rule 14 (asignar -> metodocadenaSemantica .)
    END             reduce using rule 14 (asignar -> metodocadenaSemantica .)
    ELSE            reduce using rule 14 (asignar -> metodocadenaSemantica .)
    RETURN          reduce using rule 14 (asignar -> metodocadenaSemantica .)
    IDLOCAL         reduce using rule 14 (asignar -> metodocadenaSemantica .)
    IDINSTANCE      reduce using rule 14 (asignar -> metodocadenaSemantica .)
    IDCLASS         reduce using rule 14 (asignar -> metodocadenaSemantica .)
    IDGLOBAL        reduce using rule 14 (asignar -> metodocadenaSemantica .)
    IDENTIFIER      reduce using rule 14 (asignar -> metodocadenaSemantica .)
    PUTS            reduce using rule 14 (asignar -> metodocadenaSemantica .)
    ARRAY           reduce using rule 14 (asignar -> metodocadenaSemantica .)
    LSQBRACKET      reduce using rule 14 (asignar -> metodocadenaSemantica .)
    LBRACKET        reduce using rule 14 (asignar -> metodocadenaSemantica .)
    HASH            reduce using rule 14 (asignar -> metodocadenaSemantica .)
    FOR             reduce using rule 14 (asignar -> metodocadenaSemantica .)
    TRUE            reduce using rule 14 (asignar -> metodocadenaSemantica .)
    FALSE           reduce using rule 14 (asignar -> metodocadenaSemantica .)
    NIL             reduce using rule 14 (asignar -> metodocadenaSemantica .)
    IF              reduce using rule 14 (asignar -> metodocadenaSemantica .)
    WHILE           reduce using rule 14 (asignar -> metodocadenaSemantica .)
    NUMBER          reduce using rule 14 (asignar -> metodocadenaSemantica .)
    FLOAT           reduce using rule 14 (asignar -> metodocadenaSemantica .)
    NUML            reduce using rule 14 (asignar -> metodocadenaSemantica .)
    MINUS           reduce using rule 14 (asignar -> metodocadenaSemantica .)
    STRING          reduce using rule 14 (asignar -> metodocadenaSemantica .)
    STRINGV         reduce using rule 14 (asignar -> metodocadenaSemantica .)
    BREAK           reduce using rule 14 (asignar -> metodocadenaSemantica .)


state 16

    (15) noasignar -> estructurasControl .

    $end            reduce using rule 15 (noasignar -> estructurasControl .)


state 17

    (16) noasignar -> oputs .

    $end            reduce using rule 16 (noasignar -> oputs .)


state 18

    (17) noasignar -> putss .

    $end            reduce using rule 17 (noasignar -> putss .)


state 19

    (18) noasignar -> putsenx .

    $end            reduce using rule 18 (noasignar -> putsenx .)


state 20

    (19) noasignar -> sentenIF .

    $end            reduce using rule 19 (noasignar -> sentenIF .)


state 21

    (20) noasignar -> sentenifp .

    $end            reduce using rule 20 (noasignar -> sentenifp .)


state 22

    (21) noasignar -> sentenifelse .

    $end            reduce using rule 21 (noasignar -> sentenifelse .)


state 23

    (22) noasignar -> sentenWHILE .

    $end            reduce using rule 22 (noasignar -> sentenWHILE .)


state 24

    (23) noasignar -> funcion1 .

    $end            reduce using rule 23 (noasignar -> funcion1 .)


state 25

    (24) noasignar -> funcion2 .

    $end            reduce using rule 24 (noasignar -> funcion2 .)


state 26

    (25) noasignar -> funcion3 .

    $end            reduce using rule 25 (noasignar -> funcion3 .)


state 27

    (26) noasignar -> ogets .

    $end            reduce using rule 26 (noasignar -> ogets .)


state 28

    (27) noasignar -> getsr .

    $end            reduce using rule 27 (noasignar -> getsr .)


state 29

    (28) noasignar -> assigns .

    $end            reduce using rule 28 (noasignar -> assigns .)


state 30

    (93) expression -> term .
    (161) value2 -> term .

  ! reduce/reduce conflict for COMPARE resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for LESS resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for GREATER resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for LSEQUAL resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 93 (expression -> term .)
    PLUS            reduce using rule 93 (expression -> term .)
    MINUS           reduce using rule 93 (expression -> term .)
    DIVISION        reduce using rule 93 (expression -> term .)
    MOD             reduce using rule 93 (expression -> term .)
    MULT            reduce using rule 93 (expression -> term .)
    EXP             reduce using rule 93 (expression -> term .)
    $end            reduce using rule 93 (expression -> term .)
    COMPARE         reduce using rule 93 (expression -> term .)
    LESS            reduce using rule 93 (expression -> term .)
    GREATER         reduce using rule 93 (expression -> term .)
    GREQUAL         reduce using rule 93 (expression -> term .)
    LSEQUAL         reduce using rule 93 (expression -> term .)
    NOTEQUAL        reduce using rule 93 (expression -> term .)
    END             reduce using rule 93 (expression -> term .)
    ELSE            reduce using rule 93 (expression -> term .)
    RETURN          reduce using rule 93 (expression -> term .)
    IDLOCAL         reduce using rule 93 (expression -> term .)
    IDINSTANCE      reduce using rule 93 (expression -> term .)
    IDCLASS         reduce using rule 93 (expression -> term .)
    IDGLOBAL        reduce using rule 93 (expression -> term .)
    IDENTIFIER      reduce using rule 93 (expression -> term .)
    PUTS            reduce using rule 93 (expression -> term .)
    ARRAY           reduce using rule 93 (expression -> term .)
    LSQBRACKET      reduce using rule 93 (expression -> term .)
    LBRACKET        reduce using rule 93 (expression -> term .)
    HASH            reduce using rule 93 (expression -> term .)
    FOR             reduce using rule 93 (expression -> term .)
    TRUE            reduce using rule 93 (expression -> term .)
    FALSE           reduce using rule 93 (expression -> term .)
    NIL             reduce using rule 93 (expression -> term .)
    IF              reduce using rule 93 (expression -> term .)
    WHILE           reduce using rule 93 (expression -> term .)
    NUMBER          reduce using rule 93 (expression -> term .)
    FLOAT           reduce using rule 93 (expression -> term .)
    NUML            reduce using rule 93 (expression -> term .)
    STRING          reduce using rule 93 (expression -> term .)
    STRINGV         reduce using rule 93 (expression -> term .)
    BREAK           reduce using rule 93 (expression -> term .)

  ! COMPARE         [ reduce using rule 161 (value2 -> term .) ]
  ! LESS            [ reduce using rule 161 (value2 -> term .) ]
  ! GREATER         [ reduce using rule 161 (value2 -> term .) ]
  ! GREQUAL         [ reduce using rule 161 (value2 -> term .) ]
  ! LSEQUAL         [ reduce using rule 161 (value2 -> term .) ]
  ! NOTEQUAL        [ reduce using rule 161 (value2 -> term .) ]


state 31

    (99) factor -> MINUS . NUMBER
    (100) factor -> MINUS . FLOAT

    NUMBER          shift and go to state 76
    FLOAT           shift and go to state 77


state 32

    (105) string -> STRINGV .

    POINT           reduce using rule 105 (string -> STRINGV .)
    $end            reduce using rule 105 (string -> STRINGV .)
    COMMA           reduce using rule 105 (string -> STRINGV .)
    RSQBRACKET      reduce using rule 105 (string -> STRINGV .)
    ASSIGN          reduce using rule 105 (string -> STRINGV .)
    RPARENTHESIS    reduce using rule 105 (string -> STRINGV .)
    END             reduce using rule 105 (string -> STRINGV .)
    ELSE            reduce using rule 105 (string -> STRINGV .)
    RETURN          reduce using rule 105 (string -> STRINGV .)
    IDLOCAL         reduce using rule 105 (string -> STRINGV .)
    IDINSTANCE      reduce using rule 105 (string -> STRINGV .)
    IDCLASS         reduce using rule 105 (string -> STRINGV .)
    IDGLOBAL        reduce using rule 105 (string -> STRINGV .)
    IDENTIFIER      reduce using rule 105 (string -> STRINGV .)
    PUTS            reduce using rule 105 (string -> STRINGV .)
    ARRAY           reduce using rule 105 (string -> STRINGV .)
    LSQBRACKET      reduce using rule 105 (string -> STRINGV .)
    LBRACKET        reduce using rule 105 (string -> STRINGV .)
    HASH            reduce using rule 105 (string -> STRINGV .)
    FOR             reduce using rule 105 (string -> STRINGV .)
    TRUE            reduce using rule 105 (string -> STRINGV .)
    FALSE           reduce using rule 105 (string -> STRINGV .)
    NIL             reduce using rule 105 (string -> STRINGV .)
    IF              reduce using rule 105 (string -> STRINGV .)
    WHILE           reduce using rule 105 (string -> STRINGV .)
    NUMBER          reduce using rule 105 (string -> STRINGV .)
    FLOAT           reduce using rule 105 (string -> STRINGV .)
    NUML            reduce using rule 105 (string -> STRINGV .)
    MINUS           reduce using rule 105 (string -> STRINGV .)
    STRING          reduce using rule 105 (string -> STRINGV .)
    STRINGV         reduce using rule 105 (string -> STRINGV .)
    BREAK           reduce using rule 105 (string -> STRINGV .)
    RBRACKET        reduce using rule 105 (string -> STRINGV .)


state 33

    (106) cadena -> STRING . POINT NEW
    (107) cadena -> STRING . POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> STRING . LPARENTHESIS string RPARENTHESIS

    POINT           shift and go to state 78
    LPARENTHESIS    shift and go to state 79


state 34

    (174) metodocadena -> PUTS . cadena POINT LENGTH
    (175) metodocadena -> PUTS . string POINT LENGTH
    (172) metodocadenaSemantica -> PUTS . cadena POINT EMPTY INTERROGATIVE
    (173) metodocadenaSemantica -> PUTS . string POINT EMPTY INTERROGATIVE
    (32) oputs -> PUTS .
    (33) putss -> PUTS . string
    (34) putss -> PUTS . cadena
    (37) putsenx -> PUTS . expression
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    $end            reduce using rule 32 (oputs -> PUTS .)
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32
    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    cadena                         shift and go to state 80
    string                         shift and go to state 81
    expression                     shift and go to state 82
    term                           shift and go to state 83
    variables                      shift and go to state 84
    factor                         shift and go to state 36

state 35

    (113) arreglo -> ARRAY . POINT NEW
    (114) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> ARRAY . LSQBRACKET arraycontent RSQBRACKET

    POINT           shift and go to state 90
    LSQBRACKET      shift and go to state 91


state 36

    (94) term -> factor .

    PLUS            reduce using rule 94 (term -> factor .)
    MINUS           reduce using rule 94 (term -> factor .)
    DIVISION        reduce using rule 94 (term -> factor .)
    MOD             reduce using rule 94 (term -> factor .)
    MULT            reduce using rule 94 (term -> factor .)
    EXP             reduce using rule 94 (term -> factor .)
    $end            reduce using rule 94 (term -> factor .)
    COMPARE         reduce using rule 94 (term -> factor .)
    LESS            reduce using rule 94 (term -> factor .)
    GREATER         reduce using rule 94 (term -> factor .)
    GREQUAL         reduce using rule 94 (term -> factor .)
    LSEQUAL         reduce using rule 94 (term -> factor .)
    NOTEQUAL        reduce using rule 94 (term -> factor .)
    END             reduce using rule 94 (term -> factor .)
    ELSE            reduce using rule 94 (term -> factor .)
    RETURN          reduce using rule 94 (term -> factor .)
    IDLOCAL         reduce using rule 94 (term -> factor .)
    IDINSTANCE      reduce using rule 94 (term -> factor .)
    IDCLASS         reduce using rule 94 (term -> factor .)
    IDGLOBAL        reduce using rule 94 (term -> factor .)
    IDENTIFIER      reduce using rule 94 (term -> factor .)
    PUTS            reduce using rule 94 (term -> factor .)
    ARRAY           reduce using rule 94 (term -> factor .)
    LSQBRACKET      reduce using rule 94 (term -> factor .)
    LBRACKET        reduce using rule 94 (term -> factor .)
    HASH            reduce using rule 94 (term -> factor .)
    FOR             reduce using rule 94 (term -> factor .)
    TRUE            reduce using rule 94 (term -> factor .)
    FALSE           reduce using rule 94 (term -> factor .)
    NIL             reduce using rule 94 (term -> factor .)
    IF              reduce using rule 94 (term -> factor .)
    WHILE           reduce using rule 94 (term -> factor .)
    NUMBER          reduce using rule 94 (term -> factor .)
    FLOAT           reduce using rule 94 (term -> factor .)
    NUML            reduce using rule 94 (term -> factor .)
    STRING          reduce using rule 94 (term -> factor .)
    STRINGV         reduce using rule 94 (term -> factor .)
    BREAK           reduce using rule 94 (term -> factor .)
    ANDS            reduce using rule 94 (term -> factor .)
    ORS             reduce using rule 94 (term -> factor .)
    RPARENTHESIS    reduce using rule 94 (term -> factor .)


state 37

    (117) arreglo -> LSQBRACKET . arraycontent RSQBRACKET
    (118) arraycontent -> . factor
    (119) arraycontent -> . string
    (120) arraycontent -> . factor COMMA arraycontent
    (121) arraycontent -> . string COMMA arraycontent
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (105) string -> . STRINGV

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    STRINGV         shift and go to state 32

    arraycontent                   shift and go to state 92
    factor                         shift and go to state 93
    string                         shift and go to state 94

state 38

    (124) hash -> LBRACKET . hashcontent RBRACKET
    (126) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (127) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (105) string -> . STRINGV

    STRINGV         shift and go to state 32

    hashcontent                    shift and go to state 95
    string                         shift and go to state 96

state 39

    (125) hash -> HASH . POINT NEW

    POINT           shift and go to state 97


state 40

    (29) boolean -> TRUE .

    $end            reduce using rule 29 (boolean -> TRUE .)
    COMPARE         reduce using rule 29 (boolean -> TRUE .)
    LESS            reduce using rule 29 (boolean -> TRUE .)
    GREATER         reduce using rule 29 (boolean -> TRUE .)
    GREQUAL         reduce using rule 29 (boolean -> TRUE .)
    LSEQUAL         reduce using rule 29 (boolean -> TRUE .)
    NOTEQUAL        reduce using rule 29 (boolean -> TRUE .)
    PUTS            reduce using rule 29 (boolean -> TRUE .)
    ARRAY           reduce using rule 29 (boolean -> TRUE .)
    LSQBRACKET      reduce using rule 29 (boolean -> TRUE .)
    LBRACKET        reduce using rule 29 (boolean -> TRUE .)
    HASH            reduce using rule 29 (boolean -> TRUE .)
    FOR             reduce using rule 29 (boolean -> TRUE .)
    TRUE            reduce using rule 29 (boolean -> TRUE .)
    FALSE           reduce using rule 29 (boolean -> TRUE .)
    NIL             reduce using rule 29 (boolean -> TRUE .)
    IDLOCAL         reduce using rule 29 (boolean -> TRUE .)
    IDINSTANCE      reduce using rule 29 (boolean -> TRUE .)
    IDCLASS         reduce using rule 29 (boolean -> TRUE .)
    IDGLOBAL        reduce using rule 29 (boolean -> TRUE .)
    IDENTIFIER      reduce using rule 29 (boolean -> TRUE .)
    IF              reduce using rule 29 (boolean -> TRUE .)
    WHILE           reduce using rule 29 (boolean -> TRUE .)
    STRING          reduce using rule 29 (boolean -> TRUE .)
    STRINGV         reduce using rule 29 (boolean -> TRUE .)
    NUMBER          reduce using rule 29 (boolean -> TRUE .)
    FLOAT           reduce using rule 29 (boolean -> TRUE .)
    NUML            reduce using rule 29 (boolean -> TRUE .)
    MINUS           reduce using rule 29 (boolean -> TRUE .)
    END             reduce using rule 29 (boolean -> TRUE .)
    ELSE            reduce using rule 29 (boolean -> TRUE .)
    RETURN          reduce using rule 29 (boolean -> TRUE .)
    BREAK           reduce using rule 29 (boolean -> TRUE .)
    ANDS            reduce using rule 29 (boolean -> TRUE .)
    ORS             reduce using rule 29 (boolean -> TRUE .)
    RPARENTHESIS    reduce using rule 29 (boolean -> TRUE .)


state 41

    (30) boolean -> FALSE .

    $end            reduce using rule 30 (boolean -> FALSE .)
    COMPARE         reduce using rule 30 (boolean -> FALSE .)
    LESS            reduce using rule 30 (boolean -> FALSE .)
    GREATER         reduce using rule 30 (boolean -> FALSE .)
    GREQUAL         reduce using rule 30 (boolean -> FALSE .)
    LSEQUAL         reduce using rule 30 (boolean -> FALSE .)
    NOTEQUAL        reduce using rule 30 (boolean -> FALSE .)
    PUTS            reduce using rule 30 (boolean -> FALSE .)
    ARRAY           reduce using rule 30 (boolean -> FALSE .)
    LSQBRACKET      reduce using rule 30 (boolean -> FALSE .)
    LBRACKET        reduce using rule 30 (boolean -> FALSE .)
    HASH            reduce using rule 30 (boolean -> FALSE .)
    FOR             reduce using rule 30 (boolean -> FALSE .)
    TRUE            reduce using rule 30 (boolean -> FALSE .)
    FALSE           reduce using rule 30 (boolean -> FALSE .)
    NIL             reduce using rule 30 (boolean -> FALSE .)
    IDLOCAL         reduce using rule 30 (boolean -> FALSE .)
    IDINSTANCE      reduce using rule 30 (boolean -> FALSE .)
    IDCLASS         reduce using rule 30 (boolean -> FALSE .)
    IDGLOBAL        reduce using rule 30 (boolean -> FALSE .)
    IDENTIFIER      reduce using rule 30 (boolean -> FALSE .)
    IF              reduce using rule 30 (boolean -> FALSE .)
    WHILE           reduce using rule 30 (boolean -> FALSE .)
    STRING          reduce using rule 30 (boolean -> FALSE .)
    STRINGV         reduce using rule 30 (boolean -> FALSE .)
    NUMBER          reduce using rule 30 (boolean -> FALSE .)
    FLOAT           reduce using rule 30 (boolean -> FALSE .)
    NUML            reduce using rule 30 (boolean -> FALSE .)
    MINUS           reduce using rule 30 (boolean -> FALSE .)
    END             reduce using rule 30 (boolean -> FALSE .)
    ELSE            reduce using rule 30 (boolean -> FALSE .)
    RETURN          reduce using rule 30 (boolean -> FALSE .)
    BREAK           reduce using rule 30 (boolean -> FALSE .)
    ANDS            reduce using rule 30 (boolean -> FALSE .)
    ORS             reduce using rule 30 (boolean -> FALSE .)
    RPARENTHESIS    reduce using rule 30 (boolean -> FALSE .)


state 42

    (31) boolean -> NIL .

    $end            reduce using rule 31 (boolean -> NIL .)
    COMPARE         reduce using rule 31 (boolean -> NIL .)
    LESS            reduce using rule 31 (boolean -> NIL .)
    GREATER         reduce using rule 31 (boolean -> NIL .)
    GREQUAL         reduce using rule 31 (boolean -> NIL .)
    LSEQUAL         reduce using rule 31 (boolean -> NIL .)
    NOTEQUAL        reduce using rule 31 (boolean -> NIL .)
    PUTS            reduce using rule 31 (boolean -> NIL .)
    ARRAY           reduce using rule 31 (boolean -> NIL .)
    LSQBRACKET      reduce using rule 31 (boolean -> NIL .)
    LBRACKET        reduce using rule 31 (boolean -> NIL .)
    HASH            reduce using rule 31 (boolean -> NIL .)
    FOR             reduce using rule 31 (boolean -> NIL .)
    TRUE            reduce using rule 31 (boolean -> NIL .)
    FALSE           reduce using rule 31 (boolean -> NIL .)
    NIL             reduce using rule 31 (boolean -> NIL .)
    IDLOCAL         reduce using rule 31 (boolean -> NIL .)
    IDINSTANCE      reduce using rule 31 (boolean -> NIL .)
    IDCLASS         reduce using rule 31 (boolean -> NIL .)
    IDGLOBAL        reduce using rule 31 (boolean -> NIL .)
    IDENTIFIER      reduce using rule 31 (boolean -> NIL .)
    IF              reduce using rule 31 (boolean -> NIL .)
    WHILE           reduce using rule 31 (boolean -> NIL .)
    STRING          reduce using rule 31 (boolean -> NIL .)
    STRINGV         reduce using rule 31 (boolean -> NIL .)
    NUMBER          reduce using rule 31 (boolean -> NIL .)
    FLOAT           reduce using rule 31 (boolean -> NIL .)
    NUML            reduce using rule 31 (boolean -> NIL .)
    MINUS           reduce using rule 31 (boolean -> NIL .)
    END             reduce using rule 31 (boolean -> NIL .)
    ELSE            reduce using rule 31 (boolean -> NIL .)
    RETURN          reduce using rule 31 (boolean -> NIL .)
    BREAK           reduce using rule 31 (boolean -> NIL .)
    ANDS            reduce using rule 31 (boolean -> NIL .)
    ORS             reduce using rule 31 (boolean -> NIL .)
    RPARENTHESIS    reduce using rule 31 (boolean -> NIL .)


state 43

    (59) variables -> IDLOCAL .
    (177) getsr -> IDLOCAL . ASSIGN GETS
    (64) assigns -> IDLOCAL . ASSIGN expression
    (69) assigns -> IDLOCAL . ASSIGN variables
    (74) assigns -> IDLOCAL . ASSIGN asignar
    (79) assigns -> IDLOCAL . ASSIGN reglaSemanticaComparaciones

  ! shift/reduce conflict for ASSIGN resolved as shift
    PLUS            reduce using rule 59 (variables -> IDLOCAL .)
    MINUS           reduce using rule 59 (variables -> IDLOCAL .)
    POINT           reduce using rule 59 (variables -> IDLOCAL .)
    ASSIGNPLUS      reduce using rule 59 (variables -> IDLOCAL .)
    ASSIGNMIN       reduce using rule 59 (variables -> IDLOCAL .)
    $end            reduce using rule 59 (variables -> IDLOCAL .)
    DIVISION        reduce using rule 59 (variables -> IDLOCAL .)
    MOD             reduce using rule 59 (variables -> IDLOCAL .)
    MULT            reduce using rule 59 (variables -> IDLOCAL .)
    EXP             reduce using rule 59 (variables -> IDLOCAL .)
    COMPARE         reduce using rule 59 (variables -> IDLOCAL .)
    LESS            reduce using rule 59 (variables -> IDLOCAL .)
    GREATER         reduce using rule 59 (variables -> IDLOCAL .)
    GREQUAL         reduce using rule 59 (variables -> IDLOCAL .)
    LSEQUAL         reduce using rule 59 (variables -> IDLOCAL .)
    NOTEQUAL        reduce using rule 59 (variables -> IDLOCAL .)
    ASSIGN          shift and go to state 98

  ! ASSIGN          [ reduce using rule 59 (variables -> IDLOCAL .) ]


state 44

    (60) variables -> IDINSTANCE .
    (65) assigns -> IDINSTANCE . ASSIGN expression
    (70) assigns -> IDINSTANCE . ASSIGN variables
    (75) assigns -> IDINSTANCE . ASSIGN asignar
    (80) assigns -> IDINSTANCE . ASSIGN reglaSemanticaComparaciones

  ! shift/reduce conflict for ASSIGN resolved as shift
    PLUS            reduce using rule 60 (variables -> IDINSTANCE .)
    MINUS           reduce using rule 60 (variables -> IDINSTANCE .)
    POINT           reduce using rule 60 (variables -> IDINSTANCE .)
    ASSIGNPLUS      reduce using rule 60 (variables -> IDINSTANCE .)
    ASSIGNMIN       reduce using rule 60 (variables -> IDINSTANCE .)
    $end            reduce using rule 60 (variables -> IDINSTANCE .)
    DIVISION        reduce using rule 60 (variables -> IDINSTANCE .)
    MOD             reduce using rule 60 (variables -> IDINSTANCE .)
    MULT            reduce using rule 60 (variables -> IDINSTANCE .)
    EXP             reduce using rule 60 (variables -> IDINSTANCE .)
    COMPARE         reduce using rule 60 (variables -> IDINSTANCE .)
    LESS            reduce using rule 60 (variables -> IDINSTANCE .)
    GREATER         reduce using rule 60 (variables -> IDINSTANCE .)
    GREQUAL         reduce using rule 60 (variables -> IDINSTANCE .)
    LSEQUAL         reduce using rule 60 (variables -> IDINSTANCE .)
    NOTEQUAL        reduce using rule 60 (variables -> IDINSTANCE .)
    IDLOCAL         reduce using rule 60 (variables -> IDINSTANCE .)
    IDINSTANCE      reduce using rule 60 (variables -> IDINSTANCE .)
    IDCLASS         reduce using rule 60 (variables -> IDINSTANCE .)
    IDGLOBAL        reduce using rule 60 (variables -> IDINSTANCE .)
    IDENTIFIER      reduce using rule 60 (variables -> IDINSTANCE .)
    PUTS            reduce using rule 60 (variables -> IDINSTANCE .)
    ARRAY           reduce using rule 60 (variables -> IDINSTANCE .)
    LSQBRACKET      reduce using rule 60 (variables -> IDINSTANCE .)
    LBRACKET        reduce using rule 60 (variables -> IDINSTANCE .)
    HASH            reduce using rule 60 (variables -> IDINSTANCE .)
    FOR             reduce using rule 60 (variables -> IDINSTANCE .)
    TRUE            reduce using rule 60 (variables -> IDINSTANCE .)
    FALSE           reduce using rule 60 (variables -> IDINSTANCE .)
    NIL             reduce using rule 60 (variables -> IDINSTANCE .)
    IF              reduce using rule 60 (variables -> IDINSTANCE .)
    WHILE           reduce using rule 60 (variables -> IDINSTANCE .)
    NUMBER          reduce using rule 60 (variables -> IDINSTANCE .)
    FLOAT           reduce using rule 60 (variables -> IDINSTANCE .)
    NUML            reduce using rule 60 (variables -> IDINSTANCE .)
    STRING          reduce using rule 60 (variables -> IDINSTANCE .)
    STRINGV         reduce using rule 60 (variables -> IDINSTANCE .)
    BREAK           reduce using rule 60 (variables -> IDINSTANCE .)
    END             reduce using rule 60 (variables -> IDINSTANCE .)
    ASSIGN          shift and go to state 99

  ! ASSIGN          [ reduce using rule 60 (variables -> IDINSTANCE .) ]


state 45

    (61) variables -> IDCLASS .
    (66) assigns -> IDCLASS . ASSIGN expression
    (71) assigns -> IDCLASS . ASSIGN variables
    (76) assigns -> IDCLASS . ASSIGN asignar
    (81) assigns -> IDCLASS . ASSIGN reglaSemanticaComparaciones

  ! shift/reduce conflict for ASSIGN resolved as shift
    PLUS            reduce using rule 61 (variables -> IDCLASS .)
    MINUS           reduce using rule 61 (variables -> IDCLASS .)
    POINT           reduce using rule 61 (variables -> IDCLASS .)
    ASSIGNPLUS      reduce using rule 61 (variables -> IDCLASS .)
    ASSIGNMIN       reduce using rule 61 (variables -> IDCLASS .)
    $end            reduce using rule 61 (variables -> IDCLASS .)
    DIVISION        reduce using rule 61 (variables -> IDCLASS .)
    MOD             reduce using rule 61 (variables -> IDCLASS .)
    MULT            reduce using rule 61 (variables -> IDCLASS .)
    EXP             reduce using rule 61 (variables -> IDCLASS .)
    COMPARE         reduce using rule 61 (variables -> IDCLASS .)
    LESS            reduce using rule 61 (variables -> IDCLASS .)
    GREATER         reduce using rule 61 (variables -> IDCLASS .)
    GREQUAL         reduce using rule 61 (variables -> IDCLASS .)
    LSEQUAL         reduce using rule 61 (variables -> IDCLASS .)
    NOTEQUAL        reduce using rule 61 (variables -> IDCLASS .)
    IDLOCAL         reduce using rule 61 (variables -> IDCLASS .)
    IDINSTANCE      reduce using rule 61 (variables -> IDCLASS .)
    IDCLASS         reduce using rule 61 (variables -> IDCLASS .)
    IDGLOBAL        reduce using rule 61 (variables -> IDCLASS .)
    IDENTIFIER      reduce using rule 61 (variables -> IDCLASS .)
    PUTS            reduce using rule 61 (variables -> IDCLASS .)
    ARRAY           reduce using rule 61 (variables -> IDCLASS .)
    LSQBRACKET      reduce using rule 61 (variables -> IDCLASS .)
    LBRACKET        reduce using rule 61 (variables -> IDCLASS .)
    HASH            reduce using rule 61 (variables -> IDCLASS .)
    FOR             reduce using rule 61 (variables -> IDCLASS .)
    TRUE            reduce using rule 61 (variables -> IDCLASS .)
    FALSE           reduce using rule 61 (variables -> IDCLASS .)
    NIL             reduce using rule 61 (variables -> IDCLASS .)
    IF              reduce using rule 61 (variables -> IDCLASS .)
    WHILE           reduce using rule 61 (variables -> IDCLASS .)
    NUMBER          reduce using rule 61 (variables -> IDCLASS .)
    FLOAT           reduce using rule 61 (variables -> IDCLASS .)
    NUML            reduce using rule 61 (variables -> IDCLASS .)
    STRING          reduce using rule 61 (variables -> IDCLASS .)
    STRINGV         reduce using rule 61 (variables -> IDCLASS .)
    BREAK           reduce using rule 61 (variables -> IDCLASS .)
    END             reduce using rule 61 (variables -> IDCLASS .)
    ASSIGN          shift and go to state 100

  ! ASSIGN          [ reduce using rule 61 (variables -> IDCLASS .) ]


state 46

    (62) variables -> IDGLOBAL .
    (67) assigns -> IDGLOBAL . ASSIGN expression
    (72) assigns -> IDGLOBAL . ASSIGN variables
    (77) assigns -> IDGLOBAL . ASSIGN asignar
    (82) assigns -> IDGLOBAL . ASSIGN reglaSemanticaComparaciones

  ! shift/reduce conflict for ASSIGN resolved as shift
    PLUS            reduce using rule 62 (variables -> IDGLOBAL .)
    MINUS           reduce using rule 62 (variables -> IDGLOBAL .)
    POINT           reduce using rule 62 (variables -> IDGLOBAL .)
    ASSIGNPLUS      reduce using rule 62 (variables -> IDGLOBAL .)
    ASSIGNMIN       reduce using rule 62 (variables -> IDGLOBAL .)
    $end            reduce using rule 62 (variables -> IDGLOBAL .)
    DIVISION        reduce using rule 62 (variables -> IDGLOBAL .)
    MOD             reduce using rule 62 (variables -> IDGLOBAL .)
    MULT            reduce using rule 62 (variables -> IDGLOBAL .)
    EXP             reduce using rule 62 (variables -> IDGLOBAL .)
    COMPARE         reduce using rule 62 (variables -> IDGLOBAL .)
    LESS            reduce using rule 62 (variables -> IDGLOBAL .)
    GREATER         reduce using rule 62 (variables -> IDGLOBAL .)
    GREQUAL         reduce using rule 62 (variables -> IDGLOBAL .)
    LSEQUAL         reduce using rule 62 (variables -> IDGLOBAL .)
    NOTEQUAL        reduce using rule 62 (variables -> IDGLOBAL .)
    IDLOCAL         reduce using rule 62 (variables -> IDGLOBAL .)
    IDINSTANCE      reduce using rule 62 (variables -> IDGLOBAL .)
    IDCLASS         reduce using rule 62 (variables -> IDGLOBAL .)
    IDGLOBAL        reduce using rule 62 (variables -> IDGLOBAL .)
    IDENTIFIER      reduce using rule 62 (variables -> IDGLOBAL .)
    PUTS            reduce using rule 62 (variables -> IDGLOBAL .)
    ARRAY           reduce using rule 62 (variables -> IDGLOBAL .)
    LSQBRACKET      reduce using rule 62 (variables -> IDGLOBAL .)
    LBRACKET        reduce using rule 62 (variables -> IDGLOBAL .)
    HASH            reduce using rule 62 (variables -> IDGLOBAL .)
    FOR             reduce using rule 62 (variables -> IDGLOBAL .)
    TRUE            reduce using rule 62 (variables -> IDGLOBAL .)
    FALSE           reduce using rule 62 (variables -> IDGLOBAL .)
    NIL             reduce using rule 62 (variables -> IDGLOBAL .)
    IF              reduce using rule 62 (variables -> IDGLOBAL .)
    WHILE           reduce using rule 62 (variables -> IDGLOBAL .)
    NUMBER          reduce using rule 62 (variables -> IDGLOBAL .)
    FLOAT           reduce using rule 62 (variables -> IDGLOBAL .)
    NUML            reduce using rule 62 (variables -> IDGLOBAL .)
    STRING          reduce using rule 62 (variables -> IDGLOBAL .)
    STRINGV         reduce using rule 62 (variables -> IDGLOBAL .)
    BREAK           reduce using rule 62 (variables -> IDGLOBAL .)
    END             reduce using rule 62 (variables -> IDGLOBAL .)
    ASSIGN          shift and go to state 101

  ! ASSIGN          [ reduce using rule 62 (variables -> IDGLOBAL .) ]


state 47

    (63) variables -> IDENTIFIER .
    (68) assigns -> IDENTIFIER . ASSIGN expression
    (73) assigns -> IDENTIFIER . ASSIGN variables
    (78) assigns -> IDENTIFIER . ASSIGN asignar

  ! shift/reduce conflict for ASSIGN resolved as shift
    PLUS            reduce using rule 63 (variables -> IDENTIFIER .)
    MINUS           reduce using rule 63 (variables -> IDENTIFIER .)
    POINT           reduce using rule 63 (variables -> IDENTIFIER .)
    ASSIGNPLUS      reduce using rule 63 (variables -> IDENTIFIER .)
    ASSIGNMIN       reduce using rule 63 (variables -> IDENTIFIER .)
    $end            reduce using rule 63 (variables -> IDENTIFIER .)
    DIVISION        reduce using rule 63 (variables -> IDENTIFIER .)
    MOD             reduce using rule 63 (variables -> IDENTIFIER .)
    MULT            reduce using rule 63 (variables -> IDENTIFIER .)
    EXP             reduce using rule 63 (variables -> IDENTIFIER .)
    COMPARE         reduce using rule 63 (variables -> IDENTIFIER .)
    LESS            reduce using rule 63 (variables -> IDENTIFIER .)
    GREATER         reduce using rule 63 (variables -> IDENTIFIER .)
    GREQUAL         reduce using rule 63 (variables -> IDENTIFIER .)
    LSEQUAL         reduce using rule 63 (variables -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 63 (variables -> IDENTIFIER .)
    IDLOCAL         reduce using rule 63 (variables -> IDENTIFIER .)
    IDINSTANCE      reduce using rule 63 (variables -> IDENTIFIER .)
    IDCLASS         reduce using rule 63 (variables -> IDENTIFIER .)
    IDGLOBAL        reduce using rule 63 (variables -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 63 (variables -> IDENTIFIER .)
    PUTS            reduce using rule 63 (variables -> IDENTIFIER .)
    ARRAY           reduce using rule 63 (variables -> IDENTIFIER .)
    LSQBRACKET      reduce using rule 63 (variables -> IDENTIFIER .)
    LBRACKET        reduce using rule 63 (variables -> IDENTIFIER .)
    HASH            reduce using rule 63 (variables -> IDENTIFIER .)
    FOR             reduce using rule 63 (variables -> IDENTIFIER .)
    TRUE            reduce using rule 63 (variables -> IDENTIFIER .)
    FALSE           reduce using rule 63 (variables -> IDENTIFIER .)
    NIL             reduce using rule 63 (variables -> IDENTIFIER .)
    IF              reduce using rule 63 (variables -> IDENTIFIER .)
    WHILE           reduce using rule 63 (variables -> IDENTIFIER .)
    NUMBER          reduce using rule 63 (variables -> IDENTIFIER .)
    FLOAT           reduce using rule 63 (variables -> IDENTIFIER .)
    NUML            reduce using rule 63 (variables -> IDENTIFIER .)
    STRING          reduce using rule 63 (variables -> IDENTIFIER .)
    STRINGV         reduce using rule 63 (variables -> IDENTIFIER .)
    BREAK           reduce using rule 63 (variables -> IDENTIFIER .)
    END             reduce using rule 63 (variables -> IDENTIFIER .)
    ASSIGN          shift and go to state 102

  ! ASSIGN          [ reduce using rule 63 (variables -> IDENTIFIER .) ]


state 48

    (164) reglaSemanticaComparaciones -> value2 . COMPARE value2
    (165) reglaSemanticaComparaciones -> value2 . LESS value2
    (166) reglaSemanticaComparaciones -> value2 . GREATER value2
    (167) reglaSemanticaComparaciones -> value2 . GREQUAL value2
    (168) reglaSemanticaComparaciones -> value2 . LSEQUAL value2
    (169) reglaSemanticaComparaciones -> value2 . NOTEQUAL value2

    COMPARE         shift and go to state 103
    LESS            shift and go to state 104
    GREATER         shift and go to state 105
    GREQUAL         shift and go to state 106
    LSEQUAL         shift and go to state 107
    NOTEQUAL        shift and go to state 108


state 49

    (138) estructurasControl -> FOR . IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> FOR . IDLOCAL IN factor POINT POINT factor DO forcontent END

    IDLOCAL         shift and go to state 109


state 50

    (56) sentenIF -> IF . variables comparador term
    (57) sentenifp -> IF . variables comparador term algoritmo END
    (58) sentenifelse -> IF . variables comparador term algoritmo ELSE algoritmo END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89

    variables                      shift and go to state 110

state 51

    (35) putss -> PRINT . string
    (36) putss -> PRINT . cadena
    (38) putsenx -> PRINT . expression
    (105) string -> . STRINGV
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 32
    STRING          shift and go to state 33
    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    string                         shift and go to state 111
    cadena                         shift and go to state 112
    expression                     shift and go to state 113
    term                           shift and go to state 83
    variables                      shift and go to state 84
    factor                         shift and go to state 36

state 52

    (52) sentenWHILE -> WHILE . variables comparador variables algoritmo END
    (53) sentenWHILE -> WHILE . variables comparador expression algoritmo END
    (54) sentenWHILE -> WHILE . boolean algoritmo END
    (55) sentenWHILE -> WHILE . variables algoritmo END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42

    variables                      shift and go to state 114
    boolean                        shift and go to state 115

state 53

    (144) funcion1 -> DEF . IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (145) funcion1 -> DEF . IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END
    (155) funcion2 -> DEF . IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END
    (156) funcion2 -> DEF . IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo END
    (157) funcion3 -> DEF . IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END
    (158) funcion3 -> DEF . IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END

    IDLOCAL         shift and go to state 116


state 54

    (176) ogets -> GETS .

    $end            reduce using rule 176 (ogets -> GETS .)


state 55

    (96) factor -> NUMBER .

    PLUS            reduce using rule 96 (factor -> NUMBER .)
    MINUS           reduce using rule 96 (factor -> NUMBER .)
    DIVISION        reduce using rule 96 (factor -> NUMBER .)
    MOD             reduce using rule 96 (factor -> NUMBER .)
    MULT            reduce using rule 96 (factor -> NUMBER .)
    EXP             reduce using rule 96 (factor -> NUMBER .)
    $end            reduce using rule 96 (factor -> NUMBER .)
    COMPARE         reduce using rule 96 (factor -> NUMBER .)
    LESS            reduce using rule 96 (factor -> NUMBER .)
    GREATER         reduce using rule 96 (factor -> NUMBER .)
    GREQUAL         reduce using rule 96 (factor -> NUMBER .)
    LSEQUAL         reduce using rule 96 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 96 (factor -> NUMBER .)
    COMMA           reduce using rule 96 (factor -> NUMBER .)
    RSQBRACKET      reduce using rule 96 (factor -> NUMBER .)
    END             reduce using rule 96 (factor -> NUMBER .)
    ELSE            reduce using rule 96 (factor -> NUMBER .)
    RETURN          reduce using rule 96 (factor -> NUMBER .)
    IDLOCAL         reduce using rule 96 (factor -> NUMBER .)
    IDINSTANCE      reduce using rule 96 (factor -> NUMBER .)
    IDCLASS         reduce using rule 96 (factor -> NUMBER .)
    IDGLOBAL        reduce using rule 96 (factor -> NUMBER .)
    IDENTIFIER      reduce using rule 96 (factor -> NUMBER .)
    PUTS            reduce using rule 96 (factor -> NUMBER .)
    ARRAY           reduce using rule 96 (factor -> NUMBER .)
    LSQBRACKET      reduce using rule 96 (factor -> NUMBER .)
    LBRACKET        reduce using rule 96 (factor -> NUMBER .)
    HASH            reduce using rule 96 (factor -> NUMBER .)
    FOR             reduce using rule 96 (factor -> NUMBER .)
    TRUE            reduce using rule 96 (factor -> NUMBER .)
    FALSE           reduce using rule 96 (factor -> NUMBER .)
    NIL             reduce using rule 96 (factor -> NUMBER .)
    IF              reduce using rule 96 (factor -> NUMBER .)
    WHILE           reduce using rule 96 (factor -> NUMBER .)
    NUMBER          reduce using rule 96 (factor -> NUMBER .)
    FLOAT           reduce using rule 96 (factor -> NUMBER .)
    NUML            reduce using rule 96 (factor -> NUMBER .)
    STRING          reduce using rule 96 (factor -> NUMBER .)
    STRINGV         reduce using rule 96 (factor -> NUMBER .)
    BREAK           reduce using rule 96 (factor -> NUMBER .)
    ANDS            reduce using rule 96 (factor -> NUMBER .)
    ORS             reduce using rule 96 (factor -> NUMBER .)
    RPARENTHESIS    reduce using rule 96 (factor -> NUMBER .)
    POINT           reduce using rule 96 (factor -> NUMBER .)
    RBRACKET        reduce using rule 96 (factor -> NUMBER .)
    DO              reduce using rule 96 (factor -> NUMBER .)


state 56

    (97) factor -> FLOAT .

    PLUS            reduce using rule 97 (factor -> FLOAT .)
    MINUS           reduce using rule 97 (factor -> FLOAT .)
    DIVISION        reduce using rule 97 (factor -> FLOAT .)
    MOD             reduce using rule 97 (factor -> FLOAT .)
    MULT            reduce using rule 97 (factor -> FLOAT .)
    EXP             reduce using rule 97 (factor -> FLOAT .)
    $end            reduce using rule 97 (factor -> FLOAT .)
    COMPARE         reduce using rule 97 (factor -> FLOAT .)
    LESS            reduce using rule 97 (factor -> FLOAT .)
    GREATER         reduce using rule 97 (factor -> FLOAT .)
    GREQUAL         reduce using rule 97 (factor -> FLOAT .)
    LSEQUAL         reduce using rule 97 (factor -> FLOAT .)
    NOTEQUAL        reduce using rule 97 (factor -> FLOAT .)
    COMMA           reduce using rule 97 (factor -> FLOAT .)
    RSQBRACKET      reduce using rule 97 (factor -> FLOAT .)
    END             reduce using rule 97 (factor -> FLOAT .)
    ELSE            reduce using rule 97 (factor -> FLOAT .)
    RETURN          reduce using rule 97 (factor -> FLOAT .)
    IDLOCAL         reduce using rule 97 (factor -> FLOAT .)
    IDINSTANCE      reduce using rule 97 (factor -> FLOAT .)
    IDCLASS         reduce using rule 97 (factor -> FLOAT .)
    IDGLOBAL        reduce using rule 97 (factor -> FLOAT .)
    IDENTIFIER      reduce using rule 97 (factor -> FLOAT .)
    PUTS            reduce using rule 97 (factor -> FLOAT .)
    ARRAY           reduce using rule 97 (factor -> FLOAT .)
    LSQBRACKET      reduce using rule 97 (factor -> FLOAT .)
    LBRACKET        reduce using rule 97 (factor -> FLOAT .)
    HASH            reduce using rule 97 (factor -> FLOAT .)
    FOR             reduce using rule 97 (factor -> FLOAT .)
    TRUE            reduce using rule 97 (factor -> FLOAT .)
    FALSE           reduce using rule 97 (factor -> FLOAT .)
    NIL             reduce using rule 97 (factor -> FLOAT .)
    IF              reduce using rule 97 (factor -> FLOAT .)
    WHILE           reduce using rule 97 (factor -> FLOAT .)
    NUMBER          reduce using rule 97 (factor -> FLOAT .)
    FLOAT           reduce using rule 97 (factor -> FLOAT .)
    NUML            reduce using rule 97 (factor -> FLOAT .)
    STRING          reduce using rule 97 (factor -> FLOAT .)
    STRINGV         reduce using rule 97 (factor -> FLOAT .)
    BREAK           reduce using rule 97 (factor -> FLOAT .)
    ANDS            reduce using rule 97 (factor -> FLOAT .)
    ORS             reduce using rule 97 (factor -> FLOAT .)
    RPARENTHESIS    reduce using rule 97 (factor -> FLOAT .)
    POINT           reduce using rule 97 (factor -> FLOAT .)
    RBRACKET        reduce using rule 97 (factor -> FLOAT .)
    DO              reduce using rule 97 (factor -> FLOAT .)


state 57

    (98) factor -> NUML .

    PLUS            reduce using rule 98 (factor -> NUML .)
    MINUS           reduce using rule 98 (factor -> NUML .)
    DIVISION        reduce using rule 98 (factor -> NUML .)
    MOD             reduce using rule 98 (factor -> NUML .)
    MULT            reduce using rule 98 (factor -> NUML .)
    EXP             reduce using rule 98 (factor -> NUML .)
    $end            reduce using rule 98 (factor -> NUML .)
    COMPARE         reduce using rule 98 (factor -> NUML .)
    LESS            reduce using rule 98 (factor -> NUML .)
    GREATER         reduce using rule 98 (factor -> NUML .)
    GREQUAL         reduce using rule 98 (factor -> NUML .)
    LSEQUAL         reduce using rule 98 (factor -> NUML .)
    NOTEQUAL        reduce using rule 98 (factor -> NUML .)
    COMMA           reduce using rule 98 (factor -> NUML .)
    RSQBRACKET      reduce using rule 98 (factor -> NUML .)
    END             reduce using rule 98 (factor -> NUML .)
    ELSE            reduce using rule 98 (factor -> NUML .)
    RETURN          reduce using rule 98 (factor -> NUML .)
    IDLOCAL         reduce using rule 98 (factor -> NUML .)
    IDINSTANCE      reduce using rule 98 (factor -> NUML .)
    IDCLASS         reduce using rule 98 (factor -> NUML .)
    IDGLOBAL        reduce using rule 98 (factor -> NUML .)
    IDENTIFIER      reduce using rule 98 (factor -> NUML .)
    PUTS            reduce using rule 98 (factor -> NUML .)
    ARRAY           reduce using rule 98 (factor -> NUML .)
    LSQBRACKET      reduce using rule 98 (factor -> NUML .)
    LBRACKET        reduce using rule 98 (factor -> NUML .)
    HASH            reduce using rule 98 (factor -> NUML .)
    FOR             reduce using rule 98 (factor -> NUML .)
    TRUE            reduce using rule 98 (factor -> NUML .)
    FALSE           reduce using rule 98 (factor -> NUML .)
    NIL             reduce using rule 98 (factor -> NUML .)
    IF              reduce using rule 98 (factor -> NUML .)
    WHILE           reduce using rule 98 (factor -> NUML .)
    NUMBER          reduce using rule 98 (factor -> NUML .)
    FLOAT           reduce using rule 98 (factor -> NUML .)
    NUML            reduce using rule 98 (factor -> NUML .)
    STRING          reduce using rule 98 (factor -> NUML .)
    STRINGV         reduce using rule 98 (factor -> NUML .)
    BREAK           reduce using rule 98 (factor -> NUML .)
    ANDS            reduce using rule 98 (factor -> NUML .)
    ORS             reduce using rule 98 (factor -> NUML .)
    RPARENTHESIS    reduce using rule 98 (factor -> NUML .)
    POINT           reduce using rule 98 (factor -> NUML .)
    RBRACKET        reduce using rule 98 (factor -> NUML .)
    DO              reduce using rule 98 (factor -> NUML .)


state 58

    (87) expression -> expression PLUS . term
    (89) expression -> expression PLUS . variables
    (94) term -> . factor
    (95) term -> . variables
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    term                           shift and go to state 117
    variables                      shift and go to state 118
    factor                         shift and go to state 36

state 59

    (88) expression -> expression MINUS . term
    (91) expression -> expression MINUS . variables
    (94) term -> . factor
    (95) term -> . variables
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    term                           shift and go to state 119
    variables                      shift and go to state 120
    factor                         shift and go to state 36

state 60

    (101) expression -> expression DIVISION . term
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89

    term                           shift and go to state 121
    factor                         shift and go to state 36
    variables                      shift and go to state 122

state 61

    (102) expression -> expression MOD . term
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89

    term                           shift and go to state 123
    factor                         shift and go to state 36
    variables                      shift and go to state 122

state 62

    (103) expression -> expression MULT . term
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89

    term                           shift and go to state 124
    factor                         shift and go to state 36
    variables                      shift and go to state 122

state 63

    (104) expression -> expression EXP . term
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89

    term                           shift and go to state 125
    factor                         shift and go to state 36
    variables                      shift and go to state 122

state 64

    (110) metodocadena -> string POINT . EMPTY INTERROGATIVE
    (112) metodocadena -> string POINT . LENGTH

    EMPTY           shift and go to state 126
    LENGTH          shift and go to state 127


state 65

    (109) metodocadena -> cadena POINT . EMPTY INTERROGATIVE
    (111) metodocadena -> cadena POINT . LENGTH

    EMPTY           shift and go to state 128
    LENGTH          shift and go to state 129


state 66

    (122) metodosarreglo -> arreglo POINT . INDEX LPARENTHESIS arraycontent RPARENTHESIS

    INDEX           shift and go to state 130


state 67

    (123) metodosarreglo -> arreglo LSQBRACKET . factor RSQBRACKET
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    factor                         shift and go to state 131

state 68

    (90) expression -> variables PLUS . expression
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    variables                      shift and go to state 84
    expression                     shift and go to state 132
    term                           shift and go to state 83
    factor                         shift and go to state 36

state 69

    (92) expression -> variables MINUS . expression
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    variables                      shift and go to state 84
    expression                     shift and go to state 133
    term                           shift and go to state 83
    factor                         shift and go to state 36

state 70

    (130) metodohash -> variables ASSIGN . hash POINT LENGTH
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW

    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39

    hash                           shift and go to state 134

state 71

    (131) metodohash -> variables POINT . LENGTH

    LENGTH          shift and go to state 135


state 72

    (83) assigns -> variables ASSIGNPLUS . expression
    (84) assigns -> variables ASSIGNPLUS . variables
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    variables                      shift and go to state 136
    expression                     shift and go to state 137
    term                           shift and go to state 83
    factor                         shift and go to state 36

state 73

    (85) assigns -> variables ASSIGNMIN . expression
    (86) assigns -> variables ASSIGNMIN . variables
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    variables                      shift and go to state 138
    expression                     shift and go to state 139
    term                           shift and go to state 83
    factor                         shift and go to state 36

state 74

    (170) reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS . reglaSemanticaComparaciones
    (164) reglaSemanticaComparaciones -> . value2 COMPARE value2
    (165) reglaSemanticaComparaciones -> . value2 LESS value2
    (166) reglaSemanticaComparaciones -> . value2 GREATER value2
    (167) reglaSemanticaComparaciones -> . value2 GREQUAL value2
    (168) reglaSemanticaComparaciones -> . value2 LSEQUAL value2
    (169) reglaSemanticaComparaciones -> . value2 NOTEQUAL value2
    (170) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ORS reglaSemanticaComparaciones
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (94) term -> . factor
    (95) term -> . variables
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    STRING          shift and go to state 33
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    reglaSemanticaComparaciones    shift and go to state 140
    value2                         shift and go to state 48
    variables                      shift and go to state 141
    boolean                        shift and go to state 142
    term                           shift and go to state 143
    expression                     shift and go to state 144
    cadena                         shift and go to state 145
    factor                         shift and go to state 36

state 75

    (171) reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS . reglaSemanticaComparaciones
    (164) reglaSemanticaComparaciones -> . value2 COMPARE value2
    (165) reglaSemanticaComparaciones -> . value2 LESS value2
    (166) reglaSemanticaComparaciones -> . value2 GREATER value2
    (167) reglaSemanticaComparaciones -> . value2 GREQUAL value2
    (168) reglaSemanticaComparaciones -> . value2 LSEQUAL value2
    (169) reglaSemanticaComparaciones -> . value2 NOTEQUAL value2
    (170) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ORS reglaSemanticaComparaciones
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (94) term -> . factor
    (95) term -> . variables
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    STRING          shift and go to state 33
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    reglaSemanticaComparaciones    shift and go to state 146
    value2                         shift and go to state 48
    variables                      shift and go to state 141
    boolean                        shift and go to state 142
    term                           shift and go to state 143
    expression                     shift and go to state 144
    cadena                         shift and go to state 145
    factor                         shift and go to state 36

state 76

    (99) factor -> MINUS NUMBER .

    PLUS            reduce using rule 99 (factor -> MINUS NUMBER .)
    MINUS           reduce using rule 99 (factor -> MINUS NUMBER .)
    DIVISION        reduce using rule 99 (factor -> MINUS NUMBER .)
    MOD             reduce using rule 99 (factor -> MINUS NUMBER .)
    MULT            reduce using rule 99 (factor -> MINUS NUMBER .)
    EXP             reduce using rule 99 (factor -> MINUS NUMBER .)
    $end            reduce using rule 99 (factor -> MINUS NUMBER .)
    COMPARE         reduce using rule 99 (factor -> MINUS NUMBER .)
    LESS            reduce using rule 99 (factor -> MINUS NUMBER .)
    GREATER         reduce using rule 99 (factor -> MINUS NUMBER .)
    GREQUAL         reduce using rule 99 (factor -> MINUS NUMBER .)
    LSEQUAL         reduce using rule 99 (factor -> MINUS NUMBER .)
    NOTEQUAL        reduce using rule 99 (factor -> MINUS NUMBER .)
    COMMA           reduce using rule 99 (factor -> MINUS NUMBER .)
    RSQBRACKET      reduce using rule 99 (factor -> MINUS NUMBER .)
    END             reduce using rule 99 (factor -> MINUS NUMBER .)
    ELSE            reduce using rule 99 (factor -> MINUS NUMBER .)
    RETURN          reduce using rule 99 (factor -> MINUS NUMBER .)
    IDLOCAL         reduce using rule 99 (factor -> MINUS NUMBER .)
    IDINSTANCE      reduce using rule 99 (factor -> MINUS NUMBER .)
    IDCLASS         reduce using rule 99 (factor -> MINUS NUMBER .)
    IDGLOBAL        reduce using rule 99 (factor -> MINUS NUMBER .)
    IDENTIFIER      reduce using rule 99 (factor -> MINUS NUMBER .)
    PUTS            reduce using rule 99 (factor -> MINUS NUMBER .)
    ARRAY           reduce using rule 99 (factor -> MINUS NUMBER .)
    LSQBRACKET      reduce using rule 99 (factor -> MINUS NUMBER .)
    LBRACKET        reduce using rule 99 (factor -> MINUS NUMBER .)
    HASH            reduce using rule 99 (factor -> MINUS NUMBER .)
    FOR             reduce using rule 99 (factor -> MINUS NUMBER .)
    TRUE            reduce using rule 99 (factor -> MINUS NUMBER .)
    FALSE           reduce using rule 99 (factor -> MINUS NUMBER .)
    NIL             reduce using rule 99 (factor -> MINUS NUMBER .)
    IF              reduce using rule 99 (factor -> MINUS NUMBER .)
    WHILE           reduce using rule 99 (factor -> MINUS NUMBER .)
    NUMBER          reduce using rule 99 (factor -> MINUS NUMBER .)
    FLOAT           reduce using rule 99 (factor -> MINUS NUMBER .)
    NUML            reduce using rule 99 (factor -> MINUS NUMBER .)
    STRING          reduce using rule 99 (factor -> MINUS NUMBER .)
    STRINGV         reduce using rule 99 (factor -> MINUS NUMBER .)
    BREAK           reduce using rule 99 (factor -> MINUS NUMBER .)
    ANDS            reduce using rule 99 (factor -> MINUS NUMBER .)
    ORS             reduce using rule 99 (factor -> MINUS NUMBER .)
    RPARENTHESIS    reduce using rule 99 (factor -> MINUS NUMBER .)
    POINT           reduce using rule 99 (factor -> MINUS NUMBER .)
    RBRACKET        reduce using rule 99 (factor -> MINUS NUMBER .)
    DO              reduce using rule 99 (factor -> MINUS NUMBER .)


state 77

    (100) factor -> MINUS FLOAT .

    PLUS            reduce using rule 100 (factor -> MINUS FLOAT .)
    MINUS           reduce using rule 100 (factor -> MINUS FLOAT .)
    DIVISION        reduce using rule 100 (factor -> MINUS FLOAT .)
    MOD             reduce using rule 100 (factor -> MINUS FLOAT .)
    MULT            reduce using rule 100 (factor -> MINUS FLOAT .)
    EXP             reduce using rule 100 (factor -> MINUS FLOAT .)
    $end            reduce using rule 100 (factor -> MINUS FLOAT .)
    COMPARE         reduce using rule 100 (factor -> MINUS FLOAT .)
    LESS            reduce using rule 100 (factor -> MINUS FLOAT .)
    GREATER         reduce using rule 100 (factor -> MINUS FLOAT .)
    GREQUAL         reduce using rule 100 (factor -> MINUS FLOAT .)
    LSEQUAL         reduce using rule 100 (factor -> MINUS FLOAT .)
    NOTEQUAL        reduce using rule 100 (factor -> MINUS FLOAT .)
    COMMA           reduce using rule 100 (factor -> MINUS FLOAT .)
    RSQBRACKET      reduce using rule 100 (factor -> MINUS FLOAT .)
    END             reduce using rule 100 (factor -> MINUS FLOAT .)
    ELSE            reduce using rule 100 (factor -> MINUS FLOAT .)
    RETURN          reduce using rule 100 (factor -> MINUS FLOAT .)
    IDLOCAL         reduce using rule 100 (factor -> MINUS FLOAT .)
    IDINSTANCE      reduce using rule 100 (factor -> MINUS FLOAT .)
    IDCLASS         reduce using rule 100 (factor -> MINUS FLOAT .)
    IDGLOBAL        reduce using rule 100 (factor -> MINUS FLOAT .)
    IDENTIFIER      reduce using rule 100 (factor -> MINUS FLOAT .)
    PUTS            reduce using rule 100 (factor -> MINUS FLOAT .)
    ARRAY           reduce using rule 100 (factor -> MINUS FLOAT .)
    LSQBRACKET      reduce using rule 100 (factor -> MINUS FLOAT .)
    LBRACKET        reduce using rule 100 (factor -> MINUS FLOAT .)
    HASH            reduce using rule 100 (factor -> MINUS FLOAT .)
    FOR             reduce using rule 100 (factor -> MINUS FLOAT .)
    TRUE            reduce using rule 100 (factor -> MINUS FLOAT .)
    FALSE           reduce using rule 100 (factor -> MINUS FLOAT .)
    NIL             reduce using rule 100 (factor -> MINUS FLOAT .)
    IF              reduce using rule 100 (factor -> MINUS FLOAT .)
    WHILE           reduce using rule 100 (factor -> MINUS FLOAT .)
    NUMBER          reduce using rule 100 (factor -> MINUS FLOAT .)
    FLOAT           reduce using rule 100 (factor -> MINUS FLOAT .)
    NUML            reduce using rule 100 (factor -> MINUS FLOAT .)
    STRING          reduce using rule 100 (factor -> MINUS FLOAT .)
    STRINGV         reduce using rule 100 (factor -> MINUS FLOAT .)
    BREAK           reduce using rule 100 (factor -> MINUS FLOAT .)
    ANDS            reduce using rule 100 (factor -> MINUS FLOAT .)
    ORS             reduce using rule 100 (factor -> MINUS FLOAT .)
    RPARENTHESIS    reduce using rule 100 (factor -> MINUS FLOAT .)
    POINT           reduce using rule 100 (factor -> MINUS FLOAT .)
    RBRACKET        reduce using rule 100 (factor -> MINUS FLOAT .)
    DO              reduce using rule 100 (factor -> MINUS FLOAT .)


state 78

    (106) cadena -> STRING POINT . NEW
    (107) cadena -> STRING POINT . NEW LPARENTHESIS string RPARENTHESIS

    NEW             shift and go to state 147


state 79

    (108) cadena -> STRING LPARENTHESIS . string RPARENTHESIS
    (105) string -> . STRINGV

    STRINGV         shift and go to state 32

    string                         shift and go to state 148

state 80

    (174) metodocadena -> PUTS cadena . POINT LENGTH
    (172) metodocadenaSemantica -> PUTS cadena . POINT EMPTY INTERROGATIVE
    (34) putss -> PUTS cadena .

    POINT           shift and go to state 149
    $end            reduce using rule 34 (putss -> PUTS cadena .)


state 81

    (175) metodocadena -> PUTS string . POINT LENGTH
    (173) metodocadenaSemantica -> PUTS string . POINT EMPTY INTERROGATIVE
    (33) putss -> PUTS string .

    POINT           shift and go to state 150
    $end            reduce using rule 33 (putss -> PUTS string .)


state 82

    (37) putsenx -> PUTS expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term

    $end            reduce using rule 37 (putsenx -> PUTS expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63


state 83

    (93) expression -> term .

    PLUS            reduce using rule 93 (expression -> term .)
    MINUS           reduce using rule 93 (expression -> term .)
    DIVISION        reduce using rule 93 (expression -> term .)
    MOD             reduce using rule 93 (expression -> term .)
    MULT            reduce using rule 93 (expression -> term .)
    EXP             reduce using rule 93 (expression -> term .)
    $end            reduce using rule 93 (expression -> term .)
    COMPARE         reduce using rule 93 (expression -> term .)
    LESS            reduce using rule 93 (expression -> term .)
    GREATER         reduce using rule 93 (expression -> term .)
    GREQUAL         reduce using rule 93 (expression -> term .)
    LSEQUAL         reduce using rule 93 (expression -> term .)
    NOTEQUAL        reduce using rule 93 (expression -> term .)
    END             reduce using rule 93 (expression -> term .)
    ELSE            reduce using rule 93 (expression -> term .)
    RETURN          reduce using rule 93 (expression -> term .)
    IDLOCAL         reduce using rule 93 (expression -> term .)
    IDINSTANCE      reduce using rule 93 (expression -> term .)
    IDCLASS         reduce using rule 93 (expression -> term .)
    IDGLOBAL        reduce using rule 93 (expression -> term .)
    IDENTIFIER      reduce using rule 93 (expression -> term .)
    PUTS            reduce using rule 93 (expression -> term .)
    ARRAY           reduce using rule 93 (expression -> term .)
    LSQBRACKET      reduce using rule 93 (expression -> term .)
    LBRACKET        reduce using rule 93 (expression -> term .)
    HASH            reduce using rule 93 (expression -> term .)
    FOR             reduce using rule 93 (expression -> term .)
    TRUE            reduce using rule 93 (expression -> term .)
    FALSE           reduce using rule 93 (expression -> term .)
    NIL             reduce using rule 93 (expression -> term .)
    IF              reduce using rule 93 (expression -> term .)
    WHILE           reduce using rule 93 (expression -> term .)
    NUMBER          reduce using rule 93 (expression -> term .)
    FLOAT           reduce using rule 93 (expression -> term .)
    NUML            reduce using rule 93 (expression -> term .)
    STRING          reduce using rule 93 (expression -> term .)
    STRINGV         reduce using rule 93 (expression -> term .)
    BREAK           reduce using rule 93 (expression -> term .)
    ANDS            reduce using rule 93 (expression -> term .)
    ORS             reduce using rule 93 (expression -> term .)


state 84

    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression
    (95) term -> variables .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)
    $end            reduce using rule 95 (term -> variables .)
    COMPARE         reduce using rule 95 (term -> variables .)
    LESS            reduce using rule 95 (term -> variables .)
    GREATER         reduce using rule 95 (term -> variables .)
    GREQUAL         reduce using rule 95 (term -> variables .)
    LSEQUAL         reduce using rule 95 (term -> variables .)
    NOTEQUAL        reduce using rule 95 (term -> variables .)
    END             reduce using rule 95 (term -> variables .)
    ELSE            reduce using rule 95 (term -> variables .)
    RETURN          reduce using rule 95 (term -> variables .)
    IDLOCAL         reduce using rule 95 (term -> variables .)
    IDINSTANCE      reduce using rule 95 (term -> variables .)
    IDCLASS         reduce using rule 95 (term -> variables .)
    IDGLOBAL        reduce using rule 95 (term -> variables .)
    IDENTIFIER      reduce using rule 95 (term -> variables .)
    PUTS            reduce using rule 95 (term -> variables .)
    ARRAY           reduce using rule 95 (term -> variables .)
    LSQBRACKET      reduce using rule 95 (term -> variables .)
    LBRACKET        reduce using rule 95 (term -> variables .)
    HASH            reduce using rule 95 (term -> variables .)
    FOR             reduce using rule 95 (term -> variables .)
    TRUE            reduce using rule 95 (term -> variables .)
    FALSE           reduce using rule 95 (term -> variables .)
    NIL             reduce using rule 95 (term -> variables .)
    IF              reduce using rule 95 (term -> variables .)
    WHILE           reduce using rule 95 (term -> variables .)
    NUMBER          reduce using rule 95 (term -> variables .)
    FLOAT           reduce using rule 95 (term -> variables .)
    NUML            reduce using rule 95 (term -> variables .)
    STRING          reduce using rule 95 (term -> variables .)
    STRINGV         reduce using rule 95 (term -> variables .)
    BREAK           reduce using rule 95 (term -> variables .)
    ANDS            reduce using rule 95 (term -> variables .)
    ORS             reduce using rule 95 (term -> variables .)

  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]


state 85

    (59) variables -> IDLOCAL .

    PLUS            reduce using rule 59 (variables -> IDLOCAL .)
    MINUS           reduce using rule 59 (variables -> IDLOCAL .)
    DIVISION        reduce using rule 59 (variables -> IDLOCAL .)
    MOD             reduce using rule 59 (variables -> IDLOCAL .)
    MULT            reduce using rule 59 (variables -> IDLOCAL .)
    EXP             reduce using rule 59 (variables -> IDLOCAL .)
    $end            reduce using rule 59 (variables -> IDLOCAL .)
    COMPARE         reduce using rule 59 (variables -> IDLOCAL .)
    GREQUAL         reduce using rule 59 (variables -> IDLOCAL .)
    LSEQUAL         reduce using rule 59 (variables -> IDLOCAL .)
    NOTEQUAL        reduce using rule 59 (variables -> IDLOCAL .)
    LESS            reduce using rule 59 (variables -> IDLOCAL .)
    GREATER         reduce using rule 59 (variables -> IDLOCAL .)
    PUTS            reduce using rule 59 (variables -> IDLOCAL .)
    ARRAY           reduce using rule 59 (variables -> IDLOCAL .)
    LSQBRACKET      reduce using rule 59 (variables -> IDLOCAL .)
    LBRACKET        reduce using rule 59 (variables -> IDLOCAL .)
    HASH            reduce using rule 59 (variables -> IDLOCAL .)
    FOR             reduce using rule 59 (variables -> IDLOCAL .)
    TRUE            reduce using rule 59 (variables -> IDLOCAL .)
    FALSE           reduce using rule 59 (variables -> IDLOCAL .)
    NIL             reduce using rule 59 (variables -> IDLOCAL .)
    IDLOCAL         reduce using rule 59 (variables -> IDLOCAL .)
    IDINSTANCE      reduce using rule 59 (variables -> IDLOCAL .)
    IDCLASS         reduce using rule 59 (variables -> IDLOCAL .)
    IDGLOBAL        reduce using rule 59 (variables -> IDLOCAL .)
    IDENTIFIER      reduce using rule 59 (variables -> IDLOCAL .)
    IF              reduce using rule 59 (variables -> IDLOCAL .)
    WHILE           reduce using rule 59 (variables -> IDLOCAL .)
    STRING          reduce using rule 59 (variables -> IDLOCAL .)
    STRINGV         reduce using rule 59 (variables -> IDLOCAL .)
    NUMBER          reduce using rule 59 (variables -> IDLOCAL .)
    FLOAT           reduce using rule 59 (variables -> IDLOCAL .)
    NUML            reduce using rule 59 (variables -> IDLOCAL .)
    END             reduce using rule 59 (variables -> IDLOCAL .)
    ELSE            reduce using rule 59 (variables -> IDLOCAL .)
    RETURN          reduce using rule 59 (variables -> IDLOCAL .)
    BREAK           reduce using rule 59 (variables -> IDLOCAL .)
    ANDS            reduce using rule 59 (variables -> IDLOCAL .)
    ORS             reduce using rule 59 (variables -> IDLOCAL .)
    ASSIGN          reduce using rule 59 (variables -> IDLOCAL .)
    POINT           reduce using rule 59 (variables -> IDLOCAL .)
    COMMA           reduce using rule 59 (variables -> IDLOCAL .)
    RPARENTHESIS    reduce using rule 59 (variables -> IDLOCAL .)


state 86

    (60) variables -> IDINSTANCE .

    PLUS            reduce using rule 60 (variables -> IDINSTANCE .)
    MINUS           reduce using rule 60 (variables -> IDINSTANCE .)
    DIVISION        reduce using rule 60 (variables -> IDINSTANCE .)
    MOD             reduce using rule 60 (variables -> IDINSTANCE .)
    MULT            reduce using rule 60 (variables -> IDINSTANCE .)
    EXP             reduce using rule 60 (variables -> IDINSTANCE .)
    $end            reduce using rule 60 (variables -> IDINSTANCE .)
    COMPARE         reduce using rule 60 (variables -> IDINSTANCE .)
    GREQUAL         reduce using rule 60 (variables -> IDINSTANCE .)
    LSEQUAL         reduce using rule 60 (variables -> IDINSTANCE .)
    NOTEQUAL        reduce using rule 60 (variables -> IDINSTANCE .)
    LESS            reduce using rule 60 (variables -> IDINSTANCE .)
    GREATER         reduce using rule 60 (variables -> IDINSTANCE .)
    PUTS            reduce using rule 60 (variables -> IDINSTANCE .)
    ARRAY           reduce using rule 60 (variables -> IDINSTANCE .)
    LSQBRACKET      reduce using rule 60 (variables -> IDINSTANCE .)
    LBRACKET        reduce using rule 60 (variables -> IDINSTANCE .)
    HASH            reduce using rule 60 (variables -> IDINSTANCE .)
    FOR             reduce using rule 60 (variables -> IDINSTANCE .)
    TRUE            reduce using rule 60 (variables -> IDINSTANCE .)
    FALSE           reduce using rule 60 (variables -> IDINSTANCE .)
    NIL             reduce using rule 60 (variables -> IDINSTANCE .)
    IDLOCAL         reduce using rule 60 (variables -> IDINSTANCE .)
    IDINSTANCE      reduce using rule 60 (variables -> IDINSTANCE .)
    IDCLASS         reduce using rule 60 (variables -> IDINSTANCE .)
    IDGLOBAL        reduce using rule 60 (variables -> IDINSTANCE .)
    IDENTIFIER      reduce using rule 60 (variables -> IDINSTANCE .)
    IF              reduce using rule 60 (variables -> IDINSTANCE .)
    WHILE           reduce using rule 60 (variables -> IDINSTANCE .)
    STRING          reduce using rule 60 (variables -> IDINSTANCE .)
    STRINGV         reduce using rule 60 (variables -> IDINSTANCE .)
    NUMBER          reduce using rule 60 (variables -> IDINSTANCE .)
    FLOAT           reduce using rule 60 (variables -> IDINSTANCE .)
    NUML            reduce using rule 60 (variables -> IDINSTANCE .)
    END             reduce using rule 60 (variables -> IDINSTANCE .)
    ELSE            reduce using rule 60 (variables -> IDINSTANCE .)
    RETURN          reduce using rule 60 (variables -> IDINSTANCE .)
    BREAK           reduce using rule 60 (variables -> IDINSTANCE .)
    ANDS            reduce using rule 60 (variables -> IDINSTANCE .)
    ORS             reduce using rule 60 (variables -> IDINSTANCE .)
    ASSIGN          reduce using rule 60 (variables -> IDINSTANCE .)
    POINT           reduce using rule 60 (variables -> IDINSTANCE .)
    COMMA           reduce using rule 60 (variables -> IDINSTANCE .)
    RPARENTHESIS    reduce using rule 60 (variables -> IDINSTANCE .)


state 87

    (61) variables -> IDCLASS .

    PLUS            reduce using rule 61 (variables -> IDCLASS .)
    MINUS           reduce using rule 61 (variables -> IDCLASS .)
    DIVISION        reduce using rule 61 (variables -> IDCLASS .)
    MOD             reduce using rule 61 (variables -> IDCLASS .)
    MULT            reduce using rule 61 (variables -> IDCLASS .)
    EXP             reduce using rule 61 (variables -> IDCLASS .)
    $end            reduce using rule 61 (variables -> IDCLASS .)
    COMPARE         reduce using rule 61 (variables -> IDCLASS .)
    GREQUAL         reduce using rule 61 (variables -> IDCLASS .)
    LSEQUAL         reduce using rule 61 (variables -> IDCLASS .)
    NOTEQUAL        reduce using rule 61 (variables -> IDCLASS .)
    LESS            reduce using rule 61 (variables -> IDCLASS .)
    GREATER         reduce using rule 61 (variables -> IDCLASS .)
    PUTS            reduce using rule 61 (variables -> IDCLASS .)
    ARRAY           reduce using rule 61 (variables -> IDCLASS .)
    LSQBRACKET      reduce using rule 61 (variables -> IDCLASS .)
    LBRACKET        reduce using rule 61 (variables -> IDCLASS .)
    HASH            reduce using rule 61 (variables -> IDCLASS .)
    FOR             reduce using rule 61 (variables -> IDCLASS .)
    TRUE            reduce using rule 61 (variables -> IDCLASS .)
    FALSE           reduce using rule 61 (variables -> IDCLASS .)
    NIL             reduce using rule 61 (variables -> IDCLASS .)
    IDLOCAL         reduce using rule 61 (variables -> IDCLASS .)
    IDINSTANCE      reduce using rule 61 (variables -> IDCLASS .)
    IDCLASS         reduce using rule 61 (variables -> IDCLASS .)
    IDGLOBAL        reduce using rule 61 (variables -> IDCLASS .)
    IDENTIFIER      reduce using rule 61 (variables -> IDCLASS .)
    IF              reduce using rule 61 (variables -> IDCLASS .)
    WHILE           reduce using rule 61 (variables -> IDCLASS .)
    STRING          reduce using rule 61 (variables -> IDCLASS .)
    STRINGV         reduce using rule 61 (variables -> IDCLASS .)
    NUMBER          reduce using rule 61 (variables -> IDCLASS .)
    FLOAT           reduce using rule 61 (variables -> IDCLASS .)
    NUML            reduce using rule 61 (variables -> IDCLASS .)
    END             reduce using rule 61 (variables -> IDCLASS .)
    ELSE            reduce using rule 61 (variables -> IDCLASS .)
    RETURN          reduce using rule 61 (variables -> IDCLASS .)
    BREAK           reduce using rule 61 (variables -> IDCLASS .)
    ANDS            reduce using rule 61 (variables -> IDCLASS .)
    ORS             reduce using rule 61 (variables -> IDCLASS .)
    ASSIGN          reduce using rule 61 (variables -> IDCLASS .)
    POINT           reduce using rule 61 (variables -> IDCLASS .)
    COMMA           reduce using rule 61 (variables -> IDCLASS .)
    RPARENTHESIS    reduce using rule 61 (variables -> IDCLASS .)


state 88

    (62) variables -> IDGLOBAL .

    PLUS            reduce using rule 62 (variables -> IDGLOBAL .)
    MINUS           reduce using rule 62 (variables -> IDGLOBAL .)
    DIVISION        reduce using rule 62 (variables -> IDGLOBAL .)
    MOD             reduce using rule 62 (variables -> IDGLOBAL .)
    MULT            reduce using rule 62 (variables -> IDGLOBAL .)
    EXP             reduce using rule 62 (variables -> IDGLOBAL .)
    $end            reduce using rule 62 (variables -> IDGLOBAL .)
    COMPARE         reduce using rule 62 (variables -> IDGLOBAL .)
    GREQUAL         reduce using rule 62 (variables -> IDGLOBAL .)
    LSEQUAL         reduce using rule 62 (variables -> IDGLOBAL .)
    NOTEQUAL        reduce using rule 62 (variables -> IDGLOBAL .)
    LESS            reduce using rule 62 (variables -> IDGLOBAL .)
    GREATER         reduce using rule 62 (variables -> IDGLOBAL .)
    PUTS            reduce using rule 62 (variables -> IDGLOBAL .)
    ARRAY           reduce using rule 62 (variables -> IDGLOBAL .)
    LSQBRACKET      reduce using rule 62 (variables -> IDGLOBAL .)
    LBRACKET        reduce using rule 62 (variables -> IDGLOBAL .)
    HASH            reduce using rule 62 (variables -> IDGLOBAL .)
    FOR             reduce using rule 62 (variables -> IDGLOBAL .)
    TRUE            reduce using rule 62 (variables -> IDGLOBAL .)
    FALSE           reduce using rule 62 (variables -> IDGLOBAL .)
    NIL             reduce using rule 62 (variables -> IDGLOBAL .)
    IDLOCAL         reduce using rule 62 (variables -> IDGLOBAL .)
    IDINSTANCE      reduce using rule 62 (variables -> IDGLOBAL .)
    IDCLASS         reduce using rule 62 (variables -> IDGLOBAL .)
    IDGLOBAL        reduce using rule 62 (variables -> IDGLOBAL .)
    IDENTIFIER      reduce using rule 62 (variables -> IDGLOBAL .)
    IF              reduce using rule 62 (variables -> IDGLOBAL .)
    WHILE           reduce using rule 62 (variables -> IDGLOBAL .)
    STRING          reduce using rule 62 (variables -> IDGLOBAL .)
    STRINGV         reduce using rule 62 (variables -> IDGLOBAL .)
    NUMBER          reduce using rule 62 (variables -> IDGLOBAL .)
    FLOAT           reduce using rule 62 (variables -> IDGLOBAL .)
    NUML            reduce using rule 62 (variables -> IDGLOBAL .)
    END             reduce using rule 62 (variables -> IDGLOBAL .)
    ELSE            reduce using rule 62 (variables -> IDGLOBAL .)
    RETURN          reduce using rule 62 (variables -> IDGLOBAL .)
    BREAK           reduce using rule 62 (variables -> IDGLOBAL .)
    ANDS            reduce using rule 62 (variables -> IDGLOBAL .)
    ORS             reduce using rule 62 (variables -> IDGLOBAL .)
    ASSIGN          reduce using rule 62 (variables -> IDGLOBAL .)
    POINT           reduce using rule 62 (variables -> IDGLOBAL .)
    COMMA           reduce using rule 62 (variables -> IDGLOBAL .)
    RPARENTHESIS    reduce using rule 62 (variables -> IDGLOBAL .)


state 89

    (63) variables -> IDENTIFIER .

    PLUS            reduce using rule 63 (variables -> IDENTIFIER .)
    MINUS           reduce using rule 63 (variables -> IDENTIFIER .)
    DIVISION        reduce using rule 63 (variables -> IDENTIFIER .)
    MOD             reduce using rule 63 (variables -> IDENTIFIER .)
    MULT            reduce using rule 63 (variables -> IDENTIFIER .)
    EXP             reduce using rule 63 (variables -> IDENTIFIER .)
    $end            reduce using rule 63 (variables -> IDENTIFIER .)
    COMPARE         reduce using rule 63 (variables -> IDENTIFIER .)
    GREQUAL         reduce using rule 63 (variables -> IDENTIFIER .)
    LSEQUAL         reduce using rule 63 (variables -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 63 (variables -> IDENTIFIER .)
    LESS            reduce using rule 63 (variables -> IDENTIFIER .)
    GREATER         reduce using rule 63 (variables -> IDENTIFIER .)
    PUTS            reduce using rule 63 (variables -> IDENTIFIER .)
    ARRAY           reduce using rule 63 (variables -> IDENTIFIER .)
    LSQBRACKET      reduce using rule 63 (variables -> IDENTIFIER .)
    LBRACKET        reduce using rule 63 (variables -> IDENTIFIER .)
    HASH            reduce using rule 63 (variables -> IDENTIFIER .)
    FOR             reduce using rule 63 (variables -> IDENTIFIER .)
    TRUE            reduce using rule 63 (variables -> IDENTIFIER .)
    FALSE           reduce using rule 63 (variables -> IDENTIFIER .)
    NIL             reduce using rule 63 (variables -> IDENTIFIER .)
    IDLOCAL         reduce using rule 63 (variables -> IDENTIFIER .)
    IDINSTANCE      reduce using rule 63 (variables -> IDENTIFIER .)
    IDCLASS         reduce using rule 63 (variables -> IDENTIFIER .)
    IDGLOBAL        reduce using rule 63 (variables -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 63 (variables -> IDENTIFIER .)
    IF              reduce using rule 63 (variables -> IDENTIFIER .)
    WHILE           reduce using rule 63 (variables -> IDENTIFIER .)
    STRING          reduce using rule 63 (variables -> IDENTIFIER .)
    STRINGV         reduce using rule 63 (variables -> IDENTIFIER .)
    NUMBER          reduce using rule 63 (variables -> IDENTIFIER .)
    FLOAT           reduce using rule 63 (variables -> IDENTIFIER .)
    NUML            reduce using rule 63 (variables -> IDENTIFIER .)
    END             reduce using rule 63 (variables -> IDENTIFIER .)
    ELSE            reduce using rule 63 (variables -> IDENTIFIER .)
    RETURN          reduce using rule 63 (variables -> IDENTIFIER .)
    BREAK           reduce using rule 63 (variables -> IDENTIFIER .)
    ANDS            reduce using rule 63 (variables -> IDENTIFIER .)
    ORS             reduce using rule 63 (variables -> IDENTIFIER .)
    ASSIGN          reduce using rule 63 (variables -> IDENTIFIER .)
    POINT           reduce using rule 63 (variables -> IDENTIFIER .)
    COMMA           reduce using rule 63 (variables -> IDENTIFIER .)
    RPARENTHESIS    reduce using rule 63 (variables -> IDENTIFIER .)


state 90

    (113) arreglo -> ARRAY POINT . NEW
    (114) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    NEW             shift and go to state 151


state 91

    (116) arreglo -> ARRAY LSQBRACKET . arraycontent RSQBRACKET
    (118) arraycontent -> . factor
    (119) arraycontent -> . string
    (120) arraycontent -> . factor COMMA arraycontent
    (121) arraycontent -> . string COMMA arraycontent
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (105) string -> . STRINGV

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    STRINGV         shift and go to state 32

    arraycontent                   shift and go to state 152
    factor                         shift and go to state 93
    string                         shift and go to state 94

state 92

    (117) arreglo -> LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 153


state 93

    (118) arraycontent -> factor .
    (120) arraycontent -> factor . COMMA arraycontent

    RSQBRACKET      reduce using rule 118 (arraycontent -> factor .)
    RPARENTHESIS    reduce using rule 118 (arraycontent -> factor .)
    COMMA           shift and go to state 154


state 94

    (119) arraycontent -> string .
    (121) arraycontent -> string . COMMA arraycontent

    RSQBRACKET      reduce using rule 119 (arraycontent -> string .)
    RPARENTHESIS    reduce using rule 119 (arraycontent -> string .)
    COMMA           shift and go to state 155


state 95

    (124) hash -> LBRACKET hashcontent . RBRACKET

    RBRACKET        shift and go to state 156


state 96

    (126) hashcontent -> string . ASSIGN GREATER hashcontentvalue
    (127) hashcontent -> string . ASSIGN GREATER hashcontentvalue COMMA hashcontent

    ASSIGN          shift and go to state 157


state 97

    (125) hash -> HASH POINT . NEW

    NEW             shift and go to state 158


state 98

    (177) getsr -> IDLOCAL ASSIGN . GETS
    (64) assigns -> IDLOCAL ASSIGN . expression
    (69) assigns -> IDLOCAL ASSIGN . variables
    (74) assigns -> IDLOCAL ASSIGN . asignar
    (79) assigns -> IDLOCAL ASSIGN . reglaSemanticaComparaciones
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . reglaSemanticaComparaciones
    (14) asignar -> . metodocadenaSemantica
    (164) reglaSemanticaComparaciones -> . value2 COMPARE value2
    (165) reglaSemanticaComparaciones -> . value2 LESS value2
    (166) reglaSemanticaComparaciones -> . value2 GREATER value2
    (167) reglaSemanticaComparaciones -> . value2 GREQUAL value2
    (168) reglaSemanticaComparaciones -> . value2 LSEQUAL value2
    (169) reglaSemanticaComparaciones -> . value2 NOTEQUAL value2
    (170) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ORS reglaSemanticaComparaciones
    (94) term -> . factor
    (95) term -> . variables
    (105) string -> . STRINGV
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (130) metodohash -> . variables ASSIGN hash POINT LENGTH
    (131) metodohash -> . variables POINT LENGTH
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (172) metodocadenaSemantica -> . PUTS cadena POINT EMPTY INTERROGATIVE
    (173) metodocadenaSemantica -> . PUTS string POINT EMPTY INTERROGATIVE
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    GETS            shift and go to state 159
    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    STRINGV         shift and go to state 32
    STRING          shift and go to state 33
    PUTS            shift and go to state 164
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    expression                     shift and go to state 160
    variables                      shift and go to state 161
    asignar                        shift and go to state 162
    reglaSemanticaComparaciones    shift and go to state 163
    term                           shift and go to state 30
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    boolean                        shift and go to state 12
    metodocadenaSemantica          shift and go to state 15
    value2                         shift and go to state 48
    factor                         shift and go to state 36

state 99

    (65) assigns -> IDINSTANCE ASSIGN . expression
    (70) assigns -> IDINSTANCE ASSIGN . variables
    (75) assigns -> IDINSTANCE ASSIGN . asignar
    (80) assigns -> IDINSTANCE ASSIGN . reglaSemanticaComparaciones
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . reglaSemanticaComparaciones
    (14) asignar -> . metodocadenaSemantica
    (164) reglaSemanticaComparaciones -> . value2 COMPARE value2
    (165) reglaSemanticaComparaciones -> . value2 LESS value2
    (166) reglaSemanticaComparaciones -> . value2 GREATER value2
    (167) reglaSemanticaComparaciones -> . value2 GREQUAL value2
    (168) reglaSemanticaComparaciones -> . value2 LSEQUAL value2
    (169) reglaSemanticaComparaciones -> . value2 NOTEQUAL value2
    (170) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ORS reglaSemanticaComparaciones
    (94) term -> . factor
    (95) term -> . variables
    (105) string -> . STRINGV
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (130) metodohash -> . variables ASSIGN hash POINT LENGTH
    (131) metodohash -> . variables POINT LENGTH
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (172) metodocadenaSemantica -> . PUTS cadena POINT EMPTY INTERROGATIVE
    (173) metodocadenaSemantica -> . PUTS string POINT EMPTY INTERROGATIVE
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    STRINGV         shift and go to state 32
    STRING          shift and go to state 33
    PUTS            shift and go to state 164
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    expression                     shift and go to state 165
    variables                      shift and go to state 166
    asignar                        shift and go to state 167
    reglaSemanticaComparaciones    shift and go to state 168
    term                           shift and go to state 30
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    boolean                        shift and go to state 12
    metodocadenaSemantica          shift and go to state 15
    value2                         shift and go to state 48
    factor                         shift and go to state 36

state 100

    (66) assigns -> IDCLASS ASSIGN . expression
    (71) assigns -> IDCLASS ASSIGN . variables
    (76) assigns -> IDCLASS ASSIGN . asignar
    (81) assigns -> IDCLASS ASSIGN . reglaSemanticaComparaciones
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . reglaSemanticaComparaciones
    (14) asignar -> . metodocadenaSemantica
    (164) reglaSemanticaComparaciones -> . value2 COMPARE value2
    (165) reglaSemanticaComparaciones -> . value2 LESS value2
    (166) reglaSemanticaComparaciones -> . value2 GREATER value2
    (167) reglaSemanticaComparaciones -> . value2 GREQUAL value2
    (168) reglaSemanticaComparaciones -> . value2 LSEQUAL value2
    (169) reglaSemanticaComparaciones -> . value2 NOTEQUAL value2
    (170) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ORS reglaSemanticaComparaciones
    (94) term -> . factor
    (95) term -> . variables
    (105) string -> . STRINGV
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (130) metodohash -> . variables ASSIGN hash POINT LENGTH
    (131) metodohash -> . variables POINT LENGTH
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (172) metodocadenaSemantica -> . PUTS cadena POINT EMPTY INTERROGATIVE
    (173) metodocadenaSemantica -> . PUTS string POINT EMPTY INTERROGATIVE
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    STRINGV         shift and go to state 32
    STRING          shift and go to state 33
    PUTS            shift and go to state 164
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    expression                     shift and go to state 169
    variables                      shift and go to state 170
    asignar                        shift and go to state 171
    reglaSemanticaComparaciones    shift and go to state 172
    term                           shift and go to state 30
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    boolean                        shift and go to state 12
    metodocadenaSemantica          shift and go to state 15
    value2                         shift and go to state 48
    factor                         shift and go to state 36

state 101

    (67) assigns -> IDGLOBAL ASSIGN . expression
    (72) assigns -> IDGLOBAL ASSIGN . variables
    (77) assigns -> IDGLOBAL ASSIGN . asignar
    (82) assigns -> IDGLOBAL ASSIGN . reglaSemanticaComparaciones
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . reglaSemanticaComparaciones
    (14) asignar -> . metodocadenaSemantica
    (164) reglaSemanticaComparaciones -> . value2 COMPARE value2
    (165) reglaSemanticaComparaciones -> . value2 LESS value2
    (166) reglaSemanticaComparaciones -> . value2 GREATER value2
    (167) reglaSemanticaComparaciones -> . value2 GREQUAL value2
    (168) reglaSemanticaComparaciones -> . value2 LSEQUAL value2
    (169) reglaSemanticaComparaciones -> . value2 NOTEQUAL value2
    (170) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ORS reglaSemanticaComparaciones
    (94) term -> . factor
    (95) term -> . variables
    (105) string -> . STRINGV
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (130) metodohash -> . variables ASSIGN hash POINT LENGTH
    (131) metodohash -> . variables POINT LENGTH
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (172) metodocadenaSemantica -> . PUTS cadena POINT EMPTY INTERROGATIVE
    (173) metodocadenaSemantica -> . PUTS string POINT EMPTY INTERROGATIVE
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    STRINGV         shift and go to state 32
    STRING          shift and go to state 33
    PUTS            shift and go to state 164
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    expression                     shift and go to state 173
    variables                      shift and go to state 174
    asignar                        shift and go to state 175
    reglaSemanticaComparaciones    shift and go to state 176
    term                           shift and go to state 30
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    boolean                        shift and go to state 12
    metodocadenaSemantica          shift and go to state 15
    value2                         shift and go to state 48
    factor                         shift and go to state 36

state 102

    (68) assigns -> IDENTIFIER ASSIGN . expression
    (73) assigns -> IDENTIFIER ASSIGN . variables
    (78) assigns -> IDENTIFIER ASSIGN . asignar
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . reglaSemanticaComparaciones
    (14) asignar -> . metodocadenaSemantica
    (94) term -> . factor
    (95) term -> . variables
    (105) string -> . STRINGV
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (130) metodohash -> . variables ASSIGN hash POINT LENGTH
    (131) metodohash -> . variables POINT LENGTH
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (164) reglaSemanticaComparaciones -> . value2 COMPARE value2
    (165) reglaSemanticaComparaciones -> . value2 LESS value2
    (166) reglaSemanticaComparaciones -> . value2 GREATER value2
    (167) reglaSemanticaComparaciones -> . value2 GREQUAL value2
    (168) reglaSemanticaComparaciones -> . value2 LSEQUAL value2
    (169) reglaSemanticaComparaciones -> . value2 NOTEQUAL value2
    (170) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ORS reglaSemanticaComparaciones
    (172) metodocadenaSemantica -> . PUTS cadena POINT EMPTY INTERROGATIVE
    (173) metodocadenaSemantica -> . PUTS string POINT EMPTY INTERROGATIVE
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    STRINGV         shift and go to state 32
    STRING          shift and go to state 33
    PUTS            shift and go to state 164
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    expression                     shift and go to state 177
    variables                      shift and go to state 178
    asignar                        shift and go to state 179
    term                           shift and go to state 30
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    boolean                        shift and go to state 12
    reglaSemanticaComparaciones    shift and go to state 14
    metodocadenaSemantica          shift and go to state 15
    factor                         shift and go to state 36
    value2                         shift and go to state 48

state 103

    (164) reglaSemanticaComparaciones -> value2 COMPARE . value2
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (94) term -> . factor
    (95) term -> . variables
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    STRING          shift and go to state 33
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    value2                         shift and go to state 180
    variables                      shift and go to state 141
    boolean                        shift and go to state 142
    term                           shift and go to state 143
    expression                     shift and go to state 144
    cadena                         shift and go to state 145
    factor                         shift and go to state 36

state 104

    (165) reglaSemanticaComparaciones -> value2 LESS . value2
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (94) term -> . factor
    (95) term -> . variables
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    STRING          shift and go to state 33
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    value2                         shift and go to state 181
    variables                      shift and go to state 141
    boolean                        shift and go to state 142
    term                           shift and go to state 143
    expression                     shift and go to state 144
    cadena                         shift and go to state 145
    factor                         shift and go to state 36

state 105

    (166) reglaSemanticaComparaciones -> value2 GREATER . value2
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (94) term -> . factor
    (95) term -> . variables
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    STRING          shift and go to state 33
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    value2                         shift and go to state 182
    variables                      shift and go to state 141
    boolean                        shift and go to state 142
    term                           shift and go to state 143
    expression                     shift and go to state 144
    cadena                         shift and go to state 145
    factor                         shift and go to state 36

state 106

    (167) reglaSemanticaComparaciones -> value2 GREQUAL . value2
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (94) term -> . factor
    (95) term -> . variables
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    STRING          shift and go to state 33
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    value2                         shift and go to state 183
    variables                      shift and go to state 141
    boolean                        shift and go to state 142
    term                           shift and go to state 143
    expression                     shift and go to state 144
    cadena                         shift and go to state 145
    factor                         shift and go to state 36

state 107

    (168) reglaSemanticaComparaciones -> value2 LSEQUAL . value2
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (94) term -> . factor
    (95) term -> . variables
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    STRING          shift and go to state 33
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    value2                         shift and go to state 184
    variables                      shift and go to state 141
    boolean                        shift and go to state 142
    term                           shift and go to state 143
    expression                     shift and go to state 144
    cadena                         shift and go to state 145
    factor                         shift and go to state 36

state 108

    (169) reglaSemanticaComparaciones -> value2 NOTEQUAL . value2
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (94) term -> . factor
    (95) term -> . variables
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    STRING          shift and go to state 33
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    value2                         shift and go to state 185
    variables                      shift and go to state 141
    boolean                        shift and go to state 142
    term                           shift and go to state 143
    expression                     shift and go to state 144
    cadena                         shift and go to state 145
    factor                         shift and go to state 36

state 109

    (138) estructurasControl -> FOR IDLOCAL . IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> FOR IDLOCAL . IN factor POINT POINT factor DO forcontent END

    IN              shift and go to state 186


state 110

    (56) sentenIF -> IF variables . comparador term
    (57) sentenifp -> IF variables . comparador term algoritmo END
    (58) sentenifelse -> IF variables . comparador term algoritmo ELSE algoritmo END
    (132) comparador -> . COMPARE
    (133) comparador -> . GREQUAL
    (134) comparador -> . LSEQUAL
    (135) comparador -> . NOTEQUAL
    (136) comparador -> . LESS
    (137) comparador -> . GREATER

    COMPARE         shift and go to state 188
    GREQUAL         shift and go to state 189
    LSEQUAL         shift and go to state 190
    NOTEQUAL        shift and go to state 191
    LESS            shift and go to state 192
    GREATER         shift and go to state 193

    comparador                     shift and go to state 187

state 111

    (35) putss -> PRINT string .

    $end            reduce using rule 35 (putss -> PRINT string .)


state 112

    (36) putss -> PRINT cadena .

    $end            reduce using rule 36 (putss -> PRINT cadena .)


state 113

    (38) putsenx -> PRINT expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term

    $end            reduce using rule 38 (putsenx -> PRINT expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63


state 114

    (52) sentenWHILE -> WHILE variables . comparador variables algoritmo END
    (53) sentenWHILE -> WHILE variables . comparador expression algoritmo END
    (55) sentenWHILE -> WHILE variables . algoritmo END
    (132) comparador -> . COMPARE
    (133) comparador -> . GREQUAL
    (134) comparador -> . LSEQUAL
    (135) comparador -> . NOTEQUAL
    (136) comparador -> . LESS
    (137) comparador -> . GREATER
    (39) algoritmo -> . expression
    (40) algoritmo -> . metodocadena
    (41) algoritmo -> . arreglo
    (42) algoritmo -> . metodosarreglo
    (43) algoritmo -> . hash
    (44) algoritmo -> . estructurasControl
    (45) algoritmo -> . boolean
    (46) algoritmo -> . assigns
    (47) algoritmo -> . sentenIF
    (48) algoritmo -> . sentenifp
    (49) algoritmo -> . sentenifelse
    (50) algoritmo -> . variables
    (51) algoritmo -> . sentenWHILE
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (94) term -> . factor
    (95) term -> . variables
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    COMPARE         shift and go to state 188
    GREQUAL         shift and go to state 189
    LSEQUAL         shift and go to state 190
    NOTEQUAL        shift and go to state 191
    LESS            shift and go to state 192
    GREATER         shift and go to state 193
    PUTS            shift and go to state 211
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    FOR             shift and go to state 49
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IDLOCAL         shift and go to state 212
    IDINSTANCE      shift and go to state 213
    IDCLASS         shift and go to state 214
    IDGLOBAL        shift and go to state 215
    IDENTIFIER      shift and go to state 216
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    variables                      shift and go to state 194
    comparador                     shift and go to state 195
    algoritmo                      shift and go to state 196
    expression                     shift and go to state 197
    metodocadena                   shift and go to state 198
    arreglo                        shift and go to state 199
    metodosarreglo                 shift and go to state 200
    hash                           shift and go to state 201
    estructurasControl             shift and go to state 202
    boolean                        shift and go to state 203
    assigns                        shift and go to state 204
    sentenIF                       shift and go to state 205
    sentenifp                      shift and go to state 206
    sentenifelse                   shift and go to state 207
    sentenWHILE                    shift and go to state 208
    term                           shift and go to state 83
    cadena                         shift and go to state 209
    string                         shift and go to state 210
    factor                         shift and go to state 36

state 115

    (54) sentenWHILE -> WHILE boolean . algoritmo END
    (39) algoritmo -> . expression
    (40) algoritmo -> . metodocadena
    (41) algoritmo -> . arreglo
    (42) algoritmo -> . metodosarreglo
    (43) algoritmo -> . hash
    (44) algoritmo -> . estructurasControl
    (45) algoritmo -> . boolean
    (46) algoritmo -> . assigns
    (47) algoritmo -> . sentenIF
    (48) algoritmo -> . sentenifp
    (49) algoritmo -> . sentenifelse
    (50) algoritmo -> . variables
    (51) algoritmo -> . sentenWHILE
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (94) term -> . factor
    (95) term -> . variables
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    PUTS            shift and go to state 211
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    FOR             shift and go to state 49
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IDLOCAL         shift and go to state 212
    IDINSTANCE      shift and go to state 213
    IDCLASS         shift and go to state 214
    IDGLOBAL        shift and go to state 215
    IDENTIFIER      shift and go to state 216
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    boolean                        shift and go to state 203
    algoritmo                      shift and go to state 217
    expression                     shift and go to state 197
    metodocadena                   shift and go to state 198
    arreglo                        shift and go to state 199
    metodosarreglo                 shift and go to state 200
    hash                           shift and go to state 201
    estructurasControl             shift and go to state 202
    assigns                        shift and go to state 204
    sentenIF                       shift and go to state 205
    sentenifp                      shift and go to state 206
    sentenifelse                   shift and go to state 207
    variables                      shift and go to state 194
    sentenWHILE                    shift and go to state 208
    term                           shift and go to state 83
    cadena                         shift and go to state 209
    string                         shift and go to state 210
    factor                         shift and go to state 36

state 116

    (144) funcion1 -> DEF IDLOCAL . LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (145) funcion1 -> DEF IDLOCAL . LPARENTHESIS fcontenido RPARENTHESIS algoritmo END
    (155) funcion2 -> DEF IDLOCAL . LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END
    (156) funcion2 -> DEF IDLOCAL . LPARENTHESIS valuedefect RPARENTHESIS algoritmo END
    (157) funcion3 -> DEF IDLOCAL . LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END
    (158) funcion3 -> DEF IDLOCAL . LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END

    LPARENTHESIS    shift and go to state 218


state 117

    (87) expression -> expression PLUS term .

    PLUS            reduce using rule 87 (expression -> expression PLUS term .)
    MINUS           reduce using rule 87 (expression -> expression PLUS term .)
    DIVISION        reduce using rule 87 (expression -> expression PLUS term .)
    MOD             reduce using rule 87 (expression -> expression PLUS term .)
    MULT            reduce using rule 87 (expression -> expression PLUS term .)
    EXP             reduce using rule 87 (expression -> expression PLUS term .)
    $end            reduce using rule 87 (expression -> expression PLUS term .)
    COMPARE         reduce using rule 87 (expression -> expression PLUS term .)
    LESS            reduce using rule 87 (expression -> expression PLUS term .)
    GREATER         reduce using rule 87 (expression -> expression PLUS term .)
    GREQUAL         reduce using rule 87 (expression -> expression PLUS term .)
    LSEQUAL         reduce using rule 87 (expression -> expression PLUS term .)
    NOTEQUAL        reduce using rule 87 (expression -> expression PLUS term .)
    END             reduce using rule 87 (expression -> expression PLUS term .)
    ELSE            reduce using rule 87 (expression -> expression PLUS term .)
    RETURN          reduce using rule 87 (expression -> expression PLUS term .)
    IDLOCAL         reduce using rule 87 (expression -> expression PLUS term .)
    IDINSTANCE      reduce using rule 87 (expression -> expression PLUS term .)
    IDCLASS         reduce using rule 87 (expression -> expression PLUS term .)
    IDGLOBAL        reduce using rule 87 (expression -> expression PLUS term .)
    IDENTIFIER      reduce using rule 87 (expression -> expression PLUS term .)
    PUTS            reduce using rule 87 (expression -> expression PLUS term .)
    ARRAY           reduce using rule 87 (expression -> expression PLUS term .)
    LSQBRACKET      reduce using rule 87 (expression -> expression PLUS term .)
    LBRACKET        reduce using rule 87 (expression -> expression PLUS term .)
    HASH            reduce using rule 87 (expression -> expression PLUS term .)
    FOR             reduce using rule 87 (expression -> expression PLUS term .)
    TRUE            reduce using rule 87 (expression -> expression PLUS term .)
    FALSE           reduce using rule 87 (expression -> expression PLUS term .)
    NIL             reduce using rule 87 (expression -> expression PLUS term .)
    IF              reduce using rule 87 (expression -> expression PLUS term .)
    WHILE           reduce using rule 87 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 87 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 87 (expression -> expression PLUS term .)
    NUML            reduce using rule 87 (expression -> expression PLUS term .)
    STRING          reduce using rule 87 (expression -> expression PLUS term .)
    STRINGV         reduce using rule 87 (expression -> expression PLUS term .)
    BREAK           reduce using rule 87 (expression -> expression PLUS term .)
    ANDS            reduce using rule 87 (expression -> expression PLUS term .)
    ORS             reduce using rule 87 (expression -> expression PLUS term .)


state 118

    (89) expression -> expression PLUS variables .
    (95) term -> variables .

  ! reduce/reduce conflict for PLUS resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for MINUS resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for DIVISION resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for MOD resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for MULT resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for EXP resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for $end resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for COMPARE resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for LESS resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for GREATER resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for LSEQUAL resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for END resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for HASH resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for FOR resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for NIL resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IF resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for NUML resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for STRING resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for ANDS resolved using rule 89 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for ORS resolved using rule 89 (expression -> expression PLUS variables .)
    PLUS            reduce using rule 89 (expression -> expression PLUS variables .)
    MINUS           reduce using rule 89 (expression -> expression PLUS variables .)
    DIVISION        reduce using rule 89 (expression -> expression PLUS variables .)
    MOD             reduce using rule 89 (expression -> expression PLUS variables .)
    MULT            reduce using rule 89 (expression -> expression PLUS variables .)
    EXP             reduce using rule 89 (expression -> expression PLUS variables .)
    $end            reduce using rule 89 (expression -> expression PLUS variables .)
    COMPARE         reduce using rule 89 (expression -> expression PLUS variables .)
    LESS            reduce using rule 89 (expression -> expression PLUS variables .)
    GREATER         reduce using rule 89 (expression -> expression PLUS variables .)
    GREQUAL         reduce using rule 89 (expression -> expression PLUS variables .)
    LSEQUAL         reduce using rule 89 (expression -> expression PLUS variables .)
    NOTEQUAL        reduce using rule 89 (expression -> expression PLUS variables .)
    END             reduce using rule 89 (expression -> expression PLUS variables .)
    ELSE            reduce using rule 89 (expression -> expression PLUS variables .)
    RETURN          reduce using rule 89 (expression -> expression PLUS variables .)
    IDLOCAL         reduce using rule 89 (expression -> expression PLUS variables .)
    IDINSTANCE      reduce using rule 89 (expression -> expression PLUS variables .)
    IDCLASS         reduce using rule 89 (expression -> expression PLUS variables .)
    IDGLOBAL        reduce using rule 89 (expression -> expression PLUS variables .)
    IDENTIFIER      reduce using rule 89 (expression -> expression PLUS variables .)
    PUTS            reduce using rule 89 (expression -> expression PLUS variables .)
    ARRAY           reduce using rule 89 (expression -> expression PLUS variables .)
    LSQBRACKET      reduce using rule 89 (expression -> expression PLUS variables .)
    LBRACKET        reduce using rule 89 (expression -> expression PLUS variables .)
    HASH            reduce using rule 89 (expression -> expression PLUS variables .)
    FOR             reduce using rule 89 (expression -> expression PLUS variables .)
    TRUE            reduce using rule 89 (expression -> expression PLUS variables .)
    FALSE           reduce using rule 89 (expression -> expression PLUS variables .)
    NIL             reduce using rule 89 (expression -> expression PLUS variables .)
    IF              reduce using rule 89 (expression -> expression PLUS variables .)
    WHILE           reduce using rule 89 (expression -> expression PLUS variables .)
    NUMBER          reduce using rule 89 (expression -> expression PLUS variables .)
    FLOAT           reduce using rule 89 (expression -> expression PLUS variables .)
    NUML            reduce using rule 89 (expression -> expression PLUS variables .)
    STRING          reduce using rule 89 (expression -> expression PLUS variables .)
    STRINGV         reduce using rule 89 (expression -> expression PLUS variables .)
    BREAK           reduce using rule 89 (expression -> expression PLUS variables .)
    ANDS            reduce using rule 89 (expression -> expression PLUS variables .)
    ORS             reduce using rule 89 (expression -> expression PLUS variables .)

  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! DIVISION        [ reduce using rule 95 (term -> variables .) ]
  ! MOD             [ reduce using rule 95 (term -> variables .) ]
  ! MULT            [ reduce using rule 95 (term -> variables .) ]
  ! EXP             [ reduce using rule 95 (term -> variables .) ]
  ! $end            [ reduce using rule 95 (term -> variables .) ]
  ! COMPARE         [ reduce using rule 95 (term -> variables .) ]
  ! LESS            [ reduce using rule 95 (term -> variables .) ]
  ! GREATER         [ reduce using rule 95 (term -> variables .) ]
  ! GREQUAL         [ reduce using rule 95 (term -> variables .) ]
  ! LSEQUAL         [ reduce using rule 95 (term -> variables .) ]
  ! NOTEQUAL        [ reduce using rule 95 (term -> variables .) ]
  ! END             [ reduce using rule 95 (term -> variables .) ]
  ! ELSE            [ reduce using rule 95 (term -> variables .) ]
  ! RETURN          [ reduce using rule 95 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 95 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 95 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 95 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 95 (term -> variables .) ]
  ! IDENTIFIER      [ reduce using rule 95 (term -> variables .) ]
  ! PUTS            [ reduce using rule 95 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 95 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 95 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 95 (term -> variables .) ]
  ! HASH            [ reduce using rule 95 (term -> variables .) ]
  ! FOR             [ reduce using rule 95 (term -> variables .) ]
  ! TRUE            [ reduce using rule 95 (term -> variables .) ]
  ! FALSE           [ reduce using rule 95 (term -> variables .) ]
  ! NIL             [ reduce using rule 95 (term -> variables .) ]
  ! IF              [ reduce using rule 95 (term -> variables .) ]
  ! WHILE           [ reduce using rule 95 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 95 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 95 (term -> variables .) ]
  ! NUML            [ reduce using rule 95 (term -> variables .) ]
  ! STRING          [ reduce using rule 95 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 95 (term -> variables .) ]
  ! BREAK           [ reduce using rule 95 (term -> variables .) ]
  ! ANDS            [ reduce using rule 95 (term -> variables .) ]
  ! ORS             [ reduce using rule 95 (term -> variables .) ]


state 119

    (88) expression -> expression MINUS term .

    PLUS            reduce using rule 88 (expression -> expression MINUS term .)
    MINUS           reduce using rule 88 (expression -> expression MINUS term .)
    DIVISION        reduce using rule 88 (expression -> expression MINUS term .)
    MOD             reduce using rule 88 (expression -> expression MINUS term .)
    MULT            reduce using rule 88 (expression -> expression MINUS term .)
    EXP             reduce using rule 88 (expression -> expression MINUS term .)
    $end            reduce using rule 88 (expression -> expression MINUS term .)
    COMPARE         reduce using rule 88 (expression -> expression MINUS term .)
    LESS            reduce using rule 88 (expression -> expression MINUS term .)
    GREATER         reduce using rule 88 (expression -> expression MINUS term .)
    GREQUAL         reduce using rule 88 (expression -> expression MINUS term .)
    LSEQUAL         reduce using rule 88 (expression -> expression MINUS term .)
    NOTEQUAL        reduce using rule 88 (expression -> expression MINUS term .)
    END             reduce using rule 88 (expression -> expression MINUS term .)
    ELSE            reduce using rule 88 (expression -> expression MINUS term .)
    RETURN          reduce using rule 88 (expression -> expression MINUS term .)
    IDLOCAL         reduce using rule 88 (expression -> expression MINUS term .)
    IDINSTANCE      reduce using rule 88 (expression -> expression MINUS term .)
    IDCLASS         reduce using rule 88 (expression -> expression MINUS term .)
    IDGLOBAL        reduce using rule 88 (expression -> expression MINUS term .)
    IDENTIFIER      reduce using rule 88 (expression -> expression MINUS term .)
    PUTS            reduce using rule 88 (expression -> expression MINUS term .)
    ARRAY           reduce using rule 88 (expression -> expression MINUS term .)
    LSQBRACKET      reduce using rule 88 (expression -> expression MINUS term .)
    LBRACKET        reduce using rule 88 (expression -> expression MINUS term .)
    HASH            reduce using rule 88 (expression -> expression MINUS term .)
    FOR             reduce using rule 88 (expression -> expression MINUS term .)
    TRUE            reduce using rule 88 (expression -> expression MINUS term .)
    FALSE           reduce using rule 88 (expression -> expression MINUS term .)
    NIL             reduce using rule 88 (expression -> expression MINUS term .)
    IF              reduce using rule 88 (expression -> expression MINUS term .)
    WHILE           reduce using rule 88 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 88 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 88 (expression -> expression MINUS term .)
    NUML            reduce using rule 88 (expression -> expression MINUS term .)
    STRING          reduce using rule 88 (expression -> expression MINUS term .)
    STRINGV         reduce using rule 88 (expression -> expression MINUS term .)
    BREAK           reduce using rule 88 (expression -> expression MINUS term .)
    ANDS            reduce using rule 88 (expression -> expression MINUS term .)
    ORS             reduce using rule 88 (expression -> expression MINUS term .)


state 120

    (91) expression -> expression MINUS variables .
    (95) term -> variables .

  ! reduce/reduce conflict for PLUS resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for MINUS resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for DIVISION resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for MOD resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for MULT resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for EXP resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for $end resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for COMPARE resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for LESS resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for GREATER resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for LSEQUAL resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for END resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for HASH resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for FOR resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for NIL resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IF resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for NUML resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for STRING resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for ANDS resolved using rule 91 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for ORS resolved using rule 91 (expression -> expression MINUS variables .)
    PLUS            reduce using rule 91 (expression -> expression MINUS variables .)
    MINUS           reduce using rule 91 (expression -> expression MINUS variables .)
    DIVISION        reduce using rule 91 (expression -> expression MINUS variables .)
    MOD             reduce using rule 91 (expression -> expression MINUS variables .)
    MULT            reduce using rule 91 (expression -> expression MINUS variables .)
    EXP             reduce using rule 91 (expression -> expression MINUS variables .)
    $end            reduce using rule 91 (expression -> expression MINUS variables .)
    COMPARE         reduce using rule 91 (expression -> expression MINUS variables .)
    LESS            reduce using rule 91 (expression -> expression MINUS variables .)
    GREATER         reduce using rule 91 (expression -> expression MINUS variables .)
    GREQUAL         reduce using rule 91 (expression -> expression MINUS variables .)
    LSEQUAL         reduce using rule 91 (expression -> expression MINUS variables .)
    NOTEQUAL        reduce using rule 91 (expression -> expression MINUS variables .)
    END             reduce using rule 91 (expression -> expression MINUS variables .)
    ELSE            reduce using rule 91 (expression -> expression MINUS variables .)
    RETURN          reduce using rule 91 (expression -> expression MINUS variables .)
    IDLOCAL         reduce using rule 91 (expression -> expression MINUS variables .)
    IDINSTANCE      reduce using rule 91 (expression -> expression MINUS variables .)
    IDCLASS         reduce using rule 91 (expression -> expression MINUS variables .)
    IDGLOBAL        reduce using rule 91 (expression -> expression MINUS variables .)
    IDENTIFIER      reduce using rule 91 (expression -> expression MINUS variables .)
    PUTS            reduce using rule 91 (expression -> expression MINUS variables .)
    ARRAY           reduce using rule 91 (expression -> expression MINUS variables .)
    LSQBRACKET      reduce using rule 91 (expression -> expression MINUS variables .)
    LBRACKET        reduce using rule 91 (expression -> expression MINUS variables .)
    HASH            reduce using rule 91 (expression -> expression MINUS variables .)
    FOR             reduce using rule 91 (expression -> expression MINUS variables .)
    TRUE            reduce using rule 91 (expression -> expression MINUS variables .)
    FALSE           reduce using rule 91 (expression -> expression MINUS variables .)
    NIL             reduce using rule 91 (expression -> expression MINUS variables .)
    IF              reduce using rule 91 (expression -> expression MINUS variables .)
    WHILE           reduce using rule 91 (expression -> expression MINUS variables .)
    NUMBER          reduce using rule 91 (expression -> expression MINUS variables .)
    FLOAT           reduce using rule 91 (expression -> expression MINUS variables .)
    NUML            reduce using rule 91 (expression -> expression MINUS variables .)
    STRING          reduce using rule 91 (expression -> expression MINUS variables .)
    STRINGV         reduce using rule 91 (expression -> expression MINUS variables .)
    BREAK           reduce using rule 91 (expression -> expression MINUS variables .)
    ANDS            reduce using rule 91 (expression -> expression MINUS variables .)
    ORS             reduce using rule 91 (expression -> expression MINUS variables .)

  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! DIVISION        [ reduce using rule 95 (term -> variables .) ]
  ! MOD             [ reduce using rule 95 (term -> variables .) ]
  ! MULT            [ reduce using rule 95 (term -> variables .) ]
  ! EXP             [ reduce using rule 95 (term -> variables .) ]
  ! $end            [ reduce using rule 95 (term -> variables .) ]
  ! COMPARE         [ reduce using rule 95 (term -> variables .) ]
  ! LESS            [ reduce using rule 95 (term -> variables .) ]
  ! GREATER         [ reduce using rule 95 (term -> variables .) ]
  ! GREQUAL         [ reduce using rule 95 (term -> variables .) ]
  ! LSEQUAL         [ reduce using rule 95 (term -> variables .) ]
  ! NOTEQUAL        [ reduce using rule 95 (term -> variables .) ]
  ! END             [ reduce using rule 95 (term -> variables .) ]
  ! ELSE            [ reduce using rule 95 (term -> variables .) ]
  ! RETURN          [ reduce using rule 95 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 95 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 95 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 95 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 95 (term -> variables .) ]
  ! IDENTIFIER      [ reduce using rule 95 (term -> variables .) ]
  ! PUTS            [ reduce using rule 95 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 95 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 95 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 95 (term -> variables .) ]
  ! HASH            [ reduce using rule 95 (term -> variables .) ]
  ! FOR             [ reduce using rule 95 (term -> variables .) ]
  ! TRUE            [ reduce using rule 95 (term -> variables .) ]
  ! FALSE           [ reduce using rule 95 (term -> variables .) ]
  ! NIL             [ reduce using rule 95 (term -> variables .) ]
  ! IF              [ reduce using rule 95 (term -> variables .) ]
  ! WHILE           [ reduce using rule 95 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 95 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 95 (term -> variables .) ]
  ! NUML            [ reduce using rule 95 (term -> variables .) ]
  ! STRING          [ reduce using rule 95 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 95 (term -> variables .) ]
  ! BREAK           [ reduce using rule 95 (term -> variables .) ]
  ! ANDS            [ reduce using rule 95 (term -> variables .) ]
  ! ORS             [ reduce using rule 95 (term -> variables .) ]


state 121

    (101) expression -> expression DIVISION term .

    PLUS            reduce using rule 101 (expression -> expression DIVISION term .)
    MINUS           reduce using rule 101 (expression -> expression DIVISION term .)
    DIVISION        reduce using rule 101 (expression -> expression DIVISION term .)
    MOD             reduce using rule 101 (expression -> expression DIVISION term .)
    MULT            reduce using rule 101 (expression -> expression DIVISION term .)
    EXP             reduce using rule 101 (expression -> expression DIVISION term .)
    $end            reduce using rule 101 (expression -> expression DIVISION term .)
    COMPARE         reduce using rule 101 (expression -> expression DIVISION term .)
    LESS            reduce using rule 101 (expression -> expression DIVISION term .)
    GREATER         reduce using rule 101 (expression -> expression DIVISION term .)
    GREQUAL         reduce using rule 101 (expression -> expression DIVISION term .)
    LSEQUAL         reduce using rule 101 (expression -> expression DIVISION term .)
    NOTEQUAL        reduce using rule 101 (expression -> expression DIVISION term .)
    END             reduce using rule 101 (expression -> expression DIVISION term .)
    ELSE            reduce using rule 101 (expression -> expression DIVISION term .)
    RETURN          reduce using rule 101 (expression -> expression DIVISION term .)
    IDLOCAL         reduce using rule 101 (expression -> expression DIVISION term .)
    IDINSTANCE      reduce using rule 101 (expression -> expression DIVISION term .)
    IDCLASS         reduce using rule 101 (expression -> expression DIVISION term .)
    IDGLOBAL        reduce using rule 101 (expression -> expression DIVISION term .)
    IDENTIFIER      reduce using rule 101 (expression -> expression DIVISION term .)
    PUTS            reduce using rule 101 (expression -> expression DIVISION term .)
    ARRAY           reduce using rule 101 (expression -> expression DIVISION term .)
    LSQBRACKET      reduce using rule 101 (expression -> expression DIVISION term .)
    LBRACKET        reduce using rule 101 (expression -> expression DIVISION term .)
    HASH            reduce using rule 101 (expression -> expression DIVISION term .)
    FOR             reduce using rule 101 (expression -> expression DIVISION term .)
    TRUE            reduce using rule 101 (expression -> expression DIVISION term .)
    FALSE           reduce using rule 101 (expression -> expression DIVISION term .)
    NIL             reduce using rule 101 (expression -> expression DIVISION term .)
    IF              reduce using rule 101 (expression -> expression DIVISION term .)
    WHILE           reduce using rule 101 (expression -> expression DIVISION term .)
    NUMBER          reduce using rule 101 (expression -> expression DIVISION term .)
    FLOAT           reduce using rule 101 (expression -> expression DIVISION term .)
    NUML            reduce using rule 101 (expression -> expression DIVISION term .)
    STRING          reduce using rule 101 (expression -> expression DIVISION term .)
    STRINGV         reduce using rule 101 (expression -> expression DIVISION term .)
    BREAK           reduce using rule 101 (expression -> expression DIVISION term .)
    ANDS            reduce using rule 101 (expression -> expression DIVISION term .)
    ORS             reduce using rule 101 (expression -> expression DIVISION term .)


state 122

    (95) term -> variables .

    PLUS            reduce using rule 95 (term -> variables .)
    MINUS           reduce using rule 95 (term -> variables .)
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)
    $end            reduce using rule 95 (term -> variables .)
    COMPARE         reduce using rule 95 (term -> variables .)
    LESS            reduce using rule 95 (term -> variables .)
    GREATER         reduce using rule 95 (term -> variables .)
    GREQUAL         reduce using rule 95 (term -> variables .)
    LSEQUAL         reduce using rule 95 (term -> variables .)
    NOTEQUAL        reduce using rule 95 (term -> variables .)
    END             reduce using rule 95 (term -> variables .)
    ELSE            reduce using rule 95 (term -> variables .)
    RETURN          reduce using rule 95 (term -> variables .)
    IDLOCAL         reduce using rule 95 (term -> variables .)
    IDINSTANCE      reduce using rule 95 (term -> variables .)
    IDCLASS         reduce using rule 95 (term -> variables .)
    IDGLOBAL        reduce using rule 95 (term -> variables .)
    IDENTIFIER      reduce using rule 95 (term -> variables .)
    PUTS            reduce using rule 95 (term -> variables .)
    ARRAY           reduce using rule 95 (term -> variables .)
    LSQBRACKET      reduce using rule 95 (term -> variables .)
    LBRACKET        reduce using rule 95 (term -> variables .)
    HASH            reduce using rule 95 (term -> variables .)
    FOR             reduce using rule 95 (term -> variables .)
    TRUE            reduce using rule 95 (term -> variables .)
    FALSE           reduce using rule 95 (term -> variables .)
    NIL             reduce using rule 95 (term -> variables .)
    IF              reduce using rule 95 (term -> variables .)
    WHILE           reduce using rule 95 (term -> variables .)
    NUMBER          reduce using rule 95 (term -> variables .)
    FLOAT           reduce using rule 95 (term -> variables .)
    NUML            reduce using rule 95 (term -> variables .)
    STRING          reduce using rule 95 (term -> variables .)
    STRINGV         reduce using rule 95 (term -> variables .)
    BREAK           reduce using rule 95 (term -> variables .)
    ANDS            reduce using rule 95 (term -> variables .)
    ORS             reduce using rule 95 (term -> variables .)
    RPARENTHESIS    reduce using rule 95 (term -> variables .)


state 123

    (102) expression -> expression MOD term .

    PLUS            reduce using rule 102 (expression -> expression MOD term .)
    MINUS           reduce using rule 102 (expression -> expression MOD term .)
    DIVISION        reduce using rule 102 (expression -> expression MOD term .)
    MOD             reduce using rule 102 (expression -> expression MOD term .)
    MULT            reduce using rule 102 (expression -> expression MOD term .)
    EXP             reduce using rule 102 (expression -> expression MOD term .)
    $end            reduce using rule 102 (expression -> expression MOD term .)
    COMPARE         reduce using rule 102 (expression -> expression MOD term .)
    LESS            reduce using rule 102 (expression -> expression MOD term .)
    GREATER         reduce using rule 102 (expression -> expression MOD term .)
    GREQUAL         reduce using rule 102 (expression -> expression MOD term .)
    LSEQUAL         reduce using rule 102 (expression -> expression MOD term .)
    NOTEQUAL        reduce using rule 102 (expression -> expression MOD term .)
    END             reduce using rule 102 (expression -> expression MOD term .)
    ELSE            reduce using rule 102 (expression -> expression MOD term .)
    RETURN          reduce using rule 102 (expression -> expression MOD term .)
    IDLOCAL         reduce using rule 102 (expression -> expression MOD term .)
    IDINSTANCE      reduce using rule 102 (expression -> expression MOD term .)
    IDCLASS         reduce using rule 102 (expression -> expression MOD term .)
    IDGLOBAL        reduce using rule 102 (expression -> expression MOD term .)
    IDENTIFIER      reduce using rule 102 (expression -> expression MOD term .)
    PUTS            reduce using rule 102 (expression -> expression MOD term .)
    ARRAY           reduce using rule 102 (expression -> expression MOD term .)
    LSQBRACKET      reduce using rule 102 (expression -> expression MOD term .)
    LBRACKET        reduce using rule 102 (expression -> expression MOD term .)
    HASH            reduce using rule 102 (expression -> expression MOD term .)
    FOR             reduce using rule 102 (expression -> expression MOD term .)
    TRUE            reduce using rule 102 (expression -> expression MOD term .)
    FALSE           reduce using rule 102 (expression -> expression MOD term .)
    NIL             reduce using rule 102 (expression -> expression MOD term .)
    IF              reduce using rule 102 (expression -> expression MOD term .)
    WHILE           reduce using rule 102 (expression -> expression MOD term .)
    NUMBER          reduce using rule 102 (expression -> expression MOD term .)
    FLOAT           reduce using rule 102 (expression -> expression MOD term .)
    NUML            reduce using rule 102 (expression -> expression MOD term .)
    STRING          reduce using rule 102 (expression -> expression MOD term .)
    STRINGV         reduce using rule 102 (expression -> expression MOD term .)
    BREAK           reduce using rule 102 (expression -> expression MOD term .)
    ANDS            reduce using rule 102 (expression -> expression MOD term .)
    ORS             reduce using rule 102 (expression -> expression MOD term .)


state 124

    (103) expression -> expression MULT term .

    PLUS            reduce using rule 103 (expression -> expression MULT term .)
    MINUS           reduce using rule 103 (expression -> expression MULT term .)
    DIVISION        reduce using rule 103 (expression -> expression MULT term .)
    MOD             reduce using rule 103 (expression -> expression MULT term .)
    MULT            reduce using rule 103 (expression -> expression MULT term .)
    EXP             reduce using rule 103 (expression -> expression MULT term .)
    $end            reduce using rule 103 (expression -> expression MULT term .)
    COMPARE         reduce using rule 103 (expression -> expression MULT term .)
    LESS            reduce using rule 103 (expression -> expression MULT term .)
    GREATER         reduce using rule 103 (expression -> expression MULT term .)
    GREQUAL         reduce using rule 103 (expression -> expression MULT term .)
    LSEQUAL         reduce using rule 103 (expression -> expression MULT term .)
    NOTEQUAL        reduce using rule 103 (expression -> expression MULT term .)
    END             reduce using rule 103 (expression -> expression MULT term .)
    ELSE            reduce using rule 103 (expression -> expression MULT term .)
    RETURN          reduce using rule 103 (expression -> expression MULT term .)
    IDLOCAL         reduce using rule 103 (expression -> expression MULT term .)
    IDINSTANCE      reduce using rule 103 (expression -> expression MULT term .)
    IDCLASS         reduce using rule 103 (expression -> expression MULT term .)
    IDGLOBAL        reduce using rule 103 (expression -> expression MULT term .)
    IDENTIFIER      reduce using rule 103 (expression -> expression MULT term .)
    PUTS            reduce using rule 103 (expression -> expression MULT term .)
    ARRAY           reduce using rule 103 (expression -> expression MULT term .)
    LSQBRACKET      reduce using rule 103 (expression -> expression MULT term .)
    LBRACKET        reduce using rule 103 (expression -> expression MULT term .)
    HASH            reduce using rule 103 (expression -> expression MULT term .)
    FOR             reduce using rule 103 (expression -> expression MULT term .)
    TRUE            reduce using rule 103 (expression -> expression MULT term .)
    FALSE           reduce using rule 103 (expression -> expression MULT term .)
    NIL             reduce using rule 103 (expression -> expression MULT term .)
    IF              reduce using rule 103 (expression -> expression MULT term .)
    WHILE           reduce using rule 103 (expression -> expression MULT term .)
    NUMBER          reduce using rule 103 (expression -> expression MULT term .)
    FLOAT           reduce using rule 103 (expression -> expression MULT term .)
    NUML            reduce using rule 103 (expression -> expression MULT term .)
    STRING          reduce using rule 103 (expression -> expression MULT term .)
    STRINGV         reduce using rule 103 (expression -> expression MULT term .)
    BREAK           reduce using rule 103 (expression -> expression MULT term .)
    ANDS            reduce using rule 103 (expression -> expression MULT term .)
    ORS             reduce using rule 103 (expression -> expression MULT term .)


state 125

    (104) expression -> expression EXP term .

    PLUS            reduce using rule 104 (expression -> expression EXP term .)
    MINUS           reduce using rule 104 (expression -> expression EXP term .)
    DIVISION        reduce using rule 104 (expression -> expression EXP term .)
    MOD             reduce using rule 104 (expression -> expression EXP term .)
    MULT            reduce using rule 104 (expression -> expression EXP term .)
    EXP             reduce using rule 104 (expression -> expression EXP term .)
    $end            reduce using rule 104 (expression -> expression EXP term .)
    COMPARE         reduce using rule 104 (expression -> expression EXP term .)
    LESS            reduce using rule 104 (expression -> expression EXP term .)
    GREATER         reduce using rule 104 (expression -> expression EXP term .)
    GREQUAL         reduce using rule 104 (expression -> expression EXP term .)
    LSEQUAL         reduce using rule 104 (expression -> expression EXP term .)
    NOTEQUAL        reduce using rule 104 (expression -> expression EXP term .)
    END             reduce using rule 104 (expression -> expression EXP term .)
    ELSE            reduce using rule 104 (expression -> expression EXP term .)
    RETURN          reduce using rule 104 (expression -> expression EXP term .)
    IDLOCAL         reduce using rule 104 (expression -> expression EXP term .)
    IDINSTANCE      reduce using rule 104 (expression -> expression EXP term .)
    IDCLASS         reduce using rule 104 (expression -> expression EXP term .)
    IDGLOBAL        reduce using rule 104 (expression -> expression EXP term .)
    IDENTIFIER      reduce using rule 104 (expression -> expression EXP term .)
    PUTS            reduce using rule 104 (expression -> expression EXP term .)
    ARRAY           reduce using rule 104 (expression -> expression EXP term .)
    LSQBRACKET      reduce using rule 104 (expression -> expression EXP term .)
    LBRACKET        reduce using rule 104 (expression -> expression EXP term .)
    HASH            reduce using rule 104 (expression -> expression EXP term .)
    FOR             reduce using rule 104 (expression -> expression EXP term .)
    TRUE            reduce using rule 104 (expression -> expression EXP term .)
    FALSE           reduce using rule 104 (expression -> expression EXP term .)
    NIL             reduce using rule 104 (expression -> expression EXP term .)
    IF              reduce using rule 104 (expression -> expression EXP term .)
    WHILE           reduce using rule 104 (expression -> expression EXP term .)
    NUMBER          reduce using rule 104 (expression -> expression EXP term .)
    FLOAT           reduce using rule 104 (expression -> expression EXP term .)
    NUML            reduce using rule 104 (expression -> expression EXP term .)
    STRING          reduce using rule 104 (expression -> expression EXP term .)
    STRINGV         reduce using rule 104 (expression -> expression EXP term .)
    BREAK           reduce using rule 104 (expression -> expression EXP term .)
    ANDS            reduce using rule 104 (expression -> expression EXP term .)
    ORS             reduce using rule 104 (expression -> expression EXP term .)


state 126

    (110) metodocadena -> string POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 219


state 127

    (112) metodocadena -> string POINT LENGTH .

    $end            reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    END             reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    ELSE            reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    RETURN          reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    IDLOCAL         reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    IDINSTANCE      reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    IDCLASS         reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    IDGLOBAL        reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    IDENTIFIER      reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    PUTS            reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    ARRAY           reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    LSQBRACKET      reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    LBRACKET        reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    HASH            reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    FOR             reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    TRUE            reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    FALSE           reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    NIL             reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    IF              reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    WHILE           reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    NUMBER          reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    FLOAT           reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    NUML            reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    MINUS           reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    STRING          reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    STRINGV         reduce using rule 112 (metodocadena -> string POINT LENGTH .)
    BREAK           reduce using rule 112 (metodocadena -> string POINT LENGTH .)


state 128

    (109) metodocadena -> cadena POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 220


state 129

    (111) metodocadena -> cadena POINT LENGTH .

    $end            reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    END             reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    ELSE            reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    RETURN          reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    IDLOCAL         reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    IDINSTANCE      reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    IDCLASS         reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    IDGLOBAL        reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    IDENTIFIER      reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    PUTS            reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    ARRAY           reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    LSQBRACKET      reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    LBRACKET        reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    HASH            reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    FOR             reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    TRUE            reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    FALSE           reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    NIL             reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    IF              reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    WHILE           reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    NUMBER          reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    FLOAT           reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    NUML            reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    MINUS           reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    STRING          reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    STRINGV         reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)
    BREAK           reduce using rule 111 (metodocadena -> cadena POINT LENGTH .)


state 130

    (122) metodosarreglo -> arreglo POINT INDEX . LPARENTHESIS arraycontent RPARENTHESIS

    LPARENTHESIS    shift and go to state 221


state 131

    (123) metodosarreglo -> arreglo LSQBRACKET factor . RSQBRACKET

    RSQBRACKET      shift and go to state 222


state 132

    (90) expression -> variables PLUS expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
    $end            reduce using rule 90 (expression -> variables PLUS expression .)
    COMPARE         reduce using rule 90 (expression -> variables PLUS expression .)
    LESS            reduce using rule 90 (expression -> variables PLUS expression .)
    GREATER         reduce using rule 90 (expression -> variables PLUS expression .)
    GREQUAL         reduce using rule 90 (expression -> variables PLUS expression .)
    LSEQUAL         reduce using rule 90 (expression -> variables PLUS expression .)
    NOTEQUAL        reduce using rule 90 (expression -> variables PLUS expression .)
    END             reduce using rule 90 (expression -> variables PLUS expression .)
    ELSE            reduce using rule 90 (expression -> variables PLUS expression .)
    RETURN          reduce using rule 90 (expression -> variables PLUS expression .)
    IDLOCAL         reduce using rule 90 (expression -> variables PLUS expression .)
    IDINSTANCE      reduce using rule 90 (expression -> variables PLUS expression .)
    IDCLASS         reduce using rule 90 (expression -> variables PLUS expression .)
    IDGLOBAL        reduce using rule 90 (expression -> variables PLUS expression .)
    IDENTIFIER      reduce using rule 90 (expression -> variables PLUS expression .)
    PUTS            reduce using rule 90 (expression -> variables PLUS expression .)
    ARRAY           reduce using rule 90 (expression -> variables PLUS expression .)
    LSQBRACKET      reduce using rule 90 (expression -> variables PLUS expression .)
    LBRACKET        reduce using rule 90 (expression -> variables PLUS expression .)
    HASH            reduce using rule 90 (expression -> variables PLUS expression .)
    FOR             reduce using rule 90 (expression -> variables PLUS expression .)
    TRUE            reduce using rule 90 (expression -> variables PLUS expression .)
    FALSE           reduce using rule 90 (expression -> variables PLUS expression .)
    NIL             reduce using rule 90 (expression -> variables PLUS expression .)
    IF              reduce using rule 90 (expression -> variables PLUS expression .)
    WHILE           reduce using rule 90 (expression -> variables PLUS expression .)
    NUMBER          reduce using rule 90 (expression -> variables PLUS expression .)
    FLOAT           reduce using rule 90 (expression -> variables PLUS expression .)
    NUML            reduce using rule 90 (expression -> variables PLUS expression .)
    STRING          reduce using rule 90 (expression -> variables PLUS expression .)
    STRINGV         reduce using rule 90 (expression -> variables PLUS expression .)
    BREAK           reduce using rule 90 (expression -> variables PLUS expression .)
    ANDS            reduce using rule 90 (expression -> variables PLUS expression .)
    ORS             reduce using rule 90 (expression -> variables PLUS expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63

  ! PLUS            [ reduce using rule 90 (expression -> variables PLUS expression .) ]
  ! MINUS           [ reduce using rule 90 (expression -> variables PLUS expression .) ]
  ! DIVISION        [ reduce using rule 90 (expression -> variables PLUS expression .) ]
  ! MOD             [ reduce using rule 90 (expression -> variables PLUS expression .) ]
  ! MULT            [ reduce using rule 90 (expression -> variables PLUS expression .) ]
  ! EXP             [ reduce using rule 90 (expression -> variables PLUS expression .) ]


state 133

    (92) expression -> variables MINUS expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
    $end            reduce using rule 92 (expression -> variables MINUS expression .)
    COMPARE         reduce using rule 92 (expression -> variables MINUS expression .)
    LESS            reduce using rule 92 (expression -> variables MINUS expression .)
    GREATER         reduce using rule 92 (expression -> variables MINUS expression .)
    GREQUAL         reduce using rule 92 (expression -> variables MINUS expression .)
    LSEQUAL         reduce using rule 92 (expression -> variables MINUS expression .)
    NOTEQUAL        reduce using rule 92 (expression -> variables MINUS expression .)
    END             reduce using rule 92 (expression -> variables MINUS expression .)
    ELSE            reduce using rule 92 (expression -> variables MINUS expression .)
    RETURN          reduce using rule 92 (expression -> variables MINUS expression .)
    IDLOCAL         reduce using rule 92 (expression -> variables MINUS expression .)
    IDINSTANCE      reduce using rule 92 (expression -> variables MINUS expression .)
    IDCLASS         reduce using rule 92 (expression -> variables MINUS expression .)
    IDGLOBAL        reduce using rule 92 (expression -> variables MINUS expression .)
    IDENTIFIER      reduce using rule 92 (expression -> variables MINUS expression .)
    PUTS            reduce using rule 92 (expression -> variables MINUS expression .)
    ARRAY           reduce using rule 92 (expression -> variables MINUS expression .)
    LSQBRACKET      reduce using rule 92 (expression -> variables MINUS expression .)
    LBRACKET        reduce using rule 92 (expression -> variables MINUS expression .)
    HASH            reduce using rule 92 (expression -> variables MINUS expression .)
    FOR             reduce using rule 92 (expression -> variables MINUS expression .)
    TRUE            reduce using rule 92 (expression -> variables MINUS expression .)
    FALSE           reduce using rule 92 (expression -> variables MINUS expression .)
    NIL             reduce using rule 92 (expression -> variables MINUS expression .)
    IF              reduce using rule 92 (expression -> variables MINUS expression .)
    WHILE           reduce using rule 92 (expression -> variables MINUS expression .)
    NUMBER          reduce using rule 92 (expression -> variables MINUS expression .)
    FLOAT           reduce using rule 92 (expression -> variables MINUS expression .)
    NUML            reduce using rule 92 (expression -> variables MINUS expression .)
    STRING          reduce using rule 92 (expression -> variables MINUS expression .)
    STRINGV         reduce using rule 92 (expression -> variables MINUS expression .)
    BREAK           reduce using rule 92 (expression -> variables MINUS expression .)
    ANDS            reduce using rule 92 (expression -> variables MINUS expression .)
    ORS             reduce using rule 92 (expression -> variables MINUS expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63

  ! PLUS            [ reduce using rule 92 (expression -> variables MINUS expression .) ]
  ! MINUS           [ reduce using rule 92 (expression -> variables MINUS expression .) ]
  ! DIVISION        [ reduce using rule 92 (expression -> variables MINUS expression .) ]
  ! MOD             [ reduce using rule 92 (expression -> variables MINUS expression .) ]
  ! MULT            [ reduce using rule 92 (expression -> variables MINUS expression .) ]
  ! EXP             [ reduce using rule 92 (expression -> variables MINUS expression .) ]


state 134

    (130) metodohash -> variables ASSIGN hash . POINT LENGTH

    POINT           shift and go to state 223


state 135

    (131) metodohash -> variables POINT LENGTH .

    $end            reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    END             reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    ELSE            reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    RETURN          reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    IDLOCAL         reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    IDINSTANCE      reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    IDCLASS         reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    IDGLOBAL        reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    IDENTIFIER      reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    PUTS            reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    ARRAY           reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    LSQBRACKET      reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    LBRACKET        reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    HASH            reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    FOR             reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    TRUE            reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    FALSE           reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    NIL             reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    IF              reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    WHILE           reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    NUMBER          reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    FLOAT           reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    NUML            reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    MINUS           reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    STRING          reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    STRINGV         reduce using rule 131 (metodohash -> variables POINT LENGTH .)
    BREAK           reduce using rule 131 (metodohash -> variables POINT LENGTH .)


state 136

    (84) assigns -> variables ASSIGNPLUS variables .
    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression
    (95) term -> variables .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for END resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for HASH resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for FOR resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for NIL resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IF resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for NUML resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for STRING resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    $end            reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    END             reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    ELSE            reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    RETURN          reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    IDLOCAL         reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    IDINSTANCE      reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    IDCLASS         reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    IDGLOBAL        reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    IDENTIFIER      reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    PUTS            reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    ARRAY           reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    LSQBRACKET      reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    LBRACKET        reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    HASH            reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    FOR             reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    TRUE            reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    FALSE           reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    NIL             reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    IF              reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    WHILE           reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    NUMBER          reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    FLOAT           reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    NUML            reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    STRING          reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    STRINGV         reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    BREAK           reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)

  ! MINUS           [ reduce using rule 84 (assigns -> variables ASSIGNPLUS variables .) ]
  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! $end            [ reduce using rule 95 (term -> variables .) ]
  ! END             [ reduce using rule 95 (term -> variables .) ]
  ! ELSE            [ reduce using rule 95 (term -> variables .) ]
  ! RETURN          [ reduce using rule 95 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 95 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 95 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 95 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 95 (term -> variables .) ]
  ! IDENTIFIER      [ reduce using rule 95 (term -> variables .) ]
  ! PUTS            [ reduce using rule 95 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 95 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 95 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 95 (term -> variables .) ]
  ! HASH            [ reduce using rule 95 (term -> variables .) ]
  ! FOR             [ reduce using rule 95 (term -> variables .) ]
  ! TRUE            [ reduce using rule 95 (term -> variables .) ]
  ! FALSE           [ reduce using rule 95 (term -> variables .) ]
  ! NIL             [ reduce using rule 95 (term -> variables .) ]
  ! IF              [ reduce using rule 95 (term -> variables .) ]
  ! WHILE           [ reduce using rule 95 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 95 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 95 (term -> variables .) ]
  ! NUML            [ reduce using rule 95 (term -> variables .) ]
  ! STRING          [ reduce using rule 95 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 95 (term -> variables .) ]
  ! BREAK           [ reduce using rule 95 (term -> variables .) ]


state 137

    (83) assigns -> variables ASSIGNPLUS expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    END             reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    ELSE            reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    RETURN          reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    IDLOCAL         reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    IDINSTANCE      reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    IDCLASS         reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    IDGLOBAL        reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    IDENTIFIER      reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    PUTS            reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    ARRAY           reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    LSQBRACKET      reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    LBRACKET        reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    HASH            reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    FOR             reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    TRUE            reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    FALSE           reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    NIL             reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    IF              reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    WHILE           reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    NUMBER          reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    FLOAT           reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    NUML            reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    STRING          reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    STRINGV         reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    BREAK           reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63

  ! MINUS           [ reduce using rule 83 (assigns -> variables ASSIGNPLUS expression .) ]


state 138

    (86) assigns -> variables ASSIGNMIN variables .
    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression
    (95) term -> variables .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for END resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for HASH resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for FOR resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for NIL resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IF resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for NUML resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for STRING resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 86 (assigns -> variables ASSIGNMIN variables .)
    $end            reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    END             reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    ELSE            reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    RETURN          reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    IDLOCAL         reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    IDINSTANCE      reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    IDCLASS         reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    IDGLOBAL        reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    IDENTIFIER      reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    PUTS            reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    ARRAY           reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    LSQBRACKET      reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    LBRACKET        reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    HASH            reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    FOR             reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    TRUE            reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    FALSE           reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    NIL             reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    IF              reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    WHILE           reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    NUMBER          reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    FLOAT           reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    NUML            reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    STRING          reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    STRINGV         reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    BREAK           reduce using rule 86 (assigns -> variables ASSIGNMIN variables .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)

  ! MINUS           [ reduce using rule 86 (assigns -> variables ASSIGNMIN variables .) ]
  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! $end            [ reduce using rule 95 (term -> variables .) ]
  ! END             [ reduce using rule 95 (term -> variables .) ]
  ! ELSE            [ reduce using rule 95 (term -> variables .) ]
  ! RETURN          [ reduce using rule 95 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 95 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 95 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 95 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 95 (term -> variables .) ]
  ! IDENTIFIER      [ reduce using rule 95 (term -> variables .) ]
  ! PUTS            [ reduce using rule 95 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 95 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 95 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 95 (term -> variables .) ]
  ! HASH            [ reduce using rule 95 (term -> variables .) ]
  ! FOR             [ reduce using rule 95 (term -> variables .) ]
  ! TRUE            [ reduce using rule 95 (term -> variables .) ]
  ! FALSE           [ reduce using rule 95 (term -> variables .) ]
  ! NIL             [ reduce using rule 95 (term -> variables .) ]
  ! IF              [ reduce using rule 95 (term -> variables .) ]
  ! WHILE           [ reduce using rule 95 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 95 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 95 (term -> variables .) ]
  ! NUML            [ reduce using rule 95 (term -> variables .) ]
  ! STRING          [ reduce using rule 95 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 95 (term -> variables .) ]
  ! BREAK           [ reduce using rule 95 (term -> variables .) ]


state 139

    (85) assigns -> variables ASSIGNMIN expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    END             reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    ELSE            reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    RETURN          reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    IDLOCAL         reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    IDINSTANCE      reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    IDCLASS         reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    IDGLOBAL        reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    IDENTIFIER      reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    PUTS            reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    ARRAY           reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    LSQBRACKET      reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    LBRACKET        reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    HASH            reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    FOR             reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    TRUE            reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    FALSE           reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    NIL             reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    IF              reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    WHILE           reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    NUMBER          reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    FLOAT           reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    NUML            reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    STRING          reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    STRINGV         reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    BREAK           reduce using rule 85 (assigns -> variables ASSIGNMIN expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63

  ! MINUS           [ reduce using rule 85 (assigns -> variables ASSIGNMIN expression .) ]


state 140

    (170) reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .
    (170) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ORS reglaSemanticaComparaciones

  ! shift/reduce conflict for ANDS resolved as shift
  ! shift/reduce conflict for ORS resolved as shift
    $end            reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    END             reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    ELSE            reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    RETURN          reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    IDLOCAL         reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    IDINSTANCE      reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    IDCLASS         reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    IDGLOBAL        reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    IDENTIFIER      reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    PUTS            reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    ARRAY           reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    LSQBRACKET      reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    LBRACKET        reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    HASH            reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    FOR             reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    TRUE            reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    FALSE           reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    NIL             reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    IF              reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    WHILE           reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    NUMBER          reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    FLOAT           reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    NUML            reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    MINUS           reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    STRING          reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    STRINGV         reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    BREAK           reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .)
    ANDS            shift and go to state 74
    ORS             shift and go to state 75

  ! ANDS            [ reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .) ]
  ! ORS             [ reduce using rule 170 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones .) ]


state 141

    (159) value2 -> variables .
    (95) term -> variables .
    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression

  ! reduce/reduce conflict for COMPARE resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LESS resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREATER resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LSEQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for MINUS resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for ANDS resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for ORS resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for $end resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for END resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 95 (term -> variables .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMPARE         reduce using rule 95 (term -> variables .)
    LESS            reduce using rule 95 (term -> variables .)
    GREATER         reduce using rule 95 (term -> variables .)
    GREQUAL         reduce using rule 95 (term -> variables .)
    LSEQUAL         reduce using rule 95 (term -> variables .)
    NOTEQUAL        reduce using rule 95 (term -> variables .)
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)
    ANDS            reduce using rule 95 (term -> variables .)
    ORS             reduce using rule 95 (term -> variables .)
    $end            reduce using rule 95 (term -> variables .)
    END             reduce using rule 95 (term -> variables .)
    ELSE            reduce using rule 95 (term -> variables .)
    RETURN          reduce using rule 95 (term -> variables .)
    IDLOCAL         reduce using rule 95 (term -> variables .)
    IDINSTANCE      reduce using rule 95 (term -> variables .)
    IDCLASS         reduce using rule 95 (term -> variables .)
    IDGLOBAL        reduce using rule 95 (term -> variables .)
    IDENTIFIER      reduce using rule 95 (term -> variables .)
    PUTS            reduce using rule 95 (term -> variables .)
    ARRAY           reduce using rule 95 (term -> variables .)
    LSQBRACKET      reduce using rule 95 (term -> variables .)
    LBRACKET        reduce using rule 95 (term -> variables .)
    HASH            reduce using rule 95 (term -> variables .)
    FOR             reduce using rule 95 (term -> variables .)
    TRUE            reduce using rule 95 (term -> variables .)
    FALSE           reduce using rule 95 (term -> variables .)
    NIL             reduce using rule 95 (term -> variables .)
    IF              reduce using rule 95 (term -> variables .)
    WHILE           reduce using rule 95 (term -> variables .)
    NUMBER          reduce using rule 95 (term -> variables .)
    FLOAT           reduce using rule 95 (term -> variables .)
    NUML            reduce using rule 95 (term -> variables .)
    STRING          reduce using rule 95 (term -> variables .)
    STRINGV         reduce using rule 95 (term -> variables .)
    BREAK           reduce using rule 95 (term -> variables .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69

  ! COMPARE         [ reduce using rule 159 (value2 -> variables .) ]
  ! LESS            [ reduce using rule 159 (value2 -> variables .) ]
  ! GREATER         [ reduce using rule 159 (value2 -> variables .) ]
  ! GREQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! LSEQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! NOTEQUAL        [ reduce using rule 159 (value2 -> variables .) ]
  ! ANDS            [ reduce using rule 159 (value2 -> variables .) ]
  ! ORS             [ reduce using rule 159 (value2 -> variables .) ]
  ! $end            [ reduce using rule 159 (value2 -> variables .) ]
  ! END             [ reduce using rule 159 (value2 -> variables .) ]
  ! ELSE            [ reduce using rule 159 (value2 -> variables .) ]
  ! RETURN          [ reduce using rule 159 (value2 -> variables .) ]
  ! IDLOCAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 159 (value2 -> variables .) ]
  ! IDCLASS         [ reduce using rule 159 (value2 -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 159 (value2 -> variables .) ]
  ! IDENTIFIER      [ reduce using rule 159 (value2 -> variables .) ]
  ! PUTS            [ reduce using rule 159 (value2 -> variables .) ]
  ! ARRAY           [ reduce using rule 159 (value2 -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 159 (value2 -> variables .) ]
  ! LBRACKET        [ reduce using rule 159 (value2 -> variables .) ]
  ! HASH            [ reduce using rule 159 (value2 -> variables .) ]
  ! FOR             [ reduce using rule 159 (value2 -> variables .) ]
  ! TRUE            [ reduce using rule 159 (value2 -> variables .) ]
  ! FALSE           [ reduce using rule 159 (value2 -> variables .) ]
  ! NIL             [ reduce using rule 159 (value2 -> variables .) ]
  ! IF              [ reduce using rule 159 (value2 -> variables .) ]
  ! WHILE           [ reduce using rule 159 (value2 -> variables .) ]
  ! NUMBER          [ reduce using rule 159 (value2 -> variables .) ]
  ! FLOAT           [ reduce using rule 159 (value2 -> variables .) ]
  ! NUML            [ reduce using rule 159 (value2 -> variables .) ]
  ! MINUS           [ reduce using rule 159 (value2 -> variables .) ]
  ! STRING          [ reduce using rule 159 (value2 -> variables .) ]
  ! STRINGV         [ reduce using rule 159 (value2 -> variables .) ]
  ! BREAK           [ reduce using rule 159 (value2 -> variables .) ]
  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]


state 142

    (160) value2 -> boolean .

    COMPARE         reduce using rule 160 (value2 -> boolean .)
    LESS            reduce using rule 160 (value2 -> boolean .)
    GREATER         reduce using rule 160 (value2 -> boolean .)
    GREQUAL         reduce using rule 160 (value2 -> boolean .)
    LSEQUAL         reduce using rule 160 (value2 -> boolean .)
    NOTEQUAL        reduce using rule 160 (value2 -> boolean .)
    ANDS            reduce using rule 160 (value2 -> boolean .)
    ORS             reduce using rule 160 (value2 -> boolean .)
    $end            reduce using rule 160 (value2 -> boolean .)
    END             reduce using rule 160 (value2 -> boolean .)
    ELSE            reduce using rule 160 (value2 -> boolean .)
    RETURN          reduce using rule 160 (value2 -> boolean .)
    IDLOCAL         reduce using rule 160 (value2 -> boolean .)
    IDINSTANCE      reduce using rule 160 (value2 -> boolean .)
    IDCLASS         reduce using rule 160 (value2 -> boolean .)
    IDGLOBAL        reduce using rule 160 (value2 -> boolean .)
    IDENTIFIER      reduce using rule 160 (value2 -> boolean .)
    PUTS            reduce using rule 160 (value2 -> boolean .)
    ARRAY           reduce using rule 160 (value2 -> boolean .)
    LSQBRACKET      reduce using rule 160 (value2 -> boolean .)
    LBRACKET        reduce using rule 160 (value2 -> boolean .)
    HASH            reduce using rule 160 (value2 -> boolean .)
    FOR             reduce using rule 160 (value2 -> boolean .)
    TRUE            reduce using rule 160 (value2 -> boolean .)
    FALSE           reduce using rule 160 (value2 -> boolean .)
    NIL             reduce using rule 160 (value2 -> boolean .)
    IF              reduce using rule 160 (value2 -> boolean .)
    WHILE           reduce using rule 160 (value2 -> boolean .)
    NUMBER          reduce using rule 160 (value2 -> boolean .)
    FLOAT           reduce using rule 160 (value2 -> boolean .)
    NUML            reduce using rule 160 (value2 -> boolean .)
    MINUS           reduce using rule 160 (value2 -> boolean .)
    STRING          reduce using rule 160 (value2 -> boolean .)
    STRINGV         reduce using rule 160 (value2 -> boolean .)
    BREAK           reduce using rule 160 (value2 -> boolean .)


state 143

    (161) value2 -> term .
    (93) expression -> term .

  ! reduce/reduce conflict for MINUS resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for COMPARE resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for LESS resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for GREATER resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for LSEQUAL resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for ANDS resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for ORS resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for $end resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for END resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for ELSE resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for RETURN resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for PUTS resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for ARRAY resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for HASH resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for FOR resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for TRUE resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for FALSE resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for NIL resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for IF resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for WHILE resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for NUMBER resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for FLOAT resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for NUML resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for STRING resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for STRINGV resolved using rule 93 (expression -> term .)
  ! reduce/reduce conflict for BREAK resolved using rule 93 (expression -> term .)
    PLUS            reduce using rule 93 (expression -> term .)
    MINUS           reduce using rule 93 (expression -> term .)
    DIVISION        reduce using rule 93 (expression -> term .)
    MOD             reduce using rule 93 (expression -> term .)
    MULT            reduce using rule 93 (expression -> term .)
    EXP             reduce using rule 93 (expression -> term .)
    COMPARE         reduce using rule 93 (expression -> term .)
    LESS            reduce using rule 93 (expression -> term .)
    GREATER         reduce using rule 93 (expression -> term .)
    GREQUAL         reduce using rule 93 (expression -> term .)
    LSEQUAL         reduce using rule 93 (expression -> term .)
    NOTEQUAL        reduce using rule 93 (expression -> term .)
    ANDS            reduce using rule 93 (expression -> term .)
    ORS             reduce using rule 93 (expression -> term .)
    $end            reduce using rule 93 (expression -> term .)
    END             reduce using rule 93 (expression -> term .)
    ELSE            reduce using rule 93 (expression -> term .)
    RETURN          reduce using rule 93 (expression -> term .)
    IDLOCAL         reduce using rule 93 (expression -> term .)
    IDINSTANCE      reduce using rule 93 (expression -> term .)
    IDCLASS         reduce using rule 93 (expression -> term .)
    IDGLOBAL        reduce using rule 93 (expression -> term .)
    IDENTIFIER      reduce using rule 93 (expression -> term .)
    PUTS            reduce using rule 93 (expression -> term .)
    ARRAY           reduce using rule 93 (expression -> term .)
    LSQBRACKET      reduce using rule 93 (expression -> term .)
    LBRACKET        reduce using rule 93 (expression -> term .)
    HASH            reduce using rule 93 (expression -> term .)
    FOR             reduce using rule 93 (expression -> term .)
    TRUE            reduce using rule 93 (expression -> term .)
    FALSE           reduce using rule 93 (expression -> term .)
    NIL             reduce using rule 93 (expression -> term .)
    IF              reduce using rule 93 (expression -> term .)
    WHILE           reduce using rule 93 (expression -> term .)
    NUMBER          reduce using rule 93 (expression -> term .)
    FLOAT           reduce using rule 93 (expression -> term .)
    NUML            reduce using rule 93 (expression -> term .)
    STRING          reduce using rule 93 (expression -> term .)
    STRINGV         reduce using rule 93 (expression -> term .)
    BREAK           reduce using rule 93 (expression -> term .)

  ! COMPARE         [ reduce using rule 161 (value2 -> term .) ]
  ! LESS            [ reduce using rule 161 (value2 -> term .) ]
  ! GREATER         [ reduce using rule 161 (value2 -> term .) ]
  ! GREQUAL         [ reduce using rule 161 (value2 -> term .) ]
  ! LSEQUAL         [ reduce using rule 161 (value2 -> term .) ]
  ! NOTEQUAL        [ reduce using rule 161 (value2 -> term .) ]
  ! ANDS            [ reduce using rule 161 (value2 -> term .) ]
  ! ORS             [ reduce using rule 161 (value2 -> term .) ]
  ! $end            [ reduce using rule 161 (value2 -> term .) ]
  ! END             [ reduce using rule 161 (value2 -> term .) ]
  ! ELSE            [ reduce using rule 161 (value2 -> term .) ]
  ! RETURN          [ reduce using rule 161 (value2 -> term .) ]
  ! IDLOCAL         [ reduce using rule 161 (value2 -> term .) ]
  ! IDINSTANCE      [ reduce using rule 161 (value2 -> term .) ]
  ! IDCLASS         [ reduce using rule 161 (value2 -> term .) ]
  ! IDGLOBAL        [ reduce using rule 161 (value2 -> term .) ]
  ! IDENTIFIER      [ reduce using rule 161 (value2 -> term .) ]
  ! PUTS            [ reduce using rule 161 (value2 -> term .) ]
  ! ARRAY           [ reduce using rule 161 (value2 -> term .) ]
  ! LSQBRACKET      [ reduce using rule 161 (value2 -> term .) ]
  ! LBRACKET        [ reduce using rule 161 (value2 -> term .) ]
  ! HASH            [ reduce using rule 161 (value2 -> term .) ]
  ! FOR             [ reduce using rule 161 (value2 -> term .) ]
  ! TRUE            [ reduce using rule 161 (value2 -> term .) ]
  ! FALSE           [ reduce using rule 161 (value2 -> term .) ]
  ! NIL             [ reduce using rule 161 (value2 -> term .) ]
  ! IF              [ reduce using rule 161 (value2 -> term .) ]
  ! WHILE           [ reduce using rule 161 (value2 -> term .) ]
  ! NUMBER          [ reduce using rule 161 (value2 -> term .) ]
  ! FLOAT           [ reduce using rule 161 (value2 -> term .) ]
  ! NUML            [ reduce using rule 161 (value2 -> term .) ]
  ! MINUS           [ reduce using rule 161 (value2 -> term .) ]
  ! STRING          [ reduce using rule 161 (value2 -> term .) ]
  ! STRINGV         [ reduce using rule 161 (value2 -> term .) ]
  ! BREAK           [ reduce using rule 161 (value2 -> term .) ]


state 144

    (162) value2 -> expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term

  ! shift/reduce conflict for MINUS resolved as shift
    COMPARE         reduce using rule 162 (value2 -> expression .)
    LESS            reduce using rule 162 (value2 -> expression .)
    GREATER         reduce using rule 162 (value2 -> expression .)
    GREQUAL         reduce using rule 162 (value2 -> expression .)
    LSEQUAL         reduce using rule 162 (value2 -> expression .)
    NOTEQUAL        reduce using rule 162 (value2 -> expression .)
    ANDS            reduce using rule 162 (value2 -> expression .)
    ORS             reduce using rule 162 (value2 -> expression .)
    $end            reduce using rule 162 (value2 -> expression .)
    END             reduce using rule 162 (value2 -> expression .)
    ELSE            reduce using rule 162 (value2 -> expression .)
    RETURN          reduce using rule 162 (value2 -> expression .)
    IDLOCAL         reduce using rule 162 (value2 -> expression .)
    IDINSTANCE      reduce using rule 162 (value2 -> expression .)
    IDCLASS         reduce using rule 162 (value2 -> expression .)
    IDGLOBAL        reduce using rule 162 (value2 -> expression .)
    IDENTIFIER      reduce using rule 162 (value2 -> expression .)
    PUTS            reduce using rule 162 (value2 -> expression .)
    ARRAY           reduce using rule 162 (value2 -> expression .)
    LSQBRACKET      reduce using rule 162 (value2 -> expression .)
    LBRACKET        reduce using rule 162 (value2 -> expression .)
    HASH            reduce using rule 162 (value2 -> expression .)
    FOR             reduce using rule 162 (value2 -> expression .)
    TRUE            reduce using rule 162 (value2 -> expression .)
    FALSE           reduce using rule 162 (value2 -> expression .)
    NIL             reduce using rule 162 (value2 -> expression .)
    IF              reduce using rule 162 (value2 -> expression .)
    WHILE           reduce using rule 162 (value2 -> expression .)
    NUMBER          reduce using rule 162 (value2 -> expression .)
    FLOAT           reduce using rule 162 (value2 -> expression .)
    NUML            reduce using rule 162 (value2 -> expression .)
    STRING          reduce using rule 162 (value2 -> expression .)
    STRINGV         reduce using rule 162 (value2 -> expression .)
    BREAK           reduce using rule 162 (value2 -> expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63

  ! MINUS           [ reduce using rule 162 (value2 -> expression .) ]


state 145

    (163) value2 -> cadena .

    COMPARE         reduce using rule 163 (value2 -> cadena .)
    LESS            reduce using rule 163 (value2 -> cadena .)
    GREATER         reduce using rule 163 (value2 -> cadena .)
    GREQUAL         reduce using rule 163 (value2 -> cadena .)
    LSEQUAL         reduce using rule 163 (value2 -> cadena .)
    NOTEQUAL        reduce using rule 163 (value2 -> cadena .)
    ANDS            reduce using rule 163 (value2 -> cadena .)
    ORS             reduce using rule 163 (value2 -> cadena .)
    $end            reduce using rule 163 (value2 -> cadena .)
    END             reduce using rule 163 (value2 -> cadena .)
    ELSE            reduce using rule 163 (value2 -> cadena .)
    RETURN          reduce using rule 163 (value2 -> cadena .)
    IDLOCAL         reduce using rule 163 (value2 -> cadena .)
    IDINSTANCE      reduce using rule 163 (value2 -> cadena .)
    IDCLASS         reduce using rule 163 (value2 -> cadena .)
    IDGLOBAL        reduce using rule 163 (value2 -> cadena .)
    IDENTIFIER      reduce using rule 163 (value2 -> cadena .)
    PUTS            reduce using rule 163 (value2 -> cadena .)
    ARRAY           reduce using rule 163 (value2 -> cadena .)
    LSQBRACKET      reduce using rule 163 (value2 -> cadena .)
    LBRACKET        reduce using rule 163 (value2 -> cadena .)
    HASH            reduce using rule 163 (value2 -> cadena .)
    FOR             reduce using rule 163 (value2 -> cadena .)
    TRUE            reduce using rule 163 (value2 -> cadena .)
    FALSE           reduce using rule 163 (value2 -> cadena .)
    NIL             reduce using rule 163 (value2 -> cadena .)
    IF              reduce using rule 163 (value2 -> cadena .)
    WHILE           reduce using rule 163 (value2 -> cadena .)
    NUMBER          reduce using rule 163 (value2 -> cadena .)
    FLOAT           reduce using rule 163 (value2 -> cadena .)
    NUML            reduce using rule 163 (value2 -> cadena .)
    MINUS           reduce using rule 163 (value2 -> cadena .)
    STRING          reduce using rule 163 (value2 -> cadena .)
    STRINGV         reduce using rule 163 (value2 -> cadena .)
    BREAK           reduce using rule 163 (value2 -> cadena .)


state 146

    (171) reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .
    (170) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ORS reglaSemanticaComparaciones

  ! shift/reduce conflict for ANDS resolved as shift
  ! shift/reduce conflict for ORS resolved as shift
    $end            reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    END             reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    ELSE            reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    RETURN          reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    IDLOCAL         reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    IDINSTANCE      reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    IDCLASS         reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    IDGLOBAL        reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    IDENTIFIER      reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    PUTS            reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    ARRAY           reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    LSQBRACKET      reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    LBRACKET        reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    HASH            reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    FOR             reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    TRUE            reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    FALSE           reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    NIL             reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    IF              reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    WHILE           reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    NUMBER          reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    FLOAT           reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    NUML            reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    MINUS           reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    STRING          reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    STRINGV         reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    BREAK           reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .)
    ANDS            shift and go to state 74
    ORS             shift and go to state 75

  ! ANDS            [ reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .) ]
  ! ORS             [ reduce using rule 171 (reglaSemanticaComparaciones -> reglaSemanticaComparaciones ORS reglaSemanticaComparaciones .) ]


state 147

    (106) cadena -> STRING POINT NEW .
    (107) cadena -> STRING POINT NEW . LPARENTHESIS string RPARENTHESIS

    POINT           reduce using rule 106 (cadena -> STRING POINT NEW .)
    $end            reduce using rule 106 (cadena -> STRING POINT NEW .)
    COMPARE         reduce using rule 106 (cadena -> STRING POINT NEW .)
    LESS            reduce using rule 106 (cadena -> STRING POINT NEW .)
    GREATER         reduce using rule 106 (cadena -> STRING POINT NEW .)
    GREQUAL         reduce using rule 106 (cadena -> STRING POINT NEW .)
    LSEQUAL         reduce using rule 106 (cadena -> STRING POINT NEW .)
    NOTEQUAL        reduce using rule 106 (cadena -> STRING POINT NEW .)
    END             reduce using rule 106 (cadena -> STRING POINT NEW .)
    ELSE            reduce using rule 106 (cadena -> STRING POINT NEW .)
    RETURN          reduce using rule 106 (cadena -> STRING POINT NEW .)
    IDLOCAL         reduce using rule 106 (cadena -> STRING POINT NEW .)
    IDINSTANCE      reduce using rule 106 (cadena -> STRING POINT NEW .)
    IDCLASS         reduce using rule 106 (cadena -> STRING POINT NEW .)
    IDGLOBAL        reduce using rule 106 (cadena -> STRING POINT NEW .)
    IDENTIFIER      reduce using rule 106 (cadena -> STRING POINT NEW .)
    PUTS            reduce using rule 106 (cadena -> STRING POINT NEW .)
    ARRAY           reduce using rule 106 (cadena -> STRING POINT NEW .)
    LSQBRACKET      reduce using rule 106 (cadena -> STRING POINT NEW .)
    LBRACKET        reduce using rule 106 (cadena -> STRING POINT NEW .)
    HASH            reduce using rule 106 (cadena -> STRING POINT NEW .)
    FOR             reduce using rule 106 (cadena -> STRING POINT NEW .)
    TRUE            reduce using rule 106 (cadena -> STRING POINT NEW .)
    FALSE           reduce using rule 106 (cadena -> STRING POINT NEW .)
    NIL             reduce using rule 106 (cadena -> STRING POINT NEW .)
    IF              reduce using rule 106 (cadena -> STRING POINT NEW .)
    WHILE           reduce using rule 106 (cadena -> STRING POINT NEW .)
    NUMBER          reduce using rule 106 (cadena -> STRING POINT NEW .)
    FLOAT           reduce using rule 106 (cadena -> STRING POINT NEW .)
    NUML            reduce using rule 106 (cadena -> STRING POINT NEW .)
    MINUS           reduce using rule 106 (cadena -> STRING POINT NEW .)
    STRING          reduce using rule 106 (cadena -> STRING POINT NEW .)
    STRINGV         reduce using rule 106 (cadena -> STRING POINT NEW .)
    BREAK           reduce using rule 106 (cadena -> STRING POINT NEW .)
    ANDS            reduce using rule 106 (cadena -> STRING POINT NEW .)
    ORS             reduce using rule 106 (cadena -> STRING POINT NEW .)
    RPARENTHESIS    reduce using rule 106 (cadena -> STRING POINT NEW .)
    LPARENTHESIS    shift and go to state 224


state 148

    (108) cadena -> STRING LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 225


state 149

    (174) metodocadena -> PUTS cadena POINT . LENGTH
    (172) metodocadenaSemantica -> PUTS cadena POINT . EMPTY INTERROGATIVE

    LENGTH          shift and go to state 226
    EMPTY           shift and go to state 227


state 150

    (175) metodocadena -> PUTS string POINT . LENGTH
    (173) metodocadenaSemantica -> PUTS string POINT . EMPTY INTERROGATIVE

    LENGTH          shift and go to state 228
    EMPTY           shift and go to state 229


state 151

    (113) arreglo -> ARRAY POINT NEW .
    (114) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    POINT           reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    LSQBRACKET      reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    $end            reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    END             reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    ELSE            reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    RETURN          reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    IDLOCAL         reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    IDINSTANCE      reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    IDCLASS         reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    IDGLOBAL        reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    IDENTIFIER      reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    PUTS            reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    ARRAY           reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    LBRACKET        reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    HASH            reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    FOR             reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    TRUE            reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    FALSE           reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    NIL             reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    IF              reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    WHILE           reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    NUMBER          reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    FLOAT           reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    NUML            reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    MINUS           reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    STRING          reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    STRINGV         reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    BREAK           reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    RPARENTHESIS    reduce using rule 113 (arreglo -> ARRAY POINT NEW .)
    LPARENTHESIS    shift and go to state 230


state 152

    (116) arreglo -> ARRAY LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 231


state 153

    (117) arreglo -> LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    END             reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    ELSE            reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    RETURN          reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDLOCAL         reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDINSTANCE      reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDCLASS         reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDGLOBAL        reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDENTIFIER      reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    PUTS            reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    ARRAY           reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    LBRACKET        reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    HASH            reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    FOR             reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    TRUE            reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    FALSE           reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    NIL             reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IF              reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    WHILE           reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    NUMBER          reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    FLOAT           reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    NUML            reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    MINUS           reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    STRING          reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    STRINGV         reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    BREAK           reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    RPARENTHESIS    reduce using rule 117 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)


state 154

    (120) arraycontent -> factor COMMA . arraycontent
    (118) arraycontent -> . factor
    (119) arraycontent -> . string
    (120) arraycontent -> . factor COMMA arraycontent
    (121) arraycontent -> . string COMMA arraycontent
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (105) string -> . STRINGV

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    STRINGV         shift and go to state 32

    factor                         shift and go to state 93
    arraycontent                   shift and go to state 232
    string                         shift and go to state 94

state 155

    (121) arraycontent -> string COMMA . arraycontent
    (118) arraycontent -> . factor
    (119) arraycontent -> . string
    (120) arraycontent -> . factor COMMA arraycontent
    (121) arraycontent -> . string COMMA arraycontent
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (105) string -> . STRINGV

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    STRINGV         shift and go to state 32

    string                         shift and go to state 94
    arraycontent                   shift and go to state 233
    factor                         shift and go to state 93

state 156

    (124) hash -> LBRACKET hashcontent RBRACKET .

    $end            reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    POINT           reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    END             reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    ELSE            reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    RETURN          reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    IDLOCAL         reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    IDINSTANCE      reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    IDCLASS         reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    IDGLOBAL        reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    IDENTIFIER      reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    PUTS            reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    ARRAY           reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    LSQBRACKET      reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    LBRACKET        reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    HASH            reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    FOR             reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    TRUE            reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    FALSE           reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    NIL             reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    IF              reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    WHILE           reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    NUMBER          reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    FLOAT           reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    NUML            reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    MINUS           reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    STRING          reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    STRINGV         reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)
    BREAK           reduce using rule 124 (hash -> LBRACKET hashcontent RBRACKET .)


state 157

    (126) hashcontent -> string ASSIGN . GREATER hashcontentvalue
    (127) hashcontent -> string ASSIGN . GREATER hashcontentvalue COMMA hashcontent

    GREATER         shift and go to state 234


state 158

    (125) hash -> HASH POINT NEW .

    $end            reduce using rule 125 (hash -> HASH POINT NEW .)
    POINT           reduce using rule 125 (hash -> HASH POINT NEW .)
    END             reduce using rule 125 (hash -> HASH POINT NEW .)
    ELSE            reduce using rule 125 (hash -> HASH POINT NEW .)
    RETURN          reduce using rule 125 (hash -> HASH POINT NEW .)
    IDLOCAL         reduce using rule 125 (hash -> HASH POINT NEW .)
    IDINSTANCE      reduce using rule 125 (hash -> HASH POINT NEW .)
    IDCLASS         reduce using rule 125 (hash -> HASH POINT NEW .)
    IDGLOBAL        reduce using rule 125 (hash -> HASH POINT NEW .)
    IDENTIFIER      reduce using rule 125 (hash -> HASH POINT NEW .)
    PUTS            reduce using rule 125 (hash -> HASH POINT NEW .)
    ARRAY           reduce using rule 125 (hash -> HASH POINT NEW .)
    LSQBRACKET      reduce using rule 125 (hash -> HASH POINT NEW .)
    LBRACKET        reduce using rule 125 (hash -> HASH POINT NEW .)
    HASH            reduce using rule 125 (hash -> HASH POINT NEW .)
    FOR             reduce using rule 125 (hash -> HASH POINT NEW .)
    TRUE            reduce using rule 125 (hash -> HASH POINT NEW .)
    FALSE           reduce using rule 125 (hash -> HASH POINT NEW .)
    NIL             reduce using rule 125 (hash -> HASH POINT NEW .)
    IF              reduce using rule 125 (hash -> HASH POINT NEW .)
    WHILE           reduce using rule 125 (hash -> HASH POINT NEW .)
    NUMBER          reduce using rule 125 (hash -> HASH POINT NEW .)
    FLOAT           reduce using rule 125 (hash -> HASH POINT NEW .)
    NUML            reduce using rule 125 (hash -> HASH POINT NEW .)
    MINUS           reduce using rule 125 (hash -> HASH POINT NEW .)
    STRING          reduce using rule 125 (hash -> HASH POINT NEW .)
    STRINGV         reduce using rule 125 (hash -> HASH POINT NEW .)
    BREAK           reduce using rule 125 (hash -> HASH POINT NEW .)


state 159

    (177) getsr -> IDLOCAL ASSIGN GETS .

    $end            reduce using rule 177 (getsr -> IDLOCAL ASSIGN GETS .)


state 160

    (64) assigns -> IDLOCAL ASSIGN expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term
    (3) asignar -> expression .
    (162) value2 -> expression .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for END resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for PUTS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ARRAY resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for HASH resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NIL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUML resolved using rule 3 (asignar -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for STRINGV resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for BREAK resolved using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63
    $end            reduce using rule 3 (asignar -> expression .)
    END             reduce using rule 3 (asignar -> expression .)
    ELSE            reduce using rule 3 (asignar -> expression .)
    RETURN          reduce using rule 3 (asignar -> expression .)
    IDLOCAL         reduce using rule 3 (asignar -> expression .)
    IDINSTANCE      reduce using rule 3 (asignar -> expression .)
    IDCLASS         reduce using rule 3 (asignar -> expression .)
    IDGLOBAL        reduce using rule 3 (asignar -> expression .)
    IDENTIFIER      reduce using rule 3 (asignar -> expression .)
    PUTS            reduce using rule 3 (asignar -> expression .)
    ARRAY           reduce using rule 3 (asignar -> expression .)
    LSQBRACKET      reduce using rule 3 (asignar -> expression .)
    LBRACKET        reduce using rule 3 (asignar -> expression .)
    HASH            reduce using rule 3 (asignar -> expression .)
    FOR             reduce using rule 3 (asignar -> expression .)
    TRUE            reduce using rule 3 (asignar -> expression .)
    FALSE           reduce using rule 3 (asignar -> expression .)
    NIL             reduce using rule 3 (asignar -> expression .)
    IF              reduce using rule 3 (asignar -> expression .)
    WHILE           reduce using rule 3 (asignar -> expression .)
    NUMBER          reduce using rule 3 (asignar -> expression .)
    FLOAT           reduce using rule 3 (asignar -> expression .)
    NUML            reduce using rule 3 (asignar -> expression .)
    STRING          reduce using rule 3 (asignar -> expression .)
    STRINGV         reduce using rule 3 (asignar -> expression .)
    BREAK           reduce using rule 3 (asignar -> expression .)
    COMPARE         reduce using rule 162 (value2 -> expression .)
    LESS            reduce using rule 162 (value2 -> expression .)
    GREATER         reduce using rule 162 (value2 -> expression .)
    GREQUAL         reduce using rule 162 (value2 -> expression .)
    LSEQUAL         reduce using rule 162 (value2 -> expression .)
    NOTEQUAL        reduce using rule 162 (value2 -> expression .)

  ! $end            [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! END             [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! ELSE            [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! RETURN          [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! IDLOCAL         [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! IDINSTANCE      [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! IDCLASS         [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! IDGLOBAL        [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! IDENTIFIER      [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! PUTS            [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! ARRAY           [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! LSQBRACKET      [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! HASH            [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! FOR             [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! TRUE            [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! FALSE           [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! NIL             [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! IF              [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! WHILE           [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! NUMBER          [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! FLOAT           [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! NUML            [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! STRING          [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! STRINGV         [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! BREAK           [ reduce using rule 64 (assigns -> IDLOCAL ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 3 (asignar -> expression .) ]


state 161

    (69) assigns -> IDLOCAL ASSIGN variables .
    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression
    (12) asignar -> variables .
    (95) term -> variables .
    (130) metodohash -> variables . ASSIGN hash POINT LENGTH
    (131) metodohash -> variables . POINT LENGTH
    (159) value2 -> variables .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 12 (asignar -> variables .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for COMPARE resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LESS resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREATER resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LSEQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 95 (term -> variables .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    $end            reduce using rule 12 (asignar -> variables .)
    END             reduce using rule 12 (asignar -> variables .)
    ELSE            reduce using rule 12 (asignar -> variables .)
    RETURN          reduce using rule 12 (asignar -> variables .)
    IDLOCAL         reduce using rule 12 (asignar -> variables .)
    IDINSTANCE      reduce using rule 12 (asignar -> variables .)
    IDCLASS         reduce using rule 12 (asignar -> variables .)
    IDGLOBAL        reduce using rule 12 (asignar -> variables .)
    IDENTIFIER      reduce using rule 12 (asignar -> variables .)
    PUTS            reduce using rule 12 (asignar -> variables .)
    ARRAY           reduce using rule 12 (asignar -> variables .)
    LSQBRACKET      reduce using rule 12 (asignar -> variables .)
    LBRACKET        reduce using rule 12 (asignar -> variables .)
    HASH            reduce using rule 12 (asignar -> variables .)
    FOR             reduce using rule 12 (asignar -> variables .)
    TRUE            reduce using rule 12 (asignar -> variables .)
    FALSE           reduce using rule 12 (asignar -> variables .)
    NIL             reduce using rule 12 (asignar -> variables .)
    IF              reduce using rule 12 (asignar -> variables .)
    WHILE           reduce using rule 12 (asignar -> variables .)
    NUMBER          reduce using rule 12 (asignar -> variables .)
    FLOAT           reduce using rule 12 (asignar -> variables .)
    NUML            reduce using rule 12 (asignar -> variables .)
    STRING          reduce using rule 12 (asignar -> variables .)
    STRINGV         reduce using rule 12 (asignar -> variables .)
    BREAK           reduce using rule 12 (asignar -> variables .)
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)
    COMPARE         reduce using rule 95 (term -> variables .)
    LESS            reduce using rule 95 (term -> variables .)
    GREATER         reduce using rule 95 (term -> variables .)
    GREQUAL         reduce using rule 95 (term -> variables .)
    LSEQUAL         reduce using rule 95 (term -> variables .)
    NOTEQUAL        reduce using rule 95 (term -> variables .)
    ASSIGN          shift and go to state 70
    POINT           shift and go to state 71

  ! $end            [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! END             [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! ELSE            [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! RETURN          [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! IDLOCAL         [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! IDINSTANCE      [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! IDCLASS         [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! IDGLOBAL        [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! IDENTIFIER      [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! PUTS            [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! ARRAY           [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! LSQBRACKET      [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! LBRACKET        [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! HASH            [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! FOR             [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! TRUE            [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! FALSE           [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! NIL             [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! IF              [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! WHILE           [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! NUMBER          [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! FLOAT           [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! NUML            [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! STRING          [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! STRINGV         [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! BREAK           [ reduce using rule 69 (assigns -> IDLOCAL ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 12 (asignar -> variables .) ]
  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! $end            [ reduce using rule 95 (term -> variables .) ]
  ! END             [ reduce using rule 95 (term -> variables .) ]
  ! ELSE            [ reduce using rule 95 (term -> variables .) ]
  ! RETURN          [ reduce using rule 95 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 95 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 95 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 95 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 95 (term -> variables .) ]
  ! IDENTIFIER      [ reduce using rule 95 (term -> variables .) ]
  ! PUTS            [ reduce using rule 95 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 95 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 95 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 95 (term -> variables .) ]
  ! HASH            [ reduce using rule 95 (term -> variables .) ]
  ! FOR             [ reduce using rule 95 (term -> variables .) ]
  ! TRUE            [ reduce using rule 95 (term -> variables .) ]
  ! FALSE           [ reduce using rule 95 (term -> variables .) ]
  ! NIL             [ reduce using rule 95 (term -> variables .) ]
  ! IF              [ reduce using rule 95 (term -> variables .) ]
  ! WHILE           [ reduce using rule 95 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 95 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 95 (term -> variables .) ]
  ! NUML            [ reduce using rule 95 (term -> variables .) ]
  ! STRING          [ reduce using rule 95 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 95 (term -> variables .) ]
  ! BREAK           [ reduce using rule 95 (term -> variables .) ]
  ! COMPARE         [ reduce using rule 159 (value2 -> variables .) ]
  ! LESS            [ reduce using rule 159 (value2 -> variables .) ]
  ! GREATER         [ reduce using rule 159 (value2 -> variables .) ]
  ! GREQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! LSEQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! NOTEQUAL        [ reduce using rule 159 (value2 -> variables .) ]


state 162

    (74) assigns -> IDLOCAL ASSIGN asignar .

    $end            reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    END             reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    ELSE            reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    RETURN          reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    IDLOCAL         reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    IDINSTANCE      reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    IDCLASS         reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    IDGLOBAL        reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    IDENTIFIER      reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    PUTS            reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    ARRAY           reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    LSQBRACKET      reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    LBRACKET        reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    HASH            reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    FOR             reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    TRUE            reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    FALSE           reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    NIL             reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    IF              reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    WHILE           reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    NUMBER          reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    FLOAT           reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    NUML            reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    MINUS           reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    STRING          reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    STRINGV         reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)
    BREAK           reduce using rule 74 (assigns -> IDLOCAL ASSIGN asignar .)


state 163

    (79) assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .
    (13) asignar -> reglaSemanticaComparaciones .
    (170) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ORS reglaSemanticaComparaciones

  ! reduce/reduce conflict for $end resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for END resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for ELSE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for RETURN resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for PUTS resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for ARRAY resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for HASH resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for FOR resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for TRUE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for FALSE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for NIL resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IF resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for WHILE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for NUMBER resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for FLOAT resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for NUML resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for MINUS resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for STRING resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for STRINGV resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for BREAK resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
    $end            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    END             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ELSE            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    RETURN          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDLOCAL         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDINSTANCE      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDCLASS         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDGLOBAL        reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDENTIFIER      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    PUTS            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ARRAY           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    LSQBRACKET      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    LBRACKET        reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    HASH            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FOR             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    TRUE            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FALSE           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NIL             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IF              reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    WHILE           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NUMBER          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FLOAT           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NUML            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    MINUS           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    STRING          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    STRINGV         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    BREAK           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ANDS            shift and go to state 74
    ORS             shift and go to state 75

  ! $end            [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! END             [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! ELSE            [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! RETURN          [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! IDLOCAL         [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! IDINSTANCE      [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! IDCLASS         [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! IDGLOBAL        [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! IDENTIFIER      [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! PUTS            [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! ARRAY           [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! LSQBRACKET      [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! LBRACKET        [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! HASH            [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! FOR             [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! TRUE            [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! FALSE           [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! NIL             [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! IF              [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! WHILE           [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! NUMBER          [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! FLOAT           [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! NUML            [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! MINUS           [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! STRING          [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! STRINGV         [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]
  ! BREAK           [ reduce using rule 79 (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones .) ]


state 164

    (174) metodocadena -> PUTS . cadena POINT LENGTH
    (175) metodocadena -> PUTS . string POINT LENGTH
    (172) metodocadenaSemantica -> PUTS . cadena POINT EMPTY INTERROGATIVE
    (173) metodocadenaSemantica -> PUTS . string POINT EMPTY INTERROGATIVE
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV

    STRING          shift and go to state 33
    STRINGV         shift and go to state 32

    cadena                         shift and go to state 235
    string                         shift and go to state 236

state 165

    (65) assigns -> IDINSTANCE ASSIGN expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term
    (3) asignar -> expression .
    (162) value2 -> expression .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for END resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for PUTS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ARRAY resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for HASH resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NIL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUML resolved using rule 3 (asignar -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for STRINGV resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for BREAK resolved using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63
    $end            reduce using rule 3 (asignar -> expression .)
    END             reduce using rule 3 (asignar -> expression .)
    ELSE            reduce using rule 3 (asignar -> expression .)
    RETURN          reduce using rule 3 (asignar -> expression .)
    IDLOCAL         reduce using rule 3 (asignar -> expression .)
    IDINSTANCE      reduce using rule 3 (asignar -> expression .)
    IDCLASS         reduce using rule 3 (asignar -> expression .)
    IDGLOBAL        reduce using rule 3 (asignar -> expression .)
    IDENTIFIER      reduce using rule 3 (asignar -> expression .)
    PUTS            reduce using rule 3 (asignar -> expression .)
    ARRAY           reduce using rule 3 (asignar -> expression .)
    LSQBRACKET      reduce using rule 3 (asignar -> expression .)
    LBRACKET        reduce using rule 3 (asignar -> expression .)
    HASH            reduce using rule 3 (asignar -> expression .)
    FOR             reduce using rule 3 (asignar -> expression .)
    TRUE            reduce using rule 3 (asignar -> expression .)
    FALSE           reduce using rule 3 (asignar -> expression .)
    NIL             reduce using rule 3 (asignar -> expression .)
    IF              reduce using rule 3 (asignar -> expression .)
    WHILE           reduce using rule 3 (asignar -> expression .)
    NUMBER          reduce using rule 3 (asignar -> expression .)
    FLOAT           reduce using rule 3 (asignar -> expression .)
    NUML            reduce using rule 3 (asignar -> expression .)
    STRING          reduce using rule 3 (asignar -> expression .)
    STRINGV         reduce using rule 3 (asignar -> expression .)
    BREAK           reduce using rule 3 (asignar -> expression .)
    COMPARE         reduce using rule 162 (value2 -> expression .)
    LESS            reduce using rule 162 (value2 -> expression .)
    GREATER         reduce using rule 162 (value2 -> expression .)
    GREQUAL         reduce using rule 162 (value2 -> expression .)
    LSEQUAL         reduce using rule 162 (value2 -> expression .)
    NOTEQUAL        reduce using rule 162 (value2 -> expression .)

  ! $end            [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! END             [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! ELSE            [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! RETURN          [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! IDLOCAL         [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! IDINSTANCE      [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! IDCLASS         [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! IDGLOBAL        [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! IDENTIFIER      [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! PUTS            [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! ARRAY           [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! LSQBRACKET      [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! HASH            [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! FOR             [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! TRUE            [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! FALSE           [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! NIL             [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! IF              [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! WHILE           [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! NUMBER          [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! FLOAT           [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! NUML            [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! STRING          [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! STRINGV         [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! BREAK           [ reduce using rule 65 (assigns -> IDINSTANCE ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 3 (asignar -> expression .) ]


state 166

    (70) assigns -> IDINSTANCE ASSIGN variables .
    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression
    (12) asignar -> variables .
    (95) term -> variables .
    (130) metodohash -> variables . ASSIGN hash POINT LENGTH
    (131) metodohash -> variables . POINT LENGTH
    (159) value2 -> variables .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 12 (asignar -> variables .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for COMPARE resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LESS resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREATER resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LSEQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 95 (term -> variables .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    $end            reduce using rule 12 (asignar -> variables .)
    END             reduce using rule 12 (asignar -> variables .)
    ELSE            reduce using rule 12 (asignar -> variables .)
    RETURN          reduce using rule 12 (asignar -> variables .)
    IDLOCAL         reduce using rule 12 (asignar -> variables .)
    IDINSTANCE      reduce using rule 12 (asignar -> variables .)
    IDCLASS         reduce using rule 12 (asignar -> variables .)
    IDGLOBAL        reduce using rule 12 (asignar -> variables .)
    IDENTIFIER      reduce using rule 12 (asignar -> variables .)
    PUTS            reduce using rule 12 (asignar -> variables .)
    ARRAY           reduce using rule 12 (asignar -> variables .)
    LSQBRACKET      reduce using rule 12 (asignar -> variables .)
    LBRACKET        reduce using rule 12 (asignar -> variables .)
    HASH            reduce using rule 12 (asignar -> variables .)
    FOR             reduce using rule 12 (asignar -> variables .)
    TRUE            reduce using rule 12 (asignar -> variables .)
    FALSE           reduce using rule 12 (asignar -> variables .)
    NIL             reduce using rule 12 (asignar -> variables .)
    IF              reduce using rule 12 (asignar -> variables .)
    WHILE           reduce using rule 12 (asignar -> variables .)
    NUMBER          reduce using rule 12 (asignar -> variables .)
    FLOAT           reduce using rule 12 (asignar -> variables .)
    NUML            reduce using rule 12 (asignar -> variables .)
    STRING          reduce using rule 12 (asignar -> variables .)
    STRINGV         reduce using rule 12 (asignar -> variables .)
    BREAK           reduce using rule 12 (asignar -> variables .)
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)
    COMPARE         reduce using rule 95 (term -> variables .)
    LESS            reduce using rule 95 (term -> variables .)
    GREATER         reduce using rule 95 (term -> variables .)
    GREQUAL         reduce using rule 95 (term -> variables .)
    LSEQUAL         reduce using rule 95 (term -> variables .)
    NOTEQUAL        reduce using rule 95 (term -> variables .)
    ASSIGN          shift and go to state 70
    POINT           shift and go to state 71

  ! $end            [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! END             [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! ELSE            [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! RETURN          [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! IDLOCAL         [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! IDINSTANCE      [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! IDCLASS         [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! IDGLOBAL        [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! IDENTIFIER      [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! PUTS            [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! ARRAY           [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! LSQBRACKET      [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! LBRACKET        [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! HASH            [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! FOR             [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! TRUE            [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! FALSE           [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! NIL             [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! IF              [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! WHILE           [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! NUMBER          [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! FLOAT           [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! NUML            [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! STRING          [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! STRINGV         [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! BREAK           [ reduce using rule 70 (assigns -> IDINSTANCE ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 12 (asignar -> variables .) ]
  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! $end            [ reduce using rule 95 (term -> variables .) ]
  ! END             [ reduce using rule 95 (term -> variables .) ]
  ! ELSE            [ reduce using rule 95 (term -> variables .) ]
  ! RETURN          [ reduce using rule 95 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 95 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 95 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 95 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 95 (term -> variables .) ]
  ! IDENTIFIER      [ reduce using rule 95 (term -> variables .) ]
  ! PUTS            [ reduce using rule 95 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 95 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 95 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 95 (term -> variables .) ]
  ! HASH            [ reduce using rule 95 (term -> variables .) ]
  ! FOR             [ reduce using rule 95 (term -> variables .) ]
  ! TRUE            [ reduce using rule 95 (term -> variables .) ]
  ! FALSE           [ reduce using rule 95 (term -> variables .) ]
  ! NIL             [ reduce using rule 95 (term -> variables .) ]
  ! IF              [ reduce using rule 95 (term -> variables .) ]
  ! WHILE           [ reduce using rule 95 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 95 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 95 (term -> variables .) ]
  ! NUML            [ reduce using rule 95 (term -> variables .) ]
  ! STRING          [ reduce using rule 95 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 95 (term -> variables .) ]
  ! BREAK           [ reduce using rule 95 (term -> variables .) ]
  ! COMPARE         [ reduce using rule 159 (value2 -> variables .) ]
  ! LESS            [ reduce using rule 159 (value2 -> variables .) ]
  ! GREATER         [ reduce using rule 159 (value2 -> variables .) ]
  ! GREQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! LSEQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! NOTEQUAL        [ reduce using rule 159 (value2 -> variables .) ]


state 167

    (75) assigns -> IDINSTANCE ASSIGN asignar .

    $end            reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    END             reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    ELSE            reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    RETURN          reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    IDLOCAL         reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    IDINSTANCE      reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    IDCLASS         reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    IDGLOBAL        reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    IDENTIFIER      reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    PUTS            reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    ARRAY           reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    LSQBRACKET      reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    LBRACKET        reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    HASH            reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    FOR             reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    TRUE            reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    FALSE           reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    NIL             reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    IF              reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    WHILE           reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    NUMBER          reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    FLOAT           reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    NUML            reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    MINUS           reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    STRING          reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    STRINGV         reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)
    BREAK           reduce using rule 75 (assigns -> IDINSTANCE ASSIGN asignar .)


state 168

    (80) assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .
    (13) asignar -> reglaSemanticaComparaciones .
    (170) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ORS reglaSemanticaComparaciones

  ! reduce/reduce conflict for $end resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for END resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for ELSE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for RETURN resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for PUTS resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for ARRAY resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for HASH resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for FOR resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for TRUE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for FALSE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for NIL resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IF resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for WHILE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for NUMBER resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for FLOAT resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for NUML resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for MINUS resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for STRING resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for STRINGV resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for BREAK resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
    $end            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    END             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ELSE            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    RETURN          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDLOCAL         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDINSTANCE      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDCLASS         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDGLOBAL        reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDENTIFIER      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    PUTS            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ARRAY           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    LSQBRACKET      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    LBRACKET        reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    HASH            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FOR             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    TRUE            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FALSE           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NIL             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IF              reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    WHILE           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NUMBER          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FLOAT           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NUML            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    MINUS           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    STRING          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    STRINGV         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    BREAK           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ANDS            shift and go to state 74
    ORS             shift and go to state 75

  ! $end            [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! END             [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! ELSE            [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! RETURN          [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! IDLOCAL         [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! IDINSTANCE      [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! IDCLASS         [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! IDGLOBAL        [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! IDENTIFIER      [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! PUTS            [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! ARRAY           [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! LSQBRACKET      [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! LBRACKET        [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! HASH            [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! FOR             [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! TRUE            [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! FALSE           [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! NIL             [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! IF              [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! WHILE           [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! NUMBER          [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! FLOAT           [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! NUML            [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! MINUS           [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! STRING          [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! STRINGV         [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]
  ! BREAK           [ reduce using rule 80 (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones .) ]


state 169

    (66) assigns -> IDCLASS ASSIGN expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term
    (3) asignar -> expression .
    (162) value2 -> expression .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for END resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for PUTS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ARRAY resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for HASH resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NIL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUML resolved using rule 3 (asignar -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for STRINGV resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for BREAK resolved using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63
    $end            reduce using rule 3 (asignar -> expression .)
    END             reduce using rule 3 (asignar -> expression .)
    ELSE            reduce using rule 3 (asignar -> expression .)
    RETURN          reduce using rule 3 (asignar -> expression .)
    IDLOCAL         reduce using rule 3 (asignar -> expression .)
    IDINSTANCE      reduce using rule 3 (asignar -> expression .)
    IDCLASS         reduce using rule 3 (asignar -> expression .)
    IDGLOBAL        reduce using rule 3 (asignar -> expression .)
    IDENTIFIER      reduce using rule 3 (asignar -> expression .)
    PUTS            reduce using rule 3 (asignar -> expression .)
    ARRAY           reduce using rule 3 (asignar -> expression .)
    LSQBRACKET      reduce using rule 3 (asignar -> expression .)
    LBRACKET        reduce using rule 3 (asignar -> expression .)
    HASH            reduce using rule 3 (asignar -> expression .)
    FOR             reduce using rule 3 (asignar -> expression .)
    TRUE            reduce using rule 3 (asignar -> expression .)
    FALSE           reduce using rule 3 (asignar -> expression .)
    NIL             reduce using rule 3 (asignar -> expression .)
    IF              reduce using rule 3 (asignar -> expression .)
    WHILE           reduce using rule 3 (asignar -> expression .)
    NUMBER          reduce using rule 3 (asignar -> expression .)
    FLOAT           reduce using rule 3 (asignar -> expression .)
    NUML            reduce using rule 3 (asignar -> expression .)
    STRING          reduce using rule 3 (asignar -> expression .)
    STRINGV         reduce using rule 3 (asignar -> expression .)
    BREAK           reduce using rule 3 (asignar -> expression .)
    COMPARE         reduce using rule 162 (value2 -> expression .)
    LESS            reduce using rule 162 (value2 -> expression .)
    GREATER         reduce using rule 162 (value2 -> expression .)
    GREQUAL         reduce using rule 162 (value2 -> expression .)
    LSEQUAL         reduce using rule 162 (value2 -> expression .)
    NOTEQUAL        reduce using rule 162 (value2 -> expression .)

  ! $end            [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! END             [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! ELSE            [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! RETURN          [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! IDLOCAL         [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! IDINSTANCE      [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! IDCLASS         [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! IDGLOBAL        [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! IDENTIFIER      [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! PUTS            [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! ARRAY           [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! LSQBRACKET      [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! HASH            [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! FOR             [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! TRUE            [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! FALSE           [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! NIL             [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! IF              [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! WHILE           [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! NUMBER          [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! FLOAT           [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! NUML            [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! STRING          [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! STRINGV         [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! BREAK           [ reduce using rule 66 (assigns -> IDCLASS ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 3 (asignar -> expression .) ]


state 170

    (71) assigns -> IDCLASS ASSIGN variables .
    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression
    (12) asignar -> variables .
    (95) term -> variables .
    (130) metodohash -> variables . ASSIGN hash POINT LENGTH
    (131) metodohash -> variables . POINT LENGTH
    (159) value2 -> variables .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 12 (asignar -> variables .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for COMPARE resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LESS resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREATER resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LSEQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 95 (term -> variables .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    $end            reduce using rule 12 (asignar -> variables .)
    END             reduce using rule 12 (asignar -> variables .)
    ELSE            reduce using rule 12 (asignar -> variables .)
    RETURN          reduce using rule 12 (asignar -> variables .)
    IDLOCAL         reduce using rule 12 (asignar -> variables .)
    IDINSTANCE      reduce using rule 12 (asignar -> variables .)
    IDCLASS         reduce using rule 12 (asignar -> variables .)
    IDGLOBAL        reduce using rule 12 (asignar -> variables .)
    IDENTIFIER      reduce using rule 12 (asignar -> variables .)
    PUTS            reduce using rule 12 (asignar -> variables .)
    ARRAY           reduce using rule 12 (asignar -> variables .)
    LSQBRACKET      reduce using rule 12 (asignar -> variables .)
    LBRACKET        reduce using rule 12 (asignar -> variables .)
    HASH            reduce using rule 12 (asignar -> variables .)
    FOR             reduce using rule 12 (asignar -> variables .)
    TRUE            reduce using rule 12 (asignar -> variables .)
    FALSE           reduce using rule 12 (asignar -> variables .)
    NIL             reduce using rule 12 (asignar -> variables .)
    IF              reduce using rule 12 (asignar -> variables .)
    WHILE           reduce using rule 12 (asignar -> variables .)
    NUMBER          reduce using rule 12 (asignar -> variables .)
    FLOAT           reduce using rule 12 (asignar -> variables .)
    NUML            reduce using rule 12 (asignar -> variables .)
    STRING          reduce using rule 12 (asignar -> variables .)
    STRINGV         reduce using rule 12 (asignar -> variables .)
    BREAK           reduce using rule 12 (asignar -> variables .)
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)
    COMPARE         reduce using rule 95 (term -> variables .)
    LESS            reduce using rule 95 (term -> variables .)
    GREATER         reduce using rule 95 (term -> variables .)
    GREQUAL         reduce using rule 95 (term -> variables .)
    LSEQUAL         reduce using rule 95 (term -> variables .)
    NOTEQUAL        reduce using rule 95 (term -> variables .)
    ASSIGN          shift and go to state 70
    POINT           shift and go to state 71

  ! $end            [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! END             [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! ELSE            [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! RETURN          [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! IDLOCAL         [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! IDINSTANCE      [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! IDCLASS         [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! IDGLOBAL        [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! IDENTIFIER      [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! PUTS            [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! ARRAY           [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! LSQBRACKET      [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! LBRACKET        [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! HASH            [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! FOR             [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! TRUE            [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! FALSE           [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! NIL             [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! IF              [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! WHILE           [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! NUMBER          [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! FLOAT           [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! NUML            [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! STRING          [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! STRINGV         [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! BREAK           [ reduce using rule 71 (assigns -> IDCLASS ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 12 (asignar -> variables .) ]
  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! $end            [ reduce using rule 95 (term -> variables .) ]
  ! END             [ reduce using rule 95 (term -> variables .) ]
  ! ELSE            [ reduce using rule 95 (term -> variables .) ]
  ! RETURN          [ reduce using rule 95 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 95 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 95 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 95 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 95 (term -> variables .) ]
  ! IDENTIFIER      [ reduce using rule 95 (term -> variables .) ]
  ! PUTS            [ reduce using rule 95 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 95 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 95 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 95 (term -> variables .) ]
  ! HASH            [ reduce using rule 95 (term -> variables .) ]
  ! FOR             [ reduce using rule 95 (term -> variables .) ]
  ! TRUE            [ reduce using rule 95 (term -> variables .) ]
  ! FALSE           [ reduce using rule 95 (term -> variables .) ]
  ! NIL             [ reduce using rule 95 (term -> variables .) ]
  ! IF              [ reduce using rule 95 (term -> variables .) ]
  ! WHILE           [ reduce using rule 95 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 95 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 95 (term -> variables .) ]
  ! NUML            [ reduce using rule 95 (term -> variables .) ]
  ! STRING          [ reduce using rule 95 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 95 (term -> variables .) ]
  ! BREAK           [ reduce using rule 95 (term -> variables .) ]
  ! COMPARE         [ reduce using rule 159 (value2 -> variables .) ]
  ! LESS            [ reduce using rule 159 (value2 -> variables .) ]
  ! GREATER         [ reduce using rule 159 (value2 -> variables .) ]
  ! GREQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! LSEQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! NOTEQUAL        [ reduce using rule 159 (value2 -> variables .) ]


state 171

    (76) assigns -> IDCLASS ASSIGN asignar .

    $end            reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    END             reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    ELSE            reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    RETURN          reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    IDLOCAL         reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    IDINSTANCE      reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    IDCLASS         reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    IDGLOBAL        reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    IDENTIFIER      reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    PUTS            reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    ARRAY           reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    LSQBRACKET      reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    LBRACKET        reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    HASH            reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    FOR             reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    TRUE            reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    FALSE           reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    NIL             reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    IF              reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    WHILE           reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    NUMBER          reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    FLOAT           reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    NUML            reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    MINUS           reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    STRING          reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    STRINGV         reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)
    BREAK           reduce using rule 76 (assigns -> IDCLASS ASSIGN asignar .)


state 172

    (81) assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .
    (13) asignar -> reglaSemanticaComparaciones .
    (170) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ORS reglaSemanticaComparaciones

  ! reduce/reduce conflict for $end resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for END resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for ELSE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for RETURN resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for PUTS resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for ARRAY resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for HASH resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for FOR resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for TRUE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for FALSE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for NIL resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IF resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for WHILE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for NUMBER resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for FLOAT resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for NUML resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for MINUS resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for STRING resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for STRINGV resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for BREAK resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
    $end            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    END             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ELSE            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    RETURN          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDLOCAL         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDINSTANCE      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDCLASS         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDGLOBAL        reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDENTIFIER      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    PUTS            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ARRAY           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    LSQBRACKET      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    LBRACKET        reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    HASH            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FOR             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    TRUE            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FALSE           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NIL             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IF              reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    WHILE           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NUMBER          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FLOAT           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NUML            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    MINUS           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    STRING          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    STRINGV         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    BREAK           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ANDS            shift and go to state 74
    ORS             shift and go to state 75

  ! $end            [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! END             [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! ELSE            [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! RETURN          [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! IDLOCAL         [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! IDINSTANCE      [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! IDCLASS         [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! IDGLOBAL        [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! IDENTIFIER      [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! PUTS            [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! ARRAY           [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! LSQBRACKET      [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! LBRACKET        [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! HASH            [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! FOR             [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! TRUE            [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! FALSE           [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! NIL             [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! IF              [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! WHILE           [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! NUMBER          [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! FLOAT           [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! NUML            [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! MINUS           [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! STRING          [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! STRINGV         [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]
  ! BREAK           [ reduce using rule 81 (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones .) ]


state 173

    (67) assigns -> IDGLOBAL ASSIGN expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term
    (3) asignar -> expression .
    (162) value2 -> expression .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for END resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for PUTS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ARRAY resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for HASH resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NIL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUML resolved using rule 3 (asignar -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for STRINGV resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for BREAK resolved using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63
    $end            reduce using rule 3 (asignar -> expression .)
    END             reduce using rule 3 (asignar -> expression .)
    ELSE            reduce using rule 3 (asignar -> expression .)
    RETURN          reduce using rule 3 (asignar -> expression .)
    IDLOCAL         reduce using rule 3 (asignar -> expression .)
    IDINSTANCE      reduce using rule 3 (asignar -> expression .)
    IDCLASS         reduce using rule 3 (asignar -> expression .)
    IDGLOBAL        reduce using rule 3 (asignar -> expression .)
    IDENTIFIER      reduce using rule 3 (asignar -> expression .)
    PUTS            reduce using rule 3 (asignar -> expression .)
    ARRAY           reduce using rule 3 (asignar -> expression .)
    LSQBRACKET      reduce using rule 3 (asignar -> expression .)
    LBRACKET        reduce using rule 3 (asignar -> expression .)
    HASH            reduce using rule 3 (asignar -> expression .)
    FOR             reduce using rule 3 (asignar -> expression .)
    TRUE            reduce using rule 3 (asignar -> expression .)
    FALSE           reduce using rule 3 (asignar -> expression .)
    NIL             reduce using rule 3 (asignar -> expression .)
    IF              reduce using rule 3 (asignar -> expression .)
    WHILE           reduce using rule 3 (asignar -> expression .)
    NUMBER          reduce using rule 3 (asignar -> expression .)
    FLOAT           reduce using rule 3 (asignar -> expression .)
    NUML            reduce using rule 3 (asignar -> expression .)
    STRING          reduce using rule 3 (asignar -> expression .)
    STRINGV         reduce using rule 3 (asignar -> expression .)
    BREAK           reduce using rule 3 (asignar -> expression .)
    COMPARE         reduce using rule 162 (value2 -> expression .)
    LESS            reduce using rule 162 (value2 -> expression .)
    GREATER         reduce using rule 162 (value2 -> expression .)
    GREQUAL         reduce using rule 162 (value2 -> expression .)
    LSEQUAL         reduce using rule 162 (value2 -> expression .)
    NOTEQUAL        reduce using rule 162 (value2 -> expression .)

  ! $end            [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! END             [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! ELSE            [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! RETURN          [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! IDLOCAL         [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! IDINSTANCE      [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! IDCLASS         [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! IDGLOBAL        [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! IDENTIFIER      [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! PUTS            [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! ARRAY           [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! LSQBRACKET      [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! HASH            [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! FOR             [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! TRUE            [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! FALSE           [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! NIL             [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! IF              [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! WHILE           [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! NUMBER          [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! FLOAT           [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! NUML            [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! STRING          [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! STRINGV         [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! BREAK           [ reduce using rule 67 (assigns -> IDGLOBAL ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 3 (asignar -> expression .) ]


state 174

    (72) assigns -> IDGLOBAL ASSIGN variables .
    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression
    (12) asignar -> variables .
    (95) term -> variables .
    (130) metodohash -> variables . ASSIGN hash POINT LENGTH
    (131) metodohash -> variables . POINT LENGTH
    (159) value2 -> variables .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 12 (asignar -> variables .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for COMPARE resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LESS resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREATER resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LSEQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 95 (term -> variables .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    $end            reduce using rule 12 (asignar -> variables .)
    END             reduce using rule 12 (asignar -> variables .)
    ELSE            reduce using rule 12 (asignar -> variables .)
    RETURN          reduce using rule 12 (asignar -> variables .)
    IDLOCAL         reduce using rule 12 (asignar -> variables .)
    IDINSTANCE      reduce using rule 12 (asignar -> variables .)
    IDCLASS         reduce using rule 12 (asignar -> variables .)
    IDGLOBAL        reduce using rule 12 (asignar -> variables .)
    IDENTIFIER      reduce using rule 12 (asignar -> variables .)
    PUTS            reduce using rule 12 (asignar -> variables .)
    ARRAY           reduce using rule 12 (asignar -> variables .)
    LSQBRACKET      reduce using rule 12 (asignar -> variables .)
    LBRACKET        reduce using rule 12 (asignar -> variables .)
    HASH            reduce using rule 12 (asignar -> variables .)
    FOR             reduce using rule 12 (asignar -> variables .)
    TRUE            reduce using rule 12 (asignar -> variables .)
    FALSE           reduce using rule 12 (asignar -> variables .)
    NIL             reduce using rule 12 (asignar -> variables .)
    IF              reduce using rule 12 (asignar -> variables .)
    WHILE           reduce using rule 12 (asignar -> variables .)
    NUMBER          reduce using rule 12 (asignar -> variables .)
    FLOAT           reduce using rule 12 (asignar -> variables .)
    NUML            reduce using rule 12 (asignar -> variables .)
    STRING          reduce using rule 12 (asignar -> variables .)
    STRINGV         reduce using rule 12 (asignar -> variables .)
    BREAK           reduce using rule 12 (asignar -> variables .)
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)
    COMPARE         reduce using rule 95 (term -> variables .)
    LESS            reduce using rule 95 (term -> variables .)
    GREATER         reduce using rule 95 (term -> variables .)
    GREQUAL         reduce using rule 95 (term -> variables .)
    LSEQUAL         reduce using rule 95 (term -> variables .)
    NOTEQUAL        reduce using rule 95 (term -> variables .)
    ASSIGN          shift and go to state 70
    POINT           shift and go to state 71

  ! $end            [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! END             [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! ELSE            [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! RETURN          [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! IDLOCAL         [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! IDINSTANCE      [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! IDCLASS         [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! IDGLOBAL        [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! IDENTIFIER      [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! PUTS            [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! ARRAY           [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! LSQBRACKET      [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! LBRACKET        [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! HASH            [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! FOR             [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! TRUE            [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! FALSE           [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! NIL             [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! IF              [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! WHILE           [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! NUMBER          [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! FLOAT           [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! NUML            [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! STRING          [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! STRINGV         [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! BREAK           [ reduce using rule 72 (assigns -> IDGLOBAL ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 12 (asignar -> variables .) ]
  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! $end            [ reduce using rule 95 (term -> variables .) ]
  ! END             [ reduce using rule 95 (term -> variables .) ]
  ! ELSE            [ reduce using rule 95 (term -> variables .) ]
  ! RETURN          [ reduce using rule 95 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 95 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 95 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 95 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 95 (term -> variables .) ]
  ! IDENTIFIER      [ reduce using rule 95 (term -> variables .) ]
  ! PUTS            [ reduce using rule 95 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 95 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 95 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 95 (term -> variables .) ]
  ! HASH            [ reduce using rule 95 (term -> variables .) ]
  ! FOR             [ reduce using rule 95 (term -> variables .) ]
  ! TRUE            [ reduce using rule 95 (term -> variables .) ]
  ! FALSE           [ reduce using rule 95 (term -> variables .) ]
  ! NIL             [ reduce using rule 95 (term -> variables .) ]
  ! IF              [ reduce using rule 95 (term -> variables .) ]
  ! WHILE           [ reduce using rule 95 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 95 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 95 (term -> variables .) ]
  ! NUML            [ reduce using rule 95 (term -> variables .) ]
  ! STRING          [ reduce using rule 95 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 95 (term -> variables .) ]
  ! BREAK           [ reduce using rule 95 (term -> variables .) ]
  ! COMPARE         [ reduce using rule 159 (value2 -> variables .) ]
  ! LESS            [ reduce using rule 159 (value2 -> variables .) ]
  ! GREATER         [ reduce using rule 159 (value2 -> variables .) ]
  ! GREQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! LSEQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! NOTEQUAL        [ reduce using rule 159 (value2 -> variables .) ]


state 175

    (77) assigns -> IDGLOBAL ASSIGN asignar .

    $end            reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    END             reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    ELSE            reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    RETURN          reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    IDLOCAL         reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    IDINSTANCE      reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    IDCLASS         reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    IDGLOBAL        reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    IDENTIFIER      reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    PUTS            reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    ARRAY           reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    LSQBRACKET      reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    LBRACKET        reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    HASH            reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    FOR             reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    TRUE            reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    FALSE           reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    NIL             reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    IF              reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    WHILE           reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    NUMBER          reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    FLOAT           reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    NUML            reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    MINUS           reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    STRING          reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    STRINGV         reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)
    BREAK           reduce using rule 77 (assigns -> IDGLOBAL ASSIGN asignar .)


state 176

    (82) assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .
    (13) asignar -> reglaSemanticaComparaciones .
    (170) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> reglaSemanticaComparaciones . ORS reglaSemanticaComparaciones

  ! reduce/reduce conflict for $end resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for END resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for ELSE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for RETURN resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for PUTS resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for ARRAY resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for HASH resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for FOR resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for TRUE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for FALSE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for NIL resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for IF resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for WHILE resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for NUMBER resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for FLOAT resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for NUML resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for MINUS resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for STRING resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for STRINGV resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
  ! reduce/reduce conflict for BREAK resolved using rule 13 (asignar -> reglaSemanticaComparaciones .)
    $end            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    END             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ELSE            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    RETURN          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDLOCAL         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDINSTANCE      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDCLASS         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDGLOBAL        reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IDENTIFIER      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    PUTS            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ARRAY           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    LSQBRACKET      reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    LBRACKET        reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    HASH            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FOR             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    TRUE            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FALSE           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NIL             reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    IF              reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    WHILE           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NUMBER          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    FLOAT           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    NUML            reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    MINUS           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    STRING          reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    STRINGV         reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    BREAK           reduce using rule 13 (asignar -> reglaSemanticaComparaciones .)
    ANDS            shift and go to state 74
    ORS             shift and go to state 75

  ! $end            [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! END             [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! ELSE            [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! RETURN          [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! IDLOCAL         [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! IDINSTANCE      [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! IDCLASS         [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! IDGLOBAL        [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! IDENTIFIER      [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! PUTS            [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! ARRAY           [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! LSQBRACKET      [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! LBRACKET        [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! HASH            [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! FOR             [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! TRUE            [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! FALSE           [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! NIL             [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! IF              [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! WHILE           [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! NUMBER          [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! FLOAT           [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! NUML            [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! MINUS           [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! STRING          [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! STRINGV         [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]
  ! BREAK           [ reduce using rule 82 (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones .) ]


state 177

    (68) assigns -> IDENTIFIER ASSIGN expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term
    (3) asignar -> expression .
    (162) value2 -> expression .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for END resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for PUTS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ARRAY resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for HASH resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NIL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUML resolved using rule 3 (asignar -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for STRINGV resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for BREAK resolved using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63
    $end            reduce using rule 3 (asignar -> expression .)
    END             reduce using rule 3 (asignar -> expression .)
    ELSE            reduce using rule 3 (asignar -> expression .)
    RETURN          reduce using rule 3 (asignar -> expression .)
    IDLOCAL         reduce using rule 3 (asignar -> expression .)
    IDINSTANCE      reduce using rule 3 (asignar -> expression .)
    IDCLASS         reduce using rule 3 (asignar -> expression .)
    IDGLOBAL        reduce using rule 3 (asignar -> expression .)
    IDENTIFIER      reduce using rule 3 (asignar -> expression .)
    PUTS            reduce using rule 3 (asignar -> expression .)
    ARRAY           reduce using rule 3 (asignar -> expression .)
    LSQBRACKET      reduce using rule 3 (asignar -> expression .)
    LBRACKET        reduce using rule 3 (asignar -> expression .)
    HASH            reduce using rule 3 (asignar -> expression .)
    FOR             reduce using rule 3 (asignar -> expression .)
    TRUE            reduce using rule 3 (asignar -> expression .)
    FALSE           reduce using rule 3 (asignar -> expression .)
    NIL             reduce using rule 3 (asignar -> expression .)
    IF              reduce using rule 3 (asignar -> expression .)
    WHILE           reduce using rule 3 (asignar -> expression .)
    NUMBER          reduce using rule 3 (asignar -> expression .)
    FLOAT           reduce using rule 3 (asignar -> expression .)
    NUML            reduce using rule 3 (asignar -> expression .)
    STRING          reduce using rule 3 (asignar -> expression .)
    STRINGV         reduce using rule 3 (asignar -> expression .)
    BREAK           reduce using rule 3 (asignar -> expression .)
    COMPARE         reduce using rule 162 (value2 -> expression .)
    LESS            reduce using rule 162 (value2 -> expression .)
    GREATER         reduce using rule 162 (value2 -> expression .)
    GREQUAL         reduce using rule 162 (value2 -> expression .)
    LSEQUAL         reduce using rule 162 (value2 -> expression .)
    NOTEQUAL        reduce using rule 162 (value2 -> expression .)

  ! $end            [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! END             [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! ELSE            [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! RETURN          [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! IDLOCAL         [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! IDINSTANCE      [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! IDCLASS         [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! IDGLOBAL        [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! IDENTIFIER      [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! PUTS            [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! ARRAY           [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! LSQBRACKET      [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! HASH            [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! FOR             [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! TRUE            [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! FALSE           [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! NIL             [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! IF              [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! WHILE           [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! NUMBER          [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! FLOAT           [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! NUML            [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! STRING          [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! STRINGV         [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! BREAK           [ reduce using rule 68 (assigns -> IDENTIFIER ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 3 (asignar -> expression .) ]


state 178

    (73) assigns -> IDENTIFIER ASSIGN variables .
    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression
    (12) asignar -> variables .
    (95) term -> variables .
    (130) metodohash -> variables . ASSIGN hash POINT LENGTH
    (131) metodohash -> variables . POINT LENGTH
    (159) value2 -> variables .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 12 (asignar -> variables .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for COMPARE resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LESS resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREATER resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for LSEQUAL resolved using rule 95 (term -> variables .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 95 (term -> variables .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    $end            reduce using rule 12 (asignar -> variables .)
    END             reduce using rule 12 (asignar -> variables .)
    ELSE            reduce using rule 12 (asignar -> variables .)
    RETURN          reduce using rule 12 (asignar -> variables .)
    IDLOCAL         reduce using rule 12 (asignar -> variables .)
    IDINSTANCE      reduce using rule 12 (asignar -> variables .)
    IDCLASS         reduce using rule 12 (asignar -> variables .)
    IDGLOBAL        reduce using rule 12 (asignar -> variables .)
    IDENTIFIER      reduce using rule 12 (asignar -> variables .)
    PUTS            reduce using rule 12 (asignar -> variables .)
    ARRAY           reduce using rule 12 (asignar -> variables .)
    LSQBRACKET      reduce using rule 12 (asignar -> variables .)
    LBRACKET        reduce using rule 12 (asignar -> variables .)
    HASH            reduce using rule 12 (asignar -> variables .)
    FOR             reduce using rule 12 (asignar -> variables .)
    TRUE            reduce using rule 12 (asignar -> variables .)
    FALSE           reduce using rule 12 (asignar -> variables .)
    NIL             reduce using rule 12 (asignar -> variables .)
    IF              reduce using rule 12 (asignar -> variables .)
    WHILE           reduce using rule 12 (asignar -> variables .)
    NUMBER          reduce using rule 12 (asignar -> variables .)
    FLOAT           reduce using rule 12 (asignar -> variables .)
    NUML            reduce using rule 12 (asignar -> variables .)
    STRING          reduce using rule 12 (asignar -> variables .)
    STRINGV         reduce using rule 12 (asignar -> variables .)
    BREAK           reduce using rule 12 (asignar -> variables .)
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)
    COMPARE         reduce using rule 95 (term -> variables .)
    LESS            reduce using rule 95 (term -> variables .)
    GREATER         reduce using rule 95 (term -> variables .)
    GREQUAL         reduce using rule 95 (term -> variables .)
    LSEQUAL         reduce using rule 95 (term -> variables .)
    NOTEQUAL        reduce using rule 95 (term -> variables .)
    ASSIGN          shift and go to state 70
    POINT           shift and go to state 71

  ! $end            [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! END             [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! ELSE            [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! RETURN          [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! IDLOCAL         [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! IDINSTANCE      [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! IDCLASS         [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! IDGLOBAL        [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! IDENTIFIER      [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! PUTS            [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! ARRAY           [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! LSQBRACKET      [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! LBRACKET        [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! HASH            [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! FOR             [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! TRUE            [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! FALSE           [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! NIL             [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! IF              [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! WHILE           [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! NUMBER          [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! FLOAT           [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! NUML            [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! STRING          [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! STRINGV         [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! BREAK           [ reduce using rule 73 (assigns -> IDENTIFIER ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 12 (asignar -> variables .) ]
  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! $end            [ reduce using rule 95 (term -> variables .) ]
  ! END             [ reduce using rule 95 (term -> variables .) ]
  ! ELSE            [ reduce using rule 95 (term -> variables .) ]
  ! RETURN          [ reduce using rule 95 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 95 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 95 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 95 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 95 (term -> variables .) ]
  ! IDENTIFIER      [ reduce using rule 95 (term -> variables .) ]
  ! PUTS            [ reduce using rule 95 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 95 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 95 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 95 (term -> variables .) ]
  ! HASH            [ reduce using rule 95 (term -> variables .) ]
  ! FOR             [ reduce using rule 95 (term -> variables .) ]
  ! TRUE            [ reduce using rule 95 (term -> variables .) ]
  ! FALSE           [ reduce using rule 95 (term -> variables .) ]
  ! NIL             [ reduce using rule 95 (term -> variables .) ]
  ! IF              [ reduce using rule 95 (term -> variables .) ]
  ! WHILE           [ reduce using rule 95 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 95 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 95 (term -> variables .) ]
  ! NUML            [ reduce using rule 95 (term -> variables .) ]
  ! STRING          [ reduce using rule 95 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 95 (term -> variables .) ]
  ! BREAK           [ reduce using rule 95 (term -> variables .) ]
  ! COMPARE         [ reduce using rule 159 (value2 -> variables .) ]
  ! LESS            [ reduce using rule 159 (value2 -> variables .) ]
  ! GREATER         [ reduce using rule 159 (value2 -> variables .) ]
  ! GREQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! LSEQUAL         [ reduce using rule 159 (value2 -> variables .) ]
  ! NOTEQUAL        [ reduce using rule 159 (value2 -> variables .) ]


state 179

    (78) assigns -> IDENTIFIER ASSIGN asignar .

    $end            reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    END             reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    ELSE            reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    RETURN          reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    IDLOCAL         reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    IDINSTANCE      reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    IDCLASS         reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    IDGLOBAL        reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    IDENTIFIER      reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    PUTS            reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    ARRAY           reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    LSQBRACKET      reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    LBRACKET        reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    HASH            reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    FOR             reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    TRUE            reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    FALSE           reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    NIL             reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    IF              reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    WHILE           reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    NUMBER          reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    FLOAT           reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    NUML            reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    MINUS           reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    STRING          reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    STRINGV         reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)
    BREAK           reduce using rule 78 (assigns -> IDENTIFIER ASSIGN asignar .)


state 180

    (164) reglaSemanticaComparaciones -> value2 COMPARE value2 .

    ANDS            reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    ORS             reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    $end            reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    END             reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    ELSE            reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    RETURN          reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    IDLOCAL         reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    IDINSTANCE      reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    IDCLASS         reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    IDGLOBAL        reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    IDENTIFIER      reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    PUTS            reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    ARRAY           reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    LSQBRACKET      reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    LBRACKET        reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    HASH            reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    FOR             reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    TRUE            reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    FALSE           reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    NIL             reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    IF              reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    WHILE           reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    NUMBER          reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    FLOAT           reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    NUML            reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    MINUS           reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    STRING          reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    STRINGV         reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)
    BREAK           reduce using rule 164 (reglaSemanticaComparaciones -> value2 COMPARE value2 .)


state 181

    (165) reglaSemanticaComparaciones -> value2 LESS value2 .

    ANDS            reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    ORS             reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    $end            reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    END             reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    ELSE            reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    RETURN          reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    IDLOCAL         reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    IDINSTANCE      reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    IDCLASS         reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    IDGLOBAL        reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    IDENTIFIER      reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    PUTS            reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    ARRAY           reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    LSQBRACKET      reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    LBRACKET        reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    HASH            reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    FOR             reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    TRUE            reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    FALSE           reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    NIL             reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    IF              reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    WHILE           reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    NUMBER          reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    FLOAT           reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    NUML            reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    MINUS           reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    STRING          reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    STRINGV         reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)
    BREAK           reduce using rule 165 (reglaSemanticaComparaciones -> value2 LESS value2 .)


state 182

    (166) reglaSemanticaComparaciones -> value2 GREATER value2 .

    ANDS            reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    ORS             reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    $end            reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    END             reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    ELSE            reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    RETURN          reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    IDLOCAL         reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    IDINSTANCE      reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    IDCLASS         reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    IDGLOBAL        reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    IDENTIFIER      reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    PUTS            reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    ARRAY           reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    LSQBRACKET      reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    LBRACKET        reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    HASH            reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    FOR             reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    TRUE            reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    FALSE           reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    NIL             reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    IF              reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    WHILE           reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    NUMBER          reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    FLOAT           reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    NUML            reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    MINUS           reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    STRING          reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    STRINGV         reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)
    BREAK           reduce using rule 166 (reglaSemanticaComparaciones -> value2 GREATER value2 .)


state 183

    (167) reglaSemanticaComparaciones -> value2 GREQUAL value2 .

    ANDS            reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    ORS             reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    $end            reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    END             reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    ELSE            reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    RETURN          reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    IDLOCAL         reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    IDINSTANCE      reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    IDCLASS         reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    IDGLOBAL        reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    IDENTIFIER      reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    PUTS            reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    ARRAY           reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    LSQBRACKET      reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    LBRACKET        reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    HASH            reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    FOR             reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    TRUE            reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    FALSE           reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    NIL             reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    IF              reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    WHILE           reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    NUMBER          reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    FLOAT           reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    NUML            reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    MINUS           reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    STRING          reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    STRINGV         reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)
    BREAK           reduce using rule 167 (reglaSemanticaComparaciones -> value2 GREQUAL value2 .)


state 184

    (168) reglaSemanticaComparaciones -> value2 LSEQUAL value2 .

    ANDS            reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    ORS             reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    $end            reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    END             reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    ELSE            reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    RETURN          reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    IDLOCAL         reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    IDINSTANCE      reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    IDCLASS         reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    IDGLOBAL        reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    IDENTIFIER      reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    PUTS            reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    ARRAY           reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    LSQBRACKET      reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    LBRACKET        reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    HASH            reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    FOR             reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    TRUE            reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    FALSE           reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    NIL             reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    IF              reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    WHILE           reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    NUMBER          reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    FLOAT           reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    NUML            reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    MINUS           reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    STRING          reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    STRINGV         reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)
    BREAK           reduce using rule 168 (reglaSemanticaComparaciones -> value2 LSEQUAL value2 .)


state 185

    (169) reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .

    ANDS            reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    ORS             reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    $end            reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    END             reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    ELSE            reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    RETURN          reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    IDLOCAL         reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    IDINSTANCE      reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    IDCLASS         reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    IDGLOBAL        reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    IDENTIFIER      reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    PUTS            reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    ARRAY           reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    LSQBRACKET      reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    LBRACKET        reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    HASH            reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    FOR             reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    TRUE            reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    FALSE           reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    NIL             reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    IF              reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    WHILE           reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    NUMBER          reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    FLOAT           reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    NUML            reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    MINUS           reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    STRING          reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    STRINGV         reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)
    BREAK           reduce using rule 169 (reglaSemanticaComparaciones -> value2 NOTEQUAL value2 .)


state 186

    (138) estructurasControl -> FOR IDLOCAL IN . factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> FOR IDLOCAL IN . factor POINT POINT factor DO forcontent END
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    factor                         shift and go to state 237

state 187

    (56) sentenIF -> IF variables comparador . term
    (57) sentenifp -> IF variables comparador . term algoritmo END
    (58) sentenifelse -> IF variables comparador . term algoritmo ELSE algoritmo END
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89

    variables                      shift and go to state 122
    term                           shift and go to state 238
    factor                         shift and go to state 36

state 188

    (132) comparador -> COMPARE .

    NUMBER          reduce using rule 132 (comparador -> COMPARE .)
    FLOAT           reduce using rule 132 (comparador -> COMPARE .)
    NUML            reduce using rule 132 (comparador -> COMPARE .)
    MINUS           reduce using rule 132 (comparador -> COMPARE .)
    IDLOCAL         reduce using rule 132 (comparador -> COMPARE .)
    IDINSTANCE      reduce using rule 132 (comparador -> COMPARE .)
    IDCLASS         reduce using rule 132 (comparador -> COMPARE .)
    IDGLOBAL        reduce using rule 132 (comparador -> COMPARE .)
    IDENTIFIER      reduce using rule 132 (comparador -> COMPARE .)


state 189

    (133) comparador -> GREQUAL .

    NUMBER          reduce using rule 133 (comparador -> GREQUAL .)
    FLOAT           reduce using rule 133 (comparador -> GREQUAL .)
    NUML            reduce using rule 133 (comparador -> GREQUAL .)
    MINUS           reduce using rule 133 (comparador -> GREQUAL .)
    IDLOCAL         reduce using rule 133 (comparador -> GREQUAL .)
    IDINSTANCE      reduce using rule 133 (comparador -> GREQUAL .)
    IDCLASS         reduce using rule 133 (comparador -> GREQUAL .)
    IDGLOBAL        reduce using rule 133 (comparador -> GREQUAL .)
    IDENTIFIER      reduce using rule 133 (comparador -> GREQUAL .)


state 190

    (134) comparador -> LSEQUAL .

    NUMBER          reduce using rule 134 (comparador -> LSEQUAL .)
    FLOAT           reduce using rule 134 (comparador -> LSEQUAL .)
    NUML            reduce using rule 134 (comparador -> LSEQUAL .)
    MINUS           reduce using rule 134 (comparador -> LSEQUAL .)
    IDLOCAL         reduce using rule 134 (comparador -> LSEQUAL .)
    IDINSTANCE      reduce using rule 134 (comparador -> LSEQUAL .)
    IDCLASS         reduce using rule 134 (comparador -> LSEQUAL .)
    IDGLOBAL        reduce using rule 134 (comparador -> LSEQUAL .)
    IDENTIFIER      reduce using rule 134 (comparador -> LSEQUAL .)


state 191

    (135) comparador -> NOTEQUAL .

    NUMBER          reduce using rule 135 (comparador -> NOTEQUAL .)
    FLOAT           reduce using rule 135 (comparador -> NOTEQUAL .)
    NUML            reduce using rule 135 (comparador -> NOTEQUAL .)
    MINUS           reduce using rule 135 (comparador -> NOTEQUAL .)
    IDLOCAL         reduce using rule 135 (comparador -> NOTEQUAL .)
    IDINSTANCE      reduce using rule 135 (comparador -> NOTEQUAL .)
    IDCLASS         reduce using rule 135 (comparador -> NOTEQUAL .)
    IDGLOBAL        reduce using rule 135 (comparador -> NOTEQUAL .)
    IDENTIFIER      reduce using rule 135 (comparador -> NOTEQUAL .)


state 192

    (136) comparador -> LESS .

    NUMBER          reduce using rule 136 (comparador -> LESS .)
    FLOAT           reduce using rule 136 (comparador -> LESS .)
    NUML            reduce using rule 136 (comparador -> LESS .)
    MINUS           reduce using rule 136 (comparador -> LESS .)
    IDLOCAL         reduce using rule 136 (comparador -> LESS .)
    IDINSTANCE      reduce using rule 136 (comparador -> LESS .)
    IDCLASS         reduce using rule 136 (comparador -> LESS .)
    IDGLOBAL        reduce using rule 136 (comparador -> LESS .)
    IDENTIFIER      reduce using rule 136 (comparador -> LESS .)


state 193

    (137) comparador -> GREATER .

    NUMBER          reduce using rule 137 (comparador -> GREATER .)
    FLOAT           reduce using rule 137 (comparador -> GREATER .)
    NUML            reduce using rule 137 (comparador -> GREATER .)
    MINUS           reduce using rule 137 (comparador -> GREATER .)
    IDLOCAL         reduce using rule 137 (comparador -> GREATER .)
    IDINSTANCE      reduce using rule 137 (comparador -> GREATER .)
    IDCLASS         reduce using rule 137 (comparador -> GREATER .)
    IDGLOBAL        reduce using rule 137 (comparador -> GREATER .)
    IDENTIFIER      reduce using rule 137 (comparador -> GREATER .)


state 194

    (50) algoritmo -> variables .
    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression
    (83) assigns -> variables . ASSIGNPLUS expression
    (84) assigns -> variables . ASSIGNPLUS variables
    (85) assigns -> variables . ASSIGNMIN expression
    (86) assigns -> variables . ASSIGNMIN variables
    (95) term -> variables .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for END resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 50 (algoritmo -> variables .)
    END             reduce using rule 50 (algoritmo -> variables .)
    ELSE            reduce using rule 50 (algoritmo -> variables .)
    RETURN          reduce using rule 50 (algoritmo -> variables .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    ASSIGNPLUS      shift and go to state 72
    ASSIGNMIN       shift and go to state 73
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)

  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! END             [ reduce using rule 95 (term -> variables .) ]
  ! ELSE            [ reduce using rule 95 (term -> variables .) ]
  ! RETURN          [ reduce using rule 95 (term -> variables .) ]


state 195

    (52) sentenWHILE -> WHILE variables comparador . variables algoritmo END
    (53) sentenWHILE -> WHILE variables comparador . expression algoritmo END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    variables                      shift and go to state 239
    expression                     shift and go to state 240
    term                           shift and go to state 83
    factor                         shift and go to state 36

state 196

    (55) sentenWHILE -> WHILE variables algoritmo . END

    END             shift and go to state 241


state 197

    (39) algoritmo -> expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term

    END             reduce using rule 39 (algoritmo -> expression .)
    ELSE            reduce using rule 39 (algoritmo -> expression .)
    RETURN          reduce using rule 39 (algoritmo -> expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63


state 198

    (40) algoritmo -> metodocadena .

    END             reduce using rule 40 (algoritmo -> metodocadena .)
    ELSE            reduce using rule 40 (algoritmo -> metodocadena .)
    RETURN          reduce using rule 40 (algoritmo -> metodocadena .)
    IDLOCAL         reduce using rule 40 (algoritmo -> metodocadena .)
    IDINSTANCE      reduce using rule 40 (algoritmo -> metodocadena .)
    IDCLASS         reduce using rule 40 (algoritmo -> metodocadena .)
    IDGLOBAL        reduce using rule 40 (algoritmo -> metodocadena .)
    IDENTIFIER      reduce using rule 40 (algoritmo -> metodocadena .)
    PUTS            reduce using rule 40 (algoritmo -> metodocadena .)
    ARRAY           reduce using rule 40 (algoritmo -> metodocadena .)
    LSQBRACKET      reduce using rule 40 (algoritmo -> metodocadena .)
    LBRACKET        reduce using rule 40 (algoritmo -> metodocadena .)
    HASH            reduce using rule 40 (algoritmo -> metodocadena .)
    FOR             reduce using rule 40 (algoritmo -> metodocadena .)
    TRUE            reduce using rule 40 (algoritmo -> metodocadena .)
    FALSE           reduce using rule 40 (algoritmo -> metodocadena .)
    NIL             reduce using rule 40 (algoritmo -> metodocadena .)
    IF              reduce using rule 40 (algoritmo -> metodocadena .)
    WHILE           reduce using rule 40 (algoritmo -> metodocadena .)
    NUMBER          reduce using rule 40 (algoritmo -> metodocadena .)
    FLOAT           reduce using rule 40 (algoritmo -> metodocadena .)
    NUML            reduce using rule 40 (algoritmo -> metodocadena .)
    MINUS           reduce using rule 40 (algoritmo -> metodocadena .)
    STRING          reduce using rule 40 (algoritmo -> metodocadena .)
    STRINGV         reduce using rule 40 (algoritmo -> metodocadena .)
    BREAK           reduce using rule 40 (algoritmo -> metodocadena .)


state 199

    (41) algoritmo -> arreglo .
    (122) metodosarreglo -> arreglo . POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> arreglo . LSQBRACKET factor RSQBRACKET

  ! shift/reduce conflict for LSQBRACKET resolved as shift
    END             reduce using rule 41 (algoritmo -> arreglo .)
    ELSE            reduce using rule 41 (algoritmo -> arreglo .)
    RETURN          reduce using rule 41 (algoritmo -> arreglo .)
    IDLOCAL         reduce using rule 41 (algoritmo -> arreglo .)
    IDINSTANCE      reduce using rule 41 (algoritmo -> arreglo .)
    IDCLASS         reduce using rule 41 (algoritmo -> arreglo .)
    IDGLOBAL        reduce using rule 41 (algoritmo -> arreglo .)
    IDENTIFIER      reduce using rule 41 (algoritmo -> arreglo .)
    PUTS            reduce using rule 41 (algoritmo -> arreglo .)
    ARRAY           reduce using rule 41 (algoritmo -> arreglo .)
    LBRACKET        reduce using rule 41 (algoritmo -> arreglo .)
    HASH            reduce using rule 41 (algoritmo -> arreglo .)
    FOR             reduce using rule 41 (algoritmo -> arreglo .)
    TRUE            reduce using rule 41 (algoritmo -> arreglo .)
    FALSE           reduce using rule 41 (algoritmo -> arreglo .)
    NIL             reduce using rule 41 (algoritmo -> arreglo .)
    IF              reduce using rule 41 (algoritmo -> arreglo .)
    WHILE           reduce using rule 41 (algoritmo -> arreglo .)
    NUMBER          reduce using rule 41 (algoritmo -> arreglo .)
    FLOAT           reduce using rule 41 (algoritmo -> arreglo .)
    NUML            reduce using rule 41 (algoritmo -> arreglo .)
    MINUS           reduce using rule 41 (algoritmo -> arreglo .)
    STRING          reduce using rule 41 (algoritmo -> arreglo .)
    STRINGV         reduce using rule 41 (algoritmo -> arreglo .)
    BREAK           reduce using rule 41 (algoritmo -> arreglo .)
    POINT           shift and go to state 66
    LSQBRACKET      shift and go to state 67

  ! LSQBRACKET      [ reduce using rule 41 (algoritmo -> arreglo .) ]


state 200

    (42) algoritmo -> metodosarreglo .

    END             reduce using rule 42 (algoritmo -> metodosarreglo .)
    ELSE            reduce using rule 42 (algoritmo -> metodosarreglo .)
    RETURN          reduce using rule 42 (algoritmo -> metodosarreglo .)
    IDLOCAL         reduce using rule 42 (algoritmo -> metodosarreglo .)
    IDINSTANCE      reduce using rule 42 (algoritmo -> metodosarreglo .)
    IDCLASS         reduce using rule 42 (algoritmo -> metodosarreglo .)
    IDGLOBAL        reduce using rule 42 (algoritmo -> metodosarreglo .)
    IDENTIFIER      reduce using rule 42 (algoritmo -> metodosarreglo .)
    PUTS            reduce using rule 42 (algoritmo -> metodosarreglo .)
    ARRAY           reduce using rule 42 (algoritmo -> metodosarreglo .)
    LSQBRACKET      reduce using rule 42 (algoritmo -> metodosarreglo .)
    LBRACKET        reduce using rule 42 (algoritmo -> metodosarreglo .)
    HASH            reduce using rule 42 (algoritmo -> metodosarreglo .)
    FOR             reduce using rule 42 (algoritmo -> metodosarreglo .)
    TRUE            reduce using rule 42 (algoritmo -> metodosarreglo .)
    FALSE           reduce using rule 42 (algoritmo -> metodosarreglo .)
    NIL             reduce using rule 42 (algoritmo -> metodosarreglo .)
    IF              reduce using rule 42 (algoritmo -> metodosarreglo .)
    WHILE           reduce using rule 42 (algoritmo -> metodosarreglo .)
    NUMBER          reduce using rule 42 (algoritmo -> metodosarreglo .)
    FLOAT           reduce using rule 42 (algoritmo -> metodosarreglo .)
    NUML            reduce using rule 42 (algoritmo -> metodosarreglo .)
    MINUS           reduce using rule 42 (algoritmo -> metodosarreglo .)
    STRING          reduce using rule 42 (algoritmo -> metodosarreglo .)
    STRINGV         reduce using rule 42 (algoritmo -> metodosarreglo .)
    BREAK           reduce using rule 42 (algoritmo -> metodosarreglo .)


state 201

    (43) algoritmo -> hash .

    END             reduce using rule 43 (algoritmo -> hash .)
    ELSE            reduce using rule 43 (algoritmo -> hash .)
    RETURN          reduce using rule 43 (algoritmo -> hash .)
    IDLOCAL         reduce using rule 43 (algoritmo -> hash .)
    IDINSTANCE      reduce using rule 43 (algoritmo -> hash .)
    IDCLASS         reduce using rule 43 (algoritmo -> hash .)
    IDGLOBAL        reduce using rule 43 (algoritmo -> hash .)
    IDENTIFIER      reduce using rule 43 (algoritmo -> hash .)
    PUTS            reduce using rule 43 (algoritmo -> hash .)
    ARRAY           reduce using rule 43 (algoritmo -> hash .)
    LSQBRACKET      reduce using rule 43 (algoritmo -> hash .)
    LBRACKET        reduce using rule 43 (algoritmo -> hash .)
    HASH            reduce using rule 43 (algoritmo -> hash .)
    FOR             reduce using rule 43 (algoritmo -> hash .)
    TRUE            reduce using rule 43 (algoritmo -> hash .)
    FALSE           reduce using rule 43 (algoritmo -> hash .)
    NIL             reduce using rule 43 (algoritmo -> hash .)
    IF              reduce using rule 43 (algoritmo -> hash .)
    WHILE           reduce using rule 43 (algoritmo -> hash .)
    NUMBER          reduce using rule 43 (algoritmo -> hash .)
    FLOAT           reduce using rule 43 (algoritmo -> hash .)
    NUML            reduce using rule 43 (algoritmo -> hash .)
    MINUS           reduce using rule 43 (algoritmo -> hash .)
    STRING          reduce using rule 43 (algoritmo -> hash .)
    STRINGV         reduce using rule 43 (algoritmo -> hash .)
    BREAK           reduce using rule 43 (algoritmo -> hash .)


state 202

    (44) algoritmo -> estructurasControl .

    END             reduce using rule 44 (algoritmo -> estructurasControl .)
    ELSE            reduce using rule 44 (algoritmo -> estructurasControl .)
    RETURN          reduce using rule 44 (algoritmo -> estructurasControl .)
    IDLOCAL         reduce using rule 44 (algoritmo -> estructurasControl .)
    IDINSTANCE      reduce using rule 44 (algoritmo -> estructurasControl .)
    IDCLASS         reduce using rule 44 (algoritmo -> estructurasControl .)
    IDGLOBAL        reduce using rule 44 (algoritmo -> estructurasControl .)
    IDENTIFIER      reduce using rule 44 (algoritmo -> estructurasControl .)
    PUTS            reduce using rule 44 (algoritmo -> estructurasControl .)
    ARRAY           reduce using rule 44 (algoritmo -> estructurasControl .)
    LSQBRACKET      reduce using rule 44 (algoritmo -> estructurasControl .)
    LBRACKET        reduce using rule 44 (algoritmo -> estructurasControl .)
    HASH            reduce using rule 44 (algoritmo -> estructurasControl .)
    FOR             reduce using rule 44 (algoritmo -> estructurasControl .)
    TRUE            reduce using rule 44 (algoritmo -> estructurasControl .)
    FALSE           reduce using rule 44 (algoritmo -> estructurasControl .)
    NIL             reduce using rule 44 (algoritmo -> estructurasControl .)
    IF              reduce using rule 44 (algoritmo -> estructurasControl .)
    WHILE           reduce using rule 44 (algoritmo -> estructurasControl .)
    NUMBER          reduce using rule 44 (algoritmo -> estructurasControl .)
    FLOAT           reduce using rule 44 (algoritmo -> estructurasControl .)
    NUML            reduce using rule 44 (algoritmo -> estructurasControl .)
    MINUS           reduce using rule 44 (algoritmo -> estructurasControl .)
    STRING          reduce using rule 44 (algoritmo -> estructurasControl .)
    STRINGV         reduce using rule 44 (algoritmo -> estructurasControl .)
    BREAK           reduce using rule 44 (algoritmo -> estructurasControl .)


state 203

    (45) algoritmo -> boolean .

    END             reduce using rule 45 (algoritmo -> boolean .)
    ELSE            reduce using rule 45 (algoritmo -> boolean .)
    RETURN          reduce using rule 45 (algoritmo -> boolean .)
    IDLOCAL         reduce using rule 45 (algoritmo -> boolean .)
    IDINSTANCE      reduce using rule 45 (algoritmo -> boolean .)
    IDCLASS         reduce using rule 45 (algoritmo -> boolean .)
    IDGLOBAL        reduce using rule 45 (algoritmo -> boolean .)
    IDENTIFIER      reduce using rule 45 (algoritmo -> boolean .)
    PUTS            reduce using rule 45 (algoritmo -> boolean .)
    ARRAY           reduce using rule 45 (algoritmo -> boolean .)
    LSQBRACKET      reduce using rule 45 (algoritmo -> boolean .)
    LBRACKET        reduce using rule 45 (algoritmo -> boolean .)
    HASH            reduce using rule 45 (algoritmo -> boolean .)
    FOR             reduce using rule 45 (algoritmo -> boolean .)
    TRUE            reduce using rule 45 (algoritmo -> boolean .)
    FALSE           reduce using rule 45 (algoritmo -> boolean .)
    NIL             reduce using rule 45 (algoritmo -> boolean .)
    IF              reduce using rule 45 (algoritmo -> boolean .)
    WHILE           reduce using rule 45 (algoritmo -> boolean .)
    NUMBER          reduce using rule 45 (algoritmo -> boolean .)
    FLOAT           reduce using rule 45 (algoritmo -> boolean .)
    NUML            reduce using rule 45 (algoritmo -> boolean .)
    MINUS           reduce using rule 45 (algoritmo -> boolean .)
    STRING          reduce using rule 45 (algoritmo -> boolean .)
    STRINGV         reduce using rule 45 (algoritmo -> boolean .)
    BREAK           reduce using rule 45 (algoritmo -> boolean .)


state 204

    (46) algoritmo -> assigns .

    END             reduce using rule 46 (algoritmo -> assigns .)
    ELSE            reduce using rule 46 (algoritmo -> assigns .)
    RETURN          reduce using rule 46 (algoritmo -> assigns .)
    IDLOCAL         reduce using rule 46 (algoritmo -> assigns .)
    IDINSTANCE      reduce using rule 46 (algoritmo -> assigns .)
    IDCLASS         reduce using rule 46 (algoritmo -> assigns .)
    IDGLOBAL        reduce using rule 46 (algoritmo -> assigns .)
    IDENTIFIER      reduce using rule 46 (algoritmo -> assigns .)
    PUTS            reduce using rule 46 (algoritmo -> assigns .)
    ARRAY           reduce using rule 46 (algoritmo -> assigns .)
    LSQBRACKET      reduce using rule 46 (algoritmo -> assigns .)
    LBRACKET        reduce using rule 46 (algoritmo -> assigns .)
    HASH            reduce using rule 46 (algoritmo -> assigns .)
    FOR             reduce using rule 46 (algoritmo -> assigns .)
    TRUE            reduce using rule 46 (algoritmo -> assigns .)
    FALSE           reduce using rule 46 (algoritmo -> assigns .)
    NIL             reduce using rule 46 (algoritmo -> assigns .)
    IF              reduce using rule 46 (algoritmo -> assigns .)
    WHILE           reduce using rule 46 (algoritmo -> assigns .)
    NUMBER          reduce using rule 46 (algoritmo -> assigns .)
    FLOAT           reduce using rule 46 (algoritmo -> assigns .)
    NUML            reduce using rule 46 (algoritmo -> assigns .)
    MINUS           reduce using rule 46 (algoritmo -> assigns .)
    STRING          reduce using rule 46 (algoritmo -> assigns .)
    STRINGV         reduce using rule 46 (algoritmo -> assigns .)
    BREAK           reduce using rule 46 (algoritmo -> assigns .)


state 205

    (47) algoritmo -> sentenIF .

    END             reduce using rule 47 (algoritmo -> sentenIF .)
    ELSE            reduce using rule 47 (algoritmo -> sentenIF .)
    RETURN          reduce using rule 47 (algoritmo -> sentenIF .)
    IDLOCAL         reduce using rule 47 (algoritmo -> sentenIF .)
    IDINSTANCE      reduce using rule 47 (algoritmo -> sentenIF .)
    IDCLASS         reduce using rule 47 (algoritmo -> sentenIF .)
    IDGLOBAL        reduce using rule 47 (algoritmo -> sentenIF .)
    IDENTIFIER      reduce using rule 47 (algoritmo -> sentenIF .)
    PUTS            reduce using rule 47 (algoritmo -> sentenIF .)
    ARRAY           reduce using rule 47 (algoritmo -> sentenIF .)
    LSQBRACKET      reduce using rule 47 (algoritmo -> sentenIF .)
    LBRACKET        reduce using rule 47 (algoritmo -> sentenIF .)
    HASH            reduce using rule 47 (algoritmo -> sentenIF .)
    FOR             reduce using rule 47 (algoritmo -> sentenIF .)
    TRUE            reduce using rule 47 (algoritmo -> sentenIF .)
    FALSE           reduce using rule 47 (algoritmo -> sentenIF .)
    NIL             reduce using rule 47 (algoritmo -> sentenIF .)
    IF              reduce using rule 47 (algoritmo -> sentenIF .)
    WHILE           reduce using rule 47 (algoritmo -> sentenIF .)
    NUMBER          reduce using rule 47 (algoritmo -> sentenIF .)
    FLOAT           reduce using rule 47 (algoritmo -> sentenIF .)
    NUML            reduce using rule 47 (algoritmo -> sentenIF .)
    MINUS           reduce using rule 47 (algoritmo -> sentenIF .)
    STRING          reduce using rule 47 (algoritmo -> sentenIF .)
    STRINGV         reduce using rule 47 (algoritmo -> sentenIF .)
    BREAK           reduce using rule 47 (algoritmo -> sentenIF .)


state 206

    (48) algoritmo -> sentenifp .

    END             reduce using rule 48 (algoritmo -> sentenifp .)
    ELSE            reduce using rule 48 (algoritmo -> sentenifp .)
    RETURN          reduce using rule 48 (algoritmo -> sentenifp .)
    IDLOCAL         reduce using rule 48 (algoritmo -> sentenifp .)
    IDINSTANCE      reduce using rule 48 (algoritmo -> sentenifp .)
    IDCLASS         reduce using rule 48 (algoritmo -> sentenifp .)
    IDGLOBAL        reduce using rule 48 (algoritmo -> sentenifp .)
    IDENTIFIER      reduce using rule 48 (algoritmo -> sentenifp .)
    PUTS            reduce using rule 48 (algoritmo -> sentenifp .)
    ARRAY           reduce using rule 48 (algoritmo -> sentenifp .)
    LSQBRACKET      reduce using rule 48 (algoritmo -> sentenifp .)
    LBRACKET        reduce using rule 48 (algoritmo -> sentenifp .)
    HASH            reduce using rule 48 (algoritmo -> sentenifp .)
    FOR             reduce using rule 48 (algoritmo -> sentenifp .)
    TRUE            reduce using rule 48 (algoritmo -> sentenifp .)
    FALSE           reduce using rule 48 (algoritmo -> sentenifp .)
    NIL             reduce using rule 48 (algoritmo -> sentenifp .)
    IF              reduce using rule 48 (algoritmo -> sentenifp .)
    WHILE           reduce using rule 48 (algoritmo -> sentenifp .)
    NUMBER          reduce using rule 48 (algoritmo -> sentenifp .)
    FLOAT           reduce using rule 48 (algoritmo -> sentenifp .)
    NUML            reduce using rule 48 (algoritmo -> sentenifp .)
    MINUS           reduce using rule 48 (algoritmo -> sentenifp .)
    STRING          reduce using rule 48 (algoritmo -> sentenifp .)
    STRINGV         reduce using rule 48 (algoritmo -> sentenifp .)
    BREAK           reduce using rule 48 (algoritmo -> sentenifp .)


state 207

    (49) algoritmo -> sentenifelse .

    END             reduce using rule 49 (algoritmo -> sentenifelse .)
    ELSE            reduce using rule 49 (algoritmo -> sentenifelse .)
    RETURN          reduce using rule 49 (algoritmo -> sentenifelse .)
    IDLOCAL         reduce using rule 49 (algoritmo -> sentenifelse .)
    IDINSTANCE      reduce using rule 49 (algoritmo -> sentenifelse .)
    IDCLASS         reduce using rule 49 (algoritmo -> sentenifelse .)
    IDGLOBAL        reduce using rule 49 (algoritmo -> sentenifelse .)
    IDENTIFIER      reduce using rule 49 (algoritmo -> sentenifelse .)
    PUTS            reduce using rule 49 (algoritmo -> sentenifelse .)
    ARRAY           reduce using rule 49 (algoritmo -> sentenifelse .)
    LSQBRACKET      reduce using rule 49 (algoritmo -> sentenifelse .)
    LBRACKET        reduce using rule 49 (algoritmo -> sentenifelse .)
    HASH            reduce using rule 49 (algoritmo -> sentenifelse .)
    FOR             reduce using rule 49 (algoritmo -> sentenifelse .)
    TRUE            reduce using rule 49 (algoritmo -> sentenifelse .)
    FALSE           reduce using rule 49 (algoritmo -> sentenifelse .)
    NIL             reduce using rule 49 (algoritmo -> sentenifelse .)
    IF              reduce using rule 49 (algoritmo -> sentenifelse .)
    WHILE           reduce using rule 49 (algoritmo -> sentenifelse .)
    NUMBER          reduce using rule 49 (algoritmo -> sentenifelse .)
    FLOAT           reduce using rule 49 (algoritmo -> sentenifelse .)
    NUML            reduce using rule 49 (algoritmo -> sentenifelse .)
    MINUS           reduce using rule 49 (algoritmo -> sentenifelse .)
    STRING          reduce using rule 49 (algoritmo -> sentenifelse .)
    STRINGV         reduce using rule 49 (algoritmo -> sentenifelse .)
    BREAK           reduce using rule 49 (algoritmo -> sentenifelse .)


state 208

    (51) algoritmo -> sentenWHILE .

    END             reduce using rule 51 (algoritmo -> sentenWHILE .)
    ELSE            reduce using rule 51 (algoritmo -> sentenWHILE .)
    RETURN          reduce using rule 51 (algoritmo -> sentenWHILE .)
    IDLOCAL         reduce using rule 51 (algoritmo -> sentenWHILE .)
    IDINSTANCE      reduce using rule 51 (algoritmo -> sentenWHILE .)
    IDCLASS         reduce using rule 51 (algoritmo -> sentenWHILE .)
    IDGLOBAL        reduce using rule 51 (algoritmo -> sentenWHILE .)
    IDENTIFIER      reduce using rule 51 (algoritmo -> sentenWHILE .)
    PUTS            reduce using rule 51 (algoritmo -> sentenWHILE .)
    ARRAY           reduce using rule 51 (algoritmo -> sentenWHILE .)
    LSQBRACKET      reduce using rule 51 (algoritmo -> sentenWHILE .)
    LBRACKET        reduce using rule 51 (algoritmo -> sentenWHILE .)
    HASH            reduce using rule 51 (algoritmo -> sentenWHILE .)
    FOR             reduce using rule 51 (algoritmo -> sentenWHILE .)
    TRUE            reduce using rule 51 (algoritmo -> sentenWHILE .)
    FALSE           reduce using rule 51 (algoritmo -> sentenWHILE .)
    NIL             reduce using rule 51 (algoritmo -> sentenWHILE .)
    IF              reduce using rule 51 (algoritmo -> sentenWHILE .)
    WHILE           reduce using rule 51 (algoritmo -> sentenWHILE .)
    NUMBER          reduce using rule 51 (algoritmo -> sentenWHILE .)
    FLOAT           reduce using rule 51 (algoritmo -> sentenWHILE .)
    NUML            reduce using rule 51 (algoritmo -> sentenWHILE .)
    MINUS           reduce using rule 51 (algoritmo -> sentenWHILE .)
    STRING          reduce using rule 51 (algoritmo -> sentenWHILE .)
    STRINGV         reduce using rule 51 (algoritmo -> sentenWHILE .)
    BREAK           reduce using rule 51 (algoritmo -> sentenWHILE .)


state 209

    (109) metodocadena -> cadena . POINT EMPTY INTERROGATIVE
    (111) metodocadena -> cadena . POINT LENGTH

    POINT           shift and go to state 65


state 210

    (110) metodocadena -> string . POINT EMPTY INTERROGATIVE
    (112) metodocadena -> string . POINT LENGTH

    POINT           shift and go to state 64


state 211

    (174) metodocadena -> PUTS . cadena POINT LENGTH
    (175) metodocadena -> PUTS . string POINT LENGTH
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV

    STRING          shift and go to state 33
    STRINGV         shift and go to state 32

    cadena                         shift and go to state 242
    string                         shift and go to state 243

state 212

    (64) assigns -> IDLOCAL . ASSIGN expression
    (69) assigns -> IDLOCAL . ASSIGN variables
    (74) assigns -> IDLOCAL . ASSIGN asignar
    (79) assigns -> IDLOCAL . ASSIGN reglaSemanticaComparaciones
    (59) variables -> IDLOCAL .

    ASSIGN          shift and go to state 244
    PLUS            reduce using rule 59 (variables -> IDLOCAL .)
    MINUS           reduce using rule 59 (variables -> IDLOCAL .)
    ASSIGNPLUS      reduce using rule 59 (variables -> IDLOCAL .)
    ASSIGNMIN       reduce using rule 59 (variables -> IDLOCAL .)
    END             reduce using rule 59 (variables -> IDLOCAL .)
    DIVISION        reduce using rule 59 (variables -> IDLOCAL .)
    MOD             reduce using rule 59 (variables -> IDLOCAL .)
    MULT            reduce using rule 59 (variables -> IDLOCAL .)
    EXP             reduce using rule 59 (variables -> IDLOCAL .)
    ELSE            reduce using rule 59 (variables -> IDLOCAL .)
    RETURN          reduce using rule 59 (variables -> IDLOCAL .)


state 213

    (65) assigns -> IDINSTANCE . ASSIGN expression
    (70) assigns -> IDINSTANCE . ASSIGN variables
    (75) assigns -> IDINSTANCE . ASSIGN asignar
    (80) assigns -> IDINSTANCE . ASSIGN reglaSemanticaComparaciones
    (60) variables -> IDINSTANCE .

    ASSIGN          shift and go to state 99
    PLUS            reduce using rule 60 (variables -> IDINSTANCE .)
    MINUS           reduce using rule 60 (variables -> IDINSTANCE .)
    ASSIGNPLUS      reduce using rule 60 (variables -> IDINSTANCE .)
    ASSIGNMIN       reduce using rule 60 (variables -> IDINSTANCE .)
    END             reduce using rule 60 (variables -> IDINSTANCE .)
    DIVISION        reduce using rule 60 (variables -> IDINSTANCE .)
    MOD             reduce using rule 60 (variables -> IDINSTANCE .)
    MULT            reduce using rule 60 (variables -> IDINSTANCE .)
    EXP             reduce using rule 60 (variables -> IDINSTANCE .)
    ELSE            reduce using rule 60 (variables -> IDINSTANCE .)
    RETURN          reduce using rule 60 (variables -> IDINSTANCE .)


state 214

    (66) assigns -> IDCLASS . ASSIGN expression
    (71) assigns -> IDCLASS . ASSIGN variables
    (76) assigns -> IDCLASS . ASSIGN asignar
    (81) assigns -> IDCLASS . ASSIGN reglaSemanticaComparaciones
    (61) variables -> IDCLASS .

    ASSIGN          shift and go to state 100
    PLUS            reduce using rule 61 (variables -> IDCLASS .)
    MINUS           reduce using rule 61 (variables -> IDCLASS .)
    ASSIGNPLUS      reduce using rule 61 (variables -> IDCLASS .)
    ASSIGNMIN       reduce using rule 61 (variables -> IDCLASS .)
    END             reduce using rule 61 (variables -> IDCLASS .)
    DIVISION        reduce using rule 61 (variables -> IDCLASS .)
    MOD             reduce using rule 61 (variables -> IDCLASS .)
    MULT            reduce using rule 61 (variables -> IDCLASS .)
    EXP             reduce using rule 61 (variables -> IDCLASS .)
    ELSE            reduce using rule 61 (variables -> IDCLASS .)
    RETURN          reduce using rule 61 (variables -> IDCLASS .)


state 215

    (67) assigns -> IDGLOBAL . ASSIGN expression
    (72) assigns -> IDGLOBAL . ASSIGN variables
    (77) assigns -> IDGLOBAL . ASSIGN asignar
    (82) assigns -> IDGLOBAL . ASSIGN reglaSemanticaComparaciones
    (62) variables -> IDGLOBAL .

    ASSIGN          shift and go to state 101
    PLUS            reduce using rule 62 (variables -> IDGLOBAL .)
    MINUS           reduce using rule 62 (variables -> IDGLOBAL .)
    ASSIGNPLUS      reduce using rule 62 (variables -> IDGLOBAL .)
    ASSIGNMIN       reduce using rule 62 (variables -> IDGLOBAL .)
    END             reduce using rule 62 (variables -> IDGLOBAL .)
    DIVISION        reduce using rule 62 (variables -> IDGLOBAL .)
    MOD             reduce using rule 62 (variables -> IDGLOBAL .)
    MULT            reduce using rule 62 (variables -> IDGLOBAL .)
    EXP             reduce using rule 62 (variables -> IDGLOBAL .)
    ELSE            reduce using rule 62 (variables -> IDGLOBAL .)
    RETURN          reduce using rule 62 (variables -> IDGLOBAL .)


state 216

    (68) assigns -> IDENTIFIER . ASSIGN expression
    (73) assigns -> IDENTIFIER . ASSIGN variables
    (78) assigns -> IDENTIFIER . ASSIGN asignar
    (63) variables -> IDENTIFIER .

    ASSIGN          shift and go to state 102
    PLUS            reduce using rule 63 (variables -> IDENTIFIER .)
    MINUS           reduce using rule 63 (variables -> IDENTIFIER .)
    ASSIGNPLUS      reduce using rule 63 (variables -> IDENTIFIER .)
    ASSIGNMIN       reduce using rule 63 (variables -> IDENTIFIER .)
    END             reduce using rule 63 (variables -> IDENTIFIER .)
    DIVISION        reduce using rule 63 (variables -> IDENTIFIER .)
    MOD             reduce using rule 63 (variables -> IDENTIFIER .)
    MULT            reduce using rule 63 (variables -> IDENTIFIER .)
    EXP             reduce using rule 63 (variables -> IDENTIFIER .)
    ELSE            reduce using rule 63 (variables -> IDENTIFIER .)
    RETURN          reduce using rule 63 (variables -> IDENTIFIER .)


state 217

    (54) sentenWHILE -> WHILE boolean algoritmo . END

    END             shift and go to state 245


state 218

    (144) funcion1 -> DEF IDLOCAL LPARENTHESIS . fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (145) funcion1 -> DEF IDLOCAL LPARENTHESIS . fcontenido RPARENTHESIS algoritmo END
    (155) funcion2 -> DEF IDLOCAL LPARENTHESIS . valuedefect RPARENTHESIS algoritmo RETURN variables END
    (156) funcion2 -> DEF IDLOCAL LPARENTHESIS . valuedefect RPARENTHESIS algoritmo END
    (157) funcion3 -> DEF IDLOCAL LPARENTHESIS . MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END
    (158) funcion3 -> DEF IDLOCAL LPARENTHESIS . MULT IDLOCAL RPARENTHESIS algoritmo END
    (146) fcontenido -> . variables
    (147) fcontenido -> . variables COMMA fcontenido
    (152) valuedefect -> . variables ASSIGN values
    (153) valuedefect -> . variables COMMA fcontenido
    (154) valuedefect -> . variables COMMA valuedefect
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER

    MULT            shift and go to state 249
    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89

    fcontenido                     shift and go to state 246
    valuedefect                    shift and go to state 247
    variables                      shift and go to state 248

state 219

    (110) metodocadena -> string POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    END             reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    ELSE            reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    RETURN          reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDLOCAL         reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDINSTANCE      reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDCLASS         reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDGLOBAL        reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDENTIFIER      reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    PUTS            reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    ARRAY           reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    LSQBRACKET      reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    LBRACKET        reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    HASH            reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    FOR             reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    TRUE            reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    FALSE           reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    NIL             reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IF              reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    WHILE           reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    NUMBER          reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    FLOAT           reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    NUML            reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    MINUS           reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    STRING          reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    STRINGV         reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    BREAK           reduce using rule 110 (metodocadena -> string POINT EMPTY INTERROGATIVE .)


state 220

    (109) metodocadena -> cadena POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    END             reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    ELSE            reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    RETURN          reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDLOCAL         reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDINSTANCE      reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDCLASS         reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDGLOBAL        reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDENTIFIER      reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    PUTS            reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    ARRAY           reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    LSQBRACKET      reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    LBRACKET        reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    HASH            reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    FOR             reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    TRUE            reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    FALSE           reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    NIL             reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IF              reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    WHILE           reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    NUMBER          reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    FLOAT           reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    NUML            reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    MINUS           reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    STRING          reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    STRINGV         reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    BREAK           reduce using rule 109 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)


state 221

    (122) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS . arraycontent RPARENTHESIS
    (118) arraycontent -> . factor
    (119) arraycontent -> . string
    (120) arraycontent -> . factor COMMA arraycontent
    (121) arraycontent -> . string COMMA arraycontent
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (105) string -> . STRINGV

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    STRINGV         shift and go to state 32

    arraycontent                   shift and go to state 250
    factor                         shift and go to state 93
    string                         shift and go to state 94

state 222

    (123) metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .

    $end            reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    END             reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    ELSE            reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    RETURN          reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDLOCAL         reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDINSTANCE      reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDCLASS         reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDGLOBAL        reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDENTIFIER      reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    PUTS            reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    ARRAY           reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    LSQBRACKET      reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    LBRACKET        reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    HASH            reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    FOR             reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    TRUE            reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    FALSE           reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    NIL             reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IF              reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    WHILE           reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    NUMBER          reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    FLOAT           reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    NUML            reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    MINUS           reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    STRING          reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    STRINGV         reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    BREAK           reduce using rule 123 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)


state 223

    (130) metodohash -> variables ASSIGN hash POINT . LENGTH

    LENGTH          shift and go to state 251


state 224

    (107) cadena -> STRING POINT NEW LPARENTHESIS . string RPARENTHESIS
    (105) string -> . STRINGV

    STRINGV         shift and go to state 32

    string                         shift and go to state 252

state 225

    (108) cadena -> STRING LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    COMPARE         reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    LESS            reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    GREATER         reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    GREQUAL         reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    LSEQUAL         reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    NOTEQUAL        reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    END             reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    ELSE            reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    RETURN          reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDLOCAL         reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDINSTANCE      reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDCLASS         reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDGLOBAL        reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDENTIFIER      reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    PUTS            reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    ARRAY           reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    LSQBRACKET      reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    LBRACKET        reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    HASH            reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    FOR             reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    TRUE            reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    FALSE           reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    NIL             reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IF              reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    WHILE           reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    NUMBER          reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    FLOAT           reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    NUML            reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    MINUS           reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    STRING          reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    STRINGV         reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    BREAK           reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    ANDS            reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    ORS             reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 108 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)


state 226

    (174) metodocadena -> PUTS cadena POINT LENGTH .

    $end            reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    END             reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    ELSE            reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    RETURN          reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    IDLOCAL         reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    IDINSTANCE      reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    IDCLASS         reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    IDGLOBAL        reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    IDENTIFIER      reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    PUTS            reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    ARRAY           reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    LSQBRACKET      reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    LBRACKET        reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    HASH            reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    FOR             reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    TRUE            reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    FALSE           reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    NIL             reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    IF              reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    WHILE           reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    NUMBER          reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    FLOAT           reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    NUML            reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    MINUS           reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    STRING          reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    STRINGV         reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)
    BREAK           reduce using rule 174 (metodocadena -> PUTS cadena POINT LENGTH .)


state 227

    (172) metodocadenaSemantica -> PUTS cadena POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 253


state 228

    (175) metodocadena -> PUTS string POINT LENGTH .

    $end            reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    END             reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    ELSE            reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    RETURN          reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    IDLOCAL         reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    IDINSTANCE      reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    IDCLASS         reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    IDGLOBAL        reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    IDENTIFIER      reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    PUTS            reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    ARRAY           reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    LSQBRACKET      reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    LBRACKET        reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    HASH            reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    FOR             reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    TRUE            reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    FALSE           reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    NIL             reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    IF              reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    WHILE           reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    NUMBER          reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    FLOAT           reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    NUML            reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    MINUS           reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    STRING          reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    STRINGV         reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)
    BREAK           reduce using rule 175 (metodocadena -> PUTS string POINT LENGTH .)


state 229

    (173) metodocadenaSemantica -> PUTS string POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 254


state 230

    (114) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor RPARENTHESIS
    (115) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor COMMA arraycontent RPARENTHESIS
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    factor                         shift and go to state 255

state 231

    (116) arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    END             reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    ELSE            reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    RETURN          reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDLOCAL         reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDINSTANCE      reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDCLASS         reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDGLOBAL        reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDENTIFIER      reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    PUTS            reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    ARRAY           reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    LBRACKET        reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    HASH            reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    FOR             reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    TRUE            reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    FALSE           reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    NIL             reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IF              reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    WHILE           reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    NUMBER          reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    FLOAT           reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    NUML            reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    MINUS           reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    STRING          reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    STRINGV         reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    BREAK           reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    RPARENTHESIS    reduce using rule 116 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)


state 232

    (120) arraycontent -> factor COMMA arraycontent .

    RSQBRACKET      reduce using rule 120 (arraycontent -> factor COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 120 (arraycontent -> factor COMMA arraycontent .)


state 233

    (121) arraycontent -> string COMMA arraycontent .

    RSQBRACKET      reduce using rule 121 (arraycontent -> string COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 121 (arraycontent -> string COMMA arraycontent .)


state 234

    (126) hashcontent -> string ASSIGN GREATER . hashcontentvalue
    (127) hashcontent -> string ASSIGN GREATER . hashcontentvalue COMMA hashcontent
    (128) hashcontentvalue -> . factor
    (129) hashcontentvalue -> . string
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (105) string -> . STRINGV

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    STRINGV         shift and go to state 32

    string                         shift and go to state 256
    hashcontentvalue               shift and go to state 257
    factor                         shift and go to state 258

state 235

    (174) metodocadena -> PUTS cadena . POINT LENGTH
    (172) metodocadenaSemantica -> PUTS cadena . POINT EMPTY INTERROGATIVE

    POINT           shift and go to state 149


state 236

    (175) metodocadena -> PUTS string . POINT LENGTH
    (173) metodocadenaSemantica -> PUTS string . POINT EMPTY INTERROGATIVE

    POINT           shift and go to state 150


state 237

    (138) estructurasControl -> FOR IDLOCAL IN factor . POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> FOR IDLOCAL IN factor . POINT POINT factor DO forcontent END

    POINT           shift and go to state 259


state 238

    (56) sentenIF -> IF variables comparador term .
    (57) sentenifp -> IF variables comparador term . algoritmo END
    (58) sentenifelse -> IF variables comparador term . algoritmo ELSE algoritmo END
    (39) algoritmo -> . expression
    (40) algoritmo -> . metodocadena
    (41) algoritmo -> . arreglo
    (42) algoritmo -> . metodosarreglo
    (43) algoritmo -> . hash
    (44) algoritmo -> . estructurasControl
    (45) algoritmo -> . boolean
    (46) algoritmo -> . assigns
    (47) algoritmo -> . sentenIF
    (48) algoritmo -> . sentenifp
    (49) algoritmo -> . sentenifelse
    (50) algoritmo -> . variables
    (51) algoritmo -> . sentenWHILE
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (94) term -> . factor
    (95) term -> . variables
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

  ! shift/reduce conflict for PUTS resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for LSQBRACKET resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for HASH resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for IDLOCAL resolved as shift
  ! shift/reduce conflict for IDINSTANCE resolved as shift
  ! shift/reduce conflict for IDCLASS resolved as shift
  ! shift/reduce conflict for IDGLOBAL resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for STRINGV resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for NUML resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 56 (sentenIF -> IF variables comparador term .)
    END             reduce using rule 56 (sentenIF -> IF variables comparador term .)
    ELSE            reduce using rule 56 (sentenIF -> IF variables comparador term .)
    RETURN          reduce using rule 56 (sentenIF -> IF variables comparador term .)
    BREAK           reduce using rule 56 (sentenIF -> IF variables comparador term .)
    PUTS            shift and go to state 211
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    FOR             shift and go to state 49
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IDLOCAL         shift and go to state 212
    IDINSTANCE      shift and go to state 213
    IDCLASS         shift and go to state 214
    IDGLOBAL        shift and go to state 215
    IDENTIFIER      shift and go to state 216
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

  ! IDLOCAL         [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! IDINSTANCE      [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! IDCLASS         [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! IDGLOBAL        [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! IDENTIFIER      [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! PUTS            [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! ARRAY           [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! LSQBRACKET      [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! LBRACKET        [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! HASH            [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! FOR             [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! TRUE            [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! FALSE           [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! NIL             [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! IF              [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! WHILE           [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! NUMBER          [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! FLOAT           [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! NUML            [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! MINUS           [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! STRING          [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]
  ! STRINGV         [ reduce using rule 56 (sentenIF -> IF variables comparador term .) ]

    variables                      shift and go to state 194
    term                           shift and go to state 83
    algoritmo                      shift and go to state 260
    expression                     shift and go to state 197
    metodocadena                   shift and go to state 198
    arreglo                        shift and go to state 199
    metodosarreglo                 shift and go to state 200
    hash                           shift and go to state 201
    estructurasControl             shift and go to state 202
    boolean                        shift and go to state 203
    assigns                        shift and go to state 204
    sentenIF                       shift and go to state 205
    sentenifp                      shift and go to state 206
    sentenifelse                   shift and go to state 207
    sentenWHILE                    shift and go to state 208
    cadena                         shift and go to state 209
    string                         shift and go to state 210
    factor                         shift and go to state 36

state 239

    (52) sentenWHILE -> WHILE variables comparador variables . algoritmo END
    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression
    (95) term -> variables .
    (39) algoritmo -> . expression
    (40) algoritmo -> . metodocadena
    (41) algoritmo -> . arreglo
    (42) algoritmo -> . metodosarreglo
    (43) algoritmo -> . hash
    (44) algoritmo -> . estructurasControl
    (45) algoritmo -> . boolean
    (46) algoritmo -> . assigns
    (47) algoritmo -> . sentenIF
    (48) algoritmo -> . sentenifp
    (49) algoritmo -> . sentenifelse
    (50) algoritmo -> . variables
    (51) algoritmo -> . sentenWHILE
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (94) term -> . factor
    (95) term -> . variables
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PUTS resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for LSQBRACKET resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for HASH resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for IDLOCAL resolved as shift
  ! shift/reduce conflict for IDINSTANCE resolved as shift
  ! shift/reduce conflict for IDCLASS resolved as shift
  ! shift/reduce conflict for IDGLOBAL resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for STRINGV resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for NUML resolved as shift
    PLUS            shift and go to state 68
    MINUS           shift and go to state 262
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)
    PUTS            shift and go to state 211
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    FOR             shift and go to state 49
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IDLOCAL         shift and go to state 212
    IDINSTANCE      shift and go to state 213
    IDCLASS         shift and go to state 214
    IDGLOBAL        shift and go to state 215
    IDENTIFIER      shift and go to state 216
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57

  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! PUTS            [ reduce using rule 95 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 95 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 95 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 95 (term -> variables .) ]
  ! HASH            [ reduce using rule 95 (term -> variables .) ]
  ! FOR             [ reduce using rule 95 (term -> variables .) ]
  ! TRUE            [ reduce using rule 95 (term -> variables .) ]
  ! FALSE           [ reduce using rule 95 (term -> variables .) ]
  ! NIL             [ reduce using rule 95 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 95 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 95 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 95 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 95 (term -> variables .) ]
  ! IDENTIFIER      [ reduce using rule 95 (term -> variables .) ]
  ! IF              [ reduce using rule 95 (term -> variables .) ]
  ! WHILE           [ reduce using rule 95 (term -> variables .) ]
  ! STRING          [ reduce using rule 95 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 95 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 95 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 95 (term -> variables .) ]
  ! NUML            [ reduce using rule 95 (term -> variables .) ]

    variables                      shift and go to state 194
    algoritmo                      shift and go to state 261
    expression                     shift and go to state 197
    metodocadena                   shift and go to state 198
    arreglo                        shift and go to state 199
    metodosarreglo                 shift and go to state 200
    hash                           shift and go to state 201
    estructurasControl             shift and go to state 202
    boolean                        shift and go to state 203
    assigns                        shift and go to state 204
    sentenIF                       shift and go to state 205
    sentenifp                      shift and go to state 206
    sentenifelse                   shift and go to state 207
    sentenWHILE                    shift and go to state 208
    term                           shift and go to state 83
    cadena                         shift and go to state 209
    string                         shift and go to state 210
    factor                         shift and go to state 36

state 240

    (53) sentenWHILE -> WHILE variables comparador expression . algoritmo END
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term
    (39) algoritmo -> . expression
    (40) algoritmo -> . metodocadena
    (41) algoritmo -> . arreglo
    (42) algoritmo -> . metodosarreglo
    (43) algoritmo -> . hash
    (44) algoritmo -> . estructurasControl
    (45) algoritmo -> . boolean
    (46) algoritmo -> . assigns
    (47) algoritmo -> . sentenIF
    (48) algoritmo -> . sentenifp
    (49) algoritmo -> . sentenifelse
    (50) algoritmo -> . variables
    (51) algoritmo -> . sentenWHILE
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (94) term -> . factor
    (95) term -> . variables
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 264
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63
    PUTS            shift and go to state 211
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    FOR             shift and go to state 49
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IDLOCAL         shift and go to state 212
    IDINSTANCE      shift and go to state 213
    IDCLASS         shift and go to state 214
    IDGLOBAL        shift and go to state 215
    IDENTIFIER      shift and go to state 216
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57

    variables                      shift and go to state 194
    expression                     shift and go to state 197
    algoritmo                      shift and go to state 263
    term                           shift and go to state 83
    metodocadena                   shift and go to state 198
    arreglo                        shift and go to state 199
    metodosarreglo                 shift and go to state 200
    hash                           shift and go to state 201
    estructurasControl             shift and go to state 202
    boolean                        shift and go to state 203
    assigns                        shift and go to state 204
    sentenIF                       shift and go to state 205
    sentenifp                      shift and go to state 206
    sentenifelse                   shift and go to state 207
    sentenWHILE                    shift and go to state 208
    cadena                         shift and go to state 209
    string                         shift and go to state 210
    factor                         shift and go to state 36

state 241

    (55) sentenWHILE -> WHILE variables algoritmo END .

    $end            reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    END             reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    ELSE            reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    RETURN          reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    IDLOCAL         reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    IDINSTANCE      reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    IDCLASS         reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    IDGLOBAL        reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    IDENTIFIER      reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    PUTS            reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    ARRAY           reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    LSQBRACKET      reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    LBRACKET        reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    HASH            reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    FOR             reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    TRUE            reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    FALSE           reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    NIL             reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    IF              reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    WHILE           reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    NUMBER          reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    FLOAT           reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    NUML            reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    MINUS           reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    STRING          reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    STRINGV         reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)
    BREAK           reduce using rule 55 (sentenWHILE -> WHILE variables algoritmo END .)


state 242

    (174) metodocadena -> PUTS cadena . POINT LENGTH

    POINT           shift and go to state 265


state 243

    (175) metodocadena -> PUTS string . POINT LENGTH

    POINT           shift and go to state 266


state 244

    (64) assigns -> IDLOCAL ASSIGN . expression
    (69) assigns -> IDLOCAL ASSIGN . variables
    (74) assigns -> IDLOCAL ASSIGN . asignar
    (79) assigns -> IDLOCAL ASSIGN . reglaSemanticaComparaciones
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . reglaSemanticaComparaciones
    (14) asignar -> . metodocadenaSemantica
    (164) reglaSemanticaComparaciones -> . value2 COMPARE value2
    (165) reglaSemanticaComparaciones -> . value2 LESS value2
    (166) reglaSemanticaComparaciones -> . value2 GREATER value2
    (167) reglaSemanticaComparaciones -> . value2 GREQUAL value2
    (168) reglaSemanticaComparaciones -> . value2 LSEQUAL value2
    (169) reglaSemanticaComparaciones -> . value2 NOTEQUAL value2
    (170) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ANDS reglaSemanticaComparaciones
    (171) reglaSemanticaComparaciones -> . reglaSemanticaComparaciones ORS reglaSemanticaComparaciones
    (94) term -> . factor
    (95) term -> . variables
    (105) string -> . STRINGV
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (130) metodohash -> . variables ASSIGN hash POINT LENGTH
    (131) metodohash -> . variables POINT LENGTH
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (172) metodocadenaSemantica -> . PUTS cadena POINT EMPTY INTERROGATIVE
    (173) metodocadenaSemantica -> . PUTS string POINT EMPTY INTERROGATIVE
    (159) value2 -> . variables
    (160) value2 -> . boolean
    (161) value2 -> . term
    (162) value2 -> . expression
    (163) value2 -> . cadena
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    STRINGV         shift and go to state 32
    STRING          shift and go to state 33
    PUTS            shift and go to state 164
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    expression                     shift and go to state 160
    variables                      shift and go to state 161
    asignar                        shift and go to state 162
    reglaSemanticaComparaciones    shift and go to state 163
    term                           shift and go to state 30
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    boolean                        shift and go to state 12
    metodocadenaSemantica          shift and go to state 15
    value2                         shift and go to state 48
    factor                         shift and go to state 36

state 245

    (54) sentenWHILE -> WHILE boolean algoritmo END .

    $end            reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    END             reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    ELSE            reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    RETURN          reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDLOCAL         reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDINSTANCE      reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDCLASS         reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDGLOBAL        reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDENTIFIER      reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    PUTS            reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    ARRAY           reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    LSQBRACKET      reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    LBRACKET        reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    HASH            reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    FOR             reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    TRUE            reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    FALSE           reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    NIL             reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    IF              reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    WHILE           reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    NUMBER          reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    FLOAT           reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    NUML            reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    MINUS           reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    STRING          reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    STRINGV         reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)
    BREAK           reduce using rule 54 (sentenWHILE -> WHILE boolean algoritmo END .)


state 246

    (144) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido . RPARENTHESIS algoritmo RETURN IDLOCAL END
    (145) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido . RPARENTHESIS algoritmo END

    RPARENTHESIS    shift and go to state 267


state 247

    (155) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect . RPARENTHESIS algoritmo RETURN variables END
    (156) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect . RPARENTHESIS algoritmo END

    RPARENTHESIS    shift and go to state 268


state 248

    (146) fcontenido -> variables .
    (147) fcontenido -> variables . COMMA fcontenido
    (152) valuedefect -> variables . ASSIGN values
    (153) valuedefect -> variables . COMMA fcontenido
    (154) valuedefect -> variables . COMMA valuedefect

    RPARENTHESIS    reduce using rule 146 (fcontenido -> variables .)
    COMMA           shift and go to state 269
    ASSIGN          shift and go to state 270


state 249

    (157) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT . IDLOCAL RPARENTHESIS algoritmo RETURN variables END
    (158) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT . IDLOCAL RPARENTHESIS algoritmo END

    IDLOCAL         shift and go to state 271


state 250

    (122) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 272


state 251

    (130) metodohash -> variables ASSIGN hash POINT LENGTH .

    $end            reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    END             reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    ELSE            reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    RETURN          reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDLOCAL         reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDINSTANCE      reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDCLASS         reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDGLOBAL        reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDENTIFIER      reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    PUTS            reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    ARRAY           reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    LSQBRACKET      reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    LBRACKET        reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    HASH            reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    FOR             reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    TRUE            reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    FALSE           reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    NIL             reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IF              reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    WHILE           reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    NUMBER          reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    FLOAT           reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    NUML            reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    MINUS           reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    STRING          reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    STRINGV         reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    BREAK           reduce using rule 130 (metodohash -> variables ASSIGN hash POINT LENGTH .)


state 252

    (107) cadena -> STRING POINT NEW LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 273


state 253

    (172) metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    END             reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    ELSE            reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    RETURN          reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    IDLOCAL         reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    IDINSTANCE      reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    IDCLASS         reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    IDGLOBAL        reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    IDENTIFIER      reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    PUTS            reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    ARRAY           reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    LSQBRACKET      reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    LBRACKET        reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    HASH            reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    FOR             reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    TRUE            reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    FALSE           reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    NIL             reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    IF              reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    WHILE           reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    NUMBER          reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    FLOAT           reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    NUML            reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    MINUS           reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    STRING          reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    STRINGV         reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)
    BREAK           reduce using rule 172 (metodocadenaSemantica -> PUTS cadena POINT EMPTY INTERROGATIVE .)


state 254

    (173) metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    END             reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    ELSE            reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    RETURN          reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    IDLOCAL         reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    IDINSTANCE      reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    IDCLASS         reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    IDGLOBAL        reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    IDENTIFIER      reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    PUTS            reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    ARRAY           reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    LSQBRACKET      reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    LBRACKET        reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    HASH            reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    FOR             reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    TRUE            reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    FALSE           reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    NIL             reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    IF              reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    WHILE           reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    NUMBER          reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    FLOAT           reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    NUML            reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    MINUS           reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    STRING          reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    STRINGV         reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)
    BREAK           reduce using rule 173 (metodocadenaSemantica -> PUTS string POINT EMPTY INTERROGATIVE .)


state 255

    (114) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . RPARENTHESIS
    (115) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . COMMA arraycontent RPARENTHESIS

    RPARENTHESIS    shift and go to state 274
    COMMA           shift and go to state 275


state 256

    (129) hashcontentvalue -> string .

    COMMA           reduce using rule 129 (hashcontentvalue -> string .)
    RBRACKET        reduce using rule 129 (hashcontentvalue -> string .)


state 257

    (126) hashcontent -> string ASSIGN GREATER hashcontentvalue .
    (127) hashcontent -> string ASSIGN GREATER hashcontentvalue . COMMA hashcontent

    RBRACKET        reduce using rule 126 (hashcontent -> string ASSIGN GREATER hashcontentvalue .)
    COMMA           shift and go to state 276


state 258

    (128) hashcontentvalue -> factor .

    COMMA           reduce using rule 128 (hashcontentvalue -> factor .)
    RBRACKET        reduce using rule 128 (hashcontentvalue -> factor .)


state 259

    (138) estructurasControl -> FOR IDLOCAL IN factor POINT . POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> FOR IDLOCAL IN factor POINT . POINT factor DO forcontent END

    POINT           shift and go to state 277


state 260

    (57) sentenifp -> IF variables comparador term algoritmo . END
    (58) sentenifelse -> IF variables comparador term algoritmo . ELSE algoritmo END

    END             shift and go to state 278
    ELSE            shift and go to state 279


state 261

    (52) sentenWHILE -> WHILE variables comparador variables algoritmo . END

    END             shift and go to state 280


state 262

    (92) expression -> variables MINUS . expression
    (99) factor -> MINUS . NUMBER
    (100) factor -> MINUS . FLOAT
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (94) term -> . factor
    (95) term -> . variables
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 281
    FLOAT           shift and go to state 282
    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    variables                      shift and go to state 84
    expression                     shift and go to state 133
    term                           shift and go to state 83
    factor                         shift and go to state 36

state 263

    (53) sentenWHILE -> WHILE variables comparador expression algoritmo . END

    END             shift and go to state 283


state 264

    (88) expression -> expression MINUS . term
    (91) expression -> expression MINUS . variables
    (99) factor -> MINUS . NUMBER
    (100) factor -> MINUS . FLOAT
    (94) term -> . factor
    (95) term -> . variables
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 281
    FLOAT           shift and go to state 282
    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    term                           shift and go to state 119
    variables                      shift and go to state 120
    factor                         shift and go to state 36

state 265

    (174) metodocadena -> PUTS cadena POINT . LENGTH

    LENGTH          shift and go to state 226


state 266

    (175) metodocadena -> PUTS string POINT . LENGTH

    LENGTH          shift and go to state 228


state 267

    (144) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS . algoritmo RETURN IDLOCAL END
    (145) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS . algoritmo END
    (39) algoritmo -> . expression
    (40) algoritmo -> . metodocadena
    (41) algoritmo -> . arreglo
    (42) algoritmo -> . metodosarreglo
    (43) algoritmo -> . hash
    (44) algoritmo -> . estructurasControl
    (45) algoritmo -> . boolean
    (46) algoritmo -> . assigns
    (47) algoritmo -> . sentenIF
    (48) algoritmo -> . sentenifp
    (49) algoritmo -> . sentenifelse
    (50) algoritmo -> . variables
    (51) algoritmo -> . sentenWHILE
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (94) term -> . factor
    (95) term -> . variables
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    PUTS            shift and go to state 211
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    FOR             shift and go to state 49
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IDLOCAL         shift and go to state 212
    IDINSTANCE      shift and go to state 213
    IDCLASS         shift and go to state 214
    IDGLOBAL        shift and go to state 215
    IDENTIFIER      shift and go to state 216
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    algoritmo                      shift and go to state 284
    expression                     shift and go to state 197
    metodocadena                   shift and go to state 198
    arreglo                        shift and go to state 199
    metodosarreglo                 shift and go to state 200
    hash                           shift and go to state 201
    estructurasControl             shift and go to state 202
    boolean                        shift and go to state 203
    assigns                        shift and go to state 204
    sentenIF                       shift and go to state 205
    sentenifp                      shift and go to state 206
    sentenifelse                   shift and go to state 207
    variables                      shift and go to state 194
    sentenWHILE                    shift and go to state 208
    term                           shift and go to state 83
    cadena                         shift and go to state 209
    string                         shift and go to state 210
    factor                         shift and go to state 36

state 268

    (155) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS . algoritmo RETURN variables END
    (156) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS . algoritmo END
    (39) algoritmo -> . expression
    (40) algoritmo -> . metodocadena
    (41) algoritmo -> . arreglo
    (42) algoritmo -> . metodosarreglo
    (43) algoritmo -> . hash
    (44) algoritmo -> . estructurasControl
    (45) algoritmo -> . boolean
    (46) algoritmo -> . assigns
    (47) algoritmo -> . sentenIF
    (48) algoritmo -> . sentenifp
    (49) algoritmo -> . sentenifelse
    (50) algoritmo -> . variables
    (51) algoritmo -> . sentenWHILE
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (94) term -> . factor
    (95) term -> . variables
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    PUTS            shift and go to state 211
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    FOR             shift and go to state 49
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IDLOCAL         shift and go to state 212
    IDINSTANCE      shift and go to state 213
    IDCLASS         shift and go to state 214
    IDGLOBAL        shift and go to state 215
    IDENTIFIER      shift and go to state 216
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    algoritmo                      shift and go to state 285
    variables                      shift and go to state 194
    expression                     shift and go to state 197
    metodocadena                   shift and go to state 198
    arreglo                        shift and go to state 199
    metodosarreglo                 shift and go to state 200
    hash                           shift and go to state 201
    estructurasControl             shift and go to state 202
    boolean                        shift and go to state 203
    assigns                        shift and go to state 204
    sentenIF                       shift and go to state 205
    sentenifp                      shift and go to state 206
    sentenifelse                   shift and go to state 207
    sentenWHILE                    shift and go to state 208
    term                           shift and go to state 83
    cadena                         shift and go to state 209
    string                         shift and go to state 210
    factor                         shift and go to state 36

state 269

    (147) fcontenido -> variables COMMA . fcontenido
    (153) valuedefect -> variables COMMA . fcontenido
    (154) valuedefect -> variables COMMA . valuedefect
    (146) fcontenido -> . variables
    (147) fcontenido -> . variables COMMA fcontenido
    (152) valuedefect -> . variables ASSIGN values
    (153) valuedefect -> . variables COMMA fcontenido
    (154) valuedefect -> . variables COMMA valuedefect
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89

    variables                      shift and go to state 248
    fcontenido                     shift and go to state 286
    valuedefect                    shift and go to state 287

state 270

    (152) valuedefect -> variables ASSIGN . values
    (148) values -> . term
    (149) values -> . boolean
    (150) values -> . cadena
    (151) values -> . arreglo
    (94) term -> . factor
    (95) term -> . variables
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER

    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    STRING          shift and go to state 33
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89

    variables                      shift and go to state 122
    values                         shift and go to state 288
    term                           shift and go to state 289
    boolean                        shift and go to state 290
    cadena                         shift and go to state 291
    arreglo                        shift and go to state 292
    factor                         shift and go to state 36

state 271

    (157) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL . RPARENTHESIS algoritmo RETURN variables END
    (158) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL . RPARENTHESIS algoritmo END

    RPARENTHESIS    shift and go to state 293


state 272

    (122) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .

    $end            reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    END             reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    ELSE            reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    RETURN          reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDLOCAL         reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDINSTANCE      reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDCLASS         reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDGLOBAL        reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDENTIFIER      reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    PUTS            reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    ARRAY           reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    LSQBRACKET      reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    LBRACKET        reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    HASH            reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    FOR             reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    TRUE            reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    FALSE           reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    NIL             reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IF              reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    WHILE           reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    NUMBER          reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    FLOAT           reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    NUML            reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    MINUS           reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    STRING          reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    STRINGV         reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    BREAK           reduce using rule 122 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)


state 273

    (107) cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    COMPARE         reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    LESS            reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    GREATER         reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    GREQUAL         reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    LSEQUAL         reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    NOTEQUAL        reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    END             reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    ELSE            reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    RETURN          reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDLOCAL         reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDINSTANCE      reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDCLASS         reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDGLOBAL        reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDENTIFIER      reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    PUTS            reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    ARRAY           reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    LSQBRACKET      reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    LBRACKET        reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    HASH            reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    FOR             reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    TRUE            reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    FALSE           reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    NIL             reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IF              reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    WHILE           reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    NUMBER          reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    FLOAT           reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    NUML            reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    MINUS           reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    STRING          reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    STRINGV         reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    BREAK           reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    ANDS            reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    ORS             reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 107 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)


state 274

    (114) arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .

    POINT           reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    LSQBRACKET      reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    $end            reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    END             reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    ELSE            reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    RETURN          reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDLOCAL         reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDINSTANCE      reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDCLASS         reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDGLOBAL        reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDENTIFIER      reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    PUTS            reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    ARRAY           reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    LBRACKET        reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    HASH            reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    FOR             reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    TRUE            reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    FALSE           reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    NIL             reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IF              reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    WHILE           reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    NUMBER          reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    FLOAT           reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    NUML            reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    MINUS           reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    STRING          reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    STRINGV         reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    BREAK           reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 114 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)


state 275

    (115) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA . arraycontent RPARENTHESIS
    (118) arraycontent -> . factor
    (119) arraycontent -> . string
    (120) arraycontent -> . factor COMMA arraycontent
    (121) arraycontent -> . string COMMA arraycontent
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (105) string -> . STRINGV

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    STRINGV         shift and go to state 32

    factor                         shift and go to state 93
    arraycontent                   shift and go to state 294
    string                         shift and go to state 94

state 276

    (127) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA . hashcontent
    (126) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (127) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (105) string -> . STRINGV

    STRINGV         shift and go to state 32

    string                         shift and go to state 96
    hashcontent                    shift and go to state 295

state 277

    (138) estructurasControl -> FOR IDLOCAL IN factor POINT POINT . factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> FOR IDLOCAL IN factor POINT POINT . factor DO forcontent END
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    factor                         shift and go to state 296

state 278

    (57) sentenifp -> IF variables comparador term algoritmo END .

    $end            reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    END             reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    ELSE            reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    RETURN          reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    IDLOCAL         reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    IDINSTANCE      reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    IDCLASS         reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    IDGLOBAL        reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    IDENTIFIER      reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    PUTS            reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    ARRAY           reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    LSQBRACKET      reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    LBRACKET        reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    HASH            reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    FOR             reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    TRUE            reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    FALSE           reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    NIL             reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    IF              reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    WHILE           reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    NUMBER          reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    FLOAT           reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    NUML            reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    MINUS           reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    STRING          reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    STRINGV         reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)
    BREAK           reduce using rule 57 (sentenifp -> IF variables comparador term algoritmo END .)


state 279

    (58) sentenifelse -> IF variables comparador term algoritmo ELSE . algoritmo END
    (39) algoritmo -> . expression
    (40) algoritmo -> . metodocadena
    (41) algoritmo -> . arreglo
    (42) algoritmo -> . metodosarreglo
    (43) algoritmo -> . hash
    (44) algoritmo -> . estructurasControl
    (45) algoritmo -> . boolean
    (46) algoritmo -> . assigns
    (47) algoritmo -> . sentenIF
    (48) algoritmo -> . sentenifp
    (49) algoritmo -> . sentenifelse
    (50) algoritmo -> . variables
    (51) algoritmo -> . sentenWHILE
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (94) term -> . factor
    (95) term -> . variables
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    PUTS            shift and go to state 211
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    FOR             shift and go to state 49
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IDLOCAL         shift and go to state 212
    IDINSTANCE      shift and go to state 213
    IDCLASS         shift and go to state 214
    IDGLOBAL        shift and go to state 215
    IDENTIFIER      shift and go to state 216
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    variables                      shift and go to state 194
    term                           shift and go to state 83
    algoritmo                      shift and go to state 297
    expression                     shift and go to state 197
    metodocadena                   shift and go to state 198
    arreglo                        shift and go to state 199
    metodosarreglo                 shift and go to state 200
    hash                           shift and go to state 201
    estructurasControl             shift and go to state 202
    boolean                        shift and go to state 203
    assigns                        shift and go to state 204
    sentenIF                       shift and go to state 205
    sentenifp                      shift and go to state 206
    sentenifelse                   shift and go to state 207
    sentenWHILE                    shift and go to state 208
    cadena                         shift and go to state 209
    string                         shift and go to state 210
    factor                         shift and go to state 36

state 280

    (52) sentenWHILE -> WHILE variables comparador variables algoritmo END .

    $end            reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    END             reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    ELSE            reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    RETURN          reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDLOCAL         reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDINSTANCE      reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDCLASS         reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDGLOBAL        reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDENTIFIER      reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    PUTS            reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    ARRAY           reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    LSQBRACKET      reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    LBRACKET        reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    HASH            reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    FOR             reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    TRUE            reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    FALSE           reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    NIL             reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IF              reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    WHILE           reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    NUMBER          reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    FLOAT           reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    NUML            reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    MINUS           reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    STRING          reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    STRINGV         reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    BREAK           reduce using rule 52 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)


state 281

    (99) factor -> MINUS NUMBER .
    (96) factor -> NUMBER .

  ! reduce/reduce conflict for PLUS resolved using rule 96 (factor -> NUMBER .)
  ! reduce/reduce conflict for MINUS resolved using rule 96 (factor -> NUMBER .)
  ! reduce/reduce conflict for DIVISION resolved using rule 96 (factor -> NUMBER .)
  ! reduce/reduce conflict for MOD resolved using rule 96 (factor -> NUMBER .)
  ! reduce/reduce conflict for MULT resolved using rule 96 (factor -> NUMBER .)
  ! reduce/reduce conflict for EXP resolved using rule 96 (factor -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 96 (factor -> NUMBER .)
    PLUS            reduce using rule 96 (factor -> NUMBER .)
    MINUS           reduce using rule 96 (factor -> NUMBER .)
    DIVISION        reduce using rule 96 (factor -> NUMBER .)
    MOD             reduce using rule 96 (factor -> NUMBER .)
    MULT            reduce using rule 96 (factor -> NUMBER .)
    EXP             reduce using rule 96 (factor -> NUMBER .)
    PUTS            reduce using rule 96 (factor -> NUMBER .)
    ARRAY           reduce using rule 96 (factor -> NUMBER .)
    LSQBRACKET      reduce using rule 96 (factor -> NUMBER .)
    LBRACKET        reduce using rule 96 (factor -> NUMBER .)
    HASH            reduce using rule 96 (factor -> NUMBER .)
    FOR             reduce using rule 96 (factor -> NUMBER .)
    TRUE            reduce using rule 96 (factor -> NUMBER .)
    FALSE           reduce using rule 96 (factor -> NUMBER .)
    NIL             reduce using rule 96 (factor -> NUMBER .)
    IDLOCAL         reduce using rule 96 (factor -> NUMBER .)
    IDINSTANCE      reduce using rule 96 (factor -> NUMBER .)
    IDCLASS         reduce using rule 96 (factor -> NUMBER .)
    IDGLOBAL        reduce using rule 96 (factor -> NUMBER .)
    IDENTIFIER      reduce using rule 96 (factor -> NUMBER .)
    IF              reduce using rule 96 (factor -> NUMBER .)
    WHILE           reduce using rule 96 (factor -> NUMBER .)
    STRING          reduce using rule 96 (factor -> NUMBER .)
    STRINGV         reduce using rule 96 (factor -> NUMBER .)
    NUMBER          reduce using rule 96 (factor -> NUMBER .)
    FLOAT           reduce using rule 96 (factor -> NUMBER .)
    NUML            reduce using rule 96 (factor -> NUMBER .)
    END             reduce using rule 96 (factor -> NUMBER .)

  ! PLUS            [ reduce using rule 99 (factor -> MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 99 (factor -> MINUS NUMBER .) ]
  ! DIVISION        [ reduce using rule 99 (factor -> MINUS NUMBER .) ]
  ! MOD             [ reduce using rule 99 (factor -> MINUS NUMBER .) ]
  ! MULT            [ reduce using rule 99 (factor -> MINUS NUMBER .) ]
  ! EXP             [ reduce using rule 99 (factor -> MINUS NUMBER .) ]
  ! END             [ reduce using rule 99 (factor -> MINUS NUMBER .) ]


state 282

    (100) factor -> MINUS FLOAT .
    (97) factor -> FLOAT .

  ! reduce/reduce conflict for PLUS resolved using rule 97 (factor -> FLOAT .)
  ! reduce/reduce conflict for MINUS resolved using rule 97 (factor -> FLOAT .)
  ! reduce/reduce conflict for DIVISION resolved using rule 97 (factor -> FLOAT .)
  ! reduce/reduce conflict for MOD resolved using rule 97 (factor -> FLOAT .)
  ! reduce/reduce conflict for MULT resolved using rule 97 (factor -> FLOAT .)
  ! reduce/reduce conflict for EXP resolved using rule 97 (factor -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 97 (factor -> FLOAT .)
    PLUS            reduce using rule 97 (factor -> FLOAT .)
    MINUS           reduce using rule 97 (factor -> FLOAT .)
    DIVISION        reduce using rule 97 (factor -> FLOAT .)
    MOD             reduce using rule 97 (factor -> FLOAT .)
    MULT            reduce using rule 97 (factor -> FLOAT .)
    EXP             reduce using rule 97 (factor -> FLOAT .)
    PUTS            reduce using rule 97 (factor -> FLOAT .)
    ARRAY           reduce using rule 97 (factor -> FLOAT .)
    LSQBRACKET      reduce using rule 97 (factor -> FLOAT .)
    LBRACKET        reduce using rule 97 (factor -> FLOAT .)
    HASH            reduce using rule 97 (factor -> FLOAT .)
    FOR             reduce using rule 97 (factor -> FLOAT .)
    TRUE            reduce using rule 97 (factor -> FLOAT .)
    FALSE           reduce using rule 97 (factor -> FLOAT .)
    NIL             reduce using rule 97 (factor -> FLOAT .)
    IDLOCAL         reduce using rule 97 (factor -> FLOAT .)
    IDINSTANCE      reduce using rule 97 (factor -> FLOAT .)
    IDCLASS         reduce using rule 97 (factor -> FLOAT .)
    IDGLOBAL        reduce using rule 97 (factor -> FLOAT .)
    IDENTIFIER      reduce using rule 97 (factor -> FLOAT .)
    IF              reduce using rule 97 (factor -> FLOAT .)
    WHILE           reduce using rule 97 (factor -> FLOAT .)
    STRING          reduce using rule 97 (factor -> FLOAT .)
    STRINGV         reduce using rule 97 (factor -> FLOAT .)
    NUMBER          reduce using rule 97 (factor -> FLOAT .)
    FLOAT           reduce using rule 97 (factor -> FLOAT .)
    NUML            reduce using rule 97 (factor -> FLOAT .)
    END             reduce using rule 97 (factor -> FLOAT .)

  ! PLUS            [ reduce using rule 100 (factor -> MINUS FLOAT .) ]
  ! MINUS           [ reduce using rule 100 (factor -> MINUS FLOAT .) ]
  ! DIVISION        [ reduce using rule 100 (factor -> MINUS FLOAT .) ]
  ! MOD             [ reduce using rule 100 (factor -> MINUS FLOAT .) ]
  ! MULT            [ reduce using rule 100 (factor -> MINUS FLOAT .) ]
  ! EXP             [ reduce using rule 100 (factor -> MINUS FLOAT .) ]
  ! END             [ reduce using rule 100 (factor -> MINUS FLOAT .) ]


state 283

    (53) sentenWHILE -> WHILE variables comparador expression algoritmo END .

    $end            reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    END             reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    ELSE            reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    RETURN          reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDLOCAL         reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDINSTANCE      reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDCLASS         reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDGLOBAL        reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDENTIFIER      reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    PUTS            reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    ARRAY           reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    LSQBRACKET      reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    LBRACKET        reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    HASH            reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    FOR             reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    TRUE            reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    FALSE           reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    NIL             reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IF              reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    WHILE           reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    NUMBER          reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    FLOAT           reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    NUML            reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    MINUS           reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    STRING          reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    STRINGV         reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    BREAK           reduce using rule 53 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)


state 284

    (144) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo . RETURN IDLOCAL END
    (145) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo . END

    RETURN          shift and go to state 298
    END             shift and go to state 299


state 285

    (155) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo . RETURN variables END
    (156) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo . END

    RETURN          shift and go to state 300
    END             shift and go to state 301


state 286

    (147) fcontenido -> variables COMMA fcontenido .
    (153) valuedefect -> variables COMMA fcontenido .

  ! reduce/reduce conflict for RPARENTHESIS resolved using rule 147 (fcontenido -> variables COMMA fcontenido .)
    RPARENTHESIS    reduce using rule 147 (fcontenido -> variables COMMA fcontenido .)

  ! RPARENTHESIS    [ reduce using rule 153 (valuedefect -> variables COMMA fcontenido .) ]


state 287

    (154) valuedefect -> variables COMMA valuedefect .

    RPARENTHESIS    reduce using rule 154 (valuedefect -> variables COMMA valuedefect .)


state 288

    (152) valuedefect -> variables ASSIGN values .

    RPARENTHESIS    reduce using rule 152 (valuedefect -> variables ASSIGN values .)


state 289

    (148) values -> term .

    RPARENTHESIS    reduce using rule 148 (values -> term .)


state 290

    (149) values -> boolean .

    RPARENTHESIS    reduce using rule 149 (values -> boolean .)


state 291

    (150) values -> cadena .

    RPARENTHESIS    reduce using rule 150 (values -> cadena .)


state 292

    (151) values -> arreglo .

    RPARENTHESIS    reduce using rule 151 (values -> arreglo .)


state 293

    (157) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS . algoritmo RETURN variables END
    (158) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS . algoritmo END
    (39) algoritmo -> . expression
    (40) algoritmo -> . metodocadena
    (41) algoritmo -> . arreglo
    (42) algoritmo -> . metodosarreglo
    (43) algoritmo -> . hash
    (44) algoritmo -> . estructurasControl
    (45) algoritmo -> . boolean
    (46) algoritmo -> . assigns
    (47) algoritmo -> . sentenIF
    (48) algoritmo -> . sentenifp
    (49) algoritmo -> . sentenifelse
    (50) algoritmo -> . variables
    (51) algoritmo -> . sentenWHILE
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (94) term -> . factor
    (95) term -> . variables
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT

    PUTS            shift and go to state 211
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    FOR             shift and go to state 49
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IDLOCAL         shift and go to state 212
    IDINSTANCE      shift and go to state 213
    IDCLASS         shift and go to state 214
    IDGLOBAL        shift and go to state 215
    IDENTIFIER      shift and go to state 216
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31

    algoritmo                      shift and go to state 302
    variables                      shift and go to state 194
    expression                     shift and go to state 197
    metodocadena                   shift and go to state 198
    arreglo                        shift and go to state 199
    metodosarreglo                 shift and go to state 200
    hash                           shift and go to state 201
    estructurasControl             shift and go to state 202
    boolean                        shift and go to state 203
    assigns                        shift and go to state 204
    sentenIF                       shift and go to state 205
    sentenifp                      shift and go to state 206
    sentenifelse                   shift and go to state 207
    sentenWHILE                    shift and go to state 208
    term                           shift and go to state 83
    cadena                         shift and go to state 209
    string                         shift and go to state 210
    factor                         shift and go to state 36

state 294

    (115) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 303


state 295

    (127) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .

    RBRACKET        reduce using rule 127 (hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .)


state 296

    (138) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor . DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor . DO forcontent END

    DO              shift and go to state 304


state 297

    (58) sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo . END

    END             shift and go to state 305


state 298

    (144) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN . IDLOCAL END

    IDLOCAL         shift and go to state 306


state 299

    (145) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END .

    $end            reduce using rule 145 (funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END .)


state 300

    (155) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN . variables END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89

    variables                      shift and go to state 307

state 301

    (156) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo END .

    $end            reduce using rule 156 (funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo END .)


state 302

    (157) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo . RETURN variables END
    (158) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo . END

    RETURN          shift and go to state 308
    END             shift and go to state 309


state 303

    (115) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .

    POINT           reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    LSQBRACKET      reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    $end            reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    END             reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    ELSE            reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    RETURN          reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDLOCAL         reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDINSTANCE      reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDCLASS         reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDGLOBAL        reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDENTIFIER      reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    PUTS            reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    ARRAY           reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    LBRACKET        reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    HASH            reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    FOR             reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    TRUE            reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    FALSE           reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    NIL             reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IF              reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    WHILE           reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    NUMBER          reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    FLOAT           reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    NUML            reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    MINUS           reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    STRING          reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    STRINGV         reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    BREAK           reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 115 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)


state 304

    (138) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO . forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO . forcontent END
    (140) forcontent -> . forcontentvalue
    (141) forcontent -> . forcontentvalue forcontent
    (142) forcontentvalue -> . expression
    (143) forcontentvalue -> . algoritmo
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (39) algoritmo -> . expression
    (40) algoritmo -> . metodocadena
    (41) algoritmo -> . arreglo
    (42) algoritmo -> . metodosarreglo
    (43) algoritmo -> . hash
    (44) algoritmo -> . estructurasControl
    (45) algoritmo -> . boolean
    (46) algoritmo -> . assigns
    (47) algoritmo -> . sentenIF
    (48) algoritmo -> . sentenifp
    (49) algoritmo -> . sentenifelse
    (50) algoritmo -> . variables
    (51) algoritmo -> . sentenWHILE
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (94) term -> . factor
    (95) term -> . variables
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV

    IDLOCAL         shift and go to state 310
    IDINSTANCE      shift and go to state 44
    IDCLASS         shift and go to state 45
    IDGLOBAL        shift and go to state 46
    IDENTIFIER      shift and go to state 47
    PUTS            shift and go to state 211
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    FOR             shift and go to state 49
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32

    factor                         shift and go to state 36
    forcontent                     shift and go to state 311
    forcontentvalue                shift and go to state 312
    expression                     shift and go to state 313
    algoritmo                      shift and go to state 314
    term                           shift and go to state 83
    variables                      shift and go to state 315
    metodocadena                   shift and go to state 198
    arreglo                        shift and go to state 199
    metodosarreglo                 shift and go to state 200
    hash                           shift and go to state 201
    estructurasControl             shift and go to state 202
    boolean                        shift and go to state 203
    assigns                        shift and go to state 204
    sentenIF                       shift and go to state 205
    sentenifp                      shift and go to state 206
    sentenifelse                   shift and go to state 207
    sentenWHILE                    shift and go to state 208
    cadena                         shift and go to state 209
    string                         shift and go to state 210

state 305

    (58) sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .

    $end            reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    END             reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    ELSE            reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    RETURN          reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDLOCAL         reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDINSTANCE      reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDCLASS         reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDGLOBAL        reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDENTIFIER      reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    PUTS            reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    ARRAY           reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    LSQBRACKET      reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    LBRACKET        reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    HASH            reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    FOR             reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    TRUE            reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    FALSE           reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    NIL             reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IF              reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    WHILE           reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    NUMBER          reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    FLOAT           reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    NUML            reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    MINUS           reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    STRING          reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    STRINGV         reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    BREAK           reduce using rule 58 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)


state 306

    (144) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL . END

    END             shift and go to state 316


state 307

    (155) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables . END

    END             shift and go to state 317


state 308

    (157) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN . variables END
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER

    IDLOCAL         shift and go to state 85
    IDINSTANCE      shift and go to state 86
    IDCLASS         shift and go to state 87
    IDGLOBAL        shift and go to state 88
    IDENTIFIER      shift and go to state 89

    variables                      shift and go to state 318

state 309

    (158) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END .

    $end            reduce using rule 158 (funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END .)


state 310

    (59) variables -> IDLOCAL .
    (64) assigns -> IDLOCAL . ASSIGN expression
    (69) assigns -> IDLOCAL . ASSIGN variables
    (74) assigns -> IDLOCAL . ASSIGN asignar
    (79) assigns -> IDLOCAL . ASSIGN reglaSemanticaComparaciones

    PLUS            reduce using rule 59 (variables -> IDLOCAL .)
    MINUS           reduce using rule 59 (variables -> IDLOCAL .)
    ASSIGNPLUS      reduce using rule 59 (variables -> IDLOCAL .)
    ASSIGNMIN       reduce using rule 59 (variables -> IDLOCAL .)
    IDLOCAL         reduce using rule 59 (variables -> IDLOCAL .)
    IDINSTANCE      reduce using rule 59 (variables -> IDLOCAL .)
    IDCLASS         reduce using rule 59 (variables -> IDLOCAL .)
    IDGLOBAL        reduce using rule 59 (variables -> IDLOCAL .)
    IDENTIFIER      reduce using rule 59 (variables -> IDLOCAL .)
    PUTS            reduce using rule 59 (variables -> IDLOCAL .)
    ARRAY           reduce using rule 59 (variables -> IDLOCAL .)
    LSQBRACKET      reduce using rule 59 (variables -> IDLOCAL .)
    LBRACKET        reduce using rule 59 (variables -> IDLOCAL .)
    HASH            reduce using rule 59 (variables -> IDLOCAL .)
    FOR             reduce using rule 59 (variables -> IDLOCAL .)
    TRUE            reduce using rule 59 (variables -> IDLOCAL .)
    FALSE           reduce using rule 59 (variables -> IDLOCAL .)
    NIL             reduce using rule 59 (variables -> IDLOCAL .)
    IF              reduce using rule 59 (variables -> IDLOCAL .)
    WHILE           reduce using rule 59 (variables -> IDLOCAL .)
    NUMBER          reduce using rule 59 (variables -> IDLOCAL .)
    FLOAT           reduce using rule 59 (variables -> IDLOCAL .)
    NUML            reduce using rule 59 (variables -> IDLOCAL .)
    STRING          reduce using rule 59 (variables -> IDLOCAL .)
    STRINGV         reduce using rule 59 (variables -> IDLOCAL .)
    BREAK           reduce using rule 59 (variables -> IDLOCAL .)
    END             reduce using rule 59 (variables -> IDLOCAL .)
    DIVISION        reduce using rule 59 (variables -> IDLOCAL .)
    MOD             reduce using rule 59 (variables -> IDLOCAL .)
    MULT            reduce using rule 59 (variables -> IDLOCAL .)
    EXP             reduce using rule 59 (variables -> IDLOCAL .)
    ASSIGN          shift and go to state 244


state 311

    (138) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent . BREAK IF forcontentvalue END
    (139) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent . END

    BREAK           shift and go to state 319
    END             shift and go to state 320


state 312

    (140) forcontent -> forcontentvalue .
    (141) forcontent -> forcontentvalue . forcontent
    (140) forcontent -> . forcontentvalue
    (141) forcontent -> . forcontentvalue forcontent
    (142) forcontentvalue -> . expression
    (143) forcontentvalue -> . algoritmo
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (39) algoritmo -> . expression
    (40) algoritmo -> . metodocadena
    (41) algoritmo -> . arreglo
    (42) algoritmo -> . metodosarreglo
    (43) algoritmo -> . hash
    (44) algoritmo -> . estructurasControl
    (45) algoritmo -> . boolean
    (46) algoritmo -> . assigns
    (47) algoritmo -> . sentenIF
    (48) algoritmo -> . sentenifp
    (49) algoritmo -> . sentenifelse
    (50) algoritmo -> . variables
    (51) algoritmo -> . sentenWHILE
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (94) term -> . factor
    (95) term -> . variables
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV

    BREAK           reduce using rule 140 (forcontent -> forcontentvalue .)
    END             reduce using rule 140 (forcontent -> forcontentvalue .)
    IDLOCAL         shift and go to state 310
    IDINSTANCE      shift and go to state 44
    IDCLASS         shift and go to state 45
    IDGLOBAL        shift and go to state 46
    IDENTIFIER      shift and go to state 47
    PUTS            shift and go to state 211
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    FOR             shift and go to state 49
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32

    forcontentvalue                shift and go to state 312
    forcontent                     shift and go to state 321
    expression                     shift and go to state 313
    algoritmo                      shift and go to state 314
    term                           shift and go to state 83
    variables                      shift and go to state 315
    metodocadena                   shift and go to state 198
    arreglo                        shift and go to state 199
    metodosarreglo                 shift and go to state 200
    hash                           shift and go to state 201
    estructurasControl             shift and go to state 202
    boolean                        shift and go to state 203
    assigns                        shift and go to state 204
    sentenIF                       shift and go to state 205
    sentenifp                      shift and go to state 206
    sentenifelse                   shift and go to state 207
    sentenWHILE                    shift and go to state 208
    factor                         shift and go to state 36
    cadena                         shift and go to state 209
    string                         shift and go to state 210

state 313

    (142) forcontentvalue -> expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term
    (89) expression -> expression . PLUS variables
    (91) expression -> expression . MINUS variables
    (101) expression -> expression . DIVISION term
    (102) expression -> expression . MOD term
    (103) expression -> expression . MULT term
    (104) expression -> expression . EXP term
    (39) algoritmo -> expression .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for IDLOCAL resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for PUTS resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for ARRAY resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for HASH resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for NIL resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for NUML resolved using rule 39 (algoritmo -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for STRINGV resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for BREAK resolved using rule 39 (algoritmo -> expression .)
  ! reduce/reduce conflict for END resolved using rule 39 (algoritmo -> expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    DIVISION        shift and go to state 60
    MOD             shift and go to state 61
    MULT            shift and go to state 62
    EXP             shift and go to state 63
    IDLOCAL         reduce using rule 39 (algoritmo -> expression .)
    IDINSTANCE      reduce using rule 39 (algoritmo -> expression .)
    IDCLASS         reduce using rule 39 (algoritmo -> expression .)
    IDGLOBAL        reduce using rule 39 (algoritmo -> expression .)
    IDENTIFIER      reduce using rule 39 (algoritmo -> expression .)
    PUTS            reduce using rule 39 (algoritmo -> expression .)
    ARRAY           reduce using rule 39 (algoritmo -> expression .)
    LSQBRACKET      reduce using rule 39 (algoritmo -> expression .)
    LBRACKET        reduce using rule 39 (algoritmo -> expression .)
    HASH            reduce using rule 39 (algoritmo -> expression .)
    FOR             reduce using rule 39 (algoritmo -> expression .)
    TRUE            reduce using rule 39 (algoritmo -> expression .)
    FALSE           reduce using rule 39 (algoritmo -> expression .)
    NIL             reduce using rule 39 (algoritmo -> expression .)
    IF              reduce using rule 39 (algoritmo -> expression .)
    WHILE           reduce using rule 39 (algoritmo -> expression .)
    NUMBER          reduce using rule 39 (algoritmo -> expression .)
    FLOAT           reduce using rule 39 (algoritmo -> expression .)
    NUML            reduce using rule 39 (algoritmo -> expression .)
    STRING          reduce using rule 39 (algoritmo -> expression .)
    STRINGV         reduce using rule 39 (algoritmo -> expression .)
    BREAK           reduce using rule 39 (algoritmo -> expression .)
    END             reduce using rule 39 (algoritmo -> expression .)

  ! IDLOCAL         [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! IDINSTANCE      [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! IDCLASS         [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! IDGLOBAL        [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! IDENTIFIER      [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! PUTS            [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! ARRAY           [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! LSQBRACKET      [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! LBRACKET        [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! HASH            [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! FOR             [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! TRUE            [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! FALSE           [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! NIL             [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! IF              [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! WHILE           [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! NUMBER          [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! FLOAT           [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! NUML            [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! MINUS           [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! STRING          [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! STRINGV         [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! BREAK           [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! END             [ reduce using rule 142 (forcontentvalue -> expression .) ]
  ! MINUS           [ reduce using rule 39 (algoritmo -> expression .) ]


state 314

    (143) forcontentvalue -> algoritmo .

    IDLOCAL         reduce using rule 143 (forcontentvalue -> algoritmo .)
    IDINSTANCE      reduce using rule 143 (forcontentvalue -> algoritmo .)
    IDCLASS         reduce using rule 143 (forcontentvalue -> algoritmo .)
    IDGLOBAL        reduce using rule 143 (forcontentvalue -> algoritmo .)
    IDENTIFIER      reduce using rule 143 (forcontentvalue -> algoritmo .)
    PUTS            reduce using rule 143 (forcontentvalue -> algoritmo .)
    ARRAY           reduce using rule 143 (forcontentvalue -> algoritmo .)
    LSQBRACKET      reduce using rule 143 (forcontentvalue -> algoritmo .)
    LBRACKET        reduce using rule 143 (forcontentvalue -> algoritmo .)
    HASH            reduce using rule 143 (forcontentvalue -> algoritmo .)
    FOR             reduce using rule 143 (forcontentvalue -> algoritmo .)
    TRUE            reduce using rule 143 (forcontentvalue -> algoritmo .)
    FALSE           reduce using rule 143 (forcontentvalue -> algoritmo .)
    NIL             reduce using rule 143 (forcontentvalue -> algoritmo .)
    IF              reduce using rule 143 (forcontentvalue -> algoritmo .)
    WHILE           reduce using rule 143 (forcontentvalue -> algoritmo .)
    NUMBER          reduce using rule 143 (forcontentvalue -> algoritmo .)
    FLOAT           reduce using rule 143 (forcontentvalue -> algoritmo .)
    NUML            reduce using rule 143 (forcontentvalue -> algoritmo .)
    MINUS           reduce using rule 143 (forcontentvalue -> algoritmo .)
    STRING          reduce using rule 143 (forcontentvalue -> algoritmo .)
    STRINGV         reduce using rule 143 (forcontentvalue -> algoritmo .)
    BREAK           reduce using rule 143 (forcontentvalue -> algoritmo .)
    END             reduce using rule 143 (forcontentvalue -> algoritmo .)


state 315

    (90) expression -> variables . PLUS expression
    (92) expression -> variables . MINUS expression
    (50) algoritmo -> variables .
    (95) term -> variables .
    (83) assigns -> variables . ASSIGNPLUS expression
    (84) assigns -> variables . ASSIGNPLUS variables
    (85) assigns -> variables . ASSIGNMIN expression
    (86) assigns -> variables . ASSIGNMIN variables

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for IDLOCAL resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for PUTS resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 50 (algoritmo -> variables .)
  ! reduce/reduce conflict for END resolved using rule 50 (algoritmo -> variables .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    IDLOCAL         reduce using rule 50 (algoritmo -> variables .)
    IDINSTANCE      reduce using rule 50 (algoritmo -> variables .)
    IDCLASS         reduce using rule 50 (algoritmo -> variables .)
    IDGLOBAL        reduce using rule 50 (algoritmo -> variables .)
    IDENTIFIER      reduce using rule 50 (algoritmo -> variables .)
    PUTS            reduce using rule 50 (algoritmo -> variables .)
    ARRAY           reduce using rule 50 (algoritmo -> variables .)
    LSQBRACKET      reduce using rule 50 (algoritmo -> variables .)
    LBRACKET        reduce using rule 50 (algoritmo -> variables .)
    HASH            reduce using rule 50 (algoritmo -> variables .)
    FOR             reduce using rule 50 (algoritmo -> variables .)
    TRUE            reduce using rule 50 (algoritmo -> variables .)
    FALSE           reduce using rule 50 (algoritmo -> variables .)
    NIL             reduce using rule 50 (algoritmo -> variables .)
    IF              reduce using rule 50 (algoritmo -> variables .)
    WHILE           reduce using rule 50 (algoritmo -> variables .)
    NUMBER          reduce using rule 50 (algoritmo -> variables .)
    FLOAT           reduce using rule 50 (algoritmo -> variables .)
    NUML            reduce using rule 50 (algoritmo -> variables .)
    STRING          reduce using rule 50 (algoritmo -> variables .)
    STRINGV         reduce using rule 50 (algoritmo -> variables .)
    BREAK           reduce using rule 50 (algoritmo -> variables .)
    END             reduce using rule 50 (algoritmo -> variables .)
    DIVISION        reduce using rule 95 (term -> variables .)
    MOD             reduce using rule 95 (term -> variables .)
    MULT            reduce using rule 95 (term -> variables .)
    EXP             reduce using rule 95 (term -> variables .)
    ASSIGNPLUS      shift and go to state 72
    ASSIGNMIN       shift and go to state 73

  ! MINUS           [ reduce using rule 50 (algoritmo -> variables .) ]
  ! PLUS            [ reduce using rule 95 (term -> variables .) ]
  ! MINUS           [ reduce using rule 95 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 95 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 95 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 95 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 95 (term -> variables .) ]
  ! IDENTIFIER      [ reduce using rule 95 (term -> variables .) ]
  ! PUTS            [ reduce using rule 95 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 95 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 95 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 95 (term -> variables .) ]
  ! HASH            [ reduce using rule 95 (term -> variables .) ]
  ! FOR             [ reduce using rule 95 (term -> variables .) ]
  ! TRUE            [ reduce using rule 95 (term -> variables .) ]
  ! FALSE           [ reduce using rule 95 (term -> variables .) ]
  ! NIL             [ reduce using rule 95 (term -> variables .) ]
  ! IF              [ reduce using rule 95 (term -> variables .) ]
  ! WHILE           [ reduce using rule 95 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 95 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 95 (term -> variables .) ]
  ! NUML            [ reduce using rule 95 (term -> variables .) ]
  ! STRING          [ reduce using rule 95 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 95 (term -> variables .) ]
  ! BREAK           [ reduce using rule 95 (term -> variables .) ]
  ! END             [ reduce using rule 95 (term -> variables .) ]


state 316

    (144) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END .

    $end            reduce using rule 144 (funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END .)


state 317

    (155) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END .

    $end            reduce using rule 155 (funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END .)


state 318

    (157) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables . END

    END             shift and go to state 322


state 319

    (138) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK . IF forcontentvalue END

    IF              shift and go to state 323


state 320

    (139) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .

    $end            reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    END             reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    ELSE            reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    RETURN          reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDLOCAL         reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDINSTANCE      reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDCLASS         reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDGLOBAL        reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDENTIFIER      reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    PUTS            reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    ARRAY           reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    LSQBRACKET      reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    LBRACKET        reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    HASH            reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    FOR             reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    TRUE            reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    FALSE           reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    NIL             reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IF              reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    WHILE           reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    NUMBER          reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    FLOAT           reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    NUML            reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    MINUS           reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    STRING          reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    STRINGV         reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    BREAK           reduce using rule 139 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)


state 321

    (141) forcontent -> forcontentvalue forcontent .

    BREAK           reduce using rule 141 (forcontent -> forcontentvalue forcontent .)
    END             reduce using rule 141 (forcontent -> forcontentvalue forcontent .)


state 322

    (157) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END .

    $end            reduce using rule 157 (funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END .)


state 323

    (138) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF . forcontentvalue END
    (142) forcontentvalue -> . expression
    (143) forcontentvalue -> . algoritmo
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . expression PLUS variables
    (90) expression -> . variables PLUS expression
    (91) expression -> . expression MINUS variables
    (92) expression -> . variables MINUS expression
    (93) expression -> . term
    (101) expression -> . expression DIVISION term
    (102) expression -> . expression MOD term
    (103) expression -> . expression MULT term
    (104) expression -> . expression EXP term
    (39) algoritmo -> . expression
    (40) algoritmo -> . metodocadena
    (41) algoritmo -> . arreglo
    (42) algoritmo -> . metodosarreglo
    (43) algoritmo -> . hash
    (44) algoritmo -> . estructurasControl
    (45) algoritmo -> . boolean
    (46) algoritmo -> . assigns
    (47) algoritmo -> . sentenIF
    (48) algoritmo -> . sentenifp
    (49) algoritmo -> . sentenifelse
    (50) algoritmo -> . variables
    (51) algoritmo -> . sentenWHILE
    (59) variables -> . IDLOCAL
    (60) variables -> . IDINSTANCE
    (61) variables -> . IDCLASS
    (62) variables -> . IDGLOBAL
    (63) variables -> . IDENTIFIER
    (94) term -> . factor
    (95) term -> . variables
    (109) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (110) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (111) metodocadena -> . cadena POINT LENGTH
    (112) metodocadena -> . string POINT LENGTH
    (174) metodocadena -> . PUTS cadena POINT LENGTH
    (175) metodocadena -> . PUTS string POINT LENGTH
    (113) arreglo -> . ARRAY POINT NEW
    (114) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (115) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (116) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (117) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (122) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (123) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (124) hash -> . LBRACKET hashcontent RBRACKET
    (125) hash -> . HASH POINT NEW
    (138) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (139) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (29) boolean -> . TRUE
    (30) boolean -> . FALSE
    (31) boolean -> . NIL
    (64) assigns -> . IDLOCAL ASSIGN expression
    (65) assigns -> . IDINSTANCE ASSIGN expression
    (66) assigns -> . IDCLASS ASSIGN expression
    (67) assigns -> . IDGLOBAL ASSIGN expression
    (68) assigns -> . IDENTIFIER ASSIGN expression
    (69) assigns -> . IDLOCAL ASSIGN variables
    (70) assigns -> . IDINSTANCE ASSIGN variables
    (71) assigns -> . IDCLASS ASSIGN variables
    (72) assigns -> . IDGLOBAL ASSIGN variables
    (73) assigns -> . IDENTIFIER ASSIGN variables
    (74) assigns -> . IDLOCAL ASSIGN asignar
    (75) assigns -> . IDINSTANCE ASSIGN asignar
    (76) assigns -> . IDCLASS ASSIGN asignar
    (77) assigns -> . IDGLOBAL ASSIGN asignar
    (78) assigns -> . IDENTIFIER ASSIGN asignar
    (79) assigns -> . IDLOCAL ASSIGN reglaSemanticaComparaciones
    (80) assigns -> . IDINSTANCE ASSIGN reglaSemanticaComparaciones
    (81) assigns -> . IDCLASS ASSIGN reglaSemanticaComparaciones
    (82) assigns -> . IDGLOBAL ASSIGN reglaSemanticaComparaciones
    (83) assigns -> . variables ASSIGNPLUS expression
    (84) assigns -> . variables ASSIGNPLUS variables
    (85) assigns -> . variables ASSIGNMIN expression
    (86) assigns -> . variables ASSIGNMIN variables
    (56) sentenIF -> . IF variables comparador term
    (57) sentenifp -> . IF variables comparador term algoritmo END
    (58) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (52) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (53) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (54) sentenWHILE -> . WHILE boolean algoritmo END
    (55) sentenWHILE -> . WHILE variables algoritmo END
    (96) factor -> . NUMBER
    (97) factor -> . FLOAT
    (98) factor -> . NUML
    (99) factor -> . MINUS NUMBER
    (100) factor -> . MINUS FLOAT
    (106) cadena -> . STRING POINT NEW
    (107) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (108) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (105) string -> . STRINGV

    IDLOCAL         shift and go to state 310
    IDINSTANCE      shift and go to state 44
    IDCLASS         shift and go to state 45
    IDGLOBAL        shift and go to state 46
    IDENTIFIER      shift and go to state 47
    PUTS            shift and go to state 211
    ARRAY           shift and go to state 35
    LSQBRACKET      shift and go to state 37
    LBRACKET        shift and go to state 38
    HASH            shift and go to state 39
    FOR             shift and go to state 49
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NIL             shift and go to state 42
    IF              shift and go to state 50
    WHILE           shift and go to state 52
    NUMBER          shift and go to state 55
    FLOAT           shift and go to state 56
    NUML            shift and go to state 57
    MINUS           shift and go to state 31
    STRING          shift and go to state 33
    STRINGV         shift and go to state 32

    factor                         shift and go to state 36
    forcontentvalue                shift and go to state 324
    expression                     shift and go to state 313
    algoritmo                      shift and go to state 314
    term                           shift and go to state 83
    variables                      shift and go to state 315
    metodocadena                   shift and go to state 198
    arreglo                        shift and go to state 199
    metodosarreglo                 shift and go to state 200
    hash                           shift and go to state 201
    estructurasControl             shift and go to state 202
    boolean                        shift and go to state 203
    assigns                        shift and go to state 204
    sentenIF                       shift and go to state 205
    sentenifp                      shift and go to state 206
    sentenifelse                   shift and go to state 207
    sentenWHILE                    shift and go to state 208
    cadena                         shift and go to state 209
    string                         shift and go to state 210

state 324

    (138) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue . END

    END             shift and go to state 325


state 325

    (138) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .

    $end            reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    END             reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    ELSE            reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    RETURN          reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDLOCAL         reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDINSTANCE      reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDCLASS         reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDGLOBAL        reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDENTIFIER      reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    PUTS            reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    ARRAY           reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    LSQBRACKET      reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    LBRACKET        reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    HASH            reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    FOR             reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    TRUE            reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    FALSE           reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    NIL             reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IF              reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    WHILE           reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    NUMBER          reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    FLOAT           reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    NUML            reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    MINUS           reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    STRING          reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    STRINGV         reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    BREAK           reduce using rule 138 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LSQBRACKET in state 8 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 13 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 13 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 43 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 44 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 45 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 46 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 132 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 132 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 132 resolved as shift
WARNING: shift/reduce conflict for MOD in state 132 resolved as shift
WARNING: shift/reduce conflict for MULT in state 132 resolved as shift
WARNING: shift/reduce conflict for EXP in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 133 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 133 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 133 resolved as shift
WARNING: shift/reduce conflict for MOD in state 133 resolved as shift
WARNING: shift/reduce conflict for MULT in state 133 resolved as shift
WARNING: shift/reduce conflict for EXP in state 133 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 138 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 138 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 138 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 139 resolved as shift
WARNING: shift/reduce conflict for ANDS in state 140 resolved as shift
WARNING: shift/reduce conflict for ORS in state 140 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 141 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 141 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 144 resolved as shift
WARNING: shift/reduce conflict for ANDS in state 146 resolved as shift
WARNING: shift/reduce conflict for ORS in state 146 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 160 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 160 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 161 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 161 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 161 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 161 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 165 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 165 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 166 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 166 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 166 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 166 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 169 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 169 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 170 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 170 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 170 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 170 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 173 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 173 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 174 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 174 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 174 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 174 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 177 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 177 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 178 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 178 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 178 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 178 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 194 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 194 resolved as shift
WARNING: shift/reduce conflict for LSQBRACKET in state 199 resolved as shift
WARNING: shift/reduce conflict for PUTS in state 238 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 238 resolved as shift
WARNING: shift/reduce conflict for LSQBRACKET in state 238 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 238 resolved as shift
WARNING: shift/reduce conflict for HASH in state 238 resolved as shift
WARNING: shift/reduce conflict for FOR in state 238 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 238 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 238 resolved as shift
WARNING: shift/reduce conflict for NIL in state 238 resolved as shift
WARNING: shift/reduce conflict for IDLOCAL in state 238 resolved as shift
WARNING: shift/reduce conflict for IDINSTANCE in state 238 resolved as shift
WARNING: shift/reduce conflict for IDCLASS in state 238 resolved as shift
WARNING: shift/reduce conflict for IDGLOBAL in state 238 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 238 resolved as shift
WARNING: shift/reduce conflict for IF in state 238 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 238 resolved as shift
WARNING: shift/reduce conflict for STRING in state 238 resolved as shift
WARNING: shift/reduce conflict for STRINGV in state 238 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 238 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 238 resolved as shift
WARNING: shift/reduce conflict for NUML in state 238 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 238 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 239 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 239 resolved as shift
WARNING: shift/reduce conflict for PUTS in state 239 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 239 resolved as shift
WARNING: shift/reduce conflict for LSQBRACKET in state 239 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 239 resolved as shift
WARNING: shift/reduce conflict for HASH in state 239 resolved as shift
WARNING: shift/reduce conflict for FOR in state 239 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 239 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 239 resolved as shift
WARNING: shift/reduce conflict for NIL in state 239 resolved as shift
WARNING: shift/reduce conflict for IDLOCAL in state 239 resolved as shift
WARNING: shift/reduce conflict for IDINSTANCE in state 239 resolved as shift
WARNING: shift/reduce conflict for IDCLASS in state 239 resolved as shift
WARNING: shift/reduce conflict for IDGLOBAL in state 239 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 239 resolved as shift
WARNING: shift/reduce conflict for IF in state 239 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 239 resolved as shift
WARNING: shift/reduce conflict for STRING in state 239 resolved as shift
WARNING: shift/reduce conflict for STRINGV in state 239 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 239 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 239 resolved as shift
WARNING: shift/reduce conflict for NUML in state 239 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 313 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 313 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 315 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 315 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 315 resolved as shift
WARNING: reduce/reduce conflict in state 13 resolved using rule (asignar -> variables)
WARNING: rejected rule (term -> variables) in state 13
WARNING: reduce/reduce conflict in state 13 resolved using rule (term -> variables)
WARNING: rejected rule (value2 -> variables) in state 13
WARNING: reduce/reduce conflict in state 30 resolved using rule (expression -> term)
WARNING: rejected rule (value2 -> term) in state 30
WARNING: reduce/reduce conflict in state 118 resolved using rule (expression -> expression PLUS variables)
WARNING: rejected rule (term -> variables) in state 118
WARNING: reduce/reduce conflict in state 120 resolved using rule (expression -> expression MINUS variables)
WARNING: rejected rule (term -> variables) in state 120
WARNING: reduce/reduce conflict in state 136 resolved using rule (assigns -> variables ASSIGNPLUS variables)
WARNING: rejected rule (term -> variables) in state 136
WARNING: reduce/reduce conflict in state 138 resolved using rule (assigns -> variables ASSIGNMIN variables)
WARNING: rejected rule (term -> variables) in state 138
WARNING: reduce/reduce conflict in state 141 resolved using rule (term -> variables)
WARNING: rejected rule (value2 -> variables) in state 141
WARNING: reduce/reduce conflict in state 143 resolved using rule (expression -> term)
WARNING: rejected rule (value2 -> term) in state 143
WARNING: reduce/reduce conflict in state 160 resolved using rule (asignar -> expression)
WARNING: rejected rule (assigns -> IDLOCAL ASSIGN expression) in state 160
WARNING: reduce/reduce conflict in state 161 resolved using rule (asignar -> variables)
WARNING: rejected rule (assigns -> IDLOCAL ASSIGN variables) in state 161
WARNING: reduce/reduce conflict in state 161 resolved using rule (asignar -> variables)
WARNING: rejected rule (term -> variables) in state 161
WARNING: reduce/reduce conflict in state 161 resolved using rule (term -> variables)
WARNING: rejected rule (value2 -> variables) in state 161
WARNING: reduce/reduce conflict in state 163 resolved using rule (asignar -> reglaSemanticaComparaciones)
WARNING: rejected rule (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones) in state 163
WARNING: reduce/reduce conflict in state 165 resolved using rule (asignar -> expression)
WARNING: rejected rule (assigns -> IDINSTANCE ASSIGN expression) in state 165
WARNING: reduce/reduce conflict in state 166 resolved using rule (asignar -> variables)
WARNING: rejected rule (assigns -> IDINSTANCE ASSIGN variables) in state 166
WARNING: reduce/reduce conflict in state 166 resolved using rule (asignar -> variables)
WARNING: rejected rule (term -> variables) in state 166
WARNING: reduce/reduce conflict in state 166 resolved using rule (term -> variables)
WARNING: rejected rule (value2 -> variables) in state 166
WARNING: reduce/reduce conflict in state 168 resolved using rule (asignar -> reglaSemanticaComparaciones)
WARNING: rejected rule (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones) in state 168
WARNING: reduce/reduce conflict in state 169 resolved using rule (asignar -> expression)
WARNING: rejected rule (assigns -> IDCLASS ASSIGN expression) in state 169
WARNING: reduce/reduce conflict in state 170 resolved using rule (asignar -> variables)
WARNING: rejected rule (assigns -> IDCLASS ASSIGN variables) in state 170
WARNING: reduce/reduce conflict in state 170 resolved using rule (asignar -> variables)
WARNING: rejected rule (term -> variables) in state 170
WARNING: reduce/reduce conflict in state 170 resolved using rule (term -> variables)
WARNING: rejected rule (value2 -> variables) in state 170
WARNING: reduce/reduce conflict in state 172 resolved using rule (asignar -> reglaSemanticaComparaciones)
WARNING: rejected rule (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones) in state 172
WARNING: reduce/reduce conflict in state 173 resolved using rule (asignar -> expression)
WARNING: rejected rule (assigns -> IDGLOBAL ASSIGN expression) in state 173
WARNING: reduce/reduce conflict in state 174 resolved using rule (asignar -> variables)
WARNING: rejected rule (assigns -> IDGLOBAL ASSIGN variables) in state 174
WARNING: reduce/reduce conflict in state 174 resolved using rule (asignar -> variables)
WARNING: rejected rule (term -> variables) in state 174
WARNING: reduce/reduce conflict in state 174 resolved using rule (term -> variables)
WARNING: rejected rule (value2 -> variables) in state 174
WARNING: reduce/reduce conflict in state 176 resolved using rule (asignar -> reglaSemanticaComparaciones)
WARNING: rejected rule (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones) in state 176
WARNING: reduce/reduce conflict in state 177 resolved using rule (asignar -> expression)
WARNING: rejected rule (assigns -> IDENTIFIER ASSIGN expression) in state 177
WARNING: reduce/reduce conflict in state 178 resolved using rule (asignar -> variables)
WARNING: rejected rule (assigns -> IDENTIFIER ASSIGN variables) in state 178
WARNING: reduce/reduce conflict in state 178 resolved using rule (asignar -> variables)
WARNING: rejected rule (term -> variables) in state 178
WARNING: reduce/reduce conflict in state 178 resolved using rule (term -> variables)
WARNING: rejected rule (value2 -> variables) in state 178
WARNING: reduce/reduce conflict in state 194 resolved using rule (algoritmo -> variables)
WARNING: rejected rule (term -> variables) in state 194
WARNING: reduce/reduce conflict in state 281 resolved using rule (factor -> NUMBER)
WARNING: rejected rule (factor -> MINUS NUMBER) in state 281
WARNING: reduce/reduce conflict in state 282 resolved using rule (factor -> FLOAT)
WARNING: rejected rule (factor -> MINUS FLOAT) in state 282
WARNING: reduce/reduce conflict in state 286 resolved using rule (fcontenido -> variables COMMA fcontenido)
WARNING: rejected rule (valuedefect -> variables COMMA fcontenido) in state 286
WARNING: reduce/reduce conflict in state 313 resolved using rule (algoritmo -> expression)
WARNING: rejected rule (forcontentvalue -> expression) in state 313
WARNING: reduce/reduce conflict in state 315 resolved using rule (algoritmo -> variables)
WARNING: rejected rule (term -> variables) in state 315
WARNING: Rule (value2 -> variables) is never reduced
WARNING: Rule (value2 -> term) is never reduced
WARNING: Rule (assigns -> IDLOCAL ASSIGN expression) is never reduced
WARNING: Rule (assigns -> IDLOCAL ASSIGN variables) is never reduced
WARNING: Rule (assigns -> IDLOCAL ASSIGN reglaSemanticaComparaciones) is never reduced
WARNING: Rule (assigns -> IDINSTANCE ASSIGN expression) is never reduced
WARNING: Rule (assigns -> IDINSTANCE ASSIGN variables) is never reduced
WARNING: Rule (assigns -> IDINSTANCE ASSIGN reglaSemanticaComparaciones) is never reduced
WARNING: Rule (assigns -> IDCLASS ASSIGN expression) is never reduced
WARNING: Rule (assigns -> IDCLASS ASSIGN variables) is never reduced
WARNING: Rule (assigns -> IDCLASS ASSIGN reglaSemanticaComparaciones) is never reduced
WARNING: Rule (assigns -> IDGLOBAL ASSIGN expression) is never reduced
WARNING: Rule (assigns -> IDGLOBAL ASSIGN variables) is never reduced
WARNING: Rule (assigns -> IDGLOBAL ASSIGN reglaSemanticaComparaciones) is never reduced
WARNING: Rule (assigns -> IDENTIFIER ASSIGN expression) is never reduced
WARNING: Rule (assigns -> IDENTIFIER ASSIGN variables) is never reduced
WARNING: Rule (valuedefect -> variables COMMA fcontenido) is never reduced
WARNING: Rule (forcontentvalue -> expression) is never reduced
