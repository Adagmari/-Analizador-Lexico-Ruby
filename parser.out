Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ANDS
    BSLASH
    CASE
    CLASS
    COMENTARIO
    COMID
    COMIS
    DEFINED
    ELSIF
    ENSURE
    IDENTIFIER
    MODULE
    NEXT
    NOT
    NOTS
    OR
    ORS
    PUTC
    REDO
    RESCUE
    SELF
    SEMICOLON
    UNDEF
    UNTIL
    WHEN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignar
Rule 2     instrucciones -> noasignar
Rule 3     asignar -> expression
Rule 4     asignar -> string
Rule 5     asignar -> cadena
Rule 6     asignar -> metodocadena
Rule 7     asignar -> arreglo
Rule 8     asignar -> metodosarreglo
Rule 9     asignar -> hash
Rule 10    asignar -> metodohash
Rule 11    asignar -> boolean
Rule 12    asignar -> variables
Rule 13    noasignar -> estructurasControl
Rule 14    noasignar -> oputs
Rule 15    noasignar -> putss
Rule 16    noasignar -> putsenx
Rule 17    noasignar -> sentenIF
Rule 18    noasignar -> sentenifp
Rule 19    noasignar -> sentenifelse
Rule 20    noasignar -> sentenWHILE
Rule 21    noasignar -> funcion1
Rule 22    noasignar -> funcion2
Rule 23    noasignar -> funcion3
Rule 24    noasignar -> ogets
Rule 25    noasignar -> getsr
Rule 26    noasignar -> assigns
Rule 27    boolean -> TRUE
Rule 28    boolean -> FALSE
Rule 29    boolean -> NIL
Rule 30    oputs -> PUTS
Rule 31    putss -> PUTS string
Rule 32    putss -> PUTS cadena
Rule 33    putss -> PRINT string
Rule 34    putss -> PRINT cadena
Rule 35    putsenx -> PUTS expression
Rule 36    putsenx -> PRINT expression
Rule 37    algoritmo -> expression
Rule 38    algoritmo -> metodocadena
Rule 39    algoritmo -> arreglo
Rule 40    algoritmo -> metodosarreglo
Rule 41    algoritmo -> hash
Rule 42    algoritmo -> estructurasControl
Rule 43    algoritmo -> boolean
Rule 44    algoritmo -> assigns
Rule 45    algoritmo -> sentenIF
Rule 46    algoritmo -> sentenifp
Rule 47    algoritmo -> sentenifelse
Rule 48    algoritmo -> variables
Rule 49    algoritmo -> sentenWHILE
Rule 50    sentenWHILE -> WHILE variables comparador variables algoritmo END
Rule 51    sentenWHILE -> WHILE variables comparador expression algoritmo END
Rule 52    sentenWHILE -> WHILE boolean algoritmo END
Rule 53    sentenWHILE -> WHILE variables algoritmo END
Rule 54    sentenIF -> IF variables comparador term
Rule 55    sentenifp -> IF variables comparador term algoritmo END
Rule 56    sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END
Rule 57    variables -> IDLOCAL
Rule 58    variables -> IDINSTANCE
Rule 59    variables -> IDCLASS
Rule 60    variables -> IDGLOBAL
Rule 61    assigns -> variables ASSIGN expression
Rule 62    assigns -> variables ASSIGN variables
Rule 63    assigns -> variables ASSIGN boolean
Rule 64    assigns -> variables ASSIGN asignar
Rule 65    assigns -> variables ASSIGNPLUS expression
Rule 66    assigns -> variables ASSIGNPLUS variables
Rule 67    assigns -> variables ASSIGNMIN expression
Rule 68    assigns -> variables ASSIGNMIN variables
Rule 69    expression -> expression PLUS term
Rule 70    expression -> expression PLUS variables
Rule 71    expression -> expression MINUS variables
Rule 72    expression -> expression MINUS term
Rule 73    expression -> term
Rule 74    term -> factor
Rule 75    term -> variables
Rule 76    factor -> NUMBER
Rule 77    factor -> FLOAT
Rule 78    factor -> NUML
Rule 79    factor -> MINUS NUMBER
Rule 80    factor -> MINUS FLOAT
Rule 81    expression -> expression DIVISION term
Rule 82    expression -> expression MOD term
Rule 83    expression -> expression MULT term
Rule 84    expression -> expression EXP term
Rule 85    string -> STRINGV
Rule 86    cadena -> STRING POINT NEW
Rule 87    cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS
Rule 88    cadena -> STRING LPARENTHESIS string RPARENTHESIS
Rule 89    metodocadena -> cadena POINT EMPTY INTERROGATIVE
Rule 90    metodocadena -> string POINT EMPTY INTERROGATIVE
Rule 91    metodocadena -> cadena POINT LENGTH
Rule 92    metodocadena -> string POINT LENGTH
Rule 93    arreglo -> ARRAY POINT NEW
Rule 94    arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
Rule 95    arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
Rule 96    arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET
Rule 97    arreglo -> LSQBRACKET arraycontent RSQBRACKET
Rule 98    arraycontent -> factor
Rule 99    arraycontent -> string
Rule 100   arraycontent -> factor COMMA arraycontent
Rule 101   arraycontent -> string COMMA arraycontent
Rule 102   metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
Rule 103   metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET
Rule 104   hash -> LBRACKET hashcontent RBRACKET
Rule 105   hash -> HASH POINT NEW
Rule 106   hashcontent -> string ASSIGN GREATER hashcontentvalue
Rule 107   hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent
Rule 108   hashcontentvalue -> factor
Rule 109   hashcontentvalue -> string
Rule 110   metodohash -> variables ASSIGN hash POINT LENGTH
Rule 111   metodohash -> variables POINT LENGTH
Rule 112   comparador -> COMPARE
Rule 113   comparador -> GREQUAL
Rule 114   comparador -> LSEQUAL
Rule 115   comparador -> NOTEQUAL
Rule 116   comparador -> LESS
Rule 117   comparador -> GREATER
Rule 118   estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
Rule 119   estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
Rule 120   forcontent -> forcontentvalue
Rule 121   forcontent -> forcontentvalue forcontent
Rule 122   forcontentvalue -> expression
Rule 123   forcontentvalue -> algoritmo
Rule 124   funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
Rule 125   funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END
Rule 126   fcontenido -> variables
Rule 127   fcontenido -> variables COMMA fcontenido
Rule 128   values -> term
Rule 129   values -> boolean
Rule 130   values -> cadena
Rule 131   values -> arreglo
Rule 132   valuedefect -> variables ASSIGN values
Rule 133   valuedefect -> variables COMMA fcontenido
Rule 134   valuedefect -> variables COMMA valuedefect
Rule 135   funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END
Rule 136   funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo END
Rule 137   funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END
Rule 138   funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END
Rule 139   ogets -> GETS
Rule 140   getsr -> IDLOCAL ASSIGN GETS

Terminals, with rules where they appear

AND                  : 
ANDS                 : 
ARRAY                : 93 94 95 96
ASSIGN               : 61 62 63 64 106 107 110 132 140
ASSIGNMIN            : 67 68
ASSIGNPLUS           : 65 66
BREAK                : 118
BSLASH               : 
CASE                 : 
CLASS                : 
COMENTARIO           : 
COMID                : 
COMIS                : 
COMMA                : 95 100 101 107 127 133 134
COMPARE              : 112
DEF                  : 124 125 135 136 137 138
DEFINED              : 
DIVISION             : 81
DO                   : 118 119
ELSE                 : 56
ELSIF                : 
EMPTY                : 89 90
END                  : 50 51 52 53 55 56 118 119 124 125 135 136 137 138
ENSURE               : 
EXP                  : 84
FALSE                : 28
FLOAT                : 77 80
FOR                  : 118 119
GETS                 : 139 140
GREATER              : 106 107 117
GREQUAL              : 113
HASH                 : 105
IDCLASS              : 59
IDENTIFIER           : 
IDGLOBAL             : 60
IDINSTANCE           : 58
IDLOCAL              : 57 118 119 124 124 125 135 136 137 137 138 138 140
IF                   : 54 55 56 118
IN                   : 118 119
INDEX                : 102
INTERROGATIVE        : 89 90
LBRACKET             : 104
LENGTH               : 91 92 110 111
LESS                 : 116
LPARENTHESIS         : 87 88 94 95 102 124 125 135 136 137 138
LSEQUAL              : 114
LSQBRACKET           : 96 97 103
MINUS                : 71 72 79 80
MOD                  : 82
MODULE               : 
MULT                 : 83 137 138
NEW                  : 86 87 93 94 95 105
NEXT                 : 
NIL                  : 29
NOT                  : 
NOTEQUAL             : 115
NOTS                 : 
NUMBER               : 76 79
NUML                 : 78
OR                   : 
ORS                  : 
PLUS                 : 69 70
POINT                : 86 87 89 90 91 92 93 94 95 102 105 110 111 118 118 119 119
PRINT                : 33 34 36
PUTC                 : 
PUTS                 : 30 31 32 35
RBRACKET             : 104
REDO                 : 
RESCUE               : 
RETURN               : 124 135 137
RPARENTHESIS         : 87 88 94 95 102 124 125 135 136 137 138
RSQBRACKET           : 96 97 103
SELF                 : 
SEMICOLON            : 
STRING               : 86 87 88
STRINGV              : 85
TRUE                 : 27
UNDEF                : 
UNTIL                : 
WHEN                 : 
WHILE                : 50 51 52 53
error                : 

Nonterminals, with rules where they appear

algoritmo            : 50 51 52 53 55 56 56 123 124 125 135 136 137 138
arraycontent         : 95 96 97 100 101 102
arreglo              : 7 39 102 103 131
asignar              : 1 64
assigns              : 26 44
boolean              : 11 43 52 63 129
cadena               : 5 32 34 89 91 130
comparador           : 50 51 54 55 56
estructurasControl   : 13 42
expression           : 3 35 36 37 51 61 65 67 69 70 71 72 81 82 83 84 122
factor               : 74 94 95 98 100 103 108 118 118 119 119
fcontenido           : 124 125 127 133
forcontent           : 118 119 121
forcontentvalue      : 118 120 121
funcion1             : 21
funcion2             : 22
funcion3             : 23
getsr                : 25
hash                 : 9 41 110
hashcontent          : 104 107
hashcontentvalue     : 106 107
instrucciones        : 0
metodocadena         : 6 38
metodohash           : 10
metodosarreglo       : 8 40
noasignar            : 2
ogets                : 24
oputs                : 14
putsenx              : 16
putss                : 15
sentenIF             : 17 45
sentenWHILE          : 20 49
sentenifelse         : 19 47
sentenifp            : 18 46
string               : 4 31 33 87 88 90 92 99 101 106 107 109
term                 : 54 55 56 69 72 73 81 82 83 84 128
valuedefect          : 134 135 136
values               : 132
variables            : 12 48 50 50 51 53 54 55 56 61 62 62 63 64 65 66 66 67 68 68 70 71 75 110 111 126 127 132 133 134 135 137

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignar
    (2) instrucciones -> . noasignar
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) noasignar -> . estructurasControl
    (14) noasignar -> . oputs
    (15) noasignar -> . putss
    (16) noasignar -> . putsenx
    (17) noasignar -> . sentenIF
    (18) noasignar -> . sentenifp
    (19) noasignar -> . sentenifelse
    (20) noasignar -> . sentenWHILE
    (21) noasignar -> . funcion1
    (22) noasignar -> . funcion2
    (23) noasignar -> . funcion3
    (24) noasignar -> . ogets
    (25) noasignar -> . getsr
    (26) noasignar -> . assigns
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (85) string -> . STRINGV
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (110) metodohash -> . variables ASSIGN hash POINT LENGTH
    (111) metodohash -> . variables POINT LENGTH
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (30) oputs -> . PUTS
    (31) putss -> . PUTS string
    (32) putss -> . PUTS cadena
    (33) putss -> . PRINT string
    (34) putss -> . PRINT cadena
    (35) putsenx -> . PUTS expression
    (36) putsenx -> . PRINT expression
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (124) funcion1 -> . DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (125) funcion1 -> . DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END
    (135) funcion2 -> . DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END
    (136) funcion2 -> . DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo END
    (137) funcion3 -> . DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END
    (138) funcion3 -> . DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END
    (139) ogets -> . GETS
    (140) getsr -> . IDLOCAL ASSIGN GETS
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 30
    STRING          shift and go to state 31
    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IDLOCAL         shift and go to state 40
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    FOR             shift and go to state 44
    PUTS            shift and go to state 46
    PRINT           shift and go to state 47
    IF              shift and go to state 45
    WHILE           shift and go to state 48
    DEF             shift and go to state 49
    GETS            shift and go to state 50
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    instrucciones                  shift and go to state 1
    asignar                        shift and go to state 2
    noasignar                      shift and go to state 3
    expression                     shift and go to state 4
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    boolean                        shift and go to state 12
    variables                      shift and go to state 13
    estructurasControl             shift and go to state 14
    oputs                          shift and go to state 15
    putss                          shift and go to state 16
    putsenx                        shift and go to state 17
    sentenIF                       shift and go to state 18
    sentenifp                      shift and go to state 19
    sentenifelse                   shift and go to state 20
    sentenWHILE                    shift and go to state 21
    funcion1                       shift and go to state 22
    funcion2                       shift and go to state 23
    funcion3                       shift and go to state 24
    ogets                          shift and go to state 25
    getsr                          shift and go to state 26
    assigns                        shift and go to state 27
    term                           shift and go to state 28
    factor                         shift and go to state 33

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignar .

    $end            reduce using rule 1 (instrucciones -> asignar .)


state 3

    (2) instrucciones -> noasignar .

    $end            reduce using rule 2 (instrucciones -> noasignar .)


state 4

    (3) asignar -> expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . PLUS variables
    (71) expression -> expression . MINUS variables
    (72) expression -> expression . MINUS term
    (81) expression -> expression . DIVISION term
    (82) expression -> expression . MOD term
    (83) expression -> expression . MULT term
    (84) expression -> expression . EXP term

    $end            reduce using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    DIVISION        shift and go to state 56
    MOD             shift and go to state 57
    MULT            shift and go to state 58
    EXP             shift and go to state 59


state 5

    (4) asignar -> string .
    (90) metodocadena -> string . POINT EMPTY INTERROGATIVE
    (92) metodocadena -> string . POINT LENGTH

    $end            reduce using rule 4 (asignar -> string .)
    END             reduce using rule 4 (asignar -> string .)
    ELSE            reduce using rule 4 (asignar -> string .)
    RETURN          reduce using rule 4 (asignar -> string .)
    ARRAY           reduce using rule 4 (asignar -> string .)
    LSQBRACKET      reduce using rule 4 (asignar -> string .)
    LBRACKET        reduce using rule 4 (asignar -> string .)
    HASH            reduce using rule 4 (asignar -> string .)
    FOR             reduce using rule 4 (asignar -> string .)
    TRUE            reduce using rule 4 (asignar -> string .)
    FALSE           reduce using rule 4 (asignar -> string .)
    NIL             reduce using rule 4 (asignar -> string .)
    IF              reduce using rule 4 (asignar -> string .)
    IDLOCAL         reduce using rule 4 (asignar -> string .)
    IDINSTANCE      reduce using rule 4 (asignar -> string .)
    IDCLASS         reduce using rule 4 (asignar -> string .)
    IDGLOBAL        reduce using rule 4 (asignar -> string .)
    WHILE           reduce using rule 4 (asignar -> string .)
    NUMBER          reduce using rule 4 (asignar -> string .)
    FLOAT           reduce using rule 4 (asignar -> string .)
    NUML            reduce using rule 4 (asignar -> string .)
    MINUS           reduce using rule 4 (asignar -> string .)
    STRING          reduce using rule 4 (asignar -> string .)
    STRINGV         reduce using rule 4 (asignar -> string .)
    BREAK           reduce using rule 4 (asignar -> string .)
    POINT           shift and go to state 60


state 6

    (5) asignar -> cadena .
    (89) metodocadena -> cadena . POINT EMPTY INTERROGATIVE
    (91) metodocadena -> cadena . POINT LENGTH

    $end            reduce using rule 5 (asignar -> cadena .)
    END             reduce using rule 5 (asignar -> cadena .)
    ELSE            reduce using rule 5 (asignar -> cadena .)
    RETURN          reduce using rule 5 (asignar -> cadena .)
    ARRAY           reduce using rule 5 (asignar -> cadena .)
    LSQBRACKET      reduce using rule 5 (asignar -> cadena .)
    LBRACKET        reduce using rule 5 (asignar -> cadena .)
    HASH            reduce using rule 5 (asignar -> cadena .)
    FOR             reduce using rule 5 (asignar -> cadena .)
    TRUE            reduce using rule 5 (asignar -> cadena .)
    FALSE           reduce using rule 5 (asignar -> cadena .)
    NIL             reduce using rule 5 (asignar -> cadena .)
    IF              reduce using rule 5 (asignar -> cadena .)
    IDLOCAL         reduce using rule 5 (asignar -> cadena .)
    IDINSTANCE      reduce using rule 5 (asignar -> cadena .)
    IDCLASS         reduce using rule 5 (asignar -> cadena .)
    IDGLOBAL        reduce using rule 5 (asignar -> cadena .)
    WHILE           reduce using rule 5 (asignar -> cadena .)
    NUMBER          reduce using rule 5 (asignar -> cadena .)
    FLOAT           reduce using rule 5 (asignar -> cadena .)
    NUML            reduce using rule 5 (asignar -> cadena .)
    MINUS           reduce using rule 5 (asignar -> cadena .)
    STRING          reduce using rule 5 (asignar -> cadena .)
    STRINGV         reduce using rule 5 (asignar -> cadena .)
    BREAK           reduce using rule 5 (asignar -> cadena .)
    POINT           shift and go to state 61


state 7

    (6) asignar -> metodocadena .

    $end            reduce using rule 6 (asignar -> metodocadena .)
    END             reduce using rule 6 (asignar -> metodocadena .)
    ELSE            reduce using rule 6 (asignar -> metodocadena .)
    RETURN          reduce using rule 6 (asignar -> metodocadena .)
    ARRAY           reduce using rule 6 (asignar -> metodocadena .)
    LSQBRACKET      reduce using rule 6 (asignar -> metodocadena .)
    LBRACKET        reduce using rule 6 (asignar -> metodocadena .)
    HASH            reduce using rule 6 (asignar -> metodocadena .)
    FOR             reduce using rule 6 (asignar -> metodocadena .)
    TRUE            reduce using rule 6 (asignar -> metodocadena .)
    FALSE           reduce using rule 6 (asignar -> metodocadena .)
    NIL             reduce using rule 6 (asignar -> metodocadena .)
    IF              reduce using rule 6 (asignar -> metodocadena .)
    IDLOCAL         reduce using rule 6 (asignar -> metodocadena .)
    IDINSTANCE      reduce using rule 6 (asignar -> metodocadena .)
    IDCLASS         reduce using rule 6 (asignar -> metodocadena .)
    IDGLOBAL        reduce using rule 6 (asignar -> metodocadena .)
    WHILE           reduce using rule 6 (asignar -> metodocadena .)
    NUMBER          reduce using rule 6 (asignar -> metodocadena .)
    FLOAT           reduce using rule 6 (asignar -> metodocadena .)
    NUML            reduce using rule 6 (asignar -> metodocadena .)
    MINUS           reduce using rule 6 (asignar -> metodocadena .)
    STRING          reduce using rule 6 (asignar -> metodocadena .)
    STRINGV         reduce using rule 6 (asignar -> metodocadena .)
    BREAK           reduce using rule 6 (asignar -> metodocadena .)


state 8

    (7) asignar -> arreglo .
    (102) metodosarreglo -> arreglo . POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> arreglo . LSQBRACKET factor RSQBRACKET

  ! shift/reduce conflict for LSQBRACKET resolved as shift
    $end            reduce using rule 7 (asignar -> arreglo .)
    END             reduce using rule 7 (asignar -> arreglo .)
    ELSE            reduce using rule 7 (asignar -> arreglo .)
    RETURN          reduce using rule 7 (asignar -> arreglo .)
    ARRAY           reduce using rule 7 (asignar -> arreglo .)
    LBRACKET        reduce using rule 7 (asignar -> arreglo .)
    HASH            reduce using rule 7 (asignar -> arreglo .)
    FOR             reduce using rule 7 (asignar -> arreglo .)
    TRUE            reduce using rule 7 (asignar -> arreglo .)
    FALSE           reduce using rule 7 (asignar -> arreglo .)
    NIL             reduce using rule 7 (asignar -> arreglo .)
    IF              reduce using rule 7 (asignar -> arreglo .)
    IDLOCAL         reduce using rule 7 (asignar -> arreglo .)
    IDINSTANCE      reduce using rule 7 (asignar -> arreglo .)
    IDCLASS         reduce using rule 7 (asignar -> arreglo .)
    IDGLOBAL        reduce using rule 7 (asignar -> arreglo .)
    WHILE           reduce using rule 7 (asignar -> arreglo .)
    NUMBER          reduce using rule 7 (asignar -> arreglo .)
    FLOAT           reduce using rule 7 (asignar -> arreglo .)
    NUML            reduce using rule 7 (asignar -> arreglo .)
    MINUS           reduce using rule 7 (asignar -> arreglo .)
    STRING          reduce using rule 7 (asignar -> arreglo .)
    STRINGV         reduce using rule 7 (asignar -> arreglo .)
    BREAK           reduce using rule 7 (asignar -> arreglo .)
    POINT           shift and go to state 62
    LSQBRACKET      shift and go to state 63

  ! LSQBRACKET      [ reduce using rule 7 (asignar -> arreglo .) ]


state 9

    (8) asignar -> metodosarreglo .

    $end            reduce using rule 8 (asignar -> metodosarreglo .)
    END             reduce using rule 8 (asignar -> metodosarreglo .)
    ELSE            reduce using rule 8 (asignar -> metodosarreglo .)
    RETURN          reduce using rule 8 (asignar -> metodosarreglo .)
    ARRAY           reduce using rule 8 (asignar -> metodosarreglo .)
    LSQBRACKET      reduce using rule 8 (asignar -> metodosarreglo .)
    LBRACKET        reduce using rule 8 (asignar -> metodosarreglo .)
    HASH            reduce using rule 8 (asignar -> metodosarreglo .)
    FOR             reduce using rule 8 (asignar -> metodosarreglo .)
    TRUE            reduce using rule 8 (asignar -> metodosarreglo .)
    FALSE           reduce using rule 8 (asignar -> metodosarreglo .)
    NIL             reduce using rule 8 (asignar -> metodosarreglo .)
    IF              reduce using rule 8 (asignar -> metodosarreglo .)
    IDLOCAL         reduce using rule 8 (asignar -> metodosarreglo .)
    IDINSTANCE      reduce using rule 8 (asignar -> metodosarreglo .)
    IDCLASS         reduce using rule 8 (asignar -> metodosarreglo .)
    IDGLOBAL        reduce using rule 8 (asignar -> metodosarreglo .)
    WHILE           reduce using rule 8 (asignar -> metodosarreglo .)
    NUMBER          reduce using rule 8 (asignar -> metodosarreglo .)
    FLOAT           reduce using rule 8 (asignar -> metodosarreglo .)
    NUML            reduce using rule 8 (asignar -> metodosarreglo .)
    MINUS           reduce using rule 8 (asignar -> metodosarreglo .)
    STRING          reduce using rule 8 (asignar -> metodosarreglo .)
    STRINGV         reduce using rule 8 (asignar -> metodosarreglo .)
    BREAK           reduce using rule 8 (asignar -> metodosarreglo .)


state 10

    (9) asignar -> hash .

    $end            reduce using rule 9 (asignar -> hash .)
    END             reduce using rule 9 (asignar -> hash .)
    ELSE            reduce using rule 9 (asignar -> hash .)
    RETURN          reduce using rule 9 (asignar -> hash .)
    ARRAY           reduce using rule 9 (asignar -> hash .)
    LSQBRACKET      reduce using rule 9 (asignar -> hash .)
    LBRACKET        reduce using rule 9 (asignar -> hash .)
    HASH            reduce using rule 9 (asignar -> hash .)
    FOR             reduce using rule 9 (asignar -> hash .)
    TRUE            reduce using rule 9 (asignar -> hash .)
    FALSE           reduce using rule 9 (asignar -> hash .)
    NIL             reduce using rule 9 (asignar -> hash .)
    IF              reduce using rule 9 (asignar -> hash .)
    IDLOCAL         reduce using rule 9 (asignar -> hash .)
    IDINSTANCE      reduce using rule 9 (asignar -> hash .)
    IDCLASS         reduce using rule 9 (asignar -> hash .)
    IDGLOBAL        reduce using rule 9 (asignar -> hash .)
    WHILE           reduce using rule 9 (asignar -> hash .)
    NUMBER          reduce using rule 9 (asignar -> hash .)
    FLOAT           reduce using rule 9 (asignar -> hash .)
    NUML            reduce using rule 9 (asignar -> hash .)
    MINUS           reduce using rule 9 (asignar -> hash .)
    STRING          reduce using rule 9 (asignar -> hash .)
    STRINGV         reduce using rule 9 (asignar -> hash .)
    BREAK           reduce using rule 9 (asignar -> hash .)


state 11

    (10) asignar -> metodohash .

    $end            reduce using rule 10 (asignar -> metodohash .)
    END             reduce using rule 10 (asignar -> metodohash .)
    ELSE            reduce using rule 10 (asignar -> metodohash .)
    RETURN          reduce using rule 10 (asignar -> metodohash .)
    ARRAY           reduce using rule 10 (asignar -> metodohash .)
    LSQBRACKET      reduce using rule 10 (asignar -> metodohash .)
    LBRACKET        reduce using rule 10 (asignar -> metodohash .)
    HASH            reduce using rule 10 (asignar -> metodohash .)
    FOR             reduce using rule 10 (asignar -> metodohash .)
    TRUE            reduce using rule 10 (asignar -> metodohash .)
    FALSE           reduce using rule 10 (asignar -> metodohash .)
    NIL             reduce using rule 10 (asignar -> metodohash .)
    IF              reduce using rule 10 (asignar -> metodohash .)
    IDLOCAL         reduce using rule 10 (asignar -> metodohash .)
    IDINSTANCE      reduce using rule 10 (asignar -> metodohash .)
    IDCLASS         reduce using rule 10 (asignar -> metodohash .)
    IDGLOBAL        reduce using rule 10 (asignar -> metodohash .)
    WHILE           reduce using rule 10 (asignar -> metodohash .)
    NUMBER          reduce using rule 10 (asignar -> metodohash .)
    FLOAT           reduce using rule 10 (asignar -> metodohash .)
    NUML            reduce using rule 10 (asignar -> metodohash .)
    MINUS           reduce using rule 10 (asignar -> metodohash .)
    STRING          reduce using rule 10 (asignar -> metodohash .)
    STRINGV         reduce using rule 10 (asignar -> metodohash .)
    BREAK           reduce using rule 10 (asignar -> metodohash .)


state 12

    (11) asignar -> boolean .

    $end            reduce using rule 11 (asignar -> boolean .)


state 13

    (12) asignar -> variables .
    (110) metodohash -> variables . ASSIGN hash POINT LENGTH
    (111) metodohash -> variables . POINT LENGTH
    (61) assigns -> variables . ASSIGN expression
    (62) assigns -> variables . ASSIGN variables
    (63) assigns -> variables . ASSIGN boolean
    (64) assigns -> variables . ASSIGN asignar
    (65) assigns -> variables . ASSIGNPLUS expression
    (66) assigns -> variables . ASSIGNPLUS variables
    (67) assigns -> variables . ASSIGNMIN expression
    (68) assigns -> variables . ASSIGNMIN variables
    (75) term -> variables .

  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
    $end            reduce using rule 12 (asignar -> variables .)
    ASSIGN          shift and go to state 64
    POINT           shift and go to state 65
    ASSIGNPLUS      shift and go to state 66
    ASSIGNMIN       shift and go to state 67
    PLUS            reduce using rule 75 (term -> variables .)
    MINUS           reduce using rule 75 (term -> variables .)
    DIVISION        reduce using rule 75 (term -> variables .)
    MOD             reduce using rule 75 (term -> variables .)
    MULT            reduce using rule 75 (term -> variables .)
    EXP             reduce using rule 75 (term -> variables .)

  ! $end            [ reduce using rule 75 (term -> variables .) ]


state 14

    (13) noasignar -> estructurasControl .

    $end            reduce using rule 13 (noasignar -> estructurasControl .)


state 15

    (14) noasignar -> oputs .

    $end            reduce using rule 14 (noasignar -> oputs .)


state 16

    (15) noasignar -> putss .

    $end            reduce using rule 15 (noasignar -> putss .)


state 17

    (16) noasignar -> putsenx .

    $end            reduce using rule 16 (noasignar -> putsenx .)


state 18

    (17) noasignar -> sentenIF .

    $end            reduce using rule 17 (noasignar -> sentenIF .)


state 19

    (18) noasignar -> sentenifp .

    $end            reduce using rule 18 (noasignar -> sentenifp .)


state 20

    (19) noasignar -> sentenifelse .

    $end            reduce using rule 19 (noasignar -> sentenifelse .)


state 21

    (20) noasignar -> sentenWHILE .

    $end            reduce using rule 20 (noasignar -> sentenWHILE .)


state 22

    (21) noasignar -> funcion1 .

    $end            reduce using rule 21 (noasignar -> funcion1 .)


state 23

    (22) noasignar -> funcion2 .

    $end            reduce using rule 22 (noasignar -> funcion2 .)


state 24

    (23) noasignar -> funcion3 .

    $end            reduce using rule 23 (noasignar -> funcion3 .)


state 25

    (24) noasignar -> ogets .

    $end            reduce using rule 24 (noasignar -> ogets .)


state 26

    (25) noasignar -> getsr .

    $end            reduce using rule 25 (noasignar -> getsr .)


state 27

    (26) noasignar -> assigns .

    $end            reduce using rule 26 (noasignar -> assigns .)


state 28

    (73) expression -> term .

    PLUS            reduce using rule 73 (expression -> term .)
    MINUS           reduce using rule 73 (expression -> term .)
    DIVISION        reduce using rule 73 (expression -> term .)
    MOD             reduce using rule 73 (expression -> term .)
    MULT            reduce using rule 73 (expression -> term .)
    EXP             reduce using rule 73 (expression -> term .)
    $end            reduce using rule 73 (expression -> term .)
    END             reduce using rule 73 (expression -> term .)
    ELSE            reduce using rule 73 (expression -> term .)
    RETURN          reduce using rule 73 (expression -> term .)
    ARRAY           reduce using rule 73 (expression -> term .)
    LSQBRACKET      reduce using rule 73 (expression -> term .)
    LBRACKET        reduce using rule 73 (expression -> term .)
    HASH            reduce using rule 73 (expression -> term .)
    FOR             reduce using rule 73 (expression -> term .)
    TRUE            reduce using rule 73 (expression -> term .)
    FALSE           reduce using rule 73 (expression -> term .)
    NIL             reduce using rule 73 (expression -> term .)
    IF              reduce using rule 73 (expression -> term .)
    IDLOCAL         reduce using rule 73 (expression -> term .)
    IDINSTANCE      reduce using rule 73 (expression -> term .)
    IDCLASS         reduce using rule 73 (expression -> term .)
    IDGLOBAL        reduce using rule 73 (expression -> term .)
    WHILE           reduce using rule 73 (expression -> term .)
    NUMBER          reduce using rule 73 (expression -> term .)
    FLOAT           reduce using rule 73 (expression -> term .)
    NUML            reduce using rule 73 (expression -> term .)
    STRING          reduce using rule 73 (expression -> term .)
    STRINGV         reduce using rule 73 (expression -> term .)
    BREAK           reduce using rule 73 (expression -> term .)


state 29

    (79) factor -> MINUS . NUMBER
    (80) factor -> MINUS . FLOAT

    NUMBER          shift and go to state 68
    FLOAT           shift and go to state 69


state 30

    (85) string -> STRINGV .

    POINT           reduce using rule 85 (string -> STRINGV .)
    $end            reduce using rule 85 (string -> STRINGV .)
    COMMA           reduce using rule 85 (string -> STRINGV .)
    RSQBRACKET      reduce using rule 85 (string -> STRINGV .)
    ASSIGN          reduce using rule 85 (string -> STRINGV .)
    RPARENTHESIS    reduce using rule 85 (string -> STRINGV .)
    RBRACKET        reduce using rule 85 (string -> STRINGV .)
    END             reduce using rule 85 (string -> STRINGV .)
    ELSE            reduce using rule 85 (string -> STRINGV .)
    RETURN          reduce using rule 85 (string -> STRINGV .)
    ARRAY           reduce using rule 85 (string -> STRINGV .)
    LSQBRACKET      reduce using rule 85 (string -> STRINGV .)
    LBRACKET        reduce using rule 85 (string -> STRINGV .)
    HASH            reduce using rule 85 (string -> STRINGV .)
    FOR             reduce using rule 85 (string -> STRINGV .)
    TRUE            reduce using rule 85 (string -> STRINGV .)
    FALSE           reduce using rule 85 (string -> STRINGV .)
    NIL             reduce using rule 85 (string -> STRINGV .)
    IF              reduce using rule 85 (string -> STRINGV .)
    IDLOCAL         reduce using rule 85 (string -> STRINGV .)
    IDINSTANCE      reduce using rule 85 (string -> STRINGV .)
    IDCLASS         reduce using rule 85 (string -> STRINGV .)
    IDGLOBAL        reduce using rule 85 (string -> STRINGV .)
    WHILE           reduce using rule 85 (string -> STRINGV .)
    NUMBER          reduce using rule 85 (string -> STRINGV .)
    FLOAT           reduce using rule 85 (string -> STRINGV .)
    NUML            reduce using rule 85 (string -> STRINGV .)
    MINUS           reduce using rule 85 (string -> STRINGV .)
    STRING          reduce using rule 85 (string -> STRINGV .)
    STRINGV         reduce using rule 85 (string -> STRINGV .)
    BREAK           reduce using rule 85 (string -> STRINGV .)


state 31

    (86) cadena -> STRING . POINT NEW
    (87) cadena -> STRING . POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> STRING . LPARENTHESIS string RPARENTHESIS

    POINT           shift and go to state 70
    LPARENTHESIS    shift and go to state 71


state 32

    (93) arreglo -> ARRAY . POINT NEW
    (94) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> ARRAY . LSQBRACKET arraycontent RSQBRACKET

    POINT           shift and go to state 72
    LSQBRACKET      shift and go to state 73


state 33

    (74) term -> factor .

    PLUS            reduce using rule 74 (term -> factor .)
    MINUS           reduce using rule 74 (term -> factor .)
    DIVISION        reduce using rule 74 (term -> factor .)
    MOD             reduce using rule 74 (term -> factor .)
    MULT            reduce using rule 74 (term -> factor .)
    EXP             reduce using rule 74 (term -> factor .)
    $end            reduce using rule 74 (term -> factor .)
    END             reduce using rule 74 (term -> factor .)
    ELSE            reduce using rule 74 (term -> factor .)
    RETURN          reduce using rule 74 (term -> factor .)
    ARRAY           reduce using rule 74 (term -> factor .)
    LSQBRACKET      reduce using rule 74 (term -> factor .)
    LBRACKET        reduce using rule 74 (term -> factor .)
    HASH            reduce using rule 74 (term -> factor .)
    FOR             reduce using rule 74 (term -> factor .)
    TRUE            reduce using rule 74 (term -> factor .)
    FALSE           reduce using rule 74 (term -> factor .)
    NIL             reduce using rule 74 (term -> factor .)
    IF              reduce using rule 74 (term -> factor .)
    IDLOCAL         reduce using rule 74 (term -> factor .)
    IDINSTANCE      reduce using rule 74 (term -> factor .)
    IDCLASS         reduce using rule 74 (term -> factor .)
    IDGLOBAL        reduce using rule 74 (term -> factor .)
    WHILE           reduce using rule 74 (term -> factor .)
    NUMBER          reduce using rule 74 (term -> factor .)
    FLOAT           reduce using rule 74 (term -> factor .)
    NUML            reduce using rule 74 (term -> factor .)
    STRING          reduce using rule 74 (term -> factor .)
    STRINGV         reduce using rule 74 (term -> factor .)
    BREAK           reduce using rule 74 (term -> factor .)
    RPARENTHESIS    reduce using rule 74 (term -> factor .)


state 34

    (97) arreglo -> LSQBRACKET . arraycontent RSQBRACKET
    (98) arraycontent -> . factor
    (99) arraycontent -> . string
    (100) arraycontent -> . factor COMMA arraycontent
    (101) arraycontent -> . string COMMA arraycontent
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (85) string -> . STRINGV

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    STRINGV         shift and go to state 30

    arraycontent                   shift and go to state 74
    factor                         shift and go to state 75
    string                         shift and go to state 76

state 35

    (104) hash -> LBRACKET . hashcontent RBRACKET
    (106) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (107) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (85) string -> . STRINGV

    STRINGV         shift and go to state 30

    hashcontent                    shift and go to state 77
    string                         shift and go to state 78

state 36

    (105) hash -> HASH . POINT NEW

    POINT           shift and go to state 79


state 37

    (27) boolean -> TRUE .

    $end            reduce using rule 27 (boolean -> TRUE .)
    ARRAY           reduce using rule 27 (boolean -> TRUE .)
    LSQBRACKET      reduce using rule 27 (boolean -> TRUE .)
    LBRACKET        reduce using rule 27 (boolean -> TRUE .)
    HASH            reduce using rule 27 (boolean -> TRUE .)
    FOR             reduce using rule 27 (boolean -> TRUE .)
    TRUE            reduce using rule 27 (boolean -> TRUE .)
    FALSE           reduce using rule 27 (boolean -> TRUE .)
    NIL             reduce using rule 27 (boolean -> TRUE .)
    IF              reduce using rule 27 (boolean -> TRUE .)
    IDLOCAL         reduce using rule 27 (boolean -> TRUE .)
    IDINSTANCE      reduce using rule 27 (boolean -> TRUE .)
    IDCLASS         reduce using rule 27 (boolean -> TRUE .)
    IDGLOBAL        reduce using rule 27 (boolean -> TRUE .)
    WHILE           reduce using rule 27 (boolean -> TRUE .)
    STRING          reduce using rule 27 (boolean -> TRUE .)
    STRINGV         reduce using rule 27 (boolean -> TRUE .)
    NUMBER          reduce using rule 27 (boolean -> TRUE .)
    FLOAT           reduce using rule 27 (boolean -> TRUE .)
    NUML            reduce using rule 27 (boolean -> TRUE .)
    MINUS           reduce using rule 27 (boolean -> TRUE .)
    END             reduce using rule 27 (boolean -> TRUE .)
    ELSE            reduce using rule 27 (boolean -> TRUE .)
    RETURN          reduce using rule 27 (boolean -> TRUE .)
    BREAK           reduce using rule 27 (boolean -> TRUE .)
    RPARENTHESIS    reduce using rule 27 (boolean -> TRUE .)


state 38

    (28) boolean -> FALSE .

    $end            reduce using rule 28 (boolean -> FALSE .)
    ARRAY           reduce using rule 28 (boolean -> FALSE .)
    LSQBRACKET      reduce using rule 28 (boolean -> FALSE .)
    LBRACKET        reduce using rule 28 (boolean -> FALSE .)
    HASH            reduce using rule 28 (boolean -> FALSE .)
    FOR             reduce using rule 28 (boolean -> FALSE .)
    TRUE            reduce using rule 28 (boolean -> FALSE .)
    FALSE           reduce using rule 28 (boolean -> FALSE .)
    NIL             reduce using rule 28 (boolean -> FALSE .)
    IF              reduce using rule 28 (boolean -> FALSE .)
    IDLOCAL         reduce using rule 28 (boolean -> FALSE .)
    IDINSTANCE      reduce using rule 28 (boolean -> FALSE .)
    IDCLASS         reduce using rule 28 (boolean -> FALSE .)
    IDGLOBAL        reduce using rule 28 (boolean -> FALSE .)
    WHILE           reduce using rule 28 (boolean -> FALSE .)
    STRING          reduce using rule 28 (boolean -> FALSE .)
    STRINGV         reduce using rule 28 (boolean -> FALSE .)
    NUMBER          reduce using rule 28 (boolean -> FALSE .)
    FLOAT           reduce using rule 28 (boolean -> FALSE .)
    NUML            reduce using rule 28 (boolean -> FALSE .)
    MINUS           reduce using rule 28 (boolean -> FALSE .)
    END             reduce using rule 28 (boolean -> FALSE .)
    ELSE            reduce using rule 28 (boolean -> FALSE .)
    RETURN          reduce using rule 28 (boolean -> FALSE .)
    BREAK           reduce using rule 28 (boolean -> FALSE .)
    RPARENTHESIS    reduce using rule 28 (boolean -> FALSE .)


state 39

    (29) boolean -> NIL .

    $end            reduce using rule 29 (boolean -> NIL .)
    ARRAY           reduce using rule 29 (boolean -> NIL .)
    LSQBRACKET      reduce using rule 29 (boolean -> NIL .)
    LBRACKET        reduce using rule 29 (boolean -> NIL .)
    HASH            reduce using rule 29 (boolean -> NIL .)
    FOR             reduce using rule 29 (boolean -> NIL .)
    TRUE            reduce using rule 29 (boolean -> NIL .)
    FALSE           reduce using rule 29 (boolean -> NIL .)
    NIL             reduce using rule 29 (boolean -> NIL .)
    IF              reduce using rule 29 (boolean -> NIL .)
    IDLOCAL         reduce using rule 29 (boolean -> NIL .)
    IDINSTANCE      reduce using rule 29 (boolean -> NIL .)
    IDCLASS         reduce using rule 29 (boolean -> NIL .)
    IDGLOBAL        reduce using rule 29 (boolean -> NIL .)
    WHILE           reduce using rule 29 (boolean -> NIL .)
    STRING          reduce using rule 29 (boolean -> NIL .)
    STRINGV         reduce using rule 29 (boolean -> NIL .)
    NUMBER          reduce using rule 29 (boolean -> NIL .)
    FLOAT           reduce using rule 29 (boolean -> NIL .)
    NUML            reduce using rule 29 (boolean -> NIL .)
    MINUS           reduce using rule 29 (boolean -> NIL .)
    END             reduce using rule 29 (boolean -> NIL .)
    ELSE            reduce using rule 29 (boolean -> NIL .)
    RETURN          reduce using rule 29 (boolean -> NIL .)
    BREAK           reduce using rule 29 (boolean -> NIL .)
    RPARENTHESIS    reduce using rule 29 (boolean -> NIL .)


state 40

    (57) variables -> IDLOCAL .
    (140) getsr -> IDLOCAL . ASSIGN GETS

  ! shift/reduce conflict for ASSIGN resolved as shift
    POINT           reduce using rule 57 (variables -> IDLOCAL .)
    ASSIGNPLUS      reduce using rule 57 (variables -> IDLOCAL .)
    ASSIGNMIN       reduce using rule 57 (variables -> IDLOCAL .)
    $end            reduce using rule 57 (variables -> IDLOCAL .)
    PLUS            reduce using rule 57 (variables -> IDLOCAL .)
    MINUS           reduce using rule 57 (variables -> IDLOCAL .)
    DIVISION        reduce using rule 57 (variables -> IDLOCAL .)
    MOD             reduce using rule 57 (variables -> IDLOCAL .)
    MULT            reduce using rule 57 (variables -> IDLOCAL .)
    EXP             reduce using rule 57 (variables -> IDLOCAL .)
    ASSIGN          shift and go to state 80

  ! ASSIGN          [ reduce using rule 57 (variables -> IDLOCAL .) ]


state 41

    (58) variables -> IDINSTANCE .

    ASSIGN          reduce using rule 58 (variables -> IDINSTANCE .)
    POINT           reduce using rule 58 (variables -> IDINSTANCE .)
    ASSIGNPLUS      reduce using rule 58 (variables -> IDINSTANCE .)
    ASSIGNMIN       reduce using rule 58 (variables -> IDINSTANCE .)
    $end            reduce using rule 58 (variables -> IDINSTANCE .)
    PLUS            reduce using rule 58 (variables -> IDINSTANCE .)
    MINUS           reduce using rule 58 (variables -> IDINSTANCE .)
    DIVISION        reduce using rule 58 (variables -> IDINSTANCE .)
    MOD             reduce using rule 58 (variables -> IDINSTANCE .)
    MULT            reduce using rule 58 (variables -> IDINSTANCE .)
    EXP             reduce using rule 58 (variables -> IDINSTANCE .)
    COMPARE         reduce using rule 58 (variables -> IDINSTANCE .)
    GREQUAL         reduce using rule 58 (variables -> IDINSTANCE .)
    LSEQUAL         reduce using rule 58 (variables -> IDINSTANCE .)
    NOTEQUAL        reduce using rule 58 (variables -> IDINSTANCE .)
    LESS            reduce using rule 58 (variables -> IDINSTANCE .)
    GREATER         reduce using rule 58 (variables -> IDINSTANCE .)
    ARRAY           reduce using rule 58 (variables -> IDINSTANCE .)
    LSQBRACKET      reduce using rule 58 (variables -> IDINSTANCE .)
    LBRACKET        reduce using rule 58 (variables -> IDINSTANCE .)
    HASH            reduce using rule 58 (variables -> IDINSTANCE .)
    FOR             reduce using rule 58 (variables -> IDINSTANCE .)
    TRUE            reduce using rule 58 (variables -> IDINSTANCE .)
    FALSE           reduce using rule 58 (variables -> IDINSTANCE .)
    NIL             reduce using rule 58 (variables -> IDINSTANCE .)
    IF              reduce using rule 58 (variables -> IDINSTANCE .)
    IDLOCAL         reduce using rule 58 (variables -> IDINSTANCE .)
    IDINSTANCE      reduce using rule 58 (variables -> IDINSTANCE .)
    IDCLASS         reduce using rule 58 (variables -> IDINSTANCE .)
    IDGLOBAL        reduce using rule 58 (variables -> IDINSTANCE .)
    WHILE           reduce using rule 58 (variables -> IDINSTANCE .)
    STRING          reduce using rule 58 (variables -> IDINSTANCE .)
    STRINGV         reduce using rule 58 (variables -> IDINSTANCE .)
    NUMBER          reduce using rule 58 (variables -> IDINSTANCE .)
    FLOAT           reduce using rule 58 (variables -> IDINSTANCE .)
    NUML            reduce using rule 58 (variables -> IDINSTANCE .)
    END             reduce using rule 58 (variables -> IDINSTANCE .)
    ELSE            reduce using rule 58 (variables -> IDINSTANCE .)
    RETURN          reduce using rule 58 (variables -> IDINSTANCE .)
    BREAK           reduce using rule 58 (variables -> IDINSTANCE .)
    COMMA           reduce using rule 58 (variables -> IDINSTANCE .)
    RPARENTHESIS    reduce using rule 58 (variables -> IDINSTANCE .)


state 42

    (59) variables -> IDCLASS .

    ASSIGN          reduce using rule 59 (variables -> IDCLASS .)
    POINT           reduce using rule 59 (variables -> IDCLASS .)
    ASSIGNPLUS      reduce using rule 59 (variables -> IDCLASS .)
    ASSIGNMIN       reduce using rule 59 (variables -> IDCLASS .)
    $end            reduce using rule 59 (variables -> IDCLASS .)
    PLUS            reduce using rule 59 (variables -> IDCLASS .)
    MINUS           reduce using rule 59 (variables -> IDCLASS .)
    DIVISION        reduce using rule 59 (variables -> IDCLASS .)
    MOD             reduce using rule 59 (variables -> IDCLASS .)
    MULT            reduce using rule 59 (variables -> IDCLASS .)
    EXP             reduce using rule 59 (variables -> IDCLASS .)
    COMPARE         reduce using rule 59 (variables -> IDCLASS .)
    GREQUAL         reduce using rule 59 (variables -> IDCLASS .)
    LSEQUAL         reduce using rule 59 (variables -> IDCLASS .)
    NOTEQUAL        reduce using rule 59 (variables -> IDCLASS .)
    LESS            reduce using rule 59 (variables -> IDCLASS .)
    GREATER         reduce using rule 59 (variables -> IDCLASS .)
    ARRAY           reduce using rule 59 (variables -> IDCLASS .)
    LSQBRACKET      reduce using rule 59 (variables -> IDCLASS .)
    LBRACKET        reduce using rule 59 (variables -> IDCLASS .)
    HASH            reduce using rule 59 (variables -> IDCLASS .)
    FOR             reduce using rule 59 (variables -> IDCLASS .)
    TRUE            reduce using rule 59 (variables -> IDCLASS .)
    FALSE           reduce using rule 59 (variables -> IDCLASS .)
    NIL             reduce using rule 59 (variables -> IDCLASS .)
    IF              reduce using rule 59 (variables -> IDCLASS .)
    IDLOCAL         reduce using rule 59 (variables -> IDCLASS .)
    IDINSTANCE      reduce using rule 59 (variables -> IDCLASS .)
    IDCLASS         reduce using rule 59 (variables -> IDCLASS .)
    IDGLOBAL        reduce using rule 59 (variables -> IDCLASS .)
    WHILE           reduce using rule 59 (variables -> IDCLASS .)
    STRING          reduce using rule 59 (variables -> IDCLASS .)
    STRINGV         reduce using rule 59 (variables -> IDCLASS .)
    NUMBER          reduce using rule 59 (variables -> IDCLASS .)
    FLOAT           reduce using rule 59 (variables -> IDCLASS .)
    NUML            reduce using rule 59 (variables -> IDCLASS .)
    END             reduce using rule 59 (variables -> IDCLASS .)
    ELSE            reduce using rule 59 (variables -> IDCLASS .)
    RETURN          reduce using rule 59 (variables -> IDCLASS .)
    BREAK           reduce using rule 59 (variables -> IDCLASS .)
    COMMA           reduce using rule 59 (variables -> IDCLASS .)
    RPARENTHESIS    reduce using rule 59 (variables -> IDCLASS .)


state 43

    (60) variables -> IDGLOBAL .

    ASSIGN          reduce using rule 60 (variables -> IDGLOBAL .)
    POINT           reduce using rule 60 (variables -> IDGLOBAL .)
    ASSIGNPLUS      reduce using rule 60 (variables -> IDGLOBAL .)
    ASSIGNMIN       reduce using rule 60 (variables -> IDGLOBAL .)
    $end            reduce using rule 60 (variables -> IDGLOBAL .)
    PLUS            reduce using rule 60 (variables -> IDGLOBAL .)
    MINUS           reduce using rule 60 (variables -> IDGLOBAL .)
    DIVISION        reduce using rule 60 (variables -> IDGLOBAL .)
    MOD             reduce using rule 60 (variables -> IDGLOBAL .)
    MULT            reduce using rule 60 (variables -> IDGLOBAL .)
    EXP             reduce using rule 60 (variables -> IDGLOBAL .)
    COMPARE         reduce using rule 60 (variables -> IDGLOBAL .)
    GREQUAL         reduce using rule 60 (variables -> IDGLOBAL .)
    LSEQUAL         reduce using rule 60 (variables -> IDGLOBAL .)
    NOTEQUAL        reduce using rule 60 (variables -> IDGLOBAL .)
    LESS            reduce using rule 60 (variables -> IDGLOBAL .)
    GREATER         reduce using rule 60 (variables -> IDGLOBAL .)
    ARRAY           reduce using rule 60 (variables -> IDGLOBAL .)
    LSQBRACKET      reduce using rule 60 (variables -> IDGLOBAL .)
    LBRACKET        reduce using rule 60 (variables -> IDGLOBAL .)
    HASH            reduce using rule 60 (variables -> IDGLOBAL .)
    FOR             reduce using rule 60 (variables -> IDGLOBAL .)
    TRUE            reduce using rule 60 (variables -> IDGLOBAL .)
    FALSE           reduce using rule 60 (variables -> IDGLOBAL .)
    NIL             reduce using rule 60 (variables -> IDGLOBAL .)
    IF              reduce using rule 60 (variables -> IDGLOBAL .)
    IDLOCAL         reduce using rule 60 (variables -> IDGLOBAL .)
    IDINSTANCE      reduce using rule 60 (variables -> IDGLOBAL .)
    IDCLASS         reduce using rule 60 (variables -> IDGLOBAL .)
    IDGLOBAL        reduce using rule 60 (variables -> IDGLOBAL .)
    WHILE           reduce using rule 60 (variables -> IDGLOBAL .)
    STRING          reduce using rule 60 (variables -> IDGLOBAL .)
    STRINGV         reduce using rule 60 (variables -> IDGLOBAL .)
    NUMBER          reduce using rule 60 (variables -> IDGLOBAL .)
    FLOAT           reduce using rule 60 (variables -> IDGLOBAL .)
    NUML            reduce using rule 60 (variables -> IDGLOBAL .)
    END             reduce using rule 60 (variables -> IDGLOBAL .)
    ELSE            reduce using rule 60 (variables -> IDGLOBAL .)
    RETURN          reduce using rule 60 (variables -> IDGLOBAL .)
    BREAK           reduce using rule 60 (variables -> IDGLOBAL .)
    COMMA           reduce using rule 60 (variables -> IDGLOBAL .)
    RPARENTHESIS    reduce using rule 60 (variables -> IDGLOBAL .)


state 44

    (118) estructurasControl -> FOR . IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> FOR . IDLOCAL IN factor POINT POINT factor DO forcontent END

    IDLOCAL         shift and go to state 81


state 45

    (54) sentenIF -> IF . variables comparador term
    (55) sentenifp -> IF . variables comparador term algoritmo END
    (56) sentenifelse -> IF . variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    variables                      shift and go to state 82

state 46

    (30) oputs -> PUTS .
    (31) putss -> PUTS . string
    (32) putss -> PUTS . cadena
    (35) putsenx -> PUTS . expression
    (85) string -> . STRINGV
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    $end            reduce using rule 30 (oputs -> PUTS .)
    STRINGV         shift and go to state 30
    STRING          shift and go to state 31
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    string                         shift and go to state 84
    cadena                         shift and go to state 85
    expression                     shift and go to state 86
    term                           shift and go to state 28
    variables                      shift and go to state 87
    factor                         shift and go to state 33

state 47

    (33) putss -> PRINT . string
    (34) putss -> PRINT . cadena
    (36) putsenx -> PRINT . expression
    (85) string -> . STRINGV
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    STRINGV         shift and go to state 30
    STRING          shift and go to state 31
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    string                         shift and go to state 88
    cadena                         shift and go to state 89
    expression                     shift and go to state 90
    term                           shift and go to state 28
    variables                      shift and go to state 87
    factor                         shift and go to state 33

state 48

    (50) sentenWHILE -> WHILE . variables comparador variables algoritmo END
    (51) sentenWHILE -> WHILE . variables comparador expression algoritmo END
    (52) sentenWHILE -> WHILE . boolean algoritmo END
    (53) sentenWHILE -> WHILE . variables algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL

    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39

    variables                      shift and go to state 91
    boolean                        shift and go to state 92

state 49

    (124) funcion1 -> DEF . IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (125) funcion1 -> DEF . IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END
    (135) funcion2 -> DEF . IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END
    (136) funcion2 -> DEF . IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo END
    (137) funcion3 -> DEF . IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END
    (138) funcion3 -> DEF . IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END

    IDLOCAL         shift and go to state 93


state 50

    (139) ogets -> GETS .

    $end            reduce using rule 139 (ogets -> GETS .)


state 51

    (76) factor -> NUMBER .

    PLUS            reduce using rule 76 (factor -> NUMBER .)
    MINUS           reduce using rule 76 (factor -> NUMBER .)
    DIVISION        reduce using rule 76 (factor -> NUMBER .)
    MOD             reduce using rule 76 (factor -> NUMBER .)
    MULT            reduce using rule 76 (factor -> NUMBER .)
    EXP             reduce using rule 76 (factor -> NUMBER .)
    $end            reduce using rule 76 (factor -> NUMBER .)
    COMMA           reduce using rule 76 (factor -> NUMBER .)
    RSQBRACKET      reduce using rule 76 (factor -> NUMBER .)
    END             reduce using rule 76 (factor -> NUMBER .)
    ELSE            reduce using rule 76 (factor -> NUMBER .)
    RETURN          reduce using rule 76 (factor -> NUMBER .)
    ARRAY           reduce using rule 76 (factor -> NUMBER .)
    LSQBRACKET      reduce using rule 76 (factor -> NUMBER .)
    LBRACKET        reduce using rule 76 (factor -> NUMBER .)
    HASH            reduce using rule 76 (factor -> NUMBER .)
    FOR             reduce using rule 76 (factor -> NUMBER .)
    TRUE            reduce using rule 76 (factor -> NUMBER .)
    FALSE           reduce using rule 76 (factor -> NUMBER .)
    NIL             reduce using rule 76 (factor -> NUMBER .)
    IF              reduce using rule 76 (factor -> NUMBER .)
    IDLOCAL         reduce using rule 76 (factor -> NUMBER .)
    IDINSTANCE      reduce using rule 76 (factor -> NUMBER .)
    IDCLASS         reduce using rule 76 (factor -> NUMBER .)
    IDGLOBAL        reduce using rule 76 (factor -> NUMBER .)
    WHILE           reduce using rule 76 (factor -> NUMBER .)
    NUMBER          reduce using rule 76 (factor -> NUMBER .)
    FLOAT           reduce using rule 76 (factor -> NUMBER .)
    NUML            reduce using rule 76 (factor -> NUMBER .)
    STRING          reduce using rule 76 (factor -> NUMBER .)
    STRINGV         reduce using rule 76 (factor -> NUMBER .)
    BREAK           reduce using rule 76 (factor -> NUMBER .)
    RPARENTHESIS    reduce using rule 76 (factor -> NUMBER .)
    POINT           reduce using rule 76 (factor -> NUMBER .)
    RBRACKET        reduce using rule 76 (factor -> NUMBER .)
    DO              reduce using rule 76 (factor -> NUMBER .)


state 52

    (77) factor -> FLOAT .

    PLUS            reduce using rule 77 (factor -> FLOAT .)
    MINUS           reduce using rule 77 (factor -> FLOAT .)
    DIVISION        reduce using rule 77 (factor -> FLOAT .)
    MOD             reduce using rule 77 (factor -> FLOAT .)
    MULT            reduce using rule 77 (factor -> FLOAT .)
    EXP             reduce using rule 77 (factor -> FLOAT .)
    $end            reduce using rule 77 (factor -> FLOAT .)
    COMMA           reduce using rule 77 (factor -> FLOAT .)
    RSQBRACKET      reduce using rule 77 (factor -> FLOAT .)
    END             reduce using rule 77 (factor -> FLOAT .)
    ELSE            reduce using rule 77 (factor -> FLOAT .)
    RETURN          reduce using rule 77 (factor -> FLOAT .)
    ARRAY           reduce using rule 77 (factor -> FLOAT .)
    LSQBRACKET      reduce using rule 77 (factor -> FLOAT .)
    LBRACKET        reduce using rule 77 (factor -> FLOAT .)
    HASH            reduce using rule 77 (factor -> FLOAT .)
    FOR             reduce using rule 77 (factor -> FLOAT .)
    TRUE            reduce using rule 77 (factor -> FLOAT .)
    FALSE           reduce using rule 77 (factor -> FLOAT .)
    NIL             reduce using rule 77 (factor -> FLOAT .)
    IF              reduce using rule 77 (factor -> FLOAT .)
    IDLOCAL         reduce using rule 77 (factor -> FLOAT .)
    IDINSTANCE      reduce using rule 77 (factor -> FLOAT .)
    IDCLASS         reduce using rule 77 (factor -> FLOAT .)
    IDGLOBAL        reduce using rule 77 (factor -> FLOAT .)
    WHILE           reduce using rule 77 (factor -> FLOAT .)
    NUMBER          reduce using rule 77 (factor -> FLOAT .)
    FLOAT           reduce using rule 77 (factor -> FLOAT .)
    NUML            reduce using rule 77 (factor -> FLOAT .)
    STRING          reduce using rule 77 (factor -> FLOAT .)
    STRINGV         reduce using rule 77 (factor -> FLOAT .)
    BREAK           reduce using rule 77 (factor -> FLOAT .)
    RPARENTHESIS    reduce using rule 77 (factor -> FLOAT .)
    POINT           reduce using rule 77 (factor -> FLOAT .)
    RBRACKET        reduce using rule 77 (factor -> FLOAT .)
    DO              reduce using rule 77 (factor -> FLOAT .)


state 53

    (78) factor -> NUML .

    PLUS            reduce using rule 78 (factor -> NUML .)
    MINUS           reduce using rule 78 (factor -> NUML .)
    DIVISION        reduce using rule 78 (factor -> NUML .)
    MOD             reduce using rule 78 (factor -> NUML .)
    MULT            reduce using rule 78 (factor -> NUML .)
    EXP             reduce using rule 78 (factor -> NUML .)
    $end            reduce using rule 78 (factor -> NUML .)
    COMMA           reduce using rule 78 (factor -> NUML .)
    RSQBRACKET      reduce using rule 78 (factor -> NUML .)
    END             reduce using rule 78 (factor -> NUML .)
    ELSE            reduce using rule 78 (factor -> NUML .)
    RETURN          reduce using rule 78 (factor -> NUML .)
    ARRAY           reduce using rule 78 (factor -> NUML .)
    LSQBRACKET      reduce using rule 78 (factor -> NUML .)
    LBRACKET        reduce using rule 78 (factor -> NUML .)
    HASH            reduce using rule 78 (factor -> NUML .)
    FOR             reduce using rule 78 (factor -> NUML .)
    TRUE            reduce using rule 78 (factor -> NUML .)
    FALSE           reduce using rule 78 (factor -> NUML .)
    NIL             reduce using rule 78 (factor -> NUML .)
    IF              reduce using rule 78 (factor -> NUML .)
    IDLOCAL         reduce using rule 78 (factor -> NUML .)
    IDINSTANCE      reduce using rule 78 (factor -> NUML .)
    IDCLASS         reduce using rule 78 (factor -> NUML .)
    IDGLOBAL        reduce using rule 78 (factor -> NUML .)
    WHILE           reduce using rule 78 (factor -> NUML .)
    NUMBER          reduce using rule 78 (factor -> NUML .)
    FLOAT           reduce using rule 78 (factor -> NUML .)
    NUML            reduce using rule 78 (factor -> NUML .)
    STRING          reduce using rule 78 (factor -> NUML .)
    STRINGV         reduce using rule 78 (factor -> NUML .)
    BREAK           reduce using rule 78 (factor -> NUML .)
    RPARENTHESIS    reduce using rule 78 (factor -> NUML .)
    POINT           reduce using rule 78 (factor -> NUML .)
    RBRACKET        reduce using rule 78 (factor -> NUML .)
    DO              reduce using rule 78 (factor -> NUML .)


state 54

    (69) expression -> expression PLUS . term
    (70) expression -> expression PLUS . variables
    (74) term -> . factor
    (75) term -> . variables
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    term                           shift and go to state 94
    variables                      shift and go to state 95
    factor                         shift and go to state 33

state 55

    (71) expression -> expression MINUS . variables
    (72) expression -> expression MINUS . term
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    variables                      shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 33

state 56

    (81) expression -> expression DIVISION . term
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    term                           shift and go to state 98
    factor                         shift and go to state 33
    variables                      shift and go to state 87

state 57

    (82) expression -> expression MOD . term
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    term                           shift and go to state 99
    factor                         shift and go to state 33
    variables                      shift and go to state 87

state 58

    (83) expression -> expression MULT . term
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    term                           shift and go to state 100
    factor                         shift and go to state 33
    variables                      shift and go to state 87

state 59

    (84) expression -> expression EXP . term
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    term                           shift and go to state 101
    factor                         shift and go to state 33
    variables                      shift and go to state 87

state 60

    (90) metodocadena -> string POINT . EMPTY INTERROGATIVE
    (92) metodocadena -> string POINT . LENGTH

    EMPTY           shift and go to state 102
    LENGTH          shift and go to state 103


state 61

    (89) metodocadena -> cadena POINT . EMPTY INTERROGATIVE
    (91) metodocadena -> cadena POINT . LENGTH

    EMPTY           shift and go to state 104
    LENGTH          shift and go to state 105


state 62

    (102) metodosarreglo -> arreglo POINT . INDEX LPARENTHESIS arraycontent RPARENTHESIS

    INDEX           shift and go to state 106


state 63

    (103) metodosarreglo -> arreglo LSQBRACKET . factor RSQBRACKET
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    factor                         shift and go to state 107

state 64

    (110) metodohash -> variables ASSIGN . hash POINT LENGTH
    (61) assigns -> variables ASSIGN . expression
    (62) assigns -> variables ASSIGN . variables
    (63) assigns -> variables ASSIGN . boolean
    (64) assigns -> variables ASSIGN . asignar
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (74) term -> . factor
    (75) term -> . variables
    (85) string -> . STRINGV
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (110) metodohash -> . variables ASSIGN hash POINT LENGTH
    (111) metodohash -> . variables POINT LENGTH
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    STRINGV         shift and go to state 30
    STRING          shift and go to state 31
    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    variables                      shift and go to state 108
    hash                           shift and go to state 109
    expression                     shift and go to state 110
    boolean                        shift and go to state 111
    asignar                        shift and go to state 112
    term                           shift and go to state 28
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    metodohash                     shift and go to state 11
    factor                         shift and go to state 33

state 65

    (111) metodohash -> variables POINT . LENGTH

    LENGTH          shift and go to state 113


state 66

    (65) assigns -> variables ASSIGNPLUS . expression
    (66) assigns -> variables ASSIGNPLUS . variables
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    variables                      shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 28
    factor                         shift and go to state 33

state 67

    (67) assigns -> variables ASSIGNMIN . expression
    (68) assigns -> variables ASSIGNMIN . variables
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    variables                      shift and go to state 116
    expression                     shift and go to state 117
    term                           shift and go to state 28
    factor                         shift and go to state 33

state 68

    (79) factor -> MINUS NUMBER .

    PLUS            reduce using rule 79 (factor -> MINUS NUMBER .)
    MINUS           reduce using rule 79 (factor -> MINUS NUMBER .)
    DIVISION        reduce using rule 79 (factor -> MINUS NUMBER .)
    MOD             reduce using rule 79 (factor -> MINUS NUMBER .)
    MULT            reduce using rule 79 (factor -> MINUS NUMBER .)
    EXP             reduce using rule 79 (factor -> MINUS NUMBER .)
    $end            reduce using rule 79 (factor -> MINUS NUMBER .)
    COMMA           reduce using rule 79 (factor -> MINUS NUMBER .)
    RSQBRACKET      reduce using rule 79 (factor -> MINUS NUMBER .)
    END             reduce using rule 79 (factor -> MINUS NUMBER .)
    ELSE            reduce using rule 79 (factor -> MINUS NUMBER .)
    RETURN          reduce using rule 79 (factor -> MINUS NUMBER .)
    ARRAY           reduce using rule 79 (factor -> MINUS NUMBER .)
    LSQBRACKET      reduce using rule 79 (factor -> MINUS NUMBER .)
    LBRACKET        reduce using rule 79 (factor -> MINUS NUMBER .)
    HASH            reduce using rule 79 (factor -> MINUS NUMBER .)
    FOR             reduce using rule 79 (factor -> MINUS NUMBER .)
    TRUE            reduce using rule 79 (factor -> MINUS NUMBER .)
    FALSE           reduce using rule 79 (factor -> MINUS NUMBER .)
    NIL             reduce using rule 79 (factor -> MINUS NUMBER .)
    IF              reduce using rule 79 (factor -> MINUS NUMBER .)
    IDLOCAL         reduce using rule 79 (factor -> MINUS NUMBER .)
    IDINSTANCE      reduce using rule 79 (factor -> MINUS NUMBER .)
    IDCLASS         reduce using rule 79 (factor -> MINUS NUMBER .)
    IDGLOBAL        reduce using rule 79 (factor -> MINUS NUMBER .)
    WHILE           reduce using rule 79 (factor -> MINUS NUMBER .)
    NUMBER          reduce using rule 79 (factor -> MINUS NUMBER .)
    FLOAT           reduce using rule 79 (factor -> MINUS NUMBER .)
    NUML            reduce using rule 79 (factor -> MINUS NUMBER .)
    STRING          reduce using rule 79 (factor -> MINUS NUMBER .)
    STRINGV         reduce using rule 79 (factor -> MINUS NUMBER .)
    BREAK           reduce using rule 79 (factor -> MINUS NUMBER .)
    RPARENTHESIS    reduce using rule 79 (factor -> MINUS NUMBER .)
    POINT           reduce using rule 79 (factor -> MINUS NUMBER .)
    RBRACKET        reduce using rule 79 (factor -> MINUS NUMBER .)
    DO              reduce using rule 79 (factor -> MINUS NUMBER .)


state 69

    (80) factor -> MINUS FLOAT .

    PLUS            reduce using rule 80 (factor -> MINUS FLOAT .)
    MINUS           reduce using rule 80 (factor -> MINUS FLOAT .)
    DIVISION        reduce using rule 80 (factor -> MINUS FLOAT .)
    MOD             reduce using rule 80 (factor -> MINUS FLOAT .)
    MULT            reduce using rule 80 (factor -> MINUS FLOAT .)
    EXP             reduce using rule 80 (factor -> MINUS FLOAT .)
    $end            reduce using rule 80 (factor -> MINUS FLOAT .)
    COMMA           reduce using rule 80 (factor -> MINUS FLOAT .)
    RSQBRACKET      reduce using rule 80 (factor -> MINUS FLOAT .)
    END             reduce using rule 80 (factor -> MINUS FLOAT .)
    ELSE            reduce using rule 80 (factor -> MINUS FLOAT .)
    RETURN          reduce using rule 80 (factor -> MINUS FLOAT .)
    ARRAY           reduce using rule 80 (factor -> MINUS FLOAT .)
    LSQBRACKET      reduce using rule 80 (factor -> MINUS FLOAT .)
    LBRACKET        reduce using rule 80 (factor -> MINUS FLOAT .)
    HASH            reduce using rule 80 (factor -> MINUS FLOAT .)
    FOR             reduce using rule 80 (factor -> MINUS FLOAT .)
    TRUE            reduce using rule 80 (factor -> MINUS FLOAT .)
    FALSE           reduce using rule 80 (factor -> MINUS FLOAT .)
    NIL             reduce using rule 80 (factor -> MINUS FLOAT .)
    IF              reduce using rule 80 (factor -> MINUS FLOAT .)
    IDLOCAL         reduce using rule 80 (factor -> MINUS FLOAT .)
    IDINSTANCE      reduce using rule 80 (factor -> MINUS FLOAT .)
    IDCLASS         reduce using rule 80 (factor -> MINUS FLOAT .)
    IDGLOBAL        reduce using rule 80 (factor -> MINUS FLOAT .)
    WHILE           reduce using rule 80 (factor -> MINUS FLOAT .)
    NUMBER          reduce using rule 80 (factor -> MINUS FLOAT .)
    FLOAT           reduce using rule 80 (factor -> MINUS FLOAT .)
    NUML            reduce using rule 80 (factor -> MINUS FLOAT .)
    STRING          reduce using rule 80 (factor -> MINUS FLOAT .)
    STRINGV         reduce using rule 80 (factor -> MINUS FLOAT .)
    BREAK           reduce using rule 80 (factor -> MINUS FLOAT .)
    RPARENTHESIS    reduce using rule 80 (factor -> MINUS FLOAT .)
    POINT           reduce using rule 80 (factor -> MINUS FLOAT .)
    RBRACKET        reduce using rule 80 (factor -> MINUS FLOAT .)
    DO              reduce using rule 80 (factor -> MINUS FLOAT .)


state 70

    (86) cadena -> STRING POINT . NEW
    (87) cadena -> STRING POINT . NEW LPARENTHESIS string RPARENTHESIS

    NEW             shift and go to state 118


state 71

    (88) cadena -> STRING LPARENTHESIS . string RPARENTHESIS
    (85) string -> . STRINGV

    STRINGV         shift and go to state 30

    string                         shift and go to state 119

state 72

    (93) arreglo -> ARRAY POINT . NEW
    (94) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    NEW             shift and go to state 120


state 73

    (96) arreglo -> ARRAY LSQBRACKET . arraycontent RSQBRACKET
    (98) arraycontent -> . factor
    (99) arraycontent -> . string
    (100) arraycontent -> . factor COMMA arraycontent
    (101) arraycontent -> . string COMMA arraycontent
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (85) string -> . STRINGV

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    STRINGV         shift and go to state 30

    arraycontent                   shift and go to state 121
    factor                         shift and go to state 75
    string                         shift and go to state 76

state 74

    (97) arreglo -> LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 122


state 75

    (98) arraycontent -> factor .
    (100) arraycontent -> factor . COMMA arraycontent

    RSQBRACKET      reduce using rule 98 (arraycontent -> factor .)
    RPARENTHESIS    reduce using rule 98 (arraycontent -> factor .)
    COMMA           shift and go to state 123


state 76

    (99) arraycontent -> string .
    (101) arraycontent -> string . COMMA arraycontent

    RSQBRACKET      reduce using rule 99 (arraycontent -> string .)
    RPARENTHESIS    reduce using rule 99 (arraycontent -> string .)
    COMMA           shift and go to state 124


state 77

    (104) hash -> LBRACKET hashcontent . RBRACKET

    RBRACKET        shift and go to state 125


state 78

    (106) hashcontent -> string . ASSIGN GREATER hashcontentvalue
    (107) hashcontent -> string . ASSIGN GREATER hashcontentvalue COMMA hashcontent

    ASSIGN          shift and go to state 126


state 79

    (105) hash -> HASH POINT . NEW

    NEW             shift and go to state 127


state 80

    (140) getsr -> IDLOCAL ASSIGN . GETS

    GETS            shift and go to state 128


state 81

    (118) estructurasControl -> FOR IDLOCAL . IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> FOR IDLOCAL . IN factor POINT POINT factor DO forcontent END

    IN              shift and go to state 129


state 82

    (54) sentenIF -> IF variables . comparador term
    (55) sentenifp -> IF variables . comparador term algoritmo END
    (56) sentenifelse -> IF variables . comparador term algoritmo ELSE algoritmo END
    (112) comparador -> . COMPARE
    (113) comparador -> . GREQUAL
    (114) comparador -> . LSEQUAL
    (115) comparador -> . NOTEQUAL
    (116) comparador -> . LESS
    (117) comparador -> . GREATER

    COMPARE         shift and go to state 131
    GREQUAL         shift and go to state 132
    LSEQUAL         shift and go to state 133
    NOTEQUAL        shift and go to state 134
    LESS            shift and go to state 135
    GREATER         shift and go to state 136

    comparador                     shift and go to state 130

state 83

    (57) variables -> IDLOCAL .

    COMPARE         reduce using rule 57 (variables -> IDLOCAL .)
    GREQUAL         reduce using rule 57 (variables -> IDLOCAL .)
    LSEQUAL         reduce using rule 57 (variables -> IDLOCAL .)
    NOTEQUAL        reduce using rule 57 (variables -> IDLOCAL .)
    LESS            reduce using rule 57 (variables -> IDLOCAL .)
    GREATER         reduce using rule 57 (variables -> IDLOCAL .)
    PLUS            reduce using rule 57 (variables -> IDLOCAL .)
    MINUS           reduce using rule 57 (variables -> IDLOCAL .)
    DIVISION        reduce using rule 57 (variables -> IDLOCAL .)
    MOD             reduce using rule 57 (variables -> IDLOCAL .)
    MULT            reduce using rule 57 (variables -> IDLOCAL .)
    EXP             reduce using rule 57 (variables -> IDLOCAL .)
    $end            reduce using rule 57 (variables -> IDLOCAL .)
    ARRAY           reduce using rule 57 (variables -> IDLOCAL .)
    LSQBRACKET      reduce using rule 57 (variables -> IDLOCAL .)
    LBRACKET        reduce using rule 57 (variables -> IDLOCAL .)
    HASH            reduce using rule 57 (variables -> IDLOCAL .)
    FOR             reduce using rule 57 (variables -> IDLOCAL .)
    TRUE            reduce using rule 57 (variables -> IDLOCAL .)
    FALSE           reduce using rule 57 (variables -> IDLOCAL .)
    NIL             reduce using rule 57 (variables -> IDLOCAL .)
    IF              reduce using rule 57 (variables -> IDLOCAL .)
    IDLOCAL         reduce using rule 57 (variables -> IDLOCAL .)
    IDINSTANCE      reduce using rule 57 (variables -> IDLOCAL .)
    IDCLASS         reduce using rule 57 (variables -> IDLOCAL .)
    IDGLOBAL        reduce using rule 57 (variables -> IDLOCAL .)
    WHILE           reduce using rule 57 (variables -> IDLOCAL .)
    STRING          reduce using rule 57 (variables -> IDLOCAL .)
    STRINGV         reduce using rule 57 (variables -> IDLOCAL .)
    NUMBER          reduce using rule 57 (variables -> IDLOCAL .)
    FLOAT           reduce using rule 57 (variables -> IDLOCAL .)
    NUML            reduce using rule 57 (variables -> IDLOCAL .)
    END             reduce using rule 57 (variables -> IDLOCAL .)
    ELSE            reduce using rule 57 (variables -> IDLOCAL .)
    RETURN          reduce using rule 57 (variables -> IDLOCAL .)
    BREAK           reduce using rule 57 (variables -> IDLOCAL .)
    ASSIGN          reduce using rule 57 (variables -> IDLOCAL .)
    POINT           reduce using rule 57 (variables -> IDLOCAL .)
    ASSIGNPLUS      reduce using rule 57 (variables -> IDLOCAL .)
    ASSIGNMIN       reduce using rule 57 (variables -> IDLOCAL .)
    COMMA           reduce using rule 57 (variables -> IDLOCAL .)
    RPARENTHESIS    reduce using rule 57 (variables -> IDLOCAL .)


state 84

    (31) putss -> PUTS string .

    $end            reduce using rule 31 (putss -> PUTS string .)


state 85

    (32) putss -> PUTS cadena .

    $end            reduce using rule 32 (putss -> PUTS cadena .)


state 86

    (35) putsenx -> PUTS expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . PLUS variables
    (71) expression -> expression . MINUS variables
    (72) expression -> expression . MINUS term
    (81) expression -> expression . DIVISION term
    (82) expression -> expression . MOD term
    (83) expression -> expression . MULT term
    (84) expression -> expression . EXP term

    $end            reduce using rule 35 (putsenx -> PUTS expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    DIVISION        shift and go to state 56
    MOD             shift and go to state 57
    MULT            shift and go to state 58
    EXP             shift and go to state 59


state 87

    (75) term -> variables .

    PLUS            reduce using rule 75 (term -> variables .)
    MINUS           reduce using rule 75 (term -> variables .)
    DIVISION        reduce using rule 75 (term -> variables .)
    MOD             reduce using rule 75 (term -> variables .)
    MULT            reduce using rule 75 (term -> variables .)
    EXP             reduce using rule 75 (term -> variables .)
    $end            reduce using rule 75 (term -> variables .)
    END             reduce using rule 75 (term -> variables .)
    ELSE            reduce using rule 75 (term -> variables .)
    RETURN          reduce using rule 75 (term -> variables .)
    ARRAY           reduce using rule 75 (term -> variables .)
    LSQBRACKET      reduce using rule 75 (term -> variables .)
    LBRACKET        reduce using rule 75 (term -> variables .)
    HASH            reduce using rule 75 (term -> variables .)
    FOR             reduce using rule 75 (term -> variables .)
    TRUE            reduce using rule 75 (term -> variables .)
    FALSE           reduce using rule 75 (term -> variables .)
    NIL             reduce using rule 75 (term -> variables .)
    IF              reduce using rule 75 (term -> variables .)
    IDLOCAL         reduce using rule 75 (term -> variables .)
    IDINSTANCE      reduce using rule 75 (term -> variables .)
    IDCLASS         reduce using rule 75 (term -> variables .)
    IDGLOBAL        reduce using rule 75 (term -> variables .)
    WHILE           reduce using rule 75 (term -> variables .)
    NUMBER          reduce using rule 75 (term -> variables .)
    FLOAT           reduce using rule 75 (term -> variables .)
    NUML            reduce using rule 75 (term -> variables .)
    STRING          reduce using rule 75 (term -> variables .)
    STRINGV         reduce using rule 75 (term -> variables .)
    BREAK           reduce using rule 75 (term -> variables .)
    RPARENTHESIS    reduce using rule 75 (term -> variables .)


state 88

    (33) putss -> PRINT string .

    $end            reduce using rule 33 (putss -> PRINT string .)


state 89

    (34) putss -> PRINT cadena .

    $end            reduce using rule 34 (putss -> PRINT cadena .)


state 90

    (36) putsenx -> PRINT expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . PLUS variables
    (71) expression -> expression . MINUS variables
    (72) expression -> expression . MINUS term
    (81) expression -> expression . DIVISION term
    (82) expression -> expression . MOD term
    (83) expression -> expression . MULT term
    (84) expression -> expression . EXP term

    $end            reduce using rule 36 (putsenx -> PRINT expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    DIVISION        shift and go to state 56
    MOD             shift and go to state 57
    MULT            shift and go to state 58
    EXP             shift and go to state 59


state 91

    (50) sentenWHILE -> WHILE variables . comparador variables algoritmo END
    (51) sentenWHILE -> WHILE variables . comparador expression algoritmo END
    (53) sentenWHILE -> WHILE variables . algoritmo END
    (112) comparador -> . COMPARE
    (113) comparador -> . GREQUAL
    (114) comparador -> . LSEQUAL
    (115) comparador -> . NOTEQUAL
    (116) comparador -> . LESS
    (117) comparador -> . GREATER
    (37) algoritmo -> . expression
    (38) algoritmo -> . metodocadena
    (39) algoritmo -> . arreglo
    (40) algoritmo -> . metodosarreglo
    (41) algoritmo -> . hash
    (42) algoritmo -> . estructurasControl
    (43) algoritmo -> . boolean
    (44) algoritmo -> . assigns
    (45) algoritmo -> . sentenIF
    (46) algoritmo -> . sentenifp
    (47) algoritmo -> . sentenifelse
    (48) algoritmo -> . variables
    (49) algoritmo -> . sentenWHILE
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (74) term -> . factor
    (75) term -> . variables
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (85) string -> . STRINGV
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    COMPARE         shift and go to state 131
    GREQUAL         shift and go to state 132
    LSEQUAL         shift and go to state 133
    NOTEQUAL        shift and go to state 134
    LESS            shift and go to state 135
    GREATER         shift and go to state 136
    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    FOR             shift and go to state 44
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IF              shift and go to state 45
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    WHILE           shift and go to state 48
    STRING          shift and go to state 31
    STRINGV         shift and go to state 30
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    variables                      shift and go to state 137
    comparador                     shift and go to state 138
    algoritmo                      shift and go to state 139
    expression                     shift and go to state 140
    metodocadena                   shift and go to state 141
    arreglo                        shift and go to state 142
    metodosarreglo                 shift and go to state 143
    hash                           shift and go to state 144
    estructurasControl             shift and go to state 145
    boolean                        shift and go to state 146
    assigns                        shift and go to state 147
    sentenIF                       shift and go to state 148
    sentenifp                      shift and go to state 149
    sentenifelse                   shift and go to state 150
    sentenWHILE                    shift and go to state 151
    term                           shift and go to state 28
    cadena                         shift and go to state 152
    string                         shift and go to state 153
    factor                         shift and go to state 33

state 92

    (52) sentenWHILE -> WHILE boolean . algoritmo END
    (37) algoritmo -> . expression
    (38) algoritmo -> . metodocadena
    (39) algoritmo -> . arreglo
    (40) algoritmo -> . metodosarreglo
    (41) algoritmo -> . hash
    (42) algoritmo -> . estructurasControl
    (43) algoritmo -> . boolean
    (44) algoritmo -> . assigns
    (45) algoritmo -> . sentenIF
    (46) algoritmo -> . sentenifp
    (47) algoritmo -> . sentenifelse
    (48) algoritmo -> . variables
    (49) algoritmo -> . sentenWHILE
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (74) term -> . factor
    (75) term -> . variables
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (85) string -> . STRINGV
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    FOR             shift and go to state 44
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IF              shift and go to state 45
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    WHILE           shift and go to state 48
    STRING          shift and go to state 31
    STRINGV         shift and go to state 30
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    boolean                        shift and go to state 146
    algoritmo                      shift and go to state 154
    expression                     shift and go to state 140
    metodocadena                   shift and go to state 141
    arreglo                        shift and go to state 142
    metodosarreglo                 shift and go to state 143
    hash                           shift and go to state 144
    estructurasControl             shift and go to state 145
    assigns                        shift and go to state 147
    sentenIF                       shift and go to state 148
    sentenifp                      shift and go to state 149
    sentenifelse                   shift and go to state 150
    variables                      shift and go to state 137
    sentenWHILE                    shift and go to state 151
    term                           shift and go to state 28
    cadena                         shift and go to state 152
    string                         shift and go to state 153
    factor                         shift and go to state 33

state 93

    (124) funcion1 -> DEF IDLOCAL . LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (125) funcion1 -> DEF IDLOCAL . LPARENTHESIS fcontenido RPARENTHESIS algoritmo END
    (135) funcion2 -> DEF IDLOCAL . LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END
    (136) funcion2 -> DEF IDLOCAL . LPARENTHESIS valuedefect RPARENTHESIS algoritmo END
    (137) funcion3 -> DEF IDLOCAL . LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END
    (138) funcion3 -> DEF IDLOCAL . LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END

    LPARENTHESIS    shift and go to state 155


state 94

    (69) expression -> expression PLUS term .

    PLUS            reduce using rule 69 (expression -> expression PLUS term .)
    MINUS           reduce using rule 69 (expression -> expression PLUS term .)
    DIVISION        reduce using rule 69 (expression -> expression PLUS term .)
    MOD             reduce using rule 69 (expression -> expression PLUS term .)
    MULT            reduce using rule 69 (expression -> expression PLUS term .)
    EXP             reduce using rule 69 (expression -> expression PLUS term .)
    $end            reduce using rule 69 (expression -> expression PLUS term .)
    END             reduce using rule 69 (expression -> expression PLUS term .)
    ELSE            reduce using rule 69 (expression -> expression PLUS term .)
    RETURN          reduce using rule 69 (expression -> expression PLUS term .)
    ARRAY           reduce using rule 69 (expression -> expression PLUS term .)
    LSQBRACKET      reduce using rule 69 (expression -> expression PLUS term .)
    LBRACKET        reduce using rule 69 (expression -> expression PLUS term .)
    HASH            reduce using rule 69 (expression -> expression PLUS term .)
    FOR             reduce using rule 69 (expression -> expression PLUS term .)
    TRUE            reduce using rule 69 (expression -> expression PLUS term .)
    FALSE           reduce using rule 69 (expression -> expression PLUS term .)
    NIL             reduce using rule 69 (expression -> expression PLUS term .)
    IF              reduce using rule 69 (expression -> expression PLUS term .)
    IDLOCAL         reduce using rule 69 (expression -> expression PLUS term .)
    IDINSTANCE      reduce using rule 69 (expression -> expression PLUS term .)
    IDCLASS         reduce using rule 69 (expression -> expression PLUS term .)
    IDGLOBAL        reduce using rule 69 (expression -> expression PLUS term .)
    WHILE           reduce using rule 69 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 69 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 69 (expression -> expression PLUS term .)
    NUML            reduce using rule 69 (expression -> expression PLUS term .)
    STRING          reduce using rule 69 (expression -> expression PLUS term .)
    STRINGV         reduce using rule 69 (expression -> expression PLUS term .)
    BREAK           reduce using rule 69 (expression -> expression PLUS term .)


state 95

    (70) expression -> expression PLUS variables .
    (75) term -> variables .

  ! reduce/reduce conflict for PLUS resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for MINUS resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for DIVISION resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for MOD resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for MULT resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for EXP resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for $end resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for END resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for HASH resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for FOR resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for NIL resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IF resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for NUML resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for STRING resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 70 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 70 (expression -> expression PLUS variables .)
    PLUS            reduce using rule 70 (expression -> expression PLUS variables .)
    MINUS           reduce using rule 70 (expression -> expression PLUS variables .)
    DIVISION        reduce using rule 70 (expression -> expression PLUS variables .)
    MOD             reduce using rule 70 (expression -> expression PLUS variables .)
    MULT            reduce using rule 70 (expression -> expression PLUS variables .)
    EXP             reduce using rule 70 (expression -> expression PLUS variables .)
    $end            reduce using rule 70 (expression -> expression PLUS variables .)
    END             reduce using rule 70 (expression -> expression PLUS variables .)
    ELSE            reduce using rule 70 (expression -> expression PLUS variables .)
    RETURN          reduce using rule 70 (expression -> expression PLUS variables .)
    ARRAY           reduce using rule 70 (expression -> expression PLUS variables .)
    LSQBRACKET      reduce using rule 70 (expression -> expression PLUS variables .)
    LBRACKET        reduce using rule 70 (expression -> expression PLUS variables .)
    HASH            reduce using rule 70 (expression -> expression PLUS variables .)
    FOR             reduce using rule 70 (expression -> expression PLUS variables .)
    TRUE            reduce using rule 70 (expression -> expression PLUS variables .)
    FALSE           reduce using rule 70 (expression -> expression PLUS variables .)
    NIL             reduce using rule 70 (expression -> expression PLUS variables .)
    IF              reduce using rule 70 (expression -> expression PLUS variables .)
    IDLOCAL         reduce using rule 70 (expression -> expression PLUS variables .)
    IDINSTANCE      reduce using rule 70 (expression -> expression PLUS variables .)
    IDCLASS         reduce using rule 70 (expression -> expression PLUS variables .)
    IDGLOBAL        reduce using rule 70 (expression -> expression PLUS variables .)
    WHILE           reduce using rule 70 (expression -> expression PLUS variables .)
    NUMBER          reduce using rule 70 (expression -> expression PLUS variables .)
    FLOAT           reduce using rule 70 (expression -> expression PLUS variables .)
    NUML            reduce using rule 70 (expression -> expression PLUS variables .)
    STRING          reduce using rule 70 (expression -> expression PLUS variables .)
    STRINGV         reduce using rule 70 (expression -> expression PLUS variables .)
    BREAK           reduce using rule 70 (expression -> expression PLUS variables .)

  ! PLUS            [ reduce using rule 75 (term -> variables .) ]
  ! MINUS           [ reduce using rule 75 (term -> variables .) ]
  ! DIVISION        [ reduce using rule 75 (term -> variables .) ]
  ! MOD             [ reduce using rule 75 (term -> variables .) ]
  ! MULT            [ reduce using rule 75 (term -> variables .) ]
  ! EXP             [ reduce using rule 75 (term -> variables .) ]
  ! $end            [ reduce using rule 75 (term -> variables .) ]
  ! END             [ reduce using rule 75 (term -> variables .) ]
  ! ELSE            [ reduce using rule 75 (term -> variables .) ]
  ! RETURN          [ reduce using rule 75 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 75 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 75 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 75 (term -> variables .) ]
  ! HASH            [ reduce using rule 75 (term -> variables .) ]
  ! FOR             [ reduce using rule 75 (term -> variables .) ]
  ! TRUE            [ reduce using rule 75 (term -> variables .) ]
  ! FALSE           [ reduce using rule 75 (term -> variables .) ]
  ! NIL             [ reduce using rule 75 (term -> variables .) ]
  ! IF              [ reduce using rule 75 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 75 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 75 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 75 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 75 (term -> variables .) ]
  ! WHILE           [ reduce using rule 75 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 75 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 75 (term -> variables .) ]
  ! NUML            [ reduce using rule 75 (term -> variables .) ]
  ! STRING          [ reduce using rule 75 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 75 (term -> variables .) ]
  ! BREAK           [ reduce using rule 75 (term -> variables .) ]


state 96

    (71) expression -> expression MINUS variables .
    (75) term -> variables .

  ! reduce/reduce conflict for PLUS resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for MINUS resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for DIVISION resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for MOD resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for MULT resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for EXP resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for $end resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for END resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for HASH resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for FOR resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for NIL resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IF resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for NUML resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for STRING resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 71 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 71 (expression -> expression MINUS variables .)
    PLUS            reduce using rule 71 (expression -> expression MINUS variables .)
    MINUS           reduce using rule 71 (expression -> expression MINUS variables .)
    DIVISION        reduce using rule 71 (expression -> expression MINUS variables .)
    MOD             reduce using rule 71 (expression -> expression MINUS variables .)
    MULT            reduce using rule 71 (expression -> expression MINUS variables .)
    EXP             reduce using rule 71 (expression -> expression MINUS variables .)
    $end            reduce using rule 71 (expression -> expression MINUS variables .)
    END             reduce using rule 71 (expression -> expression MINUS variables .)
    ELSE            reduce using rule 71 (expression -> expression MINUS variables .)
    RETURN          reduce using rule 71 (expression -> expression MINUS variables .)
    ARRAY           reduce using rule 71 (expression -> expression MINUS variables .)
    LSQBRACKET      reduce using rule 71 (expression -> expression MINUS variables .)
    LBRACKET        reduce using rule 71 (expression -> expression MINUS variables .)
    HASH            reduce using rule 71 (expression -> expression MINUS variables .)
    FOR             reduce using rule 71 (expression -> expression MINUS variables .)
    TRUE            reduce using rule 71 (expression -> expression MINUS variables .)
    FALSE           reduce using rule 71 (expression -> expression MINUS variables .)
    NIL             reduce using rule 71 (expression -> expression MINUS variables .)
    IF              reduce using rule 71 (expression -> expression MINUS variables .)
    IDLOCAL         reduce using rule 71 (expression -> expression MINUS variables .)
    IDINSTANCE      reduce using rule 71 (expression -> expression MINUS variables .)
    IDCLASS         reduce using rule 71 (expression -> expression MINUS variables .)
    IDGLOBAL        reduce using rule 71 (expression -> expression MINUS variables .)
    WHILE           reduce using rule 71 (expression -> expression MINUS variables .)
    NUMBER          reduce using rule 71 (expression -> expression MINUS variables .)
    FLOAT           reduce using rule 71 (expression -> expression MINUS variables .)
    NUML            reduce using rule 71 (expression -> expression MINUS variables .)
    STRING          reduce using rule 71 (expression -> expression MINUS variables .)
    STRINGV         reduce using rule 71 (expression -> expression MINUS variables .)
    BREAK           reduce using rule 71 (expression -> expression MINUS variables .)

  ! PLUS            [ reduce using rule 75 (term -> variables .) ]
  ! MINUS           [ reduce using rule 75 (term -> variables .) ]
  ! DIVISION        [ reduce using rule 75 (term -> variables .) ]
  ! MOD             [ reduce using rule 75 (term -> variables .) ]
  ! MULT            [ reduce using rule 75 (term -> variables .) ]
  ! EXP             [ reduce using rule 75 (term -> variables .) ]
  ! $end            [ reduce using rule 75 (term -> variables .) ]
  ! END             [ reduce using rule 75 (term -> variables .) ]
  ! ELSE            [ reduce using rule 75 (term -> variables .) ]
  ! RETURN          [ reduce using rule 75 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 75 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 75 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 75 (term -> variables .) ]
  ! HASH            [ reduce using rule 75 (term -> variables .) ]
  ! FOR             [ reduce using rule 75 (term -> variables .) ]
  ! TRUE            [ reduce using rule 75 (term -> variables .) ]
  ! FALSE           [ reduce using rule 75 (term -> variables .) ]
  ! NIL             [ reduce using rule 75 (term -> variables .) ]
  ! IF              [ reduce using rule 75 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 75 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 75 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 75 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 75 (term -> variables .) ]
  ! WHILE           [ reduce using rule 75 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 75 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 75 (term -> variables .) ]
  ! NUML            [ reduce using rule 75 (term -> variables .) ]
  ! STRING          [ reduce using rule 75 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 75 (term -> variables .) ]
  ! BREAK           [ reduce using rule 75 (term -> variables .) ]


state 97

    (72) expression -> expression MINUS term .

    PLUS            reduce using rule 72 (expression -> expression MINUS term .)
    MINUS           reduce using rule 72 (expression -> expression MINUS term .)
    DIVISION        reduce using rule 72 (expression -> expression MINUS term .)
    MOD             reduce using rule 72 (expression -> expression MINUS term .)
    MULT            reduce using rule 72 (expression -> expression MINUS term .)
    EXP             reduce using rule 72 (expression -> expression MINUS term .)
    $end            reduce using rule 72 (expression -> expression MINUS term .)
    END             reduce using rule 72 (expression -> expression MINUS term .)
    ELSE            reduce using rule 72 (expression -> expression MINUS term .)
    RETURN          reduce using rule 72 (expression -> expression MINUS term .)
    ARRAY           reduce using rule 72 (expression -> expression MINUS term .)
    LSQBRACKET      reduce using rule 72 (expression -> expression MINUS term .)
    LBRACKET        reduce using rule 72 (expression -> expression MINUS term .)
    HASH            reduce using rule 72 (expression -> expression MINUS term .)
    FOR             reduce using rule 72 (expression -> expression MINUS term .)
    TRUE            reduce using rule 72 (expression -> expression MINUS term .)
    FALSE           reduce using rule 72 (expression -> expression MINUS term .)
    NIL             reduce using rule 72 (expression -> expression MINUS term .)
    IF              reduce using rule 72 (expression -> expression MINUS term .)
    IDLOCAL         reduce using rule 72 (expression -> expression MINUS term .)
    IDINSTANCE      reduce using rule 72 (expression -> expression MINUS term .)
    IDCLASS         reduce using rule 72 (expression -> expression MINUS term .)
    IDGLOBAL        reduce using rule 72 (expression -> expression MINUS term .)
    WHILE           reduce using rule 72 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 72 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 72 (expression -> expression MINUS term .)
    NUML            reduce using rule 72 (expression -> expression MINUS term .)
    STRING          reduce using rule 72 (expression -> expression MINUS term .)
    STRINGV         reduce using rule 72 (expression -> expression MINUS term .)
    BREAK           reduce using rule 72 (expression -> expression MINUS term .)


state 98

    (81) expression -> expression DIVISION term .

    PLUS            reduce using rule 81 (expression -> expression DIVISION term .)
    MINUS           reduce using rule 81 (expression -> expression DIVISION term .)
    DIVISION        reduce using rule 81 (expression -> expression DIVISION term .)
    MOD             reduce using rule 81 (expression -> expression DIVISION term .)
    MULT            reduce using rule 81 (expression -> expression DIVISION term .)
    EXP             reduce using rule 81 (expression -> expression DIVISION term .)
    $end            reduce using rule 81 (expression -> expression DIVISION term .)
    END             reduce using rule 81 (expression -> expression DIVISION term .)
    ELSE            reduce using rule 81 (expression -> expression DIVISION term .)
    RETURN          reduce using rule 81 (expression -> expression DIVISION term .)
    ARRAY           reduce using rule 81 (expression -> expression DIVISION term .)
    LSQBRACKET      reduce using rule 81 (expression -> expression DIVISION term .)
    LBRACKET        reduce using rule 81 (expression -> expression DIVISION term .)
    HASH            reduce using rule 81 (expression -> expression DIVISION term .)
    FOR             reduce using rule 81 (expression -> expression DIVISION term .)
    TRUE            reduce using rule 81 (expression -> expression DIVISION term .)
    FALSE           reduce using rule 81 (expression -> expression DIVISION term .)
    NIL             reduce using rule 81 (expression -> expression DIVISION term .)
    IF              reduce using rule 81 (expression -> expression DIVISION term .)
    IDLOCAL         reduce using rule 81 (expression -> expression DIVISION term .)
    IDINSTANCE      reduce using rule 81 (expression -> expression DIVISION term .)
    IDCLASS         reduce using rule 81 (expression -> expression DIVISION term .)
    IDGLOBAL        reduce using rule 81 (expression -> expression DIVISION term .)
    WHILE           reduce using rule 81 (expression -> expression DIVISION term .)
    NUMBER          reduce using rule 81 (expression -> expression DIVISION term .)
    FLOAT           reduce using rule 81 (expression -> expression DIVISION term .)
    NUML            reduce using rule 81 (expression -> expression DIVISION term .)
    STRING          reduce using rule 81 (expression -> expression DIVISION term .)
    STRINGV         reduce using rule 81 (expression -> expression DIVISION term .)
    BREAK           reduce using rule 81 (expression -> expression DIVISION term .)


state 99

    (82) expression -> expression MOD term .

    PLUS            reduce using rule 82 (expression -> expression MOD term .)
    MINUS           reduce using rule 82 (expression -> expression MOD term .)
    DIVISION        reduce using rule 82 (expression -> expression MOD term .)
    MOD             reduce using rule 82 (expression -> expression MOD term .)
    MULT            reduce using rule 82 (expression -> expression MOD term .)
    EXP             reduce using rule 82 (expression -> expression MOD term .)
    $end            reduce using rule 82 (expression -> expression MOD term .)
    END             reduce using rule 82 (expression -> expression MOD term .)
    ELSE            reduce using rule 82 (expression -> expression MOD term .)
    RETURN          reduce using rule 82 (expression -> expression MOD term .)
    ARRAY           reduce using rule 82 (expression -> expression MOD term .)
    LSQBRACKET      reduce using rule 82 (expression -> expression MOD term .)
    LBRACKET        reduce using rule 82 (expression -> expression MOD term .)
    HASH            reduce using rule 82 (expression -> expression MOD term .)
    FOR             reduce using rule 82 (expression -> expression MOD term .)
    TRUE            reduce using rule 82 (expression -> expression MOD term .)
    FALSE           reduce using rule 82 (expression -> expression MOD term .)
    NIL             reduce using rule 82 (expression -> expression MOD term .)
    IF              reduce using rule 82 (expression -> expression MOD term .)
    IDLOCAL         reduce using rule 82 (expression -> expression MOD term .)
    IDINSTANCE      reduce using rule 82 (expression -> expression MOD term .)
    IDCLASS         reduce using rule 82 (expression -> expression MOD term .)
    IDGLOBAL        reduce using rule 82 (expression -> expression MOD term .)
    WHILE           reduce using rule 82 (expression -> expression MOD term .)
    NUMBER          reduce using rule 82 (expression -> expression MOD term .)
    FLOAT           reduce using rule 82 (expression -> expression MOD term .)
    NUML            reduce using rule 82 (expression -> expression MOD term .)
    STRING          reduce using rule 82 (expression -> expression MOD term .)
    STRINGV         reduce using rule 82 (expression -> expression MOD term .)
    BREAK           reduce using rule 82 (expression -> expression MOD term .)


state 100

    (83) expression -> expression MULT term .

    PLUS            reduce using rule 83 (expression -> expression MULT term .)
    MINUS           reduce using rule 83 (expression -> expression MULT term .)
    DIVISION        reduce using rule 83 (expression -> expression MULT term .)
    MOD             reduce using rule 83 (expression -> expression MULT term .)
    MULT            reduce using rule 83 (expression -> expression MULT term .)
    EXP             reduce using rule 83 (expression -> expression MULT term .)
    $end            reduce using rule 83 (expression -> expression MULT term .)
    END             reduce using rule 83 (expression -> expression MULT term .)
    ELSE            reduce using rule 83 (expression -> expression MULT term .)
    RETURN          reduce using rule 83 (expression -> expression MULT term .)
    ARRAY           reduce using rule 83 (expression -> expression MULT term .)
    LSQBRACKET      reduce using rule 83 (expression -> expression MULT term .)
    LBRACKET        reduce using rule 83 (expression -> expression MULT term .)
    HASH            reduce using rule 83 (expression -> expression MULT term .)
    FOR             reduce using rule 83 (expression -> expression MULT term .)
    TRUE            reduce using rule 83 (expression -> expression MULT term .)
    FALSE           reduce using rule 83 (expression -> expression MULT term .)
    NIL             reduce using rule 83 (expression -> expression MULT term .)
    IF              reduce using rule 83 (expression -> expression MULT term .)
    IDLOCAL         reduce using rule 83 (expression -> expression MULT term .)
    IDINSTANCE      reduce using rule 83 (expression -> expression MULT term .)
    IDCLASS         reduce using rule 83 (expression -> expression MULT term .)
    IDGLOBAL        reduce using rule 83 (expression -> expression MULT term .)
    WHILE           reduce using rule 83 (expression -> expression MULT term .)
    NUMBER          reduce using rule 83 (expression -> expression MULT term .)
    FLOAT           reduce using rule 83 (expression -> expression MULT term .)
    NUML            reduce using rule 83 (expression -> expression MULT term .)
    STRING          reduce using rule 83 (expression -> expression MULT term .)
    STRINGV         reduce using rule 83 (expression -> expression MULT term .)
    BREAK           reduce using rule 83 (expression -> expression MULT term .)


state 101

    (84) expression -> expression EXP term .

    PLUS            reduce using rule 84 (expression -> expression EXP term .)
    MINUS           reduce using rule 84 (expression -> expression EXP term .)
    DIVISION        reduce using rule 84 (expression -> expression EXP term .)
    MOD             reduce using rule 84 (expression -> expression EXP term .)
    MULT            reduce using rule 84 (expression -> expression EXP term .)
    EXP             reduce using rule 84 (expression -> expression EXP term .)
    $end            reduce using rule 84 (expression -> expression EXP term .)
    END             reduce using rule 84 (expression -> expression EXP term .)
    ELSE            reduce using rule 84 (expression -> expression EXP term .)
    RETURN          reduce using rule 84 (expression -> expression EXP term .)
    ARRAY           reduce using rule 84 (expression -> expression EXP term .)
    LSQBRACKET      reduce using rule 84 (expression -> expression EXP term .)
    LBRACKET        reduce using rule 84 (expression -> expression EXP term .)
    HASH            reduce using rule 84 (expression -> expression EXP term .)
    FOR             reduce using rule 84 (expression -> expression EXP term .)
    TRUE            reduce using rule 84 (expression -> expression EXP term .)
    FALSE           reduce using rule 84 (expression -> expression EXP term .)
    NIL             reduce using rule 84 (expression -> expression EXP term .)
    IF              reduce using rule 84 (expression -> expression EXP term .)
    IDLOCAL         reduce using rule 84 (expression -> expression EXP term .)
    IDINSTANCE      reduce using rule 84 (expression -> expression EXP term .)
    IDCLASS         reduce using rule 84 (expression -> expression EXP term .)
    IDGLOBAL        reduce using rule 84 (expression -> expression EXP term .)
    WHILE           reduce using rule 84 (expression -> expression EXP term .)
    NUMBER          reduce using rule 84 (expression -> expression EXP term .)
    FLOAT           reduce using rule 84 (expression -> expression EXP term .)
    NUML            reduce using rule 84 (expression -> expression EXP term .)
    STRING          reduce using rule 84 (expression -> expression EXP term .)
    STRINGV         reduce using rule 84 (expression -> expression EXP term .)
    BREAK           reduce using rule 84 (expression -> expression EXP term .)


state 102

    (90) metodocadena -> string POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 156


state 103

    (92) metodocadena -> string POINT LENGTH .

    $end            reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    END             reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    ELSE            reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    RETURN          reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    ARRAY           reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    LSQBRACKET      reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    LBRACKET        reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    HASH            reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    FOR             reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    TRUE            reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    FALSE           reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    NIL             reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    IF              reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    IDLOCAL         reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    IDINSTANCE      reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    IDCLASS         reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    IDGLOBAL        reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    WHILE           reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    NUMBER          reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    FLOAT           reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    NUML            reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    MINUS           reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    STRING          reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    STRINGV         reduce using rule 92 (metodocadena -> string POINT LENGTH .)
    BREAK           reduce using rule 92 (metodocadena -> string POINT LENGTH .)


state 104

    (89) metodocadena -> cadena POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 157


state 105

    (91) metodocadena -> cadena POINT LENGTH .

    $end            reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    END             reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    ELSE            reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    RETURN          reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    ARRAY           reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    LSQBRACKET      reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    LBRACKET        reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    HASH            reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    FOR             reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    TRUE            reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    FALSE           reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    NIL             reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    IF              reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    IDLOCAL         reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    IDINSTANCE      reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    IDCLASS         reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    IDGLOBAL        reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    WHILE           reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    NUMBER          reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    FLOAT           reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    NUML            reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    MINUS           reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    STRING          reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    STRINGV         reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)
    BREAK           reduce using rule 91 (metodocadena -> cadena POINT LENGTH .)


state 106

    (102) metodosarreglo -> arreglo POINT INDEX . LPARENTHESIS arraycontent RPARENTHESIS

    LPARENTHESIS    shift and go to state 158


state 107

    (103) metodosarreglo -> arreglo LSQBRACKET factor . RSQBRACKET

    RSQBRACKET      shift and go to state 159


state 108

    (62) assigns -> variables ASSIGN variables .
    (12) asignar -> variables .
    (75) term -> variables .
    (110) metodohash -> variables . ASSIGN hash POINT LENGTH
    (111) metodohash -> variables . POINT LENGTH

  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for MINUS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for MINUS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
    $end            reduce using rule 12 (asignar -> variables .)
    END             reduce using rule 12 (asignar -> variables .)
    ELSE            reduce using rule 12 (asignar -> variables .)
    RETURN          reduce using rule 12 (asignar -> variables .)
    ARRAY           reduce using rule 12 (asignar -> variables .)
    LSQBRACKET      reduce using rule 12 (asignar -> variables .)
    LBRACKET        reduce using rule 12 (asignar -> variables .)
    HASH            reduce using rule 12 (asignar -> variables .)
    FOR             reduce using rule 12 (asignar -> variables .)
    TRUE            reduce using rule 12 (asignar -> variables .)
    FALSE           reduce using rule 12 (asignar -> variables .)
    NIL             reduce using rule 12 (asignar -> variables .)
    IF              reduce using rule 12 (asignar -> variables .)
    IDLOCAL         reduce using rule 12 (asignar -> variables .)
    IDINSTANCE      reduce using rule 12 (asignar -> variables .)
    IDCLASS         reduce using rule 12 (asignar -> variables .)
    IDGLOBAL        reduce using rule 12 (asignar -> variables .)
    WHILE           reduce using rule 12 (asignar -> variables .)
    NUMBER          reduce using rule 12 (asignar -> variables .)
    FLOAT           reduce using rule 12 (asignar -> variables .)
    NUML            reduce using rule 12 (asignar -> variables .)
    MINUS           reduce using rule 12 (asignar -> variables .)
    STRING          reduce using rule 12 (asignar -> variables .)
    STRINGV         reduce using rule 12 (asignar -> variables .)
    BREAK           reduce using rule 12 (asignar -> variables .)
    PLUS            reduce using rule 75 (term -> variables .)
    DIVISION        reduce using rule 75 (term -> variables .)
    MOD             reduce using rule 75 (term -> variables .)
    MULT            reduce using rule 75 (term -> variables .)
    EXP             reduce using rule 75 (term -> variables .)
    ASSIGN          shift and go to state 160
    POINT           shift and go to state 65

  ! $end            [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! END             [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! ELSE            [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! RETURN          [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! ARRAY           [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! LSQBRACKET      [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! LBRACKET        [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! HASH            [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! FOR             [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! TRUE            [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! FALSE           [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! NIL             [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! IF              [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! IDLOCAL         [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! IDINSTANCE      [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! IDCLASS         [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! IDGLOBAL        [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! WHILE           [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! NUMBER          [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! FLOAT           [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! NUML            [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! STRING          [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! STRINGV         [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! BREAK           [ reduce using rule 62 (assigns -> variables ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 75 (term -> variables .) ]
  ! $end            [ reduce using rule 75 (term -> variables .) ]
  ! END             [ reduce using rule 75 (term -> variables .) ]
  ! ELSE            [ reduce using rule 75 (term -> variables .) ]
  ! RETURN          [ reduce using rule 75 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 75 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 75 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 75 (term -> variables .) ]
  ! HASH            [ reduce using rule 75 (term -> variables .) ]
  ! FOR             [ reduce using rule 75 (term -> variables .) ]
  ! TRUE            [ reduce using rule 75 (term -> variables .) ]
  ! FALSE           [ reduce using rule 75 (term -> variables .) ]
  ! NIL             [ reduce using rule 75 (term -> variables .) ]
  ! IF              [ reduce using rule 75 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 75 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 75 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 75 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 75 (term -> variables .) ]
  ! WHILE           [ reduce using rule 75 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 75 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 75 (term -> variables .) ]
  ! NUML            [ reduce using rule 75 (term -> variables .) ]
  ! STRING          [ reduce using rule 75 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 75 (term -> variables .) ]
  ! BREAK           [ reduce using rule 75 (term -> variables .) ]


state 109

    (110) metodohash -> variables ASSIGN hash . POINT LENGTH
    (9) asignar -> hash .

    POINT           shift and go to state 161
    $end            reduce using rule 9 (asignar -> hash .)


state 110

    (61) assigns -> variables ASSIGN expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . PLUS variables
    (71) expression -> expression . MINUS variables
    (72) expression -> expression . MINUS term
    (81) expression -> expression . DIVISION term
    (82) expression -> expression . MOD term
    (83) expression -> expression . MULT term
    (84) expression -> expression . EXP term
    (3) asignar -> expression .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for END resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ARRAY resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for HASH resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NIL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUML resolved using rule 3 (asignar -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for STRINGV resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for BREAK resolved using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    DIVISION        shift and go to state 56
    MOD             shift and go to state 57
    MULT            shift and go to state 58
    EXP             shift and go to state 59
    $end            reduce using rule 3 (asignar -> expression .)
    END             reduce using rule 3 (asignar -> expression .)
    ELSE            reduce using rule 3 (asignar -> expression .)
    RETURN          reduce using rule 3 (asignar -> expression .)
    ARRAY           reduce using rule 3 (asignar -> expression .)
    LSQBRACKET      reduce using rule 3 (asignar -> expression .)
    LBRACKET        reduce using rule 3 (asignar -> expression .)
    HASH            reduce using rule 3 (asignar -> expression .)
    FOR             reduce using rule 3 (asignar -> expression .)
    TRUE            reduce using rule 3 (asignar -> expression .)
    FALSE           reduce using rule 3 (asignar -> expression .)
    NIL             reduce using rule 3 (asignar -> expression .)
    IF              reduce using rule 3 (asignar -> expression .)
    IDLOCAL         reduce using rule 3 (asignar -> expression .)
    IDINSTANCE      reduce using rule 3 (asignar -> expression .)
    IDCLASS         reduce using rule 3 (asignar -> expression .)
    IDGLOBAL        reduce using rule 3 (asignar -> expression .)
    WHILE           reduce using rule 3 (asignar -> expression .)
    NUMBER          reduce using rule 3 (asignar -> expression .)
    FLOAT           reduce using rule 3 (asignar -> expression .)
    NUML            reduce using rule 3 (asignar -> expression .)
    STRING          reduce using rule 3 (asignar -> expression .)
    STRINGV         reduce using rule 3 (asignar -> expression .)
    BREAK           reduce using rule 3 (asignar -> expression .)

  ! $end            [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! END             [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! ELSE            [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! RETURN          [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! ARRAY           [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! LSQBRACKET      [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! HASH            [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! FOR             [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! TRUE            [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! FALSE           [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! NIL             [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! IF              [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! IDLOCAL         [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! IDINSTANCE      [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! IDCLASS         [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! IDGLOBAL        [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! WHILE           [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! NUMBER          [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! FLOAT           [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! NUML            [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! STRING          [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! STRINGV         [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! BREAK           [ reduce using rule 61 (assigns -> variables ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 3 (asignar -> expression .) ]


state 111

    (63) assigns -> variables ASSIGN boolean .
    (11) asignar -> boolean .

  ! reduce/reduce conflict for $end resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for END resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for ELSE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for RETURN resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for ARRAY resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for HASH resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for FOR resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for TRUE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for FALSE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for NIL resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IF resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for WHILE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for NUMBER resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for FLOAT resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for NUML resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for MINUS resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for STRING resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for STRINGV resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for BREAK resolved using rule 11 (asignar -> boolean .)
    $end            reduce using rule 11 (asignar -> boolean .)
    END             reduce using rule 11 (asignar -> boolean .)
    ELSE            reduce using rule 11 (asignar -> boolean .)
    RETURN          reduce using rule 11 (asignar -> boolean .)
    ARRAY           reduce using rule 11 (asignar -> boolean .)
    LSQBRACKET      reduce using rule 11 (asignar -> boolean .)
    LBRACKET        reduce using rule 11 (asignar -> boolean .)
    HASH            reduce using rule 11 (asignar -> boolean .)
    FOR             reduce using rule 11 (asignar -> boolean .)
    TRUE            reduce using rule 11 (asignar -> boolean .)
    FALSE           reduce using rule 11 (asignar -> boolean .)
    NIL             reduce using rule 11 (asignar -> boolean .)
    IF              reduce using rule 11 (asignar -> boolean .)
    IDLOCAL         reduce using rule 11 (asignar -> boolean .)
    IDINSTANCE      reduce using rule 11 (asignar -> boolean .)
    IDCLASS         reduce using rule 11 (asignar -> boolean .)
    IDGLOBAL        reduce using rule 11 (asignar -> boolean .)
    WHILE           reduce using rule 11 (asignar -> boolean .)
    NUMBER          reduce using rule 11 (asignar -> boolean .)
    FLOAT           reduce using rule 11 (asignar -> boolean .)
    NUML            reduce using rule 11 (asignar -> boolean .)
    MINUS           reduce using rule 11 (asignar -> boolean .)
    STRING          reduce using rule 11 (asignar -> boolean .)
    STRINGV         reduce using rule 11 (asignar -> boolean .)
    BREAK           reduce using rule 11 (asignar -> boolean .)

  ! $end            [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! END             [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! ELSE            [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! RETURN          [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! ARRAY           [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! LSQBRACKET      [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! LBRACKET        [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! HASH            [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! FOR             [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! TRUE            [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! FALSE           [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! NIL             [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! IF              [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! IDLOCAL         [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! IDINSTANCE      [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! IDCLASS         [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! IDGLOBAL        [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! WHILE           [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! NUMBER          [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! FLOAT           [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! NUML            [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! MINUS           [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! STRING          [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! STRINGV         [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]
  ! BREAK           [ reduce using rule 63 (assigns -> variables ASSIGN boolean .) ]


state 112

    (64) assigns -> variables ASSIGN asignar .

    $end            reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    END             reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    ELSE            reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    RETURN          reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    ARRAY           reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    LSQBRACKET      reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    LBRACKET        reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    HASH            reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    FOR             reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    TRUE            reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    FALSE           reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    NIL             reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    IF              reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    IDLOCAL         reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    IDINSTANCE      reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    IDCLASS         reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    IDGLOBAL        reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    WHILE           reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    NUMBER          reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    FLOAT           reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    NUML            reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    MINUS           reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    STRING          reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    STRINGV         reduce using rule 64 (assigns -> variables ASSIGN asignar .)
    BREAK           reduce using rule 64 (assigns -> variables ASSIGN asignar .)


state 113

    (111) metodohash -> variables POINT LENGTH .

    $end            reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    END             reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    ELSE            reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    RETURN          reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    ARRAY           reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    LSQBRACKET      reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    LBRACKET        reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    HASH            reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    FOR             reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    TRUE            reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    FALSE           reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    NIL             reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    IF              reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    IDLOCAL         reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    IDINSTANCE      reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    IDCLASS         reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    IDGLOBAL        reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    WHILE           reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    NUMBER          reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    FLOAT           reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    NUML            reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    MINUS           reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    STRING          reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    STRINGV         reduce using rule 111 (metodohash -> variables POINT LENGTH .)
    BREAK           reduce using rule 111 (metodohash -> variables POINT LENGTH .)


state 114

    (66) assigns -> variables ASSIGNPLUS variables .
    (75) term -> variables .

  ! reduce/reduce conflict for MINUS resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for $end resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for END resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for HASH resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for FOR resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for NIL resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IF resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for NUML resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for STRING resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    $end            reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    END             reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    ELSE            reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    RETURN          reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    ARRAY           reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    LSQBRACKET      reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    LBRACKET        reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    HASH            reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    FOR             reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    TRUE            reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    FALSE           reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    NIL             reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    IF              reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    IDLOCAL         reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    IDINSTANCE      reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    IDCLASS         reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    IDGLOBAL        reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    WHILE           reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    NUMBER          reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    FLOAT           reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    NUML            reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    MINUS           reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    STRING          reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    STRINGV         reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    BREAK           reduce using rule 66 (assigns -> variables ASSIGNPLUS variables .)
    PLUS            reduce using rule 75 (term -> variables .)
    DIVISION        reduce using rule 75 (term -> variables .)
    MOD             reduce using rule 75 (term -> variables .)
    MULT            reduce using rule 75 (term -> variables .)
    EXP             reduce using rule 75 (term -> variables .)

  ! MINUS           [ reduce using rule 75 (term -> variables .) ]
  ! $end            [ reduce using rule 75 (term -> variables .) ]
  ! END             [ reduce using rule 75 (term -> variables .) ]
  ! ELSE            [ reduce using rule 75 (term -> variables .) ]
  ! RETURN          [ reduce using rule 75 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 75 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 75 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 75 (term -> variables .) ]
  ! HASH            [ reduce using rule 75 (term -> variables .) ]
  ! FOR             [ reduce using rule 75 (term -> variables .) ]
  ! TRUE            [ reduce using rule 75 (term -> variables .) ]
  ! FALSE           [ reduce using rule 75 (term -> variables .) ]
  ! NIL             [ reduce using rule 75 (term -> variables .) ]
  ! IF              [ reduce using rule 75 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 75 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 75 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 75 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 75 (term -> variables .) ]
  ! WHILE           [ reduce using rule 75 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 75 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 75 (term -> variables .) ]
  ! NUML            [ reduce using rule 75 (term -> variables .) ]
  ! STRING          [ reduce using rule 75 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 75 (term -> variables .) ]
  ! BREAK           [ reduce using rule 75 (term -> variables .) ]


state 115

    (65) assigns -> variables ASSIGNPLUS expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . PLUS variables
    (71) expression -> expression . MINUS variables
    (72) expression -> expression . MINUS term
    (81) expression -> expression . DIVISION term
    (82) expression -> expression . MOD term
    (83) expression -> expression . MULT term
    (84) expression -> expression . EXP term

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    END             reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    ELSE            reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    RETURN          reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    ARRAY           reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    LSQBRACKET      reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    LBRACKET        reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    HASH            reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    FOR             reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    TRUE            reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    FALSE           reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    NIL             reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    IF              reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    IDLOCAL         reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    IDINSTANCE      reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    IDCLASS         reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    IDGLOBAL        reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    WHILE           reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    NUMBER          reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    FLOAT           reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    NUML            reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    STRING          reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    STRINGV         reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    BREAK           reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    DIVISION        shift and go to state 56
    MOD             shift and go to state 57
    MULT            shift and go to state 58
    EXP             shift and go to state 59

  ! MINUS           [ reduce using rule 65 (assigns -> variables ASSIGNPLUS expression .) ]


state 116

    (68) assigns -> variables ASSIGNMIN variables .
    (75) term -> variables .

  ! reduce/reduce conflict for MINUS resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for $end resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for END resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for HASH resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for FOR resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for NIL resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IF resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for NUML resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for STRING resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 68 (assigns -> variables ASSIGNMIN variables .)
    $end            reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    END             reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    ELSE            reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    RETURN          reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    ARRAY           reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    LSQBRACKET      reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    LBRACKET        reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    HASH            reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    FOR             reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    TRUE            reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    FALSE           reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    NIL             reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    IF              reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    IDLOCAL         reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    IDINSTANCE      reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    IDCLASS         reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    IDGLOBAL        reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    WHILE           reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    NUMBER          reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    FLOAT           reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    NUML            reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    MINUS           reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    STRING          reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    STRINGV         reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    BREAK           reduce using rule 68 (assigns -> variables ASSIGNMIN variables .)
    PLUS            reduce using rule 75 (term -> variables .)
    DIVISION        reduce using rule 75 (term -> variables .)
    MOD             reduce using rule 75 (term -> variables .)
    MULT            reduce using rule 75 (term -> variables .)
    EXP             reduce using rule 75 (term -> variables .)

  ! MINUS           [ reduce using rule 75 (term -> variables .) ]
  ! $end            [ reduce using rule 75 (term -> variables .) ]
  ! END             [ reduce using rule 75 (term -> variables .) ]
  ! ELSE            [ reduce using rule 75 (term -> variables .) ]
  ! RETURN          [ reduce using rule 75 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 75 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 75 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 75 (term -> variables .) ]
  ! HASH            [ reduce using rule 75 (term -> variables .) ]
  ! FOR             [ reduce using rule 75 (term -> variables .) ]
  ! TRUE            [ reduce using rule 75 (term -> variables .) ]
  ! FALSE           [ reduce using rule 75 (term -> variables .) ]
  ! NIL             [ reduce using rule 75 (term -> variables .) ]
  ! IF              [ reduce using rule 75 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 75 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 75 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 75 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 75 (term -> variables .) ]
  ! WHILE           [ reduce using rule 75 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 75 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 75 (term -> variables .) ]
  ! NUML            [ reduce using rule 75 (term -> variables .) ]
  ! STRING          [ reduce using rule 75 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 75 (term -> variables .) ]
  ! BREAK           [ reduce using rule 75 (term -> variables .) ]


state 117

    (67) assigns -> variables ASSIGNMIN expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . PLUS variables
    (71) expression -> expression . MINUS variables
    (72) expression -> expression . MINUS term
    (81) expression -> expression . DIVISION term
    (82) expression -> expression . MOD term
    (83) expression -> expression . MULT term
    (84) expression -> expression . EXP term

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    END             reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    ELSE            reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    RETURN          reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    ARRAY           reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    LSQBRACKET      reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    LBRACKET        reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    HASH            reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    FOR             reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    TRUE            reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    FALSE           reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    NIL             reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    IF              reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    IDLOCAL         reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    IDINSTANCE      reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    IDCLASS         reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    IDGLOBAL        reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    WHILE           reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    NUMBER          reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    FLOAT           reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    NUML            reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    STRING          reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    STRINGV         reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    BREAK           reduce using rule 67 (assigns -> variables ASSIGNMIN expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    DIVISION        shift and go to state 56
    MOD             shift and go to state 57
    MULT            shift and go to state 58
    EXP             shift and go to state 59

  ! MINUS           [ reduce using rule 67 (assigns -> variables ASSIGNMIN expression .) ]


state 118

    (86) cadena -> STRING POINT NEW .
    (87) cadena -> STRING POINT NEW . LPARENTHESIS string RPARENTHESIS

    POINT           reduce using rule 86 (cadena -> STRING POINT NEW .)
    $end            reduce using rule 86 (cadena -> STRING POINT NEW .)
    END             reduce using rule 86 (cadena -> STRING POINT NEW .)
    ELSE            reduce using rule 86 (cadena -> STRING POINT NEW .)
    RETURN          reduce using rule 86 (cadena -> STRING POINT NEW .)
    ARRAY           reduce using rule 86 (cadena -> STRING POINT NEW .)
    LSQBRACKET      reduce using rule 86 (cadena -> STRING POINT NEW .)
    LBRACKET        reduce using rule 86 (cadena -> STRING POINT NEW .)
    HASH            reduce using rule 86 (cadena -> STRING POINT NEW .)
    FOR             reduce using rule 86 (cadena -> STRING POINT NEW .)
    TRUE            reduce using rule 86 (cadena -> STRING POINT NEW .)
    FALSE           reduce using rule 86 (cadena -> STRING POINT NEW .)
    NIL             reduce using rule 86 (cadena -> STRING POINT NEW .)
    IF              reduce using rule 86 (cadena -> STRING POINT NEW .)
    IDLOCAL         reduce using rule 86 (cadena -> STRING POINT NEW .)
    IDINSTANCE      reduce using rule 86 (cadena -> STRING POINT NEW .)
    IDCLASS         reduce using rule 86 (cadena -> STRING POINT NEW .)
    IDGLOBAL        reduce using rule 86 (cadena -> STRING POINT NEW .)
    WHILE           reduce using rule 86 (cadena -> STRING POINT NEW .)
    NUMBER          reduce using rule 86 (cadena -> STRING POINT NEW .)
    FLOAT           reduce using rule 86 (cadena -> STRING POINT NEW .)
    NUML            reduce using rule 86 (cadena -> STRING POINT NEW .)
    MINUS           reduce using rule 86 (cadena -> STRING POINT NEW .)
    STRING          reduce using rule 86 (cadena -> STRING POINT NEW .)
    STRINGV         reduce using rule 86 (cadena -> STRING POINT NEW .)
    BREAK           reduce using rule 86 (cadena -> STRING POINT NEW .)
    RPARENTHESIS    reduce using rule 86 (cadena -> STRING POINT NEW .)
    LPARENTHESIS    shift and go to state 162


state 119

    (88) cadena -> STRING LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 163


state 120

    (93) arreglo -> ARRAY POINT NEW .
    (94) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    POINT           reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    LSQBRACKET      reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    $end            reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    END             reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    ELSE            reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    RETURN          reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    ARRAY           reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    LBRACKET        reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    HASH            reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    FOR             reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    TRUE            reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    FALSE           reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    NIL             reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    IF              reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    IDLOCAL         reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    IDINSTANCE      reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    IDCLASS         reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    IDGLOBAL        reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    WHILE           reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    NUMBER          reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    FLOAT           reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    NUML            reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    MINUS           reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    STRING          reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    STRINGV         reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    BREAK           reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    RPARENTHESIS    reduce using rule 93 (arreglo -> ARRAY POINT NEW .)
    LPARENTHESIS    shift and go to state 164


state 121

    (96) arreglo -> ARRAY LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 165


state 122

    (97) arreglo -> LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    END             reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    ELSE            reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    RETURN          reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    ARRAY           reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    LBRACKET        reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    HASH            reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    FOR             reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    TRUE            reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    FALSE           reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    NIL             reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IF              reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDLOCAL         reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDINSTANCE      reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDCLASS         reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDGLOBAL        reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    WHILE           reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    NUMBER          reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    FLOAT           reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    NUML            reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    MINUS           reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    STRING          reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    STRINGV         reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    BREAK           reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    RPARENTHESIS    reduce using rule 97 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)


state 123

    (100) arraycontent -> factor COMMA . arraycontent
    (98) arraycontent -> . factor
    (99) arraycontent -> . string
    (100) arraycontent -> . factor COMMA arraycontent
    (101) arraycontent -> . string COMMA arraycontent
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (85) string -> . STRINGV

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    STRINGV         shift and go to state 30

    factor                         shift and go to state 75
    arraycontent                   shift and go to state 166
    string                         shift and go to state 76

state 124

    (101) arraycontent -> string COMMA . arraycontent
    (98) arraycontent -> . factor
    (99) arraycontent -> . string
    (100) arraycontent -> . factor COMMA arraycontent
    (101) arraycontent -> . string COMMA arraycontent
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (85) string -> . STRINGV

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    STRINGV         shift and go to state 30

    string                         shift and go to state 76
    arraycontent                   shift and go to state 167
    factor                         shift and go to state 75

state 125

    (104) hash -> LBRACKET hashcontent RBRACKET .

    $end            reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    POINT           reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    END             reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    ELSE            reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    RETURN          reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    ARRAY           reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    LSQBRACKET      reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    LBRACKET        reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    HASH            reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    FOR             reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    TRUE            reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    FALSE           reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    NIL             reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    IF              reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    IDLOCAL         reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    IDINSTANCE      reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    IDCLASS         reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    IDGLOBAL        reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    WHILE           reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    NUMBER          reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    FLOAT           reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    NUML            reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    MINUS           reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    STRING          reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    STRINGV         reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)
    BREAK           reduce using rule 104 (hash -> LBRACKET hashcontent RBRACKET .)


state 126

    (106) hashcontent -> string ASSIGN . GREATER hashcontentvalue
    (107) hashcontent -> string ASSIGN . GREATER hashcontentvalue COMMA hashcontent

    GREATER         shift and go to state 168


state 127

    (105) hash -> HASH POINT NEW .

    $end            reduce using rule 105 (hash -> HASH POINT NEW .)
    POINT           reduce using rule 105 (hash -> HASH POINT NEW .)
    END             reduce using rule 105 (hash -> HASH POINT NEW .)
    ELSE            reduce using rule 105 (hash -> HASH POINT NEW .)
    RETURN          reduce using rule 105 (hash -> HASH POINT NEW .)
    ARRAY           reduce using rule 105 (hash -> HASH POINT NEW .)
    LSQBRACKET      reduce using rule 105 (hash -> HASH POINT NEW .)
    LBRACKET        reduce using rule 105 (hash -> HASH POINT NEW .)
    HASH            reduce using rule 105 (hash -> HASH POINT NEW .)
    FOR             reduce using rule 105 (hash -> HASH POINT NEW .)
    TRUE            reduce using rule 105 (hash -> HASH POINT NEW .)
    FALSE           reduce using rule 105 (hash -> HASH POINT NEW .)
    NIL             reduce using rule 105 (hash -> HASH POINT NEW .)
    IF              reduce using rule 105 (hash -> HASH POINT NEW .)
    IDLOCAL         reduce using rule 105 (hash -> HASH POINT NEW .)
    IDINSTANCE      reduce using rule 105 (hash -> HASH POINT NEW .)
    IDCLASS         reduce using rule 105 (hash -> HASH POINT NEW .)
    IDGLOBAL        reduce using rule 105 (hash -> HASH POINT NEW .)
    WHILE           reduce using rule 105 (hash -> HASH POINT NEW .)
    NUMBER          reduce using rule 105 (hash -> HASH POINT NEW .)
    FLOAT           reduce using rule 105 (hash -> HASH POINT NEW .)
    NUML            reduce using rule 105 (hash -> HASH POINT NEW .)
    MINUS           reduce using rule 105 (hash -> HASH POINT NEW .)
    STRING          reduce using rule 105 (hash -> HASH POINT NEW .)
    STRINGV         reduce using rule 105 (hash -> HASH POINT NEW .)
    BREAK           reduce using rule 105 (hash -> HASH POINT NEW .)


state 128

    (140) getsr -> IDLOCAL ASSIGN GETS .

    $end            reduce using rule 140 (getsr -> IDLOCAL ASSIGN GETS .)


state 129

    (118) estructurasControl -> FOR IDLOCAL IN . factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> FOR IDLOCAL IN . factor POINT POINT factor DO forcontent END
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    factor                         shift and go to state 169

state 130

    (54) sentenIF -> IF variables comparador . term
    (55) sentenifp -> IF variables comparador . term algoritmo END
    (56) sentenifelse -> IF variables comparador . term algoritmo ELSE algoritmo END
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    variables                      shift and go to state 87
    term                           shift and go to state 170
    factor                         shift and go to state 33

state 131

    (112) comparador -> COMPARE .

    NUMBER          reduce using rule 112 (comparador -> COMPARE .)
    FLOAT           reduce using rule 112 (comparador -> COMPARE .)
    NUML            reduce using rule 112 (comparador -> COMPARE .)
    MINUS           reduce using rule 112 (comparador -> COMPARE .)
    IDLOCAL         reduce using rule 112 (comparador -> COMPARE .)
    IDINSTANCE      reduce using rule 112 (comparador -> COMPARE .)
    IDCLASS         reduce using rule 112 (comparador -> COMPARE .)
    IDGLOBAL        reduce using rule 112 (comparador -> COMPARE .)


state 132

    (113) comparador -> GREQUAL .

    NUMBER          reduce using rule 113 (comparador -> GREQUAL .)
    FLOAT           reduce using rule 113 (comparador -> GREQUAL .)
    NUML            reduce using rule 113 (comparador -> GREQUAL .)
    MINUS           reduce using rule 113 (comparador -> GREQUAL .)
    IDLOCAL         reduce using rule 113 (comparador -> GREQUAL .)
    IDINSTANCE      reduce using rule 113 (comparador -> GREQUAL .)
    IDCLASS         reduce using rule 113 (comparador -> GREQUAL .)
    IDGLOBAL        reduce using rule 113 (comparador -> GREQUAL .)


state 133

    (114) comparador -> LSEQUAL .

    NUMBER          reduce using rule 114 (comparador -> LSEQUAL .)
    FLOAT           reduce using rule 114 (comparador -> LSEQUAL .)
    NUML            reduce using rule 114 (comparador -> LSEQUAL .)
    MINUS           reduce using rule 114 (comparador -> LSEQUAL .)
    IDLOCAL         reduce using rule 114 (comparador -> LSEQUAL .)
    IDINSTANCE      reduce using rule 114 (comparador -> LSEQUAL .)
    IDCLASS         reduce using rule 114 (comparador -> LSEQUAL .)
    IDGLOBAL        reduce using rule 114 (comparador -> LSEQUAL .)


state 134

    (115) comparador -> NOTEQUAL .

    NUMBER          reduce using rule 115 (comparador -> NOTEQUAL .)
    FLOAT           reduce using rule 115 (comparador -> NOTEQUAL .)
    NUML            reduce using rule 115 (comparador -> NOTEQUAL .)
    MINUS           reduce using rule 115 (comparador -> NOTEQUAL .)
    IDLOCAL         reduce using rule 115 (comparador -> NOTEQUAL .)
    IDINSTANCE      reduce using rule 115 (comparador -> NOTEQUAL .)
    IDCLASS         reduce using rule 115 (comparador -> NOTEQUAL .)
    IDGLOBAL        reduce using rule 115 (comparador -> NOTEQUAL .)


state 135

    (116) comparador -> LESS .

    NUMBER          reduce using rule 116 (comparador -> LESS .)
    FLOAT           reduce using rule 116 (comparador -> LESS .)
    NUML            reduce using rule 116 (comparador -> LESS .)
    MINUS           reduce using rule 116 (comparador -> LESS .)
    IDLOCAL         reduce using rule 116 (comparador -> LESS .)
    IDINSTANCE      reduce using rule 116 (comparador -> LESS .)
    IDCLASS         reduce using rule 116 (comparador -> LESS .)
    IDGLOBAL        reduce using rule 116 (comparador -> LESS .)


state 136

    (117) comparador -> GREATER .

    NUMBER          reduce using rule 117 (comparador -> GREATER .)
    FLOAT           reduce using rule 117 (comparador -> GREATER .)
    NUML            reduce using rule 117 (comparador -> GREATER .)
    MINUS           reduce using rule 117 (comparador -> GREATER .)
    IDLOCAL         reduce using rule 117 (comparador -> GREATER .)
    IDINSTANCE      reduce using rule 117 (comparador -> GREATER .)
    IDCLASS         reduce using rule 117 (comparador -> GREATER .)
    IDGLOBAL        reduce using rule 117 (comparador -> GREATER .)


state 137

    (48) algoritmo -> variables .
    (61) assigns -> variables . ASSIGN expression
    (62) assigns -> variables . ASSIGN variables
    (63) assigns -> variables . ASSIGN boolean
    (64) assigns -> variables . ASSIGN asignar
    (65) assigns -> variables . ASSIGNPLUS expression
    (66) assigns -> variables . ASSIGNPLUS variables
    (67) assigns -> variables . ASSIGNMIN expression
    (68) assigns -> variables . ASSIGNMIN variables
    (75) term -> variables .

  ! reduce/reduce conflict for END resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 48 (algoritmo -> variables .)
    END             reduce using rule 48 (algoritmo -> variables .)
    ELSE            reduce using rule 48 (algoritmo -> variables .)
    RETURN          reduce using rule 48 (algoritmo -> variables .)
    ASSIGN          shift and go to state 171
    ASSIGNPLUS      shift and go to state 66
    ASSIGNMIN       shift and go to state 67
    PLUS            reduce using rule 75 (term -> variables .)
    MINUS           reduce using rule 75 (term -> variables .)
    DIVISION        reduce using rule 75 (term -> variables .)
    MOD             reduce using rule 75 (term -> variables .)
    MULT            reduce using rule 75 (term -> variables .)
    EXP             reduce using rule 75 (term -> variables .)

  ! END             [ reduce using rule 75 (term -> variables .) ]
  ! ELSE            [ reduce using rule 75 (term -> variables .) ]
  ! RETURN          [ reduce using rule 75 (term -> variables .) ]


state 138

    (50) sentenWHILE -> WHILE variables comparador . variables algoritmo END
    (51) sentenWHILE -> WHILE variables comparador . expression algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    variables                      shift and go to state 172
    expression                     shift and go to state 173
    term                           shift and go to state 28
    factor                         shift and go to state 33

state 139

    (53) sentenWHILE -> WHILE variables algoritmo . END

    END             shift and go to state 174


state 140

    (37) algoritmo -> expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . PLUS variables
    (71) expression -> expression . MINUS variables
    (72) expression -> expression . MINUS term
    (81) expression -> expression . DIVISION term
    (82) expression -> expression . MOD term
    (83) expression -> expression . MULT term
    (84) expression -> expression . EXP term

    END             reduce using rule 37 (algoritmo -> expression .)
    ELSE            reduce using rule 37 (algoritmo -> expression .)
    RETURN          reduce using rule 37 (algoritmo -> expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    DIVISION        shift and go to state 56
    MOD             shift and go to state 57
    MULT            shift and go to state 58
    EXP             shift and go to state 59


state 141

    (38) algoritmo -> metodocadena .

    END             reduce using rule 38 (algoritmo -> metodocadena .)
    ELSE            reduce using rule 38 (algoritmo -> metodocadena .)
    RETURN          reduce using rule 38 (algoritmo -> metodocadena .)
    ARRAY           reduce using rule 38 (algoritmo -> metodocadena .)
    LSQBRACKET      reduce using rule 38 (algoritmo -> metodocadena .)
    LBRACKET        reduce using rule 38 (algoritmo -> metodocadena .)
    HASH            reduce using rule 38 (algoritmo -> metodocadena .)
    FOR             reduce using rule 38 (algoritmo -> metodocadena .)
    TRUE            reduce using rule 38 (algoritmo -> metodocadena .)
    FALSE           reduce using rule 38 (algoritmo -> metodocadena .)
    NIL             reduce using rule 38 (algoritmo -> metodocadena .)
    IF              reduce using rule 38 (algoritmo -> metodocadena .)
    IDLOCAL         reduce using rule 38 (algoritmo -> metodocadena .)
    IDINSTANCE      reduce using rule 38 (algoritmo -> metodocadena .)
    IDCLASS         reduce using rule 38 (algoritmo -> metodocadena .)
    IDGLOBAL        reduce using rule 38 (algoritmo -> metodocadena .)
    WHILE           reduce using rule 38 (algoritmo -> metodocadena .)
    NUMBER          reduce using rule 38 (algoritmo -> metodocadena .)
    FLOAT           reduce using rule 38 (algoritmo -> metodocadena .)
    NUML            reduce using rule 38 (algoritmo -> metodocadena .)
    MINUS           reduce using rule 38 (algoritmo -> metodocadena .)
    STRING          reduce using rule 38 (algoritmo -> metodocadena .)
    STRINGV         reduce using rule 38 (algoritmo -> metodocadena .)
    BREAK           reduce using rule 38 (algoritmo -> metodocadena .)


state 142

    (39) algoritmo -> arreglo .
    (102) metodosarreglo -> arreglo . POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> arreglo . LSQBRACKET factor RSQBRACKET

  ! shift/reduce conflict for LSQBRACKET resolved as shift
    END             reduce using rule 39 (algoritmo -> arreglo .)
    ELSE            reduce using rule 39 (algoritmo -> arreglo .)
    RETURN          reduce using rule 39 (algoritmo -> arreglo .)
    ARRAY           reduce using rule 39 (algoritmo -> arreglo .)
    LBRACKET        reduce using rule 39 (algoritmo -> arreglo .)
    HASH            reduce using rule 39 (algoritmo -> arreglo .)
    FOR             reduce using rule 39 (algoritmo -> arreglo .)
    TRUE            reduce using rule 39 (algoritmo -> arreglo .)
    FALSE           reduce using rule 39 (algoritmo -> arreglo .)
    NIL             reduce using rule 39 (algoritmo -> arreglo .)
    IF              reduce using rule 39 (algoritmo -> arreglo .)
    IDLOCAL         reduce using rule 39 (algoritmo -> arreglo .)
    IDINSTANCE      reduce using rule 39 (algoritmo -> arreglo .)
    IDCLASS         reduce using rule 39 (algoritmo -> arreglo .)
    IDGLOBAL        reduce using rule 39 (algoritmo -> arreglo .)
    WHILE           reduce using rule 39 (algoritmo -> arreglo .)
    NUMBER          reduce using rule 39 (algoritmo -> arreglo .)
    FLOAT           reduce using rule 39 (algoritmo -> arreglo .)
    NUML            reduce using rule 39 (algoritmo -> arreglo .)
    MINUS           reduce using rule 39 (algoritmo -> arreglo .)
    STRING          reduce using rule 39 (algoritmo -> arreglo .)
    STRINGV         reduce using rule 39 (algoritmo -> arreglo .)
    BREAK           reduce using rule 39 (algoritmo -> arreglo .)
    POINT           shift and go to state 62
    LSQBRACKET      shift and go to state 63

  ! LSQBRACKET      [ reduce using rule 39 (algoritmo -> arreglo .) ]


state 143

    (40) algoritmo -> metodosarreglo .

    END             reduce using rule 40 (algoritmo -> metodosarreglo .)
    ELSE            reduce using rule 40 (algoritmo -> metodosarreglo .)
    RETURN          reduce using rule 40 (algoritmo -> metodosarreglo .)
    ARRAY           reduce using rule 40 (algoritmo -> metodosarreglo .)
    LSQBRACKET      reduce using rule 40 (algoritmo -> metodosarreglo .)
    LBRACKET        reduce using rule 40 (algoritmo -> metodosarreglo .)
    HASH            reduce using rule 40 (algoritmo -> metodosarreglo .)
    FOR             reduce using rule 40 (algoritmo -> metodosarreglo .)
    TRUE            reduce using rule 40 (algoritmo -> metodosarreglo .)
    FALSE           reduce using rule 40 (algoritmo -> metodosarreglo .)
    NIL             reduce using rule 40 (algoritmo -> metodosarreglo .)
    IF              reduce using rule 40 (algoritmo -> metodosarreglo .)
    IDLOCAL         reduce using rule 40 (algoritmo -> metodosarreglo .)
    IDINSTANCE      reduce using rule 40 (algoritmo -> metodosarreglo .)
    IDCLASS         reduce using rule 40 (algoritmo -> metodosarreglo .)
    IDGLOBAL        reduce using rule 40 (algoritmo -> metodosarreglo .)
    WHILE           reduce using rule 40 (algoritmo -> metodosarreglo .)
    NUMBER          reduce using rule 40 (algoritmo -> metodosarreglo .)
    FLOAT           reduce using rule 40 (algoritmo -> metodosarreglo .)
    NUML            reduce using rule 40 (algoritmo -> metodosarreglo .)
    MINUS           reduce using rule 40 (algoritmo -> metodosarreglo .)
    STRING          reduce using rule 40 (algoritmo -> metodosarreglo .)
    STRINGV         reduce using rule 40 (algoritmo -> metodosarreglo .)
    BREAK           reduce using rule 40 (algoritmo -> metodosarreglo .)


state 144

    (41) algoritmo -> hash .

    END             reduce using rule 41 (algoritmo -> hash .)
    ELSE            reduce using rule 41 (algoritmo -> hash .)
    RETURN          reduce using rule 41 (algoritmo -> hash .)
    ARRAY           reduce using rule 41 (algoritmo -> hash .)
    LSQBRACKET      reduce using rule 41 (algoritmo -> hash .)
    LBRACKET        reduce using rule 41 (algoritmo -> hash .)
    HASH            reduce using rule 41 (algoritmo -> hash .)
    FOR             reduce using rule 41 (algoritmo -> hash .)
    TRUE            reduce using rule 41 (algoritmo -> hash .)
    FALSE           reduce using rule 41 (algoritmo -> hash .)
    NIL             reduce using rule 41 (algoritmo -> hash .)
    IF              reduce using rule 41 (algoritmo -> hash .)
    IDLOCAL         reduce using rule 41 (algoritmo -> hash .)
    IDINSTANCE      reduce using rule 41 (algoritmo -> hash .)
    IDCLASS         reduce using rule 41 (algoritmo -> hash .)
    IDGLOBAL        reduce using rule 41 (algoritmo -> hash .)
    WHILE           reduce using rule 41 (algoritmo -> hash .)
    NUMBER          reduce using rule 41 (algoritmo -> hash .)
    FLOAT           reduce using rule 41 (algoritmo -> hash .)
    NUML            reduce using rule 41 (algoritmo -> hash .)
    MINUS           reduce using rule 41 (algoritmo -> hash .)
    STRING          reduce using rule 41 (algoritmo -> hash .)
    STRINGV         reduce using rule 41 (algoritmo -> hash .)
    BREAK           reduce using rule 41 (algoritmo -> hash .)


state 145

    (42) algoritmo -> estructurasControl .

    END             reduce using rule 42 (algoritmo -> estructurasControl .)
    ELSE            reduce using rule 42 (algoritmo -> estructurasControl .)
    RETURN          reduce using rule 42 (algoritmo -> estructurasControl .)
    ARRAY           reduce using rule 42 (algoritmo -> estructurasControl .)
    LSQBRACKET      reduce using rule 42 (algoritmo -> estructurasControl .)
    LBRACKET        reduce using rule 42 (algoritmo -> estructurasControl .)
    HASH            reduce using rule 42 (algoritmo -> estructurasControl .)
    FOR             reduce using rule 42 (algoritmo -> estructurasControl .)
    TRUE            reduce using rule 42 (algoritmo -> estructurasControl .)
    FALSE           reduce using rule 42 (algoritmo -> estructurasControl .)
    NIL             reduce using rule 42 (algoritmo -> estructurasControl .)
    IF              reduce using rule 42 (algoritmo -> estructurasControl .)
    IDLOCAL         reduce using rule 42 (algoritmo -> estructurasControl .)
    IDINSTANCE      reduce using rule 42 (algoritmo -> estructurasControl .)
    IDCLASS         reduce using rule 42 (algoritmo -> estructurasControl .)
    IDGLOBAL        reduce using rule 42 (algoritmo -> estructurasControl .)
    WHILE           reduce using rule 42 (algoritmo -> estructurasControl .)
    NUMBER          reduce using rule 42 (algoritmo -> estructurasControl .)
    FLOAT           reduce using rule 42 (algoritmo -> estructurasControl .)
    NUML            reduce using rule 42 (algoritmo -> estructurasControl .)
    MINUS           reduce using rule 42 (algoritmo -> estructurasControl .)
    STRING          reduce using rule 42 (algoritmo -> estructurasControl .)
    STRINGV         reduce using rule 42 (algoritmo -> estructurasControl .)
    BREAK           reduce using rule 42 (algoritmo -> estructurasControl .)


state 146

    (43) algoritmo -> boolean .

    END             reduce using rule 43 (algoritmo -> boolean .)
    ELSE            reduce using rule 43 (algoritmo -> boolean .)
    RETURN          reduce using rule 43 (algoritmo -> boolean .)
    ARRAY           reduce using rule 43 (algoritmo -> boolean .)
    LSQBRACKET      reduce using rule 43 (algoritmo -> boolean .)
    LBRACKET        reduce using rule 43 (algoritmo -> boolean .)
    HASH            reduce using rule 43 (algoritmo -> boolean .)
    FOR             reduce using rule 43 (algoritmo -> boolean .)
    TRUE            reduce using rule 43 (algoritmo -> boolean .)
    FALSE           reduce using rule 43 (algoritmo -> boolean .)
    NIL             reduce using rule 43 (algoritmo -> boolean .)
    IF              reduce using rule 43 (algoritmo -> boolean .)
    IDLOCAL         reduce using rule 43 (algoritmo -> boolean .)
    IDINSTANCE      reduce using rule 43 (algoritmo -> boolean .)
    IDCLASS         reduce using rule 43 (algoritmo -> boolean .)
    IDGLOBAL        reduce using rule 43 (algoritmo -> boolean .)
    WHILE           reduce using rule 43 (algoritmo -> boolean .)
    NUMBER          reduce using rule 43 (algoritmo -> boolean .)
    FLOAT           reduce using rule 43 (algoritmo -> boolean .)
    NUML            reduce using rule 43 (algoritmo -> boolean .)
    MINUS           reduce using rule 43 (algoritmo -> boolean .)
    STRING          reduce using rule 43 (algoritmo -> boolean .)
    STRINGV         reduce using rule 43 (algoritmo -> boolean .)
    BREAK           reduce using rule 43 (algoritmo -> boolean .)


state 147

    (44) algoritmo -> assigns .

    END             reduce using rule 44 (algoritmo -> assigns .)
    ELSE            reduce using rule 44 (algoritmo -> assigns .)
    RETURN          reduce using rule 44 (algoritmo -> assigns .)
    ARRAY           reduce using rule 44 (algoritmo -> assigns .)
    LSQBRACKET      reduce using rule 44 (algoritmo -> assigns .)
    LBRACKET        reduce using rule 44 (algoritmo -> assigns .)
    HASH            reduce using rule 44 (algoritmo -> assigns .)
    FOR             reduce using rule 44 (algoritmo -> assigns .)
    TRUE            reduce using rule 44 (algoritmo -> assigns .)
    FALSE           reduce using rule 44 (algoritmo -> assigns .)
    NIL             reduce using rule 44 (algoritmo -> assigns .)
    IF              reduce using rule 44 (algoritmo -> assigns .)
    IDLOCAL         reduce using rule 44 (algoritmo -> assigns .)
    IDINSTANCE      reduce using rule 44 (algoritmo -> assigns .)
    IDCLASS         reduce using rule 44 (algoritmo -> assigns .)
    IDGLOBAL        reduce using rule 44 (algoritmo -> assigns .)
    WHILE           reduce using rule 44 (algoritmo -> assigns .)
    NUMBER          reduce using rule 44 (algoritmo -> assigns .)
    FLOAT           reduce using rule 44 (algoritmo -> assigns .)
    NUML            reduce using rule 44 (algoritmo -> assigns .)
    MINUS           reduce using rule 44 (algoritmo -> assigns .)
    STRING          reduce using rule 44 (algoritmo -> assigns .)
    STRINGV         reduce using rule 44 (algoritmo -> assigns .)
    BREAK           reduce using rule 44 (algoritmo -> assigns .)


state 148

    (45) algoritmo -> sentenIF .

    END             reduce using rule 45 (algoritmo -> sentenIF .)
    ELSE            reduce using rule 45 (algoritmo -> sentenIF .)
    RETURN          reduce using rule 45 (algoritmo -> sentenIF .)
    ARRAY           reduce using rule 45 (algoritmo -> sentenIF .)
    LSQBRACKET      reduce using rule 45 (algoritmo -> sentenIF .)
    LBRACKET        reduce using rule 45 (algoritmo -> sentenIF .)
    HASH            reduce using rule 45 (algoritmo -> sentenIF .)
    FOR             reduce using rule 45 (algoritmo -> sentenIF .)
    TRUE            reduce using rule 45 (algoritmo -> sentenIF .)
    FALSE           reduce using rule 45 (algoritmo -> sentenIF .)
    NIL             reduce using rule 45 (algoritmo -> sentenIF .)
    IF              reduce using rule 45 (algoritmo -> sentenIF .)
    IDLOCAL         reduce using rule 45 (algoritmo -> sentenIF .)
    IDINSTANCE      reduce using rule 45 (algoritmo -> sentenIF .)
    IDCLASS         reduce using rule 45 (algoritmo -> sentenIF .)
    IDGLOBAL        reduce using rule 45 (algoritmo -> sentenIF .)
    WHILE           reduce using rule 45 (algoritmo -> sentenIF .)
    NUMBER          reduce using rule 45 (algoritmo -> sentenIF .)
    FLOAT           reduce using rule 45 (algoritmo -> sentenIF .)
    NUML            reduce using rule 45 (algoritmo -> sentenIF .)
    MINUS           reduce using rule 45 (algoritmo -> sentenIF .)
    STRING          reduce using rule 45 (algoritmo -> sentenIF .)
    STRINGV         reduce using rule 45 (algoritmo -> sentenIF .)
    BREAK           reduce using rule 45 (algoritmo -> sentenIF .)


state 149

    (46) algoritmo -> sentenifp .

    END             reduce using rule 46 (algoritmo -> sentenifp .)
    ELSE            reduce using rule 46 (algoritmo -> sentenifp .)
    RETURN          reduce using rule 46 (algoritmo -> sentenifp .)
    ARRAY           reduce using rule 46 (algoritmo -> sentenifp .)
    LSQBRACKET      reduce using rule 46 (algoritmo -> sentenifp .)
    LBRACKET        reduce using rule 46 (algoritmo -> sentenifp .)
    HASH            reduce using rule 46 (algoritmo -> sentenifp .)
    FOR             reduce using rule 46 (algoritmo -> sentenifp .)
    TRUE            reduce using rule 46 (algoritmo -> sentenifp .)
    FALSE           reduce using rule 46 (algoritmo -> sentenifp .)
    NIL             reduce using rule 46 (algoritmo -> sentenifp .)
    IF              reduce using rule 46 (algoritmo -> sentenifp .)
    IDLOCAL         reduce using rule 46 (algoritmo -> sentenifp .)
    IDINSTANCE      reduce using rule 46 (algoritmo -> sentenifp .)
    IDCLASS         reduce using rule 46 (algoritmo -> sentenifp .)
    IDGLOBAL        reduce using rule 46 (algoritmo -> sentenifp .)
    WHILE           reduce using rule 46 (algoritmo -> sentenifp .)
    NUMBER          reduce using rule 46 (algoritmo -> sentenifp .)
    FLOAT           reduce using rule 46 (algoritmo -> sentenifp .)
    NUML            reduce using rule 46 (algoritmo -> sentenifp .)
    MINUS           reduce using rule 46 (algoritmo -> sentenifp .)
    STRING          reduce using rule 46 (algoritmo -> sentenifp .)
    STRINGV         reduce using rule 46 (algoritmo -> sentenifp .)
    BREAK           reduce using rule 46 (algoritmo -> sentenifp .)


state 150

    (47) algoritmo -> sentenifelse .

    END             reduce using rule 47 (algoritmo -> sentenifelse .)
    ELSE            reduce using rule 47 (algoritmo -> sentenifelse .)
    RETURN          reduce using rule 47 (algoritmo -> sentenifelse .)
    ARRAY           reduce using rule 47 (algoritmo -> sentenifelse .)
    LSQBRACKET      reduce using rule 47 (algoritmo -> sentenifelse .)
    LBRACKET        reduce using rule 47 (algoritmo -> sentenifelse .)
    HASH            reduce using rule 47 (algoritmo -> sentenifelse .)
    FOR             reduce using rule 47 (algoritmo -> sentenifelse .)
    TRUE            reduce using rule 47 (algoritmo -> sentenifelse .)
    FALSE           reduce using rule 47 (algoritmo -> sentenifelse .)
    NIL             reduce using rule 47 (algoritmo -> sentenifelse .)
    IF              reduce using rule 47 (algoritmo -> sentenifelse .)
    IDLOCAL         reduce using rule 47 (algoritmo -> sentenifelse .)
    IDINSTANCE      reduce using rule 47 (algoritmo -> sentenifelse .)
    IDCLASS         reduce using rule 47 (algoritmo -> sentenifelse .)
    IDGLOBAL        reduce using rule 47 (algoritmo -> sentenifelse .)
    WHILE           reduce using rule 47 (algoritmo -> sentenifelse .)
    NUMBER          reduce using rule 47 (algoritmo -> sentenifelse .)
    FLOAT           reduce using rule 47 (algoritmo -> sentenifelse .)
    NUML            reduce using rule 47 (algoritmo -> sentenifelse .)
    MINUS           reduce using rule 47 (algoritmo -> sentenifelse .)
    STRING          reduce using rule 47 (algoritmo -> sentenifelse .)
    STRINGV         reduce using rule 47 (algoritmo -> sentenifelse .)
    BREAK           reduce using rule 47 (algoritmo -> sentenifelse .)


state 151

    (49) algoritmo -> sentenWHILE .

    END             reduce using rule 49 (algoritmo -> sentenWHILE .)
    ELSE            reduce using rule 49 (algoritmo -> sentenWHILE .)
    RETURN          reduce using rule 49 (algoritmo -> sentenWHILE .)
    ARRAY           reduce using rule 49 (algoritmo -> sentenWHILE .)
    LSQBRACKET      reduce using rule 49 (algoritmo -> sentenWHILE .)
    LBRACKET        reduce using rule 49 (algoritmo -> sentenWHILE .)
    HASH            reduce using rule 49 (algoritmo -> sentenWHILE .)
    FOR             reduce using rule 49 (algoritmo -> sentenWHILE .)
    TRUE            reduce using rule 49 (algoritmo -> sentenWHILE .)
    FALSE           reduce using rule 49 (algoritmo -> sentenWHILE .)
    NIL             reduce using rule 49 (algoritmo -> sentenWHILE .)
    IF              reduce using rule 49 (algoritmo -> sentenWHILE .)
    IDLOCAL         reduce using rule 49 (algoritmo -> sentenWHILE .)
    IDINSTANCE      reduce using rule 49 (algoritmo -> sentenWHILE .)
    IDCLASS         reduce using rule 49 (algoritmo -> sentenWHILE .)
    IDGLOBAL        reduce using rule 49 (algoritmo -> sentenWHILE .)
    WHILE           reduce using rule 49 (algoritmo -> sentenWHILE .)
    NUMBER          reduce using rule 49 (algoritmo -> sentenWHILE .)
    FLOAT           reduce using rule 49 (algoritmo -> sentenWHILE .)
    NUML            reduce using rule 49 (algoritmo -> sentenWHILE .)
    MINUS           reduce using rule 49 (algoritmo -> sentenWHILE .)
    STRING          reduce using rule 49 (algoritmo -> sentenWHILE .)
    STRINGV         reduce using rule 49 (algoritmo -> sentenWHILE .)
    BREAK           reduce using rule 49 (algoritmo -> sentenWHILE .)


state 152

    (89) metodocadena -> cadena . POINT EMPTY INTERROGATIVE
    (91) metodocadena -> cadena . POINT LENGTH

    POINT           shift and go to state 61


state 153

    (90) metodocadena -> string . POINT EMPTY INTERROGATIVE
    (92) metodocadena -> string . POINT LENGTH

    POINT           shift and go to state 60


state 154

    (52) sentenWHILE -> WHILE boolean algoritmo . END

    END             shift and go to state 175


state 155

    (124) funcion1 -> DEF IDLOCAL LPARENTHESIS . fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (125) funcion1 -> DEF IDLOCAL LPARENTHESIS . fcontenido RPARENTHESIS algoritmo END
    (135) funcion2 -> DEF IDLOCAL LPARENTHESIS . valuedefect RPARENTHESIS algoritmo RETURN variables END
    (136) funcion2 -> DEF IDLOCAL LPARENTHESIS . valuedefect RPARENTHESIS algoritmo END
    (137) funcion3 -> DEF IDLOCAL LPARENTHESIS . MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END
    (138) funcion3 -> DEF IDLOCAL LPARENTHESIS . MULT IDLOCAL RPARENTHESIS algoritmo END
    (126) fcontenido -> . variables
    (127) fcontenido -> . variables COMMA fcontenido
    (132) valuedefect -> . variables ASSIGN values
    (133) valuedefect -> . variables COMMA fcontenido
    (134) valuedefect -> . variables COMMA valuedefect
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    MULT            shift and go to state 179
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    fcontenido                     shift and go to state 176
    valuedefect                    shift and go to state 177
    variables                      shift and go to state 178

state 156

    (90) metodocadena -> string POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    END             reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    ELSE            reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    RETURN          reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    ARRAY           reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    LSQBRACKET      reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    LBRACKET        reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    HASH            reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    FOR             reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    TRUE            reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    FALSE           reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    NIL             reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IF              reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDLOCAL         reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDINSTANCE      reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDCLASS         reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDGLOBAL        reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    WHILE           reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    NUMBER          reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    FLOAT           reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    NUML            reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    MINUS           reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    STRING          reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    STRINGV         reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    BREAK           reduce using rule 90 (metodocadena -> string POINT EMPTY INTERROGATIVE .)


state 157

    (89) metodocadena -> cadena POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    END             reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    ELSE            reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    RETURN          reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    ARRAY           reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    LSQBRACKET      reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    LBRACKET        reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    HASH            reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    FOR             reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    TRUE            reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    FALSE           reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    NIL             reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IF              reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDLOCAL         reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDINSTANCE      reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDCLASS         reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDGLOBAL        reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    WHILE           reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    NUMBER          reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    FLOAT           reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    NUML            reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    MINUS           reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    STRING          reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    STRINGV         reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    BREAK           reduce using rule 89 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)


state 158

    (102) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS . arraycontent RPARENTHESIS
    (98) arraycontent -> . factor
    (99) arraycontent -> . string
    (100) arraycontent -> . factor COMMA arraycontent
    (101) arraycontent -> . string COMMA arraycontent
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (85) string -> . STRINGV

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    STRINGV         shift and go to state 30

    arraycontent                   shift and go to state 180
    factor                         shift and go to state 75
    string                         shift and go to state 76

state 159

    (103) metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .

    $end            reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    END             reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    ELSE            reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    RETURN          reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    ARRAY           reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    LSQBRACKET      reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    LBRACKET        reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    HASH            reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    FOR             reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    TRUE            reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    FALSE           reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    NIL             reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IF              reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDLOCAL         reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDINSTANCE      reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDCLASS         reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDGLOBAL        reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    WHILE           reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    NUMBER          reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    FLOAT           reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    NUML            reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    MINUS           reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    STRING          reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    STRINGV         reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    BREAK           reduce using rule 103 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)


state 160

    (110) metodohash -> variables ASSIGN . hash POINT LENGTH
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW

    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36

    hash                           shift and go to state 181

state 161

    (110) metodohash -> variables ASSIGN hash POINT . LENGTH

    LENGTH          shift and go to state 182


state 162

    (87) cadena -> STRING POINT NEW LPARENTHESIS . string RPARENTHESIS
    (85) string -> . STRINGV

    STRINGV         shift and go to state 30

    string                         shift and go to state 183

state 163

    (88) cadena -> STRING LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    END             reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    ELSE            reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    RETURN          reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    ARRAY           reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    LSQBRACKET      reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    LBRACKET        reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    HASH            reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    FOR             reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    TRUE            reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    FALSE           reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    NIL             reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IF              reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDLOCAL         reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDINSTANCE      reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDCLASS         reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDGLOBAL        reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    WHILE           reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    NUMBER          reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    FLOAT           reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    NUML            reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    MINUS           reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    STRING          reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    STRINGV         reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    BREAK           reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 88 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)


state 164

    (94) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor RPARENTHESIS
    (95) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor COMMA arraycontent RPARENTHESIS
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    factor                         shift and go to state 184

state 165

    (96) arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    END             reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    ELSE            reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    RETURN          reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    ARRAY           reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    LBRACKET        reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    HASH            reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    FOR             reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    TRUE            reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    FALSE           reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    NIL             reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IF              reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDLOCAL         reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDINSTANCE      reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDCLASS         reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDGLOBAL        reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    WHILE           reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    NUMBER          reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    FLOAT           reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    NUML            reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    MINUS           reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    STRING          reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    STRINGV         reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    BREAK           reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    RPARENTHESIS    reduce using rule 96 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)


state 166

    (100) arraycontent -> factor COMMA arraycontent .

    RSQBRACKET      reduce using rule 100 (arraycontent -> factor COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 100 (arraycontent -> factor COMMA arraycontent .)


state 167

    (101) arraycontent -> string COMMA arraycontent .

    RSQBRACKET      reduce using rule 101 (arraycontent -> string COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 101 (arraycontent -> string COMMA arraycontent .)


state 168

    (106) hashcontent -> string ASSIGN GREATER . hashcontentvalue
    (107) hashcontent -> string ASSIGN GREATER . hashcontentvalue COMMA hashcontent
    (108) hashcontentvalue -> . factor
    (109) hashcontentvalue -> . string
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (85) string -> . STRINGV

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    STRINGV         shift and go to state 30

    string                         shift and go to state 185
    hashcontentvalue               shift and go to state 186
    factor                         shift and go to state 187

state 169

    (118) estructurasControl -> FOR IDLOCAL IN factor . POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> FOR IDLOCAL IN factor . POINT POINT factor DO forcontent END

    POINT           shift and go to state 188


state 170

    (54) sentenIF -> IF variables comparador term .
    (55) sentenifp -> IF variables comparador term . algoritmo END
    (56) sentenifelse -> IF variables comparador term . algoritmo ELSE algoritmo END
    (37) algoritmo -> . expression
    (38) algoritmo -> . metodocadena
    (39) algoritmo -> . arreglo
    (40) algoritmo -> . metodosarreglo
    (41) algoritmo -> . hash
    (42) algoritmo -> . estructurasControl
    (43) algoritmo -> . boolean
    (44) algoritmo -> . assigns
    (45) algoritmo -> . sentenIF
    (46) algoritmo -> . sentenifp
    (47) algoritmo -> . sentenifelse
    (48) algoritmo -> . variables
    (49) algoritmo -> . sentenWHILE
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (74) term -> . factor
    (75) term -> . variables
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (85) string -> . STRINGV
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for LSQBRACKET resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for HASH resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IDLOCAL resolved as shift
  ! shift/reduce conflict for IDINSTANCE resolved as shift
  ! shift/reduce conflict for IDCLASS resolved as shift
  ! shift/reduce conflict for IDGLOBAL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for STRINGV resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for NUML resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 54 (sentenIF -> IF variables comparador term .)
    END             reduce using rule 54 (sentenIF -> IF variables comparador term .)
    ELSE            reduce using rule 54 (sentenIF -> IF variables comparador term .)
    RETURN          reduce using rule 54 (sentenIF -> IF variables comparador term .)
    BREAK           reduce using rule 54 (sentenIF -> IF variables comparador term .)
    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    FOR             shift and go to state 44
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IF              shift and go to state 45
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    WHILE           shift and go to state 48
    STRING          shift and go to state 31
    STRINGV         shift and go to state 30
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

  ! ARRAY           [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! LSQBRACKET      [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! LBRACKET        [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! HASH            [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! FOR             [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! TRUE            [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! FALSE           [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! NIL             [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! IF              [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! IDLOCAL         [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! IDINSTANCE      [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! IDCLASS         [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! IDGLOBAL        [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! WHILE           [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! NUMBER          [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! FLOAT           [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! NUML            [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! MINUS           [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! STRING          [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]
  ! STRINGV         [ reduce using rule 54 (sentenIF -> IF variables comparador term .) ]

    variables                      shift and go to state 137
    term                           shift and go to state 28
    algoritmo                      shift and go to state 189
    expression                     shift and go to state 140
    metodocadena                   shift and go to state 141
    arreglo                        shift and go to state 142
    metodosarreglo                 shift and go to state 143
    hash                           shift and go to state 144
    estructurasControl             shift and go to state 145
    boolean                        shift and go to state 146
    assigns                        shift and go to state 147
    sentenIF                       shift and go to state 148
    sentenifp                      shift and go to state 149
    sentenifelse                   shift and go to state 150
    sentenWHILE                    shift and go to state 151
    cadena                         shift and go to state 152
    string                         shift and go to state 153
    factor                         shift and go to state 33

state 171

    (61) assigns -> variables ASSIGN . expression
    (62) assigns -> variables ASSIGN . variables
    (63) assigns -> variables ASSIGN . boolean
    (64) assigns -> variables ASSIGN . asignar
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (74) term -> . factor
    (75) term -> . variables
    (85) string -> . STRINGV
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (110) metodohash -> . variables ASSIGN hash POINT LENGTH
    (111) metodohash -> . variables POINT LENGTH
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    STRINGV         shift and go to state 30
    STRING          shift and go to state 31
    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    variables                      shift and go to state 108
    expression                     shift and go to state 110
    boolean                        shift and go to state 111
    asignar                        shift and go to state 112
    term                           shift and go to state 28
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    factor                         shift and go to state 33

state 172

    (50) sentenWHILE -> WHILE variables comparador variables . algoritmo END
    (75) term -> variables .
    (37) algoritmo -> . expression
    (38) algoritmo -> . metodocadena
    (39) algoritmo -> . arreglo
    (40) algoritmo -> . metodosarreglo
    (41) algoritmo -> . hash
    (42) algoritmo -> . estructurasControl
    (43) algoritmo -> . boolean
    (44) algoritmo -> . assigns
    (45) algoritmo -> . sentenIF
    (46) algoritmo -> . sentenifp
    (47) algoritmo -> . sentenifelse
    (48) algoritmo -> . variables
    (49) algoritmo -> . sentenWHILE
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (74) term -> . factor
    (75) term -> . variables
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (85) string -> . STRINGV
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for LSQBRACKET resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for HASH resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IDLOCAL resolved as shift
  ! shift/reduce conflict for IDINSTANCE resolved as shift
  ! shift/reduce conflict for IDCLASS resolved as shift
  ! shift/reduce conflict for IDGLOBAL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for STRINGV resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for NUML resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            reduce using rule 75 (term -> variables .)
    DIVISION        reduce using rule 75 (term -> variables .)
    MOD             reduce using rule 75 (term -> variables .)
    MULT            reduce using rule 75 (term -> variables .)
    EXP             reduce using rule 75 (term -> variables .)
    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    FOR             shift and go to state 44
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IF              shift and go to state 45
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    WHILE           shift and go to state 48
    STRING          shift and go to state 31
    STRINGV         shift and go to state 30
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

  ! MINUS           [ reduce using rule 75 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 75 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 75 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 75 (term -> variables .) ]
  ! HASH            [ reduce using rule 75 (term -> variables .) ]
  ! FOR             [ reduce using rule 75 (term -> variables .) ]
  ! TRUE            [ reduce using rule 75 (term -> variables .) ]
  ! FALSE           [ reduce using rule 75 (term -> variables .) ]
  ! NIL             [ reduce using rule 75 (term -> variables .) ]
  ! IF              [ reduce using rule 75 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 75 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 75 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 75 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 75 (term -> variables .) ]
  ! WHILE           [ reduce using rule 75 (term -> variables .) ]
  ! STRING          [ reduce using rule 75 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 75 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 75 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 75 (term -> variables .) ]
  ! NUML            [ reduce using rule 75 (term -> variables .) ]

    variables                      shift and go to state 137
    algoritmo                      shift and go to state 190
    expression                     shift and go to state 140
    metodocadena                   shift and go to state 141
    arreglo                        shift and go to state 142
    metodosarreglo                 shift and go to state 143
    hash                           shift and go to state 144
    estructurasControl             shift and go to state 145
    boolean                        shift and go to state 146
    assigns                        shift and go to state 147
    sentenIF                       shift and go to state 148
    sentenifp                      shift and go to state 149
    sentenifelse                   shift and go to state 150
    sentenWHILE                    shift and go to state 151
    term                           shift and go to state 28
    cadena                         shift and go to state 152
    string                         shift and go to state 153
    factor                         shift and go to state 33

state 173

    (51) sentenWHILE -> WHILE variables comparador expression . algoritmo END
    (69) expression -> expression . PLUS term
    (70) expression -> expression . PLUS variables
    (71) expression -> expression . MINUS variables
    (72) expression -> expression . MINUS term
    (81) expression -> expression . DIVISION term
    (82) expression -> expression . MOD term
    (83) expression -> expression . MULT term
    (84) expression -> expression . EXP term
    (37) algoritmo -> . expression
    (38) algoritmo -> . metodocadena
    (39) algoritmo -> . arreglo
    (40) algoritmo -> . metodosarreglo
    (41) algoritmo -> . hash
    (42) algoritmo -> . estructurasControl
    (43) algoritmo -> . boolean
    (44) algoritmo -> . assigns
    (45) algoritmo -> . sentenIF
    (46) algoritmo -> . sentenifp
    (47) algoritmo -> . sentenifelse
    (48) algoritmo -> . variables
    (49) algoritmo -> . sentenWHILE
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (74) term -> . factor
    (75) term -> . variables
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (85) string -> . STRINGV
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    PLUS            shift and go to state 54
    MINUS           shift and go to state 192
    DIVISION        shift and go to state 56
    MOD             shift and go to state 57
    MULT            shift and go to state 58
    EXP             shift and go to state 59
    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    FOR             shift and go to state 44
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IF              shift and go to state 45
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    WHILE           shift and go to state 48
    STRING          shift and go to state 31
    STRINGV         shift and go to state 30
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53

    variables                      shift and go to state 137
    expression                     shift and go to state 140
    algoritmo                      shift and go to state 191
    term                           shift and go to state 28
    metodocadena                   shift and go to state 141
    arreglo                        shift and go to state 142
    metodosarreglo                 shift and go to state 143
    hash                           shift and go to state 144
    estructurasControl             shift and go to state 145
    boolean                        shift and go to state 146
    assigns                        shift and go to state 147
    sentenIF                       shift and go to state 148
    sentenifp                      shift and go to state 149
    sentenifelse                   shift and go to state 150
    sentenWHILE                    shift and go to state 151
    cadena                         shift and go to state 152
    string                         shift and go to state 153
    factor                         shift and go to state 33

state 174

    (53) sentenWHILE -> WHILE variables algoritmo END .

    $end            reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    END             reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    ELSE            reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    RETURN          reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    ARRAY           reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    LSQBRACKET      reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    LBRACKET        reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    HASH            reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    FOR             reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    TRUE            reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    FALSE           reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    NIL             reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    IF              reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    IDLOCAL         reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    IDINSTANCE      reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    IDCLASS         reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    IDGLOBAL        reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    WHILE           reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    NUMBER          reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    FLOAT           reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    NUML            reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    MINUS           reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    STRING          reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    STRINGV         reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)
    BREAK           reduce using rule 53 (sentenWHILE -> WHILE variables algoritmo END .)


state 175

    (52) sentenWHILE -> WHILE boolean algoritmo END .

    $end            reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    END             reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    ELSE            reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    RETURN          reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    ARRAY           reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    LSQBRACKET      reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    LBRACKET        reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    HASH            reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    FOR             reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    TRUE            reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    FALSE           reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    NIL             reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    IF              reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDLOCAL         reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDINSTANCE      reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDCLASS         reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDGLOBAL        reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    WHILE           reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    NUMBER          reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    FLOAT           reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    NUML            reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    MINUS           reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    STRING          reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    STRINGV         reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)
    BREAK           reduce using rule 52 (sentenWHILE -> WHILE boolean algoritmo END .)


state 176

    (124) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido . RPARENTHESIS algoritmo RETURN IDLOCAL END
    (125) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido . RPARENTHESIS algoritmo END

    RPARENTHESIS    shift and go to state 193


state 177

    (135) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect . RPARENTHESIS algoritmo RETURN variables END
    (136) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect . RPARENTHESIS algoritmo END

    RPARENTHESIS    shift and go to state 194


state 178

    (126) fcontenido -> variables .
    (127) fcontenido -> variables . COMMA fcontenido
    (132) valuedefect -> variables . ASSIGN values
    (133) valuedefect -> variables . COMMA fcontenido
    (134) valuedefect -> variables . COMMA valuedefect

    RPARENTHESIS    reduce using rule 126 (fcontenido -> variables .)
    COMMA           shift and go to state 195
    ASSIGN          shift and go to state 196


state 179

    (137) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT . IDLOCAL RPARENTHESIS algoritmo RETURN variables END
    (138) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT . IDLOCAL RPARENTHESIS algoritmo END

    IDLOCAL         shift and go to state 197


state 180

    (102) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 198


state 181

    (110) metodohash -> variables ASSIGN hash . POINT LENGTH

    POINT           shift and go to state 161


state 182

    (110) metodohash -> variables ASSIGN hash POINT LENGTH .

    $end            reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    END             reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    ELSE            reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    RETURN          reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    ARRAY           reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    LSQBRACKET      reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    LBRACKET        reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    HASH            reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    FOR             reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    TRUE            reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    FALSE           reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    NIL             reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IF              reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDLOCAL         reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDINSTANCE      reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDCLASS         reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDGLOBAL        reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    WHILE           reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    NUMBER          reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    FLOAT           reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    NUML            reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    MINUS           reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    STRING          reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    STRINGV         reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    BREAK           reduce using rule 110 (metodohash -> variables ASSIGN hash POINT LENGTH .)


state 183

    (87) cadena -> STRING POINT NEW LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 199


state 184

    (94) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . RPARENTHESIS
    (95) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . COMMA arraycontent RPARENTHESIS

    RPARENTHESIS    shift and go to state 200
    COMMA           shift and go to state 201


state 185

    (109) hashcontentvalue -> string .

    COMMA           reduce using rule 109 (hashcontentvalue -> string .)
    RBRACKET        reduce using rule 109 (hashcontentvalue -> string .)


state 186

    (106) hashcontent -> string ASSIGN GREATER hashcontentvalue .
    (107) hashcontent -> string ASSIGN GREATER hashcontentvalue . COMMA hashcontent

    RBRACKET        reduce using rule 106 (hashcontent -> string ASSIGN GREATER hashcontentvalue .)
    COMMA           shift and go to state 202


state 187

    (108) hashcontentvalue -> factor .

    COMMA           reduce using rule 108 (hashcontentvalue -> factor .)
    RBRACKET        reduce using rule 108 (hashcontentvalue -> factor .)


state 188

    (118) estructurasControl -> FOR IDLOCAL IN factor POINT . POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> FOR IDLOCAL IN factor POINT . POINT factor DO forcontent END

    POINT           shift and go to state 203


state 189

    (55) sentenifp -> IF variables comparador term algoritmo . END
    (56) sentenifelse -> IF variables comparador term algoritmo . ELSE algoritmo END

    END             shift and go to state 204
    ELSE            shift and go to state 205


state 190

    (50) sentenWHILE -> WHILE variables comparador variables algoritmo . END

    END             shift and go to state 206


state 191

    (51) sentenWHILE -> WHILE variables comparador expression algoritmo . END

    END             shift and go to state 207


state 192

    (71) expression -> expression MINUS . variables
    (72) expression -> expression MINUS . term
    (79) factor -> MINUS . NUMBER
    (80) factor -> MINUS . FLOAT
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (74) term -> . factor
    (75) term -> . variables
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 208
    FLOAT           shift and go to state 209
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    variables                      shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 33

state 193

    (124) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS . algoritmo RETURN IDLOCAL END
    (125) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS . algoritmo END
    (37) algoritmo -> . expression
    (38) algoritmo -> . metodocadena
    (39) algoritmo -> . arreglo
    (40) algoritmo -> . metodosarreglo
    (41) algoritmo -> . hash
    (42) algoritmo -> . estructurasControl
    (43) algoritmo -> . boolean
    (44) algoritmo -> . assigns
    (45) algoritmo -> . sentenIF
    (46) algoritmo -> . sentenifp
    (47) algoritmo -> . sentenifelse
    (48) algoritmo -> . variables
    (49) algoritmo -> . sentenWHILE
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (74) term -> . factor
    (75) term -> . variables
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (85) string -> . STRINGV
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    FOR             shift and go to state 44
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IF              shift and go to state 45
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    WHILE           shift and go to state 48
    STRING          shift and go to state 31
    STRINGV         shift and go to state 30
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    algoritmo                      shift and go to state 210
    expression                     shift and go to state 140
    metodocadena                   shift and go to state 141
    arreglo                        shift and go to state 142
    metodosarreglo                 shift and go to state 143
    hash                           shift and go to state 144
    estructurasControl             shift and go to state 145
    boolean                        shift and go to state 146
    assigns                        shift and go to state 147
    sentenIF                       shift and go to state 148
    sentenifp                      shift and go to state 149
    sentenifelse                   shift and go to state 150
    variables                      shift and go to state 137
    sentenWHILE                    shift and go to state 151
    term                           shift and go to state 28
    cadena                         shift and go to state 152
    string                         shift and go to state 153
    factor                         shift and go to state 33

state 194

    (135) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS . algoritmo RETURN variables END
    (136) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS . algoritmo END
    (37) algoritmo -> . expression
    (38) algoritmo -> . metodocadena
    (39) algoritmo -> . arreglo
    (40) algoritmo -> . metodosarreglo
    (41) algoritmo -> . hash
    (42) algoritmo -> . estructurasControl
    (43) algoritmo -> . boolean
    (44) algoritmo -> . assigns
    (45) algoritmo -> . sentenIF
    (46) algoritmo -> . sentenifp
    (47) algoritmo -> . sentenifelse
    (48) algoritmo -> . variables
    (49) algoritmo -> . sentenWHILE
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (74) term -> . factor
    (75) term -> . variables
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (85) string -> . STRINGV
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    FOR             shift and go to state 44
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IF              shift and go to state 45
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    WHILE           shift and go to state 48
    STRING          shift and go to state 31
    STRINGV         shift and go to state 30
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    algoritmo                      shift and go to state 211
    variables                      shift and go to state 137
    expression                     shift and go to state 140
    metodocadena                   shift and go to state 141
    arreglo                        shift and go to state 142
    metodosarreglo                 shift and go to state 143
    hash                           shift and go to state 144
    estructurasControl             shift and go to state 145
    boolean                        shift and go to state 146
    assigns                        shift and go to state 147
    sentenIF                       shift and go to state 148
    sentenifp                      shift and go to state 149
    sentenifelse                   shift and go to state 150
    sentenWHILE                    shift and go to state 151
    term                           shift and go to state 28
    cadena                         shift and go to state 152
    string                         shift and go to state 153
    factor                         shift and go to state 33

state 195

    (127) fcontenido -> variables COMMA . fcontenido
    (133) valuedefect -> variables COMMA . fcontenido
    (134) valuedefect -> variables COMMA . valuedefect
    (126) fcontenido -> . variables
    (127) fcontenido -> . variables COMMA fcontenido
    (132) valuedefect -> . variables ASSIGN values
    (133) valuedefect -> . variables COMMA fcontenido
    (134) valuedefect -> . variables COMMA valuedefect
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    variables                      shift and go to state 178
    fcontenido                     shift and go to state 212
    valuedefect                    shift and go to state 213

state 196

    (132) valuedefect -> variables ASSIGN . values
    (128) values -> . term
    (129) values -> . boolean
    (130) values -> . cadena
    (131) values -> . arreglo
    (74) term -> . factor
    (75) term -> . variables
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    STRING          shift and go to state 31
    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    variables                      shift and go to state 87
    values                         shift and go to state 214
    term                           shift and go to state 215
    boolean                        shift and go to state 216
    cadena                         shift and go to state 217
    arreglo                        shift and go to state 218
    factor                         shift and go to state 33

state 197

    (137) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL . RPARENTHESIS algoritmo RETURN variables END
    (138) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL . RPARENTHESIS algoritmo END

    RPARENTHESIS    shift and go to state 219


state 198

    (102) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .

    $end            reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    END             reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    ELSE            reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    RETURN          reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    ARRAY           reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    LSQBRACKET      reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    LBRACKET        reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    HASH            reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    FOR             reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    TRUE            reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    FALSE           reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    NIL             reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IF              reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDLOCAL         reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDINSTANCE      reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDCLASS         reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDGLOBAL        reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    WHILE           reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    NUMBER          reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    FLOAT           reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    NUML            reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    MINUS           reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    STRING          reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    STRINGV         reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    BREAK           reduce using rule 102 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)


state 199

    (87) cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    END             reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    ELSE            reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    RETURN          reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    ARRAY           reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    LSQBRACKET      reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    LBRACKET        reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    HASH            reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    FOR             reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    TRUE            reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    FALSE           reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    NIL             reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IF              reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDLOCAL         reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDINSTANCE      reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDCLASS         reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDGLOBAL        reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    WHILE           reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    NUMBER          reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    FLOAT           reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    NUML            reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    MINUS           reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    STRING          reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    STRINGV         reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    BREAK           reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 87 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)


state 200

    (94) arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .

    POINT           reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    LSQBRACKET      reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    $end            reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    END             reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    ELSE            reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    RETURN          reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    ARRAY           reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    LBRACKET        reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    HASH            reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    FOR             reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    TRUE            reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    FALSE           reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    NIL             reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IF              reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDLOCAL         reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDINSTANCE      reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDCLASS         reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDGLOBAL        reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    WHILE           reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    NUMBER          reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    FLOAT           reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    NUML            reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    MINUS           reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    STRING          reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    STRINGV         reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    BREAK           reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 94 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)


state 201

    (95) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA . arraycontent RPARENTHESIS
    (98) arraycontent -> . factor
    (99) arraycontent -> . string
    (100) arraycontent -> . factor COMMA arraycontent
    (101) arraycontent -> . string COMMA arraycontent
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (85) string -> . STRINGV

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    STRINGV         shift and go to state 30

    factor                         shift and go to state 75
    arraycontent                   shift and go to state 220
    string                         shift and go to state 76

state 202

    (107) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA . hashcontent
    (106) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (107) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (85) string -> . STRINGV

    STRINGV         shift and go to state 30

    string                         shift and go to state 78
    hashcontent                    shift and go to state 221

state 203

    (118) estructurasControl -> FOR IDLOCAL IN factor POINT POINT . factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> FOR IDLOCAL IN factor POINT POINT . factor DO forcontent END
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    factor                         shift and go to state 222

state 204

    (55) sentenifp -> IF variables comparador term algoritmo END .

    $end            reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    END             reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    ELSE            reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    RETURN          reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    ARRAY           reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    LSQBRACKET      reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    LBRACKET        reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    HASH            reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    FOR             reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    TRUE            reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    FALSE           reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    NIL             reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    IF              reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    IDLOCAL         reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    IDINSTANCE      reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    IDCLASS         reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    IDGLOBAL        reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    WHILE           reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    NUMBER          reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    FLOAT           reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    NUML            reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    MINUS           reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    STRING          reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    STRINGV         reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)
    BREAK           reduce using rule 55 (sentenifp -> IF variables comparador term algoritmo END .)


state 205

    (56) sentenifelse -> IF variables comparador term algoritmo ELSE . algoritmo END
    (37) algoritmo -> . expression
    (38) algoritmo -> . metodocadena
    (39) algoritmo -> . arreglo
    (40) algoritmo -> . metodosarreglo
    (41) algoritmo -> . hash
    (42) algoritmo -> . estructurasControl
    (43) algoritmo -> . boolean
    (44) algoritmo -> . assigns
    (45) algoritmo -> . sentenIF
    (46) algoritmo -> . sentenifp
    (47) algoritmo -> . sentenifelse
    (48) algoritmo -> . variables
    (49) algoritmo -> . sentenWHILE
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (74) term -> . factor
    (75) term -> . variables
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (85) string -> . STRINGV
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    FOR             shift and go to state 44
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IF              shift and go to state 45
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    WHILE           shift and go to state 48
    STRING          shift and go to state 31
    STRINGV         shift and go to state 30
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    variables                      shift and go to state 137
    term                           shift and go to state 28
    algoritmo                      shift and go to state 223
    expression                     shift and go to state 140
    metodocadena                   shift and go to state 141
    arreglo                        shift and go to state 142
    metodosarreglo                 shift and go to state 143
    hash                           shift and go to state 144
    estructurasControl             shift and go to state 145
    boolean                        shift and go to state 146
    assigns                        shift and go to state 147
    sentenIF                       shift and go to state 148
    sentenifp                      shift and go to state 149
    sentenifelse                   shift and go to state 150
    sentenWHILE                    shift and go to state 151
    cadena                         shift and go to state 152
    string                         shift and go to state 153
    factor                         shift and go to state 33

state 206

    (50) sentenWHILE -> WHILE variables comparador variables algoritmo END .

    $end            reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    END             reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    ELSE            reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    RETURN          reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    ARRAY           reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    LSQBRACKET      reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    LBRACKET        reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    HASH            reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    FOR             reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    TRUE            reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    FALSE           reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    NIL             reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IF              reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDLOCAL         reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDINSTANCE      reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDCLASS         reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDGLOBAL        reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    WHILE           reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    NUMBER          reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    FLOAT           reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    NUML            reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    MINUS           reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    STRING          reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    STRINGV         reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    BREAK           reduce using rule 50 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)


state 207

    (51) sentenWHILE -> WHILE variables comparador expression algoritmo END .

    $end            reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    END             reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    ELSE            reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    RETURN          reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    ARRAY           reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    LSQBRACKET      reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    LBRACKET        reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    HASH            reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    FOR             reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    TRUE            reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    FALSE           reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    NIL             reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IF              reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDLOCAL         reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDINSTANCE      reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDCLASS         reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDGLOBAL        reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    WHILE           reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    NUMBER          reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    FLOAT           reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    NUML            reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    MINUS           reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    STRING          reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    STRINGV         reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    BREAK           reduce using rule 51 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)


state 208

    (79) factor -> MINUS NUMBER .
    (76) factor -> NUMBER .

  ! reduce/reduce conflict for PLUS resolved using rule 76 (factor -> NUMBER .)
  ! reduce/reduce conflict for MINUS resolved using rule 76 (factor -> NUMBER .)
  ! reduce/reduce conflict for DIVISION resolved using rule 76 (factor -> NUMBER .)
  ! reduce/reduce conflict for MOD resolved using rule 76 (factor -> NUMBER .)
  ! reduce/reduce conflict for MULT resolved using rule 76 (factor -> NUMBER .)
  ! reduce/reduce conflict for EXP resolved using rule 76 (factor -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 76 (factor -> NUMBER .)
    PLUS            reduce using rule 76 (factor -> NUMBER .)
    MINUS           reduce using rule 76 (factor -> NUMBER .)
    DIVISION        reduce using rule 76 (factor -> NUMBER .)
    MOD             reduce using rule 76 (factor -> NUMBER .)
    MULT            reduce using rule 76 (factor -> NUMBER .)
    EXP             reduce using rule 76 (factor -> NUMBER .)
    ARRAY           reduce using rule 76 (factor -> NUMBER .)
    LSQBRACKET      reduce using rule 76 (factor -> NUMBER .)
    LBRACKET        reduce using rule 76 (factor -> NUMBER .)
    HASH            reduce using rule 76 (factor -> NUMBER .)
    FOR             reduce using rule 76 (factor -> NUMBER .)
    TRUE            reduce using rule 76 (factor -> NUMBER .)
    FALSE           reduce using rule 76 (factor -> NUMBER .)
    NIL             reduce using rule 76 (factor -> NUMBER .)
    IF              reduce using rule 76 (factor -> NUMBER .)
    IDLOCAL         reduce using rule 76 (factor -> NUMBER .)
    IDINSTANCE      reduce using rule 76 (factor -> NUMBER .)
    IDCLASS         reduce using rule 76 (factor -> NUMBER .)
    IDGLOBAL        reduce using rule 76 (factor -> NUMBER .)
    WHILE           reduce using rule 76 (factor -> NUMBER .)
    STRING          reduce using rule 76 (factor -> NUMBER .)
    STRINGV         reduce using rule 76 (factor -> NUMBER .)
    NUMBER          reduce using rule 76 (factor -> NUMBER .)
    FLOAT           reduce using rule 76 (factor -> NUMBER .)
    NUML            reduce using rule 76 (factor -> NUMBER .)
    END             reduce using rule 76 (factor -> NUMBER .)

  ! PLUS            [ reduce using rule 79 (factor -> MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 79 (factor -> MINUS NUMBER .) ]
  ! DIVISION        [ reduce using rule 79 (factor -> MINUS NUMBER .) ]
  ! MOD             [ reduce using rule 79 (factor -> MINUS NUMBER .) ]
  ! MULT            [ reduce using rule 79 (factor -> MINUS NUMBER .) ]
  ! EXP             [ reduce using rule 79 (factor -> MINUS NUMBER .) ]
  ! END             [ reduce using rule 79 (factor -> MINUS NUMBER .) ]


state 209

    (80) factor -> MINUS FLOAT .
    (77) factor -> FLOAT .

  ! reduce/reduce conflict for PLUS resolved using rule 77 (factor -> FLOAT .)
  ! reduce/reduce conflict for MINUS resolved using rule 77 (factor -> FLOAT .)
  ! reduce/reduce conflict for DIVISION resolved using rule 77 (factor -> FLOAT .)
  ! reduce/reduce conflict for MOD resolved using rule 77 (factor -> FLOAT .)
  ! reduce/reduce conflict for MULT resolved using rule 77 (factor -> FLOAT .)
  ! reduce/reduce conflict for EXP resolved using rule 77 (factor -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 77 (factor -> FLOAT .)
    PLUS            reduce using rule 77 (factor -> FLOAT .)
    MINUS           reduce using rule 77 (factor -> FLOAT .)
    DIVISION        reduce using rule 77 (factor -> FLOAT .)
    MOD             reduce using rule 77 (factor -> FLOAT .)
    MULT            reduce using rule 77 (factor -> FLOAT .)
    EXP             reduce using rule 77 (factor -> FLOAT .)
    ARRAY           reduce using rule 77 (factor -> FLOAT .)
    LSQBRACKET      reduce using rule 77 (factor -> FLOAT .)
    LBRACKET        reduce using rule 77 (factor -> FLOAT .)
    HASH            reduce using rule 77 (factor -> FLOAT .)
    FOR             reduce using rule 77 (factor -> FLOAT .)
    TRUE            reduce using rule 77 (factor -> FLOAT .)
    FALSE           reduce using rule 77 (factor -> FLOAT .)
    NIL             reduce using rule 77 (factor -> FLOAT .)
    IF              reduce using rule 77 (factor -> FLOAT .)
    IDLOCAL         reduce using rule 77 (factor -> FLOAT .)
    IDINSTANCE      reduce using rule 77 (factor -> FLOAT .)
    IDCLASS         reduce using rule 77 (factor -> FLOAT .)
    IDGLOBAL        reduce using rule 77 (factor -> FLOAT .)
    WHILE           reduce using rule 77 (factor -> FLOAT .)
    STRING          reduce using rule 77 (factor -> FLOAT .)
    STRINGV         reduce using rule 77 (factor -> FLOAT .)
    NUMBER          reduce using rule 77 (factor -> FLOAT .)
    FLOAT           reduce using rule 77 (factor -> FLOAT .)
    NUML            reduce using rule 77 (factor -> FLOAT .)
    END             reduce using rule 77 (factor -> FLOAT .)

  ! PLUS            [ reduce using rule 80 (factor -> MINUS FLOAT .) ]
  ! MINUS           [ reduce using rule 80 (factor -> MINUS FLOAT .) ]
  ! DIVISION        [ reduce using rule 80 (factor -> MINUS FLOAT .) ]
  ! MOD             [ reduce using rule 80 (factor -> MINUS FLOAT .) ]
  ! MULT            [ reduce using rule 80 (factor -> MINUS FLOAT .) ]
  ! EXP             [ reduce using rule 80 (factor -> MINUS FLOAT .) ]
  ! END             [ reduce using rule 80 (factor -> MINUS FLOAT .) ]


state 210

    (124) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo . RETURN IDLOCAL END
    (125) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo . END

    RETURN          shift and go to state 224
    END             shift and go to state 225


state 211

    (135) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo . RETURN variables END
    (136) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo . END

    RETURN          shift and go to state 226
    END             shift and go to state 227


state 212

    (127) fcontenido -> variables COMMA fcontenido .
    (133) valuedefect -> variables COMMA fcontenido .

  ! reduce/reduce conflict for RPARENTHESIS resolved using rule 127 (fcontenido -> variables COMMA fcontenido .)
    RPARENTHESIS    reduce using rule 127 (fcontenido -> variables COMMA fcontenido .)

  ! RPARENTHESIS    [ reduce using rule 133 (valuedefect -> variables COMMA fcontenido .) ]


state 213

    (134) valuedefect -> variables COMMA valuedefect .

    RPARENTHESIS    reduce using rule 134 (valuedefect -> variables COMMA valuedefect .)


state 214

    (132) valuedefect -> variables ASSIGN values .

    RPARENTHESIS    reduce using rule 132 (valuedefect -> variables ASSIGN values .)


state 215

    (128) values -> term .

    RPARENTHESIS    reduce using rule 128 (values -> term .)


state 216

    (129) values -> boolean .

    RPARENTHESIS    reduce using rule 129 (values -> boolean .)


state 217

    (130) values -> cadena .

    RPARENTHESIS    reduce using rule 130 (values -> cadena .)


state 218

    (131) values -> arreglo .

    RPARENTHESIS    reduce using rule 131 (values -> arreglo .)


state 219

    (137) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS . algoritmo RETURN variables END
    (138) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS . algoritmo END
    (37) algoritmo -> . expression
    (38) algoritmo -> . metodocadena
    (39) algoritmo -> . arreglo
    (40) algoritmo -> . metodosarreglo
    (41) algoritmo -> . hash
    (42) algoritmo -> . estructurasControl
    (43) algoritmo -> . boolean
    (44) algoritmo -> . assigns
    (45) algoritmo -> . sentenIF
    (46) algoritmo -> . sentenifp
    (47) algoritmo -> . sentenifelse
    (48) algoritmo -> . variables
    (49) algoritmo -> . sentenWHILE
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (74) term -> . factor
    (75) term -> . variables
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (85) string -> . STRINGV
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    FOR             shift and go to state 44
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IF              shift and go to state 45
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    WHILE           shift and go to state 48
    STRING          shift and go to state 31
    STRINGV         shift and go to state 30
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29

    algoritmo                      shift and go to state 228
    variables                      shift and go to state 137
    expression                     shift and go to state 140
    metodocadena                   shift and go to state 141
    arreglo                        shift and go to state 142
    metodosarreglo                 shift and go to state 143
    hash                           shift and go to state 144
    estructurasControl             shift and go to state 145
    boolean                        shift and go to state 146
    assigns                        shift and go to state 147
    sentenIF                       shift and go to state 148
    sentenifp                      shift and go to state 149
    sentenifelse                   shift and go to state 150
    sentenWHILE                    shift and go to state 151
    term                           shift and go to state 28
    cadena                         shift and go to state 152
    string                         shift and go to state 153
    factor                         shift and go to state 33

state 220

    (95) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 229


state 221

    (107) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .

    RBRACKET        reduce using rule 107 (hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .)


state 222

    (118) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor . DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor . DO forcontent END

    DO              shift and go to state 230


state 223

    (56) sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo . END

    END             shift and go to state 231


state 224

    (124) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN . IDLOCAL END

    IDLOCAL         shift and go to state 232


state 225

    (125) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END .

    $end            reduce using rule 125 (funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END .)


state 226

    (135) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN . variables END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    variables                      shift and go to state 233

state 227

    (136) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo END .

    $end            reduce using rule 136 (funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo END .)


state 228

    (137) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo . RETURN variables END
    (138) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo . END

    RETURN          shift and go to state 234
    END             shift and go to state 235


state 229

    (95) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .

    POINT           reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    LSQBRACKET      reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    $end            reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    END             reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    ELSE            reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    RETURN          reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    ARRAY           reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    LBRACKET        reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    HASH            reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    FOR             reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    TRUE            reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    FALSE           reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    NIL             reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IF              reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDLOCAL         reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDINSTANCE      reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDCLASS         reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDGLOBAL        reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    WHILE           reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    NUMBER          reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    FLOAT           reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    NUML            reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    MINUS           reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    STRING          reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    STRINGV         reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    BREAK           reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 95 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)


state 230

    (118) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO . forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO . forcontent END
    (120) forcontent -> . forcontentvalue
    (121) forcontent -> . forcontentvalue forcontent
    (122) forcontentvalue -> . expression
    (123) forcontentvalue -> . algoritmo
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (37) algoritmo -> . expression
    (38) algoritmo -> . metodocadena
    (39) algoritmo -> . arreglo
    (40) algoritmo -> . metodosarreglo
    (41) algoritmo -> . hash
    (42) algoritmo -> . estructurasControl
    (43) algoritmo -> . boolean
    (44) algoritmo -> . assigns
    (45) algoritmo -> . sentenIF
    (46) algoritmo -> . sentenifp
    (47) algoritmo -> . sentenifelse
    (48) algoritmo -> . variables
    (49) algoritmo -> . sentenWHILE
    (74) term -> . factor
    (75) term -> . variables
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (85) string -> . STRINGV

    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    FOR             shift and go to state 44
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IF              shift and go to state 45
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    WHILE           shift and go to state 48
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    STRING          shift and go to state 31
    STRINGV         shift and go to state 30

    factor                         shift and go to state 33
    forcontent                     shift and go to state 236
    forcontentvalue                shift and go to state 237
    expression                     shift and go to state 238
    algoritmo                      shift and go to state 239
    term                           shift and go to state 28
    variables                      shift and go to state 240
    metodocadena                   shift and go to state 141
    arreglo                        shift and go to state 142
    metodosarreglo                 shift and go to state 143
    hash                           shift and go to state 144
    estructurasControl             shift and go to state 145
    boolean                        shift and go to state 146
    assigns                        shift and go to state 147
    sentenIF                       shift and go to state 148
    sentenifp                      shift and go to state 149
    sentenifelse                   shift and go to state 150
    sentenWHILE                    shift and go to state 151
    cadena                         shift and go to state 152
    string                         shift and go to state 153

state 231

    (56) sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .

    $end            reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    END             reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    ELSE            reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    RETURN          reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    ARRAY           reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    LSQBRACKET      reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    LBRACKET        reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    HASH            reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    FOR             reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    TRUE            reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    FALSE           reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    NIL             reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IF              reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDLOCAL         reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDINSTANCE      reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDCLASS         reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDGLOBAL        reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    WHILE           reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    NUMBER          reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    FLOAT           reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    NUML            reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    MINUS           reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    STRING          reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    STRINGV         reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    BREAK           reduce using rule 56 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)


state 232

    (124) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL . END

    END             shift and go to state 241


state 233

    (135) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables . END

    END             shift and go to state 242


state 234

    (137) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN . variables END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL

    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43

    variables                      shift and go to state 243

state 235

    (138) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END .

    $end            reduce using rule 138 (funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo END .)


state 236

    (118) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent . BREAK IF forcontentvalue END
    (119) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent . END

    BREAK           shift and go to state 244
    END             shift and go to state 245


state 237

    (120) forcontent -> forcontentvalue .
    (121) forcontent -> forcontentvalue . forcontent
    (120) forcontent -> . forcontentvalue
    (121) forcontent -> . forcontentvalue forcontent
    (122) forcontentvalue -> . expression
    (123) forcontentvalue -> . algoritmo
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (37) algoritmo -> . expression
    (38) algoritmo -> . metodocadena
    (39) algoritmo -> . arreglo
    (40) algoritmo -> . metodosarreglo
    (41) algoritmo -> . hash
    (42) algoritmo -> . estructurasControl
    (43) algoritmo -> . boolean
    (44) algoritmo -> . assigns
    (45) algoritmo -> . sentenIF
    (46) algoritmo -> . sentenifp
    (47) algoritmo -> . sentenifelse
    (48) algoritmo -> . variables
    (49) algoritmo -> . sentenWHILE
    (74) term -> . factor
    (75) term -> . variables
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (85) string -> . STRINGV

    BREAK           reduce using rule 120 (forcontent -> forcontentvalue .)
    END             reduce using rule 120 (forcontent -> forcontentvalue .)
    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    FOR             shift and go to state 44
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IF              shift and go to state 45
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    WHILE           shift and go to state 48
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    STRING          shift and go to state 31
    STRINGV         shift and go to state 30

    forcontentvalue                shift and go to state 237
    forcontent                     shift and go to state 246
    expression                     shift and go to state 238
    algoritmo                      shift and go to state 239
    term                           shift and go to state 28
    variables                      shift and go to state 240
    metodocadena                   shift and go to state 141
    arreglo                        shift and go to state 142
    metodosarreglo                 shift and go to state 143
    hash                           shift and go to state 144
    estructurasControl             shift and go to state 145
    boolean                        shift and go to state 146
    assigns                        shift and go to state 147
    sentenIF                       shift and go to state 148
    sentenifp                      shift and go to state 149
    sentenifelse                   shift and go to state 150
    sentenWHILE                    shift and go to state 151
    factor                         shift and go to state 33
    cadena                         shift and go to state 152
    string                         shift and go to state 153

state 238

    (122) forcontentvalue -> expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . PLUS variables
    (71) expression -> expression . MINUS variables
    (72) expression -> expression . MINUS term
    (81) expression -> expression . DIVISION term
    (82) expression -> expression . MOD term
    (83) expression -> expression . MULT term
    (84) expression -> expression . EXP term
    (37) algoritmo -> expression .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for ARRAY resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for HASH resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for NIL resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for NUML resolved using rule 37 (algoritmo -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for STRINGV resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for BREAK resolved using rule 37 (algoritmo -> expression .)
  ! reduce/reduce conflict for END resolved using rule 37 (algoritmo -> expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    DIVISION        shift and go to state 56
    MOD             shift and go to state 57
    MULT            shift and go to state 58
    EXP             shift and go to state 59
    ARRAY           reduce using rule 37 (algoritmo -> expression .)
    LSQBRACKET      reduce using rule 37 (algoritmo -> expression .)
    LBRACKET        reduce using rule 37 (algoritmo -> expression .)
    HASH            reduce using rule 37 (algoritmo -> expression .)
    FOR             reduce using rule 37 (algoritmo -> expression .)
    TRUE            reduce using rule 37 (algoritmo -> expression .)
    FALSE           reduce using rule 37 (algoritmo -> expression .)
    NIL             reduce using rule 37 (algoritmo -> expression .)
    IF              reduce using rule 37 (algoritmo -> expression .)
    IDLOCAL         reduce using rule 37 (algoritmo -> expression .)
    IDINSTANCE      reduce using rule 37 (algoritmo -> expression .)
    IDCLASS         reduce using rule 37 (algoritmo -> expression .)
    IDGLOBAL        reduce using rule 37 (algoritmo -> expression .)
    WHILE           reduce using rule 37 (algoritmo -> expression .)
    NUMBER          reduce using rule 37 (algoritmo -> expression .)
    FLOAT           reduce using rule 37 (algoritmo -> expression .)
    NUML            reduce using rule 37 (algoritmo -> expression .)
    STRING          reduce using rule 37 (algoritmo -> expression .)
    STRINGV         reduce using rule 37 (algoritmo -> expression .)
    BREAK           reduce using rule 37 (algoritmo -> expression .)
    END             reduce using rule 37 (algoritmo -> expression .)

  ! ARRAY           [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! LSQBRACKET      [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! LBRACKET        [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! HASH            [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! FOR             [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! TRUE            [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! FALSE           [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! NIL             [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! IF              [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! IDLOCAL         [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! IDINSTANCE      [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! IDCLASS         [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! IDGLOBAL        [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! WHILE           [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! NUMBER          [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! FLOAT           [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! NUML            [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! MINUS           [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! STRING          [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! STRINGV         [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! BREAK           [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! END             [ reduce using rule 122 (forcontentvalue -> expression .) ]
  ! MINUS           [ reduce using rule 37 (algoritmo -> expression .) ]


state 239

    (123) forcontentvalue -> algoritmo .

    ARRAY           reduce using rule 123 (forcontentvalue -> algoritmo .)
    LSQBRACKET      reduce using rule 123 (forcontentvalue -> algoritmo .)
    LBRACKET        reduce using rule 123 (forcontentvalue -> algoritmo .)
    HASH            reduce using rule 123 (forcontentvalue -> algoritmo .)
    FOR             reduce using rule 123 (forcontentvalue -> algoritmo .)
    TRUE            reduce using rule 123 (forcontentvalue -> algoritmo .)
    FALSE           reduce using rule 123 (forcontentvalue -> algoritmo .)
    NIL             reduce using rule 123 (forcontentvalue -> algoritmo .)
    IF              reduce using rule 123 (forcontentvalue -> algoritmo .)
    IDLOCAL         reduce using rule 123 (forcontentvalue -> algoritmo .)
    IDINSTANCE      reduce using rule 123 (forcontentvalue -> algoritmo .)
    IDCLASS         reduce using rule 123 (forcontentvalue -> algoritmo .)
    IDGLOBAL        reduce using rule 123 (forcontentvalue -> algoritmo .)
    WHILE           reduce using rule 123 (forcontentvalue -> algoritmo .)
    NUMBER          reduce using rule 123 (forcontentvalue -> algoritmo .)
    FLOAT           reduce using rule 123 (forcontentvalue -> algoritmo .)
    NUML            reduce using rule 123 (forcontentvalue -> algoritmo .)
    MINUS           reduce using rule 123 (forcontentvalue -> algoritmo .)
    STRING          reduce using rule 123 (forcontentvalue -> algoritmo .)
    STRINGV         reduce using rule 123 (forcontentvalue -> algoritmo .)
    BREAK           reduce using rule 123 (forcontentvalue -> algoritmo .)
    END             reduce using rule 123 (forcontentvalue -> algoritmo .)


state 240

    (48) algoritmo -> variables .
    (75) term -> variables .
    (61) assigns -> variables . ASSIGN expression
    (62) assigns -> variables . ASSIGN variables
    (63) assigns -> variables . ASSIGN boolean
    (64) assigns -> variables . ASSIGN asignar
    (65) assigns -> variables . ASSIGNPLUS expression
    (66) assigns -> variables . ASSIGNPLUS variables
    (67) assigns -> variables . ASSIGNMIN expression
    (68) assigns -> variables . ASSIGNMIN variables

  ! reduce/reduce conflict for MINUS resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for NUML resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 48 (algoritmo -> variables .)
  ! reduce/reduce conflict for END resolved using rule 48 (algoritmo -> variables .)
    ARRAY           reduce using rule 48 (algoritmo -> variables .)
    LSQBRACKET      reduce using rule 48 (algoritmo -> variables .)
    LBRACKET        reduce using rule 48 (algoritmo -> variables .)
    HASH            reduce using rule 48 (algoritmo -> variables .)
    FOR             reduce using rule 48 (algoritmo -> variables .)
    TRUE            reduce using rule 48 (algoritmo -> variables .)
    FALSE           reduce using rule 48 (algoritmo -> variables .)
    NIL             reduce using rule 48 (algoritmo -> variables .)
    IF              reduce using rule 48 (algoritmo -> variables .)
    IDLOCAL         reduce using rule 48 (algoritmo -> variables .)
    IDINSTANCE      reduce using rule 48 (algoritmo -> variables .)
    IDCLASS         reduce using rule 48 (algoritmo -> variables .)
    IDGLOBAL        reduce using rule 48 (algoritmo -> variables .)
    WHILE           reduce using rule 48 (algoritmo -> variables .)
    NUMBER          reduce using rule 48 (algoritmo -> variables .)
    FLOAT           reduce using rule 48 (algoritmo -> variables .)
    NUML            reduce using rule 48 (algoritmo -> variables .)
    MINUS           reduce using rule 48 (algoritmo -> variables .)
    STRING          reduce using rule 48 (algoritmo -> variables .)
    STRINGV         reduce using rule 48 (algoritmo -> variables .)
    BREAK           reduce using rule 48 (algoritmo -> variables .)
    END             reduce using rule 48 (algoritmo -> variables .)
    PLUS            reduce using rule 75 (term -> variables .)
    DIVISION        reduce using rule 75 (term -> variables .)
    MOD             reduce using rule 75 (term -> variables .)
    MULT            reduce using rule 75 (term -> variables .)
    EXP             reduce using rule 75 (term -> variables .)
    ASSIGN          shift and go to state 171
    ASSIGNPLUS      shift and go to state 66
    ASSIGNMIN       shift and go to state 67

  ! MINUS           [ reduce using rule 75 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 75 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 75 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 75 (term -> variables .) ]
  ! HASH            [ reduce using rule 75 (term -> variables .) ]
  ! FOR             [ reduce using rule 75 (term -> variables .) ]
  ! TRUE            [ reduce using rule 75 (term -> variables .) ]
  ! FALSE           [ reduce using rule 75 (term -> variables .) ]
  ! NIL             [ reduce using rule 75 (term -> variables .) ]
  ! IF              [ reduce using rule 75 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 75 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 75 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 75 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 75 (term -> variables .) ]
  ! WHILE           [ reduce using rule 75 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 75 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 75 (term -> variables .) ]
  ! NUML            [ reduce using rule 75 (term -> variables .) ]
  ! STRING          [ reduce using rule 75 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 75 (term -> variables .) ]
  ! BREAK           [ reduce using rule 75 (term -> variables .) ]
  ! END             [ reduce using rule 75 (term -> variables .) ]


state 241

    (124) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END .

    $end            reduce using rule 124 (funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END .)


state 242

    (135) funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END .

    $end            reduce using rule 135 (funcion2 -> DEF IDLOCAL LPARENTHESIS valuedefect RPARENTHESIS algoritmo RETURN variables END .)


state 243

    (137) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables . END

    END             shift and go to state 247


state 244

    (118) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK . IF forcontentvalue END

    IF              shift and go to state 248


state 245

    (119) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .

    $end            reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    END             reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    ELSE            reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    RETURN          reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    ARRAY           reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    LSQBRACKET      reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    LBRACKET        reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    HASH            reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    FOR             reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    TRUE            reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    FALSE           reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    NIL             reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IF              reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDLOCAL         reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDINSTANCE      reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDCLASS         reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDGLOBAL        reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    WHILE           reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    NUMBER          reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    FLOAT           reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    NUML            reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    MINUS           reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    STRING          reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    STRINGV         reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    BREAK           reduce using rule 119 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)


state 246

    (121) forcontent -> forcontentvalue forcontent .

    BREAK           reduce using rule 121 (forcontent -> forcontentvalue forcontent .)
    END             reduce using rule 121 (forcontent -> forcontentvalue forcontent .)


state 247

    (137) funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END .

    $end            reduce using rule 137 (funcion3 -> DEF IDLOCAL LPARENTHESIS MULT IDLOCAL RPARENTHESIS algoritmo RETURN variables END .)


state 248

    (118) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF . forcontentvalue END
    (122) forcontentvalue -> . expression
    (123) forcontentvalue -> . algoritmo
    (69) expression -> . expression PLUS term
    (70) expression -> . expression PLUS variables
    (71) expression -> . expression MINUS variables
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (81) expression -> . expression DIVISION term
    (82) expression -> . expression MOD term
    (83) expression -> . expression MULT term
    (84) expression -> . expression EXP term
    (37) algoritmo -> . expression
    (38) algoritmo -> . metodocadena
    (39) algoritmo -> . arreglo
    (40) algoritmo -> . metodosarreglo
    (41) algoritmo -> . hash
    (42) algoritmo -> . estructurasControl
    (43) algoritmo -> . boolean
    (44) algoritmo -> . assigns
    (45) algoritmo -> . sentenIF
    (46) algoritmo -> . sentenifp
    (47) algoritmo -> . sentenifelse
    (48) algoritmo -> . variables
    (49) algoritmo -> . sentenWHILE
    (74) term -> . factor
    (75) term -> . variables
    (89) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (90) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (91) metodocadena -> . cadena POINT LENGTH
    (92) metodocadena -> . string POINT LENGTH
    (93) arreglo -> . ARRAY POINT NEW
    (94) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (95) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (96) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (97) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (102) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (103) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (104) hash -> . LBRACKET hashcontent RBRACKET
    (105) hash -> . HASH POINT NEW
    (118) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (119) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (27) boolean -> . TRUE
    (28) boolean -> . FALSE
    (29) boolean -> . NIL
    (61) assigns -> . variables ASSIGN expression
    (62) assigns -> . variables ASSIGN variables
    (63) assigns -> . variables ASSIGN boolean
    (64) assigns -> . variables ASSIGN asignar
    (65) assigns -> . variables ASSIGNPLUS expression
    (66) assigns -> . variables ASSIGNPLUS variables
    (67) assigns -> . variables ASSIGNMIN expression
    (68) assigns -> . variables ASSIGNMIN variables
    (54) sentenIF -> . IF variables comparador term
    (55) sentenifp -> . IF variables comparador term algoritmo END
    (56) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (57) variables -> . IDLOCAL
    (58) variables -> . IDINSTANCE
    (59) variables -> . IDCLASS
    (60) variables -> . IDGLOBAL
    (50) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (51) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (52) sentenWHILE -> . WHILE boolean algoritmo END
    (53) sentenWHILE -> . WHILE variables algoritmo END
    (76) factor -> . NUMBER
    (77) factor -> . FLOAT
    (78) factor -> . NUML
    (79) factor -> . MINUS NUMBER
    (80) factor -> . MINUS FLOAT
    (86) cadena -> . STRING POINT NEW
    (87) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (88) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (85) string -> . STRINGV

    ARRAY           shift and go to state 32
    LSQBRACKET      shift and go to state 34
    LBRACKET        shift and go to state 35
    HASH            shift and go to state 36
    FOR             shift and go to state 44
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NIL             shift and go to state 39
    IF              shift and go to state 45
    IDLOCAL         shift and go to state 83
    IDINSTANCE      shift and go to state 41
    IDCLASS         shift and go to state 42
    IDGLOBAL        shift and go to state 43
    WHILE           shift and go to state 48
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NUML            shift and go to state 53
    MINUS           shift and go to state 29
    STRING          shift and go to state 31
    STRINGV         shift and go to state 30

    factor                         shift and go to state 33
    forcontentvalue                shift and go to state 249
    expression                     shift and go to state 238
    algoritmo                      shift and go to state 239
    term                           shift and go to state 28
    variables                      shift and go to state 240
    metodocadena                   shift and go to state 141
    arreglo                        shift and go to state 142
    metodosarreglo                 shift and go to state 143
    hash                           shift and go to state 144
    estructurasControl             shift and go to state 145
    boolean                        shift and go to state 146
    assigns                        shift and go to state 147
    sentenIF                       shift and go to state 148
    sentenifp                      shift and go to state 149
    sentenifelse                   shift and go to state 150
    sentenWHILE                    shift and go to state 151
    cadena                         shift and go to state 152
    string                         shift and go to state 153

state 249

    (118) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue . END

    END             shift and go to state 250


state 250

    (118) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .

    $end            reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    END             reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    ELSE            reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    RETURN          reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    ARRAY           reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    LSQBRACKET      reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    LBRACKET        reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    HASH            reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    FOR             reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    TRUE            reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    FALSE           reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    NIL             reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IF              reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDLOCAL         reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDINSTANCE      reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDCLASS         reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDGLOBAL        reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    WHILE           reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    NUMBER          reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    FLOAT           reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    NUML            reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    MINUS           reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    STRING          reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    STRINGV         reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    BREAK           reduce using rule 118 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LSQBRACKET in state 8 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 40 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for LSQBRACKET in state 142 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 170 resolved as shift
WARNING: shift/reduce conflict for LSQBRACKET in state 170 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 170 resolved as shift
WARNING: shift/reduce conflict for HASH in state 170 resolved as shift
WARNING: shift/reduce conflict for FOR in state 170 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 170 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 170 resolved as shift
WARNING: shift/reduce conflict for NIL in state 170 resolved as shift
WARNING: shift/reduce conflict for IF in state 170 resolved as shift
WARNING: shift/reduce conflict for IDLOCAL in state 170 resolved as shift
WARNING: shift/reduce conflict for IDINSTANCE in state 170 resolved as shift
WARNING: shift/reduce conflict for IDCLASS in state 170 resolved as shift
WARNING: shift/reduce conflict for IDGLOBAL in state 170 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 170 resolved as shift
WARNING: shift/reduce conflict for STRING in state 170 resolved as shift
WARNING: shift/reduce conflict for STRINGV in state 170 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 170 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 170 resolved as shift
WARNING: shift/reduce conflict for NUML in state 170 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 170 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 172 resolved as shift
WARNING: shift/reduce conflict for LSQBRACKET in state 172 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 172 resolved as shift
WARNING: shift/reduce conflict for HASH in state 172 resolved as shift
WARNING: shift/reduce conflict for FOR in state 172 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 172 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 172 resolved as shift
WARNING: shift/reduce conflict for NIL in state 172 resolved as shift
WARNING: shift/reduce conflict for IF in state 172 resolved as shift
WARNING: shift/reduce conflict for IDLOCAL in state 172 resolved as shift
WARNING: shift/reduce conflict for IDINSTANCE in state 172 resolved as shift
WARNING: shift/reduce conflict for IDCLASS in state 172 resolved as shift
WARNING: shift/reduce conflict for IDGLOBAL in state 172 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 172 resolved as shift
WARNING: shift/reduce conflict for STRING in state 172 resolved as shift
WARNING: shift/reduce conflict for STRINGV in state 172 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 172 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 172 resolved as shift
WARNING: shift/reduce conflict for NUML in state 172 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 172 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 238 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 238 resolved as shift
WARNING: reduce/reduce conflict in state 13 resolved using rule (asignar -> variables)
WARNING: rejected rule (term -> variables) in state 13
WARNING: reduce/reduce conflict in state 95 resolved using rule (expression -> expression PLUS variables)
WARNING: rejected rule (term -> variables) in state 95
WARNING: reduce/reduce conflict in state 96 resolved using rule (expression -> expression MINUS variables)
WARNING: rejected rule (term -> variables) in state 96
WARNING: reduce/reduce conflict in state 108 resolved using rule (asignar -> variables)
WARNING: rejected rule (assigns -> variables ASSIGN variables) in state 108
WARNING: reduce/reduce conflict in state 108 resolved using rule (asignar -> variables)
WARNING: rejected rule (term -> variables) in state 108
WARNING: reduce/reduce conflict in state 110 resolved using rule (asignar -> expression)
WARNING: rejected rule (assigns -> variables ASSIGN expression) in state 110
WARNING: reduce/reduce conflict in state 111 resolved using rule (asignar -> boolean)
WARNING: rejected rule (assigns -> variables ASSIGN boolean) in state 111
WARNING: reduce/reduce conflict in state 114 resolved using rule (assigns -> variables ASSIGNPLUS variables)
WARNING: rejected rule (term -> variables) in state 114
WARNING: reduce/reduce conflict in state 116 resolved using rule (assigns -> variables ASSIGNMIN variables)
WARNING: rejected rule (term -> variables) in state 116
WARNING: reduce/reduce conflict in state 137 resolved using rule (algoritmo -> variables)
WARNING: rejected rule (term -> variables) in state 137
WARNING: reduce/reduce conflict in state 208 resolved using rule (factor -> NUMBER)
WARNING: rejected rule (factor -> MINUS NUMBER) in state 208
WARNING: reduce/reduce conflict in state 209 resolved using rule (factor -> FLOAT)
WARNING: rejected rule (factor -> MINUS FLOAT) in state 209
WARNING: reduce/reduce conflict in state 212 resolved using rule (fcontenido -> variables COMMA fcontenido)
WARNING: rejected rule (valuedefect -> variables COMMA fcontenido) in state 212
WARNING: reduce/reduce conflict in state 238 resolved using rule (algoritmo -> expression)
WARNING: rejected rule (forcontentvalue -> expression) in state 238
WARNING: reduce/reduce conflict in state 240 resolved using rule (algoritmo -> variables)
WARNING: rejected rule (term -> variables) in state 240
WARNING: Rule (assigns -> variables ASSIGN variables) is never reduced
WARNING: Rule (assigns -> variables ASSIGN expression) is never reduced
WARNING: Rule (assigns -> variables ASSIGN boolean) is never reduced
WARNING: Rule (valuedefect -> variables COMMA fcontenido) is never reduced
WARNING: Rule (forcontentvalue -> expression) is never reduced
