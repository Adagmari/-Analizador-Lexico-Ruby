Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ANDS
    BSLASH
    CASE
    CLASS
    COMENTARIO
    COMID
    COMIS
    DEFINED
    ELSIF
    ENSURE
    GETS
    IDENTIFIER
    MODULE
    NEXT
    NOT
    NOTS
    NUML
    OR
    ORS
    PUTC
    REDO
    RESCUE
    SELF
    SEMICOLON
    UNDEF
    UNTIL
    WHEN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignar
Rule 2     instrucciones -> noasignar
Rule 3     asignar -> expression
Rule 4     asignar -> string
Rule 5     asignar -> cadena
Rule 6     asignar -> metodocadena
Rule 7     asignar -> arreglo
Rule 8     asignar -> metodosarreglo
Rule 9     asignar -> hash
Rule 10    asignar -> metodohash
Rule 11    asignar -> boolean
Rule 12    asignar -> variables
Rule 13    asignar -> assigns
Rule 14    noasignar -> estructurasControl
Rule 15    noasignar -> oputs
Rule 16    noasignar -> putss
Rule 17    noasignar -> putsenx
Rule 18    noasignar -> sentenIF
Rule 19    noasignar -> sentenifp
Rule 20    noasignar -> sentenifelse
Rule 21    noasignar -> sentenWHILE
Rule 22    noasignar -> funcion1
Rule 23    boolean -> TRUE
Rule 24    boolean -> FALSE
Rule 25    boolean -> NIL
Rule 26    oputs -> PUTS
Rule 27    putss -> PUTS string
Rule 28    putss -> PUTS cadena
Rule 29    putss -> PRINT string
Rule 30    putss -> PRINT cadena
Rule 31    putsenx -> PUTS expression
Rule 32    putsenx -> PRINT expression
Rule 33    algoritmo -> expression
Rule 34    algoritmo -> metodocadena
Rule 35    algoritmo -> arreglo
Rule 36    algoritmo -> metodosarreglo
Rule 37    algoritmo -> hash
Rule 38    algoritmo -> estructurasControl
Rule 39    algoritmo -> boolean
Rule 40    algoritmo -> assigns
Rule 41    algoritmo -> sentenIF
Rule 42    algoritmo -> sentenifp
Rule 43    algoritmo -> sentenifelse
Rule 44    algoritmo -> variables
Rule 45    algoritmo -> sentenWHILE
Rule 46    sentenWHILE -> WHILE variables comparador variables algoritmo END
Rule 47    sentenWHILE -> WHILE variables comparador expression algoritmo END
Rule 48    sentenWHILE -> WHILE boolean algoritmo END
Rule 49    sentenWHILE -> WHILE variables algoritmo END
Rule 50    sentenIF -> IF variables comparador term
Rule 51    sentenifp -> IF variables comparador term algoritmo END
Rule 52    sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END
Rule 53    variables -> IDLOCAL
Rule 54    variables -> IDINSTANCE
Rule 55    variables -> IDCLASS
Rule 56    variables -> IDGLOBAL
Rule 57    assigns -> variables ASSIGN expression
Rule 58    assigns -> variables ASSIGN variables
Rule 59    assigns -> variables ASSIGN boolean
Rule 60    assigns -> variables ASSIGN asignar
Rule 61    assigns -> variables ASSIGNPLUS expression
Rule 62    assigns -> variables ASSIGNPLUS variables
Rule 63    assigns -> variables ASSIGNMIN expression
Rule 64    assigns -> variables ASSIGNMIN variables
Rule 65    expression -> expression PLUS term
Rule 66    expression -> expression PLUS variables
Rule 67    expression -> expression MINUS variables
Rule 68    expression -> expression MINUS term
Rule 69    expression -> term
Rule 70    term -> factor
Rule 71    term -> variables
Rule 72    factor -> NUMBER
Rule 73    factor -> FLOAT
Rule 74    factor -> MINUS NUMBER
Rule 75    factor -> MINUS FLOAT
Rule 76    expression -> expression DIVISION term
Rule 77    expression -> expression MOD term
Rule 78    expression -> expression MULT term
Rule 79    expression -> expression EXP term
Rule 80    string -> STRINGV
Rule 81    cadena -> STRING POINT NEW
Rule 82    cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS
Rule 83    cadena -> STRING LPARENTHESIS string RPARENTHESIS
Rule 84    metodocadena -> cadena POINT EMPTY INTERROGATIVE
Rule 85    metodocadena -> string POINT EMPTY INTERROGATIVE
Rule 86    metodocadena -> cadena POINT LENGTH
Rule 87    metodocadena -> string POINT LENGTH
Rule 88    arreglo -> ARRAY POINT NEW
Rule 89    arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
Rule 90    arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
Rule 91    arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET
Rule 92    arreglo -> LSQBRACKET arraycontent RSQBRACKET
Rule 93    arraycontent -> factor
Rule 94    arraycontent -> string
Rule 95    arraycontent -> factor COMMA arraycontent
Rule 96    arraycontent -> string COMMA arraycontent
Rule 97    metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
Rule 98    metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET
Rule 99    hash -> LBRACKET hashcontent RBRACKET
Rule 100   hash -> HASH POINT NEW
Rule 101   hashcontent -> string ASSIGN GREATER hashcontentvalue
Rule 102   hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent
Rule 103   hashcontentvalue -> factor
Rule 104   hashcontentvalue -> string
Rule 105   metodohash -> variables ASSIGN hash POINT LENGTH
Rule 106   metodohash -> variables POINT LENGTH
Rule 107   comparador -> COMPARE
Rule 108   comparador -> GREQUAL
Rule 109   comparador -> LSEQUAL
Rule 110   comparador -> NOTEQUAL
Rule 111   comparador -> LESS
Rule 112   comparador -> GREATER
Rule 113   estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
Rule 114   estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
Rule 115   forcontent -> forcontentvalue
Rule 116   forcontent -> forcontentvalue forcontent
Rule 117   forcontentvalue -> expression
Rule 118   forcontentvalue -> algoritmo
Rule 119   funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
Rule 120   funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END
Rule 121   fcontenido -> variables
Rule 122   fcontenido -> variables COMMA fcontenido

Terminals, with rules where they appear

AND                  : 
ANDS                 : 
ARRAY                : 88 89 90 91
ASSIGN               : 57 58 59 60 101 102 105
ASSIGNMIN            : 63 64
ASSIGNPLUS           : 61 62
BREAK                : 113
BSLASH               : 
CASE                 : 
CLASS                : 
COMENTARIO           : 
COMID                : 
COMIS                : 
COMMA                : 90 95 96 102 122
COMPARE              : 107
DEF                  : 119 120
DEFINED              : 
DIVISION             : 76
DO                   : 113 114
ELSE                 : 52
ELSIF                : 
EMPTY                : 84 85
END                  : 46 47 48 49 51 52 113 114 119 120
ENSURE               : 
EXP                  : 79
FALSE                : 24
FLOAT                : 73 75
FOR                  : 113 114
GETS                 : 
GREATER              : 101 102 112
GREQUAL              : 108
HASH                 : 100
IDCLASS              : 55
IDENTIFIER           : 
IDGLOBAL             : 56
IDINSTANCE           : 54
IDLOCAL              : 53 113 114 119 119 120
IF                   : 50 51 52 113
IN                   : 113 114
INDEX                : 97
INTERROGATIVE        : 84 85
LBRACKET             : 99
LENGTH               : 86 87 105 106
LESS                 : 111
LPARENTHESIS         : 82 83 89 90 97 119 120
LSEQUAL              : 109
LSQBRACKET           : 91 92 98
MINUS                : 67 68 74 75
MOD                  : 77
MODULE               : 
MULT                 : 78
NEW                  : 81 82 88 89 90 100
NEXT                 : 
NIL                  : 25
NOT                  : 
NOTEQUAL             : 110
NOTS                 : 
NUMBER               : 72 74
NUML                 : 
OR                   : 
ORS                  : 
PLUS                 : 65 66
POINT                : 81 82 84 85 86 87 88 89 90 97 100 105 106 113 113 114 114
PRINT                : 29 30 32
PUTC                 : 
PUTS                 : 26 27 28 31
RBRACKET             : 99
REDO                 : 
RESCUE               : 
RETURN               : 119
RPARENTHESIS         : 82 83 89 90 97 119 120
RSQBRACKET           : 91 92 98
SELF                 : 
SEMICOLON            : 
STRING               : 81 82 83
STRINGV              : 80
TRUE                 : 23
UNDEF                : 
UNTIL                : 
WHEN                 : 
WHILE                : 46 47 48 49
error                : 

Nonterminals, with rules where they appear

algoritmo            : 46 47 48 49 51 52 52 118 119 120
arraycontent         : 90 91 92 95 96 97
arreglo              : 7 35 97 98
asignar              : 1 60
assigns              : 13 40
boolean              : 11 39 48 59
cadena               : 5 28 30 84 86
comparador           : 46 47 50 51 52
estructurasControl   : 14 38
expression           : 3 31 32 33 47 57 61 63 65 66 67 68 76 77 78 79 117
factor               : 70 89 90 93 95 98 103 113 113 114 114
fcontenido           : 119 120 122
forcontent           : 113 114 116
forcontentvalue      : 113 115 116
funcion1             : 22
hash                 : 9 37 105
hashcontent          : 99 102
hashcontentvalue     : 101 102
instrucciones        : 0
metodocadena         : 6 34
metodohash           : 10
metodosarreglo       : 8 36
noasignar            : 2
oputs                : 15
putsenx              : 17
putss                : 16
sentenIF             : 18 41
sentenWHILE          : 21 45
sentenifelse         : 20 43
sentenifp            : 19 42
string               : 4 27 29 82 83 85 87 94 96 101 102 104
term                 : 50 51 52 65 68 69 76 77 78 79
variables            : 12 44 46 46 47 49 50 51 52 57 58 58 59 60 61 62 62 63 64 64 66 67 71 105 106 121 122

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignar
    (2) instrucciones -> . noasignar
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . assigns
    (14) noasignar -> . estructurasControl
    (15) noasignar -> . oputs
    (16) noasignar -> . putss
    (17) noasignar -> . putsenx
    (18) noasignar -> . sentenIF
    (19) noasignar -> . sentenifp
    (20) noasignar -> . sentenifelse
    (21) noasignar -> . sentenWHILE
    (22) noasignar -> . funcion1
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (80) string -> . STRINGV
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (105) metodohash -> . variables ASSIGN hash POINT LENGTH
    (106) metodohash -> . variables POINT LENGTH
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (113) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (26) oputs -> . PUTS
    (27) putss -> . PUTS string
    (28) putss -> . PUTS cadena
    (29) putss -> . PRINT string
    (30) putss -> . PRINT cadena
    (31) putsenx -> . PUTS expression
    (32) putsenx -> . PRINT expression
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (119) funcion1 -> . DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (120) funcion1 -> . DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    STRINGV         shift and go to state 26
    STRING          shift and go to state 27
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    FOR             shift and go to state 40
    PUTS            shift and go to state 42
    PRINT           shift and go to state 43
    IF              shift and go to state 41
    WHILE           shift and go to state 44
    DEF             shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    instrucciones                  shift and go to state 1
    asignar                        shift and go to state 2
    noasignar                      shift and go to state 3
    expression                     shift and go to state 4
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    boolean                        shift and go to state 12
    variables                      shift and go to state 13
    assigns                        shift and go to state 14
    estructurasControl             shift and go to state 15
    oputs                          shift and go to state 16
    putss                          shift and go to state 17
    putsenx                        shift and go to state 18
    sentenIF                       shift and go to state 19
    sentenifp                      shift and go to state 20
    sentenifelse                   shift and go to state 21
    sentenWHILE                    shift and go to state 22
    funcion1                       shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 29

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignar .

    $end            reduce using rule 1 (instrucciones -> asignar .)


state 3

    (2) instrucciones -> noasignar .

    $end            reduce using rule 2 (instrucciones -> noasignar .)


state 4

    (3) asignar -> expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . PLUS variables
    (67) expression -> expression . MINUS variables
    (68) expression -> expression . MINUS term
    (76) expression -> expression . DIVISION term
    (77) expression -> expression . MOD term
    (78) expression -> expression . MULT term
    (79) expression -> expression . EXP term

    $end            reduce using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53


state 5

    (4) asignar -> string .
    (85) metodocadena -> string . POINT EMPTY INTERROGATIVE
    (87) metodocadena -> string . POINT LENGTH

    $end            reduce using rule 4 (asignar -> string .)
    END             reduce using rule 4 (asignar -> string .)
    ELSE            reduce using rule 4 (asignar -> string .)
    RETURN          reduce using rule 4 (asignar -> string .)
    ARRAY           reduce using rule 4 (asignar -> string .)
    LSQBRACKET      reduce using rule 4 (asignar -> string .)
    LBRACKET        reduce using rule 4 (asignar -> string .)
    HASH            reduce using rule 4 (asignar -> string .)
    FOR             reduce using rule 4 (asignar -> string .)
    TRUE            reduce using rule 4 (asignar -> string .)
    FALSE           reduce using rule 4 (asignar -> string .)
    NIL             reduce using rule 4 (asignar -> string .)
    IF              reduce using rule 4 (asignar -> string .)
    IDLOCAL         reduce using rule 4 (asignar -> string .)
    IDINSTANCE      reduce using rule 4 (asignar -> string .)
    IDCLASS         reduce using rule 4 (asignar -> string .)
    IDGLOBAL        reduce using rule 4 (asignar -> string .)
    WHILE           reduce using rule 4 (asignar -> string .)
    NUMBER          reduce using rule 4 (asignar -> string .)
    FLOAT           reduce using rule 4 (asignar -> string .)
    MINUS           reduce using rule 4 (asignar -> string .)
    STRING          reduce using rule 4 (asignar -> string .)
    STRINGV         reduce using rule 4 (asignar -> string .)
    BREAK           reduce using rule 4 (asignar -> string .)
    POINT           shift and go to state 54


state 6

    (5) asignar -> cadena .
    (84) metodocadena -> cadena . POINT EMPTY INTERROGATIVE
    (86) metodocadena -> cadena . POINT LENGTH

    $end            reduce using rule 5 (asignar -> cadena .)
    END             reduce using rule 5 (asignar -> cadena .)
    ELSE            reduce using rule 5 (asignar -> cadena .)
    RETURN          reduce using rule 5 (asignar -> cadena .)
    ARRAY           reduce using rule 5 (asignar -> cadena .)
    LSQBRACKET      reduce using rule 5 (asignar -> cadena .)
    LBRACKET        reduce using rule 5 (asignar -> cadena .)
    HASH            reduce using rule 5 (asignar -> cadena .)
    FOR             reduce using rule 5 (asignar -> cadena .)
    TRUE            reduce using rule 5 (asignar -> cadena .)
    FALSE           reduce using rule 5 (asignar -> cadena .)
    NIL             reduce using rule 5 (asignar -> cadena .)
    IF              reduce using rule 5 (asignar -> cadena .)
    IDLOCAL         reduce using rule 5 (asignar -> cadena .)
    IDINSTANCE      reduce using rule 5 (asignar -> cadena .)
    IDCLASS         reduce using rule 5 (asignar -> cadena .)
    IDGLOBAL        reduce using rule 5 (asignar -> cadena .)
    WHILE           reduce using rule 5 (asignar -> cadena .)
    NUMBER          reduce using rule 5 (asignar -> cadena .)
    FLOAT           reduce using rule 5 (asignar -> cadena .)
    MINUS           reduce using rule 5 (asignar -> cadena .)
    STRING          reduce using rule 5 (asignar -> cadena .)
    STRINGV         reduce using rule 5 (asignar -> cadena .)
    BREAK           reduce using rule 5 (asignar -> cadena .)
    POINT           shift and go to state 55


state 7

    (6) asignar -> metodocadena .

    $end            reduce using rule 6 (asignar -> metodocadena .)
    END             reduce using rule 6 (asignar -> metodocadena .)
    ELSE            reduce using rule 6 (asignar -> metodocadena .)
    RETURN          reduce using rule 6 (asignar -> metodocadena .)
    ARRAY           reduce using rule 6 (asignar -> metodocadena .)
    LSQBRACKET      reduce using rule 6 (asignar -> metodocadena .)
    LBRACKET        reduce using rule 6 (asignar -> metodocadena .)
    HASH            reduce using rule 6 (asignar -> metodocadena .)
    FOR             reduce using rule 6 (asignar -> metodocadena .)
    TRUE            reduce using rule 6 (asignar -> metodocadena .)
    FALSE           reduce using rule 6 (asignar -> metodocadena .)
    NIL             reduce using rule 6 (asignar -> metodocadena .)
    IF              reduce using rule 6 (asignar -> metodocadena .)
    IDLOCAL         reduce using rule 6 (asignar -> metodocadena .)
    IDINSTANCE      reduce using rule 6 (asignar -> metodocadena .)
    IDCLASS         reduce using rule 6 (asignar -> metodocadena .)
    IDGLOBAL        reduce using rule 6 (asignar -> metodocadena .)
    WHILE           reduce using rule 6 (asignar -> metodocadena .)
    NUMBER          reduce using rule 6 (asignar -> metodocadena .)
    FLOAT           reduce using rule 6 (asignar -> metodocadena .)
    MINUS           reduce using rule 6 (asignar -> metodocadena .)
    STRING          reduce using rule 6 (asignar -> metodocadena .)
    STRINGV         reduce using rule 6 (asignar -> metodocadena .)
    BREAK           reduce using rule 6 (asignar -> metodocadena .)


state 8

    (7) asignar -> arreglo .
    (97) metodosarreglo -> arreglo . POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> arreglo . LSQBRACKET factor RSQBRACKET

  ! shift/reduce conflict for LSQBRACKET resolved as shift
    $end            reduce using rule 7 (asignar -> arreglo .)
    END             reduce using rule 7 (asignar -> arreglo .)
    ELSE            reduce using rule 7 (asignar -> arreglo .)
    RETURN          reduce using rule 7 (asignar -> arreglo .)
    ARRAY           reduce using rule 7 (asignar -> arreglo .)
    LBRACKET        reduce using rule 7 (asignar -> arreglo .)
    HASH            reduce using rule 7 (asignar -> arreglo .)
    FOR             reduce using rule 7 (asignar -> arreglo .)
    TRUE            reduce using rule 7 (asignar -> arreglo .)
    FALSE           reduce using rule 7 (asignar -> arreglo .)
    NIL             reduce using rule 7 (asignar -> arreglo .)
    IF              reduce using rule 7 (asignar -> arreglo .)
    IDLOCAL         reduce using rule 7 (asignar -> arreglo .)
    IDINSTANCE      reduce using rule 7 (asignar -> arreglo .)
    IDCLASS         reduce using rule 7 (asignar -> arreglo .)
    IDGLOBAL        reduce using rule 7 (asignar -> arreglo .)
    WHILE           reduce using rule 7 (asignar -> arreglo .)
    NUMBER          reduce using rule 7 (asignar -> arreglo .)
    FLOAT           reduce using rule 7 (asignar -> arreglo .)
    MINUS           reduce using rule 7 (asignar -> arreglo .)
    STRING          reduce using rule 7 (asignar -> arreglo .)
    STRINGV         reduce using rule 7 (asignar -> arreglo .)
    BREAK           reduce using rule 7 (asignar -> arreglo .)
    POINT           shift and go to state 56
    LSQBRACKET      shift and go to state 57

  ! LSQBRACKET      [ reduce using rule 7 (asignar -> arreglo .) ]


state 9

    (8) asignar -> metodosarreglo .

    $end            reduce using rule 8 (asignar -> metodosarreglo .)
    END             reduce using rule 8 (asignar -> metodosarreglo .)
    ELSE            reduce using rule 8 (asignar -> metodosarreglo .)
    RETURN          reduce using rule 8 (asignar -> metodosarreglo .)
    ARRAY           reduce using rule 8 (asignar -> metodosarreglo .)
    LSQBRACKET      reduce using rule 8 (asignar -> metodosarreglo .)
    LBRACKET        reduce using rule 8 (asignar -> metodosarreglo .)
    HASH            reduce using rule 8 (asignar -> metodosarreglo .)
    FOR             reduce using rule 8 (asignar -> metodosarreglo .)
    TRUE            reduce using rule 8 (asignar -> metodosarreglo .)
    FALSE           reduce using rule 8 (asignar -> metodosarreglo .)
    NIL             reduce using rule 8 (asignar -> metodosarreglo .)
    IF              reduce using rule 8 (asignar -> metodosarreglo .)
    IDLOCAL         reduce using rule 8 (asignar -> metodosarreglo .)
    IDINSTANCE      reduce using rule 8 (asignar -> metodosarreglo .)
    IDCLASS         reduce using rule 8 (asignar -> metodosarreglo .)
    IDGLOBAL        reduce using rule 8 (asignar -> metodosarreglo .)
    WHILE           reduce using rule 8 (asignar -> metodosarreglo .)
    NUMBER          reduce using rule 8 (asignar -> metodosarreglo .)
    FLOAT           reduce using rule 8 (asignar -> metodosarreglo .)
    MINUS           reduce using rule 8 (asignar -> metodosarreglo .)
    STRING          reduce using rule 8 (asignar -> metodosarreglo .)
    STRINGV         reduce using rule 8 (asignar -> metodosarreglo .)
    BREAK           reduce using rule 8 (asignar -> metodosarreglo .)


state 10

    (9) asignar -> hash .

    $end            reduce using rule 9 (asignar -> hash .)
    END             reduce using rule 9 (asignar -> hash .)
    ELSE            reduce using rule 9 (asignar -> hash .)
    RETURN          reduce using rule 9 (asignar -> hash .)
    ARRAY           reduce using rule 9 (asignar -> hash .)
    LSQBRACKET      reduce using rule 9 (asignar -> hash .)
    LBRACKET        reduce using rule 9 (asignar -> hash .)
    HASH            reduce using rule 9 (asignar -> hash .)
    FOR             reduce using rule 9 (asignar -> hash .)
    TRUE            reduce using rule 9 (asignar -> hash .)
    FALSE           reduce using rule 9 (asignar -> hash .)
    NIL             reduce using rule 9 (asignar -> hash .)
    IF              reduce using rule 9 (asignar -> hash .)
    IDLOCAL         reduce using rule 9 (asignar -> hash .)
    IDINSTANCE      reduce using rule 9 (asignar -> hash .)
    IDCLASS         reduce using rule 9 (asignar -> hash .)
    IDGLOBAL        reduce using rule 9 (asignar -> hash .)
    WHILE           reduce using rule 9 (asignar -> hash .)
    NUMBER          reduce using rule 9 (asignar -> hash .)
    FLOAT           reduce using rule 9 (asignar -> hash .)
    MINUS           reduce using rule 9 (asignar -> hash .)
    STRING          reduce using rule 9 (asignar -> hash .)
    STRINGV         reduce using rule 9 (asignar -> hash .)
    BREAK           reduce using rule 9 (asignar -> hash .)


state 11

    (10) asignar -> metodohash .

    $end            reduce using rule 10 (asignar -> metodohash .)
    END             reduce using rule 10 (asignar -> metodohash .)
    ELSE            reduce using rule 10 (asignar -> metodohash .)
    RETURN          reduce using rule 10 (asignar -> metodohash .)
    ARRAY           reduce using rule 10 (asignar -> metodohash .)
    LSQBRACKET      reduce using rule 10 (asignar -> metodohash .)
    LBRACKET        reduce using rule 10 (asignar -> metodohash .)
    HASH            reduce using rule 10 (asignar -> metodohash .)
    FOR             reduce using rule 10 (asignar -> metodohash .)
    TRUE            reduce using rule 10 (asignar -> metodohash .)
    FALSE           reduce using rule 10 (asignar -> metodohash .)
    NIL             reduce using rule 10 (asignar -> metodohash .)
    IF              reduce using rule 10 (asignar -> metodohash .)
    IDLOCAL         reduce using rule 10 (asignar -> metodohash .)
    IDINSTANCE      reduce using rule 10 (asignar -> metodohash .)
    IDCLASS         reduce using rule 10 (asignar -> metodohash .)
    IDGLOBAL        reduce using rule 10 (asignar -> metodohash .)
    WHILE           reduce using rule 10 (asignar -> metodohash .)
    NUMBER          reduce using rule 10 (asignar -> metodohash .)
    FLOAT           reduce using rule 10 (asignar -> metodohash .)
    MINUS           reduce using rule 10 (asignar -> metodohash .)
    STRING          reduce using rule 10 (asignar -> metodohash .)
    STRINGV         reduce using rule 10 (asignar -> metodohash .)
    BREAK           reduce using rule 10 (asignar -> metodohash .)


state 12

    (11) asignar -> boolean .

    $end            reduce using rule 11 (asignar -> boolean .)


state 13

    (12) asignar -> variables .
    (105) metodohash -> variables . ASSIGN hash POINT LENGTH
    (106) metodohash -> variables . POINT LENGTH
    (57) assigns -> variables . ASSIGN expression
    (58) assigns -> variables . ASSIGN variables
    (59) assigns -> variables . ASSIGN boolean
    (60) assigns -> variables . ASSIGN asignar
    (61) assigns -> variables . ASSIGNPLUS expression
    (62) assigns -> variables . ASSIGNPLUS variables
    (63) assigns -> variables . ASSIGNMIN expression
    (64) assigns -> variables . ASSIGNMIN variables
    (71) term -> variables .

  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
    $end            reduce using rule 12 (asignar -> variables .)
    ASSIGN          shift and go to state 58
    POINT           shift and go to state 59
    ASSIGNPLUS      shift and go to state 60
    ASSIGNMIN       shift and go to state 61
    PLUS            reduce using rule 71 (term -> variables .)
    MINUS           reduce using rule 71 (term -> variables .)
    DIVISION        reduce using rule 71 (term -> variables .)
    MOD             reduce using rule 71 (term -> variables .)
    MULT            reduce using rule 71 (term -> variables .)
    EXP             reduce using rule 71 (term -> variables .)

  ! $end            [ reduce using rule 71 (term -> variables .) ]


state 14

    (13) asignar -> assigns .

    $end            reduce using rule 13 (asignar -> assigns .)
    END             reduce using rule 13 (asignar -> assigns .)
    ELSE            reduce using rule 13 (asignar -> assigns .)
    RETURN          reduce using rule 13 (asignar -> assigns .)
    ARRAY           reduce using rule 13 (asignar -> assigns .)
    LSQBRACKET      reduce using rule 13 (asignar -> assigns .)
    LBRACKET        reduce using rule 13 (asignar -> assigns .)
    HASH            reduce using rule 13 (asignar -> assigns .)
    FOR             reduce using rule 13 (asignar -> assigns .)
    TRUE            reduce using rule 13 (asignar -> assigns .)
    FALSE           reduce using rule 13 (asignar -> assigns .)
    NIL             reduce using rule 13 (asignar -> assigns .)
    IF              reduce using rule 13 (asignar -> assigns .)
    IDLOCAL         reduce using rule 13 (asignar -> assigns .)
    IDINSTANCE      reduce using rule 13 (asignar -> assigns .)
    IDCLASS         reduce using rule 13 (asignar -> assigns .)
    IDGLOBAL        reduce using rule 13 (asignar -> assigns .)
    WHILE           reduce using rule 13 (asignar -> assigns .)
    NUMBER          reduce using rule 13 (asignar -> assigns .)
    FLOAT           reduce using rule 13 (asignar -> assigns .)
    MINUS           reduce using rule 13 (asignar -> assigns .)
    STRING          reduce using rule 13 (asignar -> assigns .)
    STRINGV         reduce using rule 13 (asignar -> assigns .)
    BREAK           reduce using rule 13 (asignar -> assigns .)


state 15

    (14) noasignar -> estructurasControl .

    $end            reduce using rule 14 (noasignar -> estructurasControl .)


state 16

    (15) noasignar -> oputs .

    $end            reduce using rule 15 (noasignar -> oputs .)


state 17

    (16) noasignar -> putss .

    $end            reduce using rule 16 (noasignar -> putss .)


state 18

    (17) noasignar -> putsenx .

    $end            reduce using rule 17 (noasignar -> putsenx .)


state 19

    (18) noasignar -> sentenIF .

    $end            reduce using rule 18 (noasignar -> sentenIF .)


state 20

    (19) noasignar -> sentenifp .

    $end            reduce using rule 19 (noasignar -> sentenifp .)


state 21

    (20) noasignar -> sentenifelse .

    $end            reduce using rule 20 (noasignar -> sentenifelse .)


state 22

    (21) noasignar -> sentenWHILE .

    $end            reduce using rule 21 (noasignar -> sentenWHILE .)


state 23

    (22) noasignar -> funcion1 .

    $end            reduce using rule 22 (noasignar -> funcion1 .)


state 24

    (69) expression -> term .

    PLUS            reduce using rule 69 (expression -> term .)
    MINUS           reduce using rule 69 (expression -> term .)
    DIVISION        reduce using rule 69 (expression -> term .)
    MOD             reduce using rule 69 (expression -> term .)
    MULT            reduce using rule 69 (expression -> term .)
    EXP             reduce using rule 69 (expression -> term .)
    $end            reduce using rule 69 (expression -> term .)
    END             reduce using rule 69 (expression -> term .)
    ELSE            reduce using rule 69 (expression -> term .)
    RETURN          reduce using rule 69 (expression -> term .)
    ARRAY           reduce using rule 69 (expression -> term .)
    LSQBRACKET      reduce using rule 69 (expression -> term .)
    LBRACKET        reduce using rule 69 (expression -> term .)
    HASH            reduce using rule 69 (expression -> term .)
    FOR             reduce using rule 69 (expression -> term .)
    TRUE            reduce using rule 69 (expression -> term .)
    FALSE           reduce using rule 69 (expression -> term .)
    NIL             reduce using rule 69 (expression -> term .)
    IF              reduce using rule 69 (expression -> term .)
    IDLOCAL         reduce using rule 69 (expression -> term .)
    IDINSTANCE      reduce using rule 69 (expression -> term .)
    IDCLASS         reduce using rule 69 (expression -> term .)
    IDGLOBAL        reduce using rule 69 (expression -> term .)
    WHILE           reduce using rule 69 (expression -> term .)
    NUMBER          reduce using rule 69 (expression -> term .)
    FLOAT           reduce using rule 69 (expression -> term .)
    STRING          reduce using rule 69 (expression -> term .)
    STRINGV         reduce using rule 69 (expression -> term .)
    BREAK           reduce using rule 69 (expression -> term .)


state 25

    (74) factor -> MINUS . NUMBER
    (75) factor -> MINUS . FLOAT

    NUMBER          shift and go to state 62
    FLOAT           shift and go to state 63


state 26

    (80) string -> STRINGV .

    POINT           reduce using rule 80 (string -> STRINGV .)
    $end            reduce using rule 80 (string -> STRINGV .)
    COMMA           reduce using rule 80 (string -> STRINGV .)
    RSQBRACKET      reduce using rule 80 (string -> STRINGV .)
    ASSIGN          reduce using rule 80 (string -> STRINGV .)
    END             reduce using rule 80 (string -> STRINGV .)
    ELSE            reduce using rule 80 (string -> STRINGV .)
    RETURN          reduce using rule 80 (string -> STRINGV .)
    ARRAY           reduce using rule 80 (string -> STRINGV .)
    LSQBRACKET      reduce using rule 80 (string -> STRINGV .)
    LBRACKET        reduce using rule 80 (string -> STRINGV .)
    HASH            reduce using rule 80 (string -> STRINGV .)
    FOR             reduce using rule 80 (string -> STRINGV .)
    TRUE            reduce using rule 80 (string -> STRINGV .)
    FALSE           reduce using rule 80 (string -> STRINGV .)
    NIL             reduce using rule 80 (string -> STRINGV .)
    IF              reduce using rule 80 (string -> STRINGV .)
    IDLOCAL         reduce using rule 80 (string -> STRINGV .)
    IDINSTANCE      reduce using rule 80 (string -> STRINGV .)
    IDCLASS         reduce using rule 80 (string -> STRINGV .)
    IDGLOBAL        reduce using rule 80 (string -> STRINGV .)
    WHILE           reduce using rule 80 (string -> STRINGV .)
    NUMBER          reduce using rule 80 (string -> STRINGV .)
    FLOAT           reduce using rule 80 (string -> STRINGV .)
    MINUS           reduce using rule 80 (string -> STRINGV .)
    STRING          reduce using rule 80 (string -> STRINGV .)
    STRINGV         reduce using rule 80 (string -> STRINGV .)
    BREAK           reduce using rule 80 (string -> STRINGV .)
    RPARENTHESIS    reduce using rule 80 (string -> STRINGV .)
    RBRACKET        reduce using rule 80 (string -> STRINGV .)


state 27

    (81) cadena -> STRING . POINT NEW
    (82) cadena -> STRING . POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> STRING . LPARENTHESIS string RPARENTHESIS

    POINT           shift and go to state 64
    LPARENTHESIS    shift and go to state 65


state 28

    (88) arreglo -> ARRAY . POINT NEW
    (89) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> ARRAY . POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> ARRAY . LSQBRACKET arraycontent RSQBRACKET

    POINT           shift and go to state 66
    LSQBRACKET      shift and go to state 67


state 29

    (70) term -> factor .

    PLUS            reduce using rule 70 (term -> factor .)
    MINUS           reduce using rule 70 (term -> factor .)
    DIVISION        reduce using rule 70 (term -> factor .)
    MOD             reduce using rule 70 (term -> factor .)
    MULT            reduce using rule 70 (term -> factor .)
    EXP             reduce using rule 70 (term -> factor .)
    $end            reduce using rule 70 (term -> factor .)
    END             reduce using rule 70 (term -> factor .)
    ELSE            reduce using rule 70 (term -> factor .)
    RETURN          reduce using rule 70 (term -> factor .)
    ARRAY           reduce using rule 70 (term -> factor .)
    LSQBRACKET      reduce using rule 70 (term -> factor .)
    LBRACKET        reduce using rule 70 (term -> factor .)
    HASH            reduce using rule 70 (term -> factor .)
    FOR             reduce using rule 70 (term -> factor .)
    TRUE            reduce using rule 70 (term -> factor .)
    FALSE           reduce using rule 70 (term -> factor .)
    NIL             reduce using rule 70 (term -> factor .)
    IF              reduce using rule 70 (term -> factor .)
    IDLOCAL         reduce using rule 70 (term -> factor .)
    IDINSTANCE      reduce using rule 70 (term -> factor .)
    IDCLASS         reduce using rule 70 (term -> factor .)
    IDGLOBAL        reduce using rule 70 (term -> factor .)
    WHILE           reduce using rule 70 (term -> factor .)
    NUMBER          reduce using rule 70 (term -> factor .)
    FLOAT           reduce using rule 70 (term -> factor .)
    STRING          reduce using rule 70 (term -> factor .)
    STRINGV         reduce using rule 70 (term -> factor .)
    BREAK           reduce using rule 70 (term -> factor .)


state 30

    (92) arreglo -> LSQBRACKET . arraycontent RSQBRACKET
    (93) arraycontent -> . factor
    (94) arraycontent -> . string
    (95) arraycontent -> . factor COMMA arraycontent
    (96) arraycontent -> . string COMMA arraycontent
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (80) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    arraycontent                   shift and go to state 68
    factor                         shift and go to state 69
    string                         shift and go to state 70

state 31

    (99) hash -> LBRACKET . hashcontent RBRACKET
    (101) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (102) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (80) string -> . STRINGV

    STRINGV         shift and go to state 26

    hashcontent                    shift and go to state 71
    string                         shift and go to state 72

state 32

    (100) hash -> HASH . POINT NEW

    POINT           shift and go to state 73


state 33

    (23) boolean -> TRUE .

    $end            reduce using rule 23 (boolean -> TRUE .)
    ARRAY           reduce using rule 23 (boolean -> TRUE .)
    LSQBRACKET      reduce using rule 23 (boolean -> TRUE .)
    LBRACKET        reduce using rule 23 (boolean -> TRUE .)
    HASH            reduce using rule 23 (boolean -> TRUE .)
    FOR             reduce using rule 23 (boolean -> TRUE .)
    TRUE            reduce using rule 23 (boolean -> TRUE .)
    FALSE           reduce using rule 23 (boolean -> TRUE .)
    NIL             reduce using rule 23 (boolean -> TRUE .)
    IF              reduce using rule 23 (boolean -> TRUE .)
    IDLOCAL         reduce using rule 23 (boolean -> TRUE .)
    IDINSTANCE      reduce using rule 23 (boolean -> TRUE .)
    IDCLASS         reduce using rule 23 (boolean -> TRUE .)
    IDGLOBAL        reduce using rule 23 (boolean -> TRUE .)
    WHILE           reduce using rule 23 (boolean -> TRUE .)
    STRING          reduce using rule 23 (boolean -> TRUE .)
    STRINGV         reduce using rule 23 (boolean -> TRUE .)
    NUMBER          reduce using rule 23 (boolean -> TRUE .)
    FLOAT           reduce using rule 23 (boolean -> TRUE .)
    MINUS           reduce using rule 23 (boolean -> TRUE .)
    END             reduce using rule 23 (boolean -> TRUE .)
    ELSE            reduce using rule 23 (boolean -> TRUE .)
    RETURN          reduce using rule 23 (boolean -> TRUE .)
    BREAK           reduce using rule 23 (boolean -> TRUE .)


state 34

    (24) boolean -> FALSE .

    $end            reduce using rule 24 (boolean -> FALSE .)
    ARRAY           reduce using rule 24 (boolean -> FALSE .)
    LSQBRACKET      reduce using rule 24 (boolean -> FALSE .)
    LBRACKET        reduce using rule 24 (boolean -> FALSE .)
    HASH            reduce using rule 24 (boolean -> FALSE .)
    FOR             reduce using rule 24 (boolean -> FALSE .)
    TRUE            reduce using rule 24 (boolean -> FALSE .)
    FALSE           reduce using rule 24 (boolean -> FALSE .)
    NIL             reduce using rule 24 (boolean -> FALSE .)
    IF              reduce using rule 24 (boolean -> FALSE .)
    IDLOCAL         reduce using rule 24 (boolean -> FALSE .)
    IDINSTANCE      reduce using rule 24 (boolean -> FALSE .)
    IDCLASS         reduce using rule 24 (boolean -> FALSE .)
    IDGLOBAL        reduce using rule 24 (boolean -> FALSE .)
    WHILE           reduce using rule 24 (boolean -> FALSE .)
    STRING          reduce using rule 24 (boolean -> FALSE .)
    STRINGV         reduce using rule 24 (boolean -> FALSE .)
    NUMBER          reduce using rule 24 (boolean -> FALSE .)
    FLOAT           reduce using rule 24 (boolean -> FALSE .)
    MINUS           reduce using rule 24 (boolean -> FALSE .)
    END             reduce using rule 24 (boolean -> FALSE .)
    ELSE            reduce using rule 24 (boolean -> FALSE .)
    RETURN          reduce using rule 24 (boolean -> FALSE .)
    BREAK           reduce using rule 24 (boolean -> FALSE .)


state 35

    (25) boolean -> NIL .

    $end            reduce using rule 25 (boolean -> NIL .)
    ARRAY           reduce using rule 25 (boolean -> NIL .)
    LSQBRACKET      reduce using rule 25 (boolean -> NIL .)
    LBRACKET        reduce using rule 25 (boolean -> NIL .)
    HASH            reduce using rule 25 (boolean -> NIL .)
    FOR             reduce using rule 25 (boolean -> NIL .)
    TRUE            reduce using rule 25 (boolean -> NIL .)
    FALSE           reduce using rule 25 (boolean -> NIL .)
    NIL             reduce using rule 25 (boolean -> NIL .)
    IF              reduce using rule 25 (boolean -> NIL .)
    IDLOCAL         reduce using rule 25 (boolean -> NIL .)
    IDINSTANCE      reduce using rule 25 (boolean -> NIL .)
    IDCLASS         reduce using rule 25 (boolean -> NIL .)
    IDGLOBAL        reduce using rule 25 (boolean -> NIL .)
    WHILE           reduce using rule 25 (boolean -> NIL .)
    STRING          reduce using rule 25 (boolean -> NIL .)
    STRINGV         reduce using rule 25 (boolean -> NIL .)
    NUMBER          reduce using rule 25 (boolean -> NIL .)
    FLOAT           reduce using rule 25 (boolean -> NIL .)
    MINUS           reduce using rule 25 (boolean -> NIL .)
    END             reduce using rule 25 (boolean -> NIL .)
    ELSE            reduce using rule 25 (boolean -> NIL .)
    RETURN          reduce using rule 25 (boolean -> NIL .)
    BREAK           reduce using rule 25 (boolean -> NIL .)


state 36

    (53) variables -> IDLOCAL .

    ASSIGN          reduce using rule 53 (variables -> IDLOCAL .)
    POINT           reduce using rule 53 (variables -> IDLOCAL .)
    ASSIGNPLUS      reduce using rule 53 (variables -> IDLOCAL .)
    ASSIGNMIN       reduce using rule 53 (variables -> IDLOCAL .)
    $end            reduce using rule 53 (variables -> IDLOCAL .)
    PLUS            reduce using rule 53 (variables -> IDLOCAL .)
    MINUS           reduce using rule 53 (variables -> IDLOCAL .)
    DIVISION        reduce using rule 53 (variables -> IDLOCAL .)
    MOD             reduce using rule 53 (variables -> IDLOCAL .)
    MULT            reduce using rule 53 (variables -> IDLOCAL .)
    EXP             reduce using rule 53 (variables -> IDLOCAL .)
    COMPARE         reduce using rule 53 (variables -> IDLOCAL .)
    GREQUAL         reduce using rule 53 (variables -> IDLOCAL .)
    LSEQUAL         reduce using rule 53 (variables -> IDLOCAL .)
    NOTEQUAL        reduce using rule 53 (variables -> IDLOCAL .)
    LESS            reduce using rule 53 (variables -> IDLOCAL .)
    GREATER         reduce using rule 53 (variables -> IDLOCAL .)
    ARRAY           reduce using rule 53 (variables -> IDLOCAL .)
    LSQBRACKET      reduce using rule 53 (variables -> IDLOCAL .)
    LBRACKET        reduce using rule 53 (variables -> IDLOCAL .)
    HASH            reduce using rule 53 (variables -> IDLOCAL .)
    FOR             reduce using rule 53 (variables -> IDLOCAL .)
    TRUE            reduce using rule 53 (variables -> IDLOCAL .)
    FALSE           reduce using rule 53 (variables -> IDLOCAL .)
    NIL             reduce using rule 53 (variables -> IDLOCAL .)
    IF              reduce using rule 53 (variables -> IDLOCAL .)
    IDLOCAL         reduce using rule 53 (variables -> IDLOCAL .)
    IDINSTANCE      reduce using rule 53 (variables -> IDLOCAL .)
    IDCLASS         reduce using rule 53 (variables -> IDLOCAL .)
    IDGLOBAL        reduce using rule 53 (variables -> IDLOCAL .)
    WHILE           reduce using rule 53 (variables -> IDLOCAL .)
    STRING          reduce using rule 53 (variables -> IDLOCAL .)
    STRINGV         reduce using rule 53 (variables -> IDLOCAL .)
    NUMBER          reduce using rule 53 (variables -> IDLOCAL .)
    FLOAT           reduce using rule 53 (variables -> IDLOCAL .)
    END             reduce using rule 53 (variables -> IDLOCAL .)
    ELSE            reduce using rule 53 (variables -> IDLOCAL .)
    RETURN          reduce using rule 53 (variables -> IDLOCAL .)
    BREAK           reduce using rule 53 (variables -> IDLOCAL .)
    COMMA           reduce using rule 53 (variables -> IDLOCAL .)
    RPARENTHESIS    reduce using rule 53 (variables -> IDLOCAL .)


state 37

    (54) variables -> IDINSTANCE .

    ASSIGN          reduce using rule 54 (variables -> IDINSTANCE .)
    POINT           reduce using rule 54 (variables -> IDINSTANCE .)
    ASSIGNPLUS      reduce using rule 54 (variables -> IDINSTANCE .)
    ASSIGNMIN       reduce using rule 54 (variables -> IDINSTANCE .)
    $end            reduce using rule 54 (variables -> IDINSTANCE .)
    PLUS            reduce using rule 54 (variables -> IDINSTANCE .)
    MINUS           reduce using rule 54 (variables -> IDINSTANCE .)
    DIVISION        reduce using rule 54 (variables -> IDINSTANCE .)
    MOD             reduce using rule 54 (variables -> IDINSTANCE .)
    MULT            reduce using rule 54 (variables -> IDINSTANCE .)
    EXP             reduce using rule 54 (variables -> IDINSTANCE .)
    COMPARE         reduce using rule 54 (variables -> IDINSTANCE .)
    GREQUAL         reduce using rule 54 (variables -> IDINSTANCE .)
    LSEQUAL         reduce using rule 54 (variables -> IDINSTANCE .)
    NOTEQUAL        reduce using rule 54 (variables -> IDINSTANCE .)
    LESS            reduce using rule 54 (variables -> IDINSTANCE .)
    GREATER         reduce using rule 54 (variables -> IDINSTANCE .)
    ARRAY           reduce using rule 54 (variables -> IDINSTANCE .)
    LSQBRACKET      reduce using rule 54 (variables -> IDINSTANCE .)
    LBRACKET        reduce using rule 54 (variables -> IDINSTANCE .)
    HASH            reduce using rule 54 (variables -> IDINSTANCE .)
    FOR             reduce using rule 54 (variables -> IDINSTANCE .)
    TRUE            reduce using rule 54 (variables -> IDINSTANCE .)
    FALSE           reduce using rule 54 (variables -> IDINSTANCE .)
    NIL             reduce using rule 54 (variables -> IDINSTANCE .)
    IF              reduce using rule 54 (variables -> IDINSTANCE .)
    IDLOCAL         reduce using rule 54 (variables -> IDINSTANCE .)
    IDINSTANCE      reduce using rule 54 (variables -> IDINSTANCE .)
    IDCLASS         reduce using rule 54 (variables -> IDINSTANCE .)
    IDGLOBAL        reduce using rule 54 (variables -> IDINSTANCE .)
    WHILE           reduce using rule 54 (variables -> IDINSTANCE .)
    STRING          reduce using rule 54 (variables -> IDINSTANCE .)
    STRINGV         reduce using rule 54 (variables -> IDINSTANCE .)
    NUMBER          reduce using rule 54 (variables -> IDINSTANCE .)
    FLOAT           reduce using rule 54 (variables -> IDINSTANCE .)
    END             reduce using rule 54 (variables -> IDINSTANCE .)
    ELSE            reduce using rule 54 (variables -> IDINSTANCE .)
    RETURN          reduce using rule 54 (variables -> IDINSTANCE .)
    BREAK           reduce using rule 54 (variables -> IDINSTANCE .)
    COMMA           reduce using rule 54 (variables -> IDINSTANCE .)
    RPARENTHESIS    reduce using rule 54 (variables -> IDINSTANCE .)


state 38

    (55) variables -> IDCLASS .

    ASSIGN          reduce using rule 55 (variables -> IDCLASS .)
    POINT           reduce using rule 55 (variables -> IDCLASS .)
    ASSIGNPLUS      reduce using rule 55 (variables -> IDCLASS .)
    ASSIGNMIN       reduce using rule 55 (variables -> IDCLASS .)
    $end            reduce using rule 55 (variables -> IDCLASS .)
    PLUS            reduce using rule 55 (variables -> IDCLASS .)
    MINUS           reduce using rule 55 (variables -> IDCLASS .)
    DIVISION        reduce using rule 55 (variables -> IDCLASS .)
    MOD             reduce using rule 55 (variables -> IDCLASS .)
    MULT            reduce using rule 55 (variables -> IDCLASS .)
    EXP             reduce using rule 55 (variables -> IDCLASS .)
    COMPARE         reduce using rule 55 (variables -> IDCLASS .)
    GREQUAL         reduce using rule 55 (variables -> IDCLASS .)
    LSEQUAL         reduce using rule 55 (variables -> IDCLASS .)
    NOTEQUAL        reduce using rule 55 (variables -> IDCLASS .)
    LESS            reduce using rule 55 (variables -> IDCLASS .)
    GREATER         reduce using rule 55 (variables -> IDCLASS .)
    ARRAY           reduce using rule 55 (variables -> IDCLASS .)
    LSQBRACKET      reduce using rule 55 (variables -> IDCLASS .)
    LBRACKET        reduce using rule 55 (variables -> IDCLASS .)
    HASH            reduce using rule 55 (variables -> IDCLASS .)
    FOR             reduce using rule 55 (variables -> IDCLASS .)
    TRUE            reduce using rule 55 (variables -> IDCLASS .)
    FALSE           reduce using rule 55 (variables -> IDCLASS .)
    NIL             reduce using rule 55 (variables -> IDCLASS .)
    IF              reduce using rule 55 (variables -> IDCLASS .)
    IDLOCAL         reduce using rule 55 (variables -> IDCLASS .)
    IDINSTANCE      reduce using rule 55 (variables -> IDCLASS .)
    IDCLASS         reduce using rule 55 (variables -> IDCLASS .)
    IDGLOBAL        reduce using rule 55 (variables -> IDCLASS .)
    WHILE           reduce using rule 55 (variables -> IDCLASS .)
    STRING          reduce using rule 55 (variables -> IDCLASS .)
    STRINGV         reduce using rule 55 (variables -> IDCLASS .)
    NUMBER          reduce using rule 55 (variables -> IDCLASS .)
    FLOAT           reduce using rule 55 (variables -> IDCLASS .)
    END             reduce using rule 55 (variables -> IDCLASS .)
    ELSE            reduce using rule 55 (variables -> IDCLASS .)
    RETURN          reduce using rule 55 (variables -> IDCLASS .)
    BREAK           reduce using rule 55 (variables -> IDCLASS .)
    COMMA           reduce using rule 55 (variables -> IDCLASS .)
    RPARENTHESIS    reduce using rule 55 (variables -> IDCLASS .)


state 39

    (56) variables -> IDGLOBAL .

    ASSIGN          reduce using rule 56 (variables -> IDGLOBAL .)
    POINT           reduce using rule 56 (variables -> IDGLOBAL .)
    ASSIGNPLUS      reduce using rule 56 (variables -> IDGLOBAL .)
    ASSIGNMIN       reduce using rule 56 (variables -> IDGLOBAL .)
    $end            reduce using rule 56 (variables -> IDGLOBAL .)
    PLUS            reduce using rule 56 (variables -> IDGLOBAL .)
    MINUS           reduce using rule 56 (variables -> IDGLOBAL .)
    DIVISION        reduce using rule 56 (variables -> IDGLOBAL .)
    MOD             reduce using rule 56 (variables -> IDGLOBAL .)
    MULT            reduce using rule 56 (variables -> IDGLOBAL .)
    EXP             reduce using rule 56 (variables -> IDGLOBAL .)
    COMPARE         reduce using rule 56 (variables -> IDGLOBAL .)
    GREQUAL         reduce using rule 56 (variables -> IDGLOBAL .)
    LSEQUAL         reduce using rule 56 (variables -> IDGLOBAL .)
    NOTEQUAL        reduce using rule 56 (variables -> IDGLOBAL .)
    LESS            reduce using rule 56 (variables -> IDGLOBAL .)
    GREATER         reduce using rule 56 (variables -> IDGLOBAL .)
    ARRAY           reduce using rule 56 (variables -> IDGLOBAL .)
    LSQBRACKET      reduce using rule 56 (variables -> IDGLOBAL .)
    LBRACKET        reduce using rule 56 (variables -> IDGLOBAL .)
    HASH            reduce using rule 56 (variables -> IDGLOBAL .)
    FOR             reduce using rule 56 (variables -> IDGLOBAL .)
    TRUE            reduce using rule 56 (variables -> IDGLOBAL .)
    FALSE           reduce using rule 56 (variables -> IDGLOBAL .)
    NIL             reduce using rule 56 (variables -> IDGLOBAL .)
    IF              reduce using rule 56 (variables -> IDGLOBAL .)
    IDLOCAL         reduce using rule 56 (variables -> IDGLOBAL .)
    IDINSTANCE      reduce using rule 56 (variables -> IDGLOBAL .)
    IDCLASS         reduce using rule 56 (variables -> IDGLOBAL .)
    IDGLOBAL        reduce using rule 56 (variables -> IDGLOBAL .)
    WHILE           reduce using rule 56 (variables -> IDGLOBAL .)
    STRING          reduce using rule 56 (variables -> IDGLOBAL .)
    STRINGV         reduce using rule 56 (variables -> IDGLOBAL .)
    NUMBER          reduce using rule 56 (variables -> IDGLOBAL .)
    FLOAT           reduce using rule 56 (variables -> IDGLOBAL .)
    END             reduce using rule 56 (variables -> IDGLOBAL .)
    ELSE            reduce using rule 56 (variables -> IDGLOBAL .)
    RETURN          reduce using rule 56 (variables -> IDGLOBAL .)
    BREAK           reduce using rule 56 (variables -> IDGLOBAL .)
    COMMA           reduce using rule 56 (variables -> IDGLOBAL .)
    RPARENTHESIS    reduce using rule 56 (variables -> IDGLOBAL .)


state 40

    (113) estructurasControl -> FOR . IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> FOR . IDLOCAL IN factor POINT POINT factor DO forcontent END

    IDLOCAL         shift and go to state 74


state 41

    (50) sentenIF -> IF . variables comparador term
    (51) sentenifp -> IF . variables comparador term algoritmo END
    (52) sentenifelse -> IF . variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    variables                      shift and go to state 75

state 42

    (26) oputs -> PUTS .
    (27) putss -> PUTS . string
    (28) putss -> PUTS . cadena
    (31) putsenx -> PUTS . expression
    (80) string -> . STRINGV
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    $end            reduce using rule 26 (oputs -> PUTS .)
    STRINGV         shift and go to state 26
    STRING          shift and go to state 27
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    string                         shift and go to state 76
    cadena                         shift and go to state 77
    expression                     shift and go to state 78
    term                           shift and go to state 24
    variables                      shift and go to state 79
    factor                         shift and go to state 29

state 43

    (29) putss -> PRINT . string
    (30) putss -> PRINT . cadena
    (32) putsenx -> PRINT . expression
    (80) string -> . STRINGV
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    STRINGV         shift and go to state 26
    STRING          shift and go to state 27
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    string                         shift and go to state 80
    cadena                         shift and go to state 81
    expression                     shift and go to state 82
    term                           shift and go to state 24
    variables                      shift and go to state 79
    factor                         shift and go to state 29

state 44

    (46) sentenWHILE -> WHILE . variables comparador variables algoritmo END
    (47) sentenWHILE -> WHILE . variables comparador expression algoritmo END
    (48) sentenWHILE -> WHILE . boolean algoritmo END
    (49) sentenWHILE -> WHILE . variables algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    variables                      shift and go to state 83
    boolean                        shift and go to state 84

state 45

    (119) funcion1 -> DEF . IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (120) funcion1 -> DEF . IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END

    IDLOCAL         shift and go to state 85


state 46

    (72) factor -> NUMBER .

    PLUS            reduce using rule 72 (factor -> NUMBER .)
    MINUS           reduce using rule 72 (factor -> NUMBER .)
    DIVISION        reduce using rule 72 (factor -> NUMBER .)
    MOD             reduce using rule 72 (factor -> NUMBER .)
    MULT            reduce using rule 72 (factor -> NUMBER .)
    EXP             reduce using rule 72 (factor -> NUMBER .)
    $end            reduce using rule 72 (factor -> NUMBER .)
    COMMA           reduce using rule 72 (factor -> NUMBER .)
    RSQBRACKET      reduce using rule 72 (factor -> NUMBER .)
    END             reduce using rule 72 (factor -> NUMBER .)
    ELSE            reduce using rule 72 (factor -> NUMBER .)
    RETURN          reduce using rule 72 (factor -> NUMBER .)
    ARRAY           reduce using rule 72 (factor -> NUMBER .)
    LSQBRACKET      reduce using rule 72 (factor -> NUMBER .)
    LBRACKET        reduce using rule 72 (factor -> NUMBER .)
    HASH            reduce using rule 72 (factor -> NUMBER .)
    FOR             reduce using rule 72 (factor -> NUMBER .)
    TRUE            reduce using rule 72 (factor -> NUMBER .)
    FALSE           reduce using rule 72 (factor -> NUMBER .)
    NIL             reduce using rule 72 (factor -> NUMBER .)
    IF              reduce using rule 72 (factor -> NUMBER .)
    IDLOCAL         reduce using rule 72 (factor -> NUMBER .)
    IDINSTANCE      reduce using rule 72 (factor -> NUMBER .)
    IDCLASS         reduce using rule 72 (factor -> NUMBER .)
    IDGLOBAL        reduce using rule 72 (factor -> NUMBER .)
    WHILE           reduce using rule 72 (factor -> NUMBER .)
    NUMBER          reduce using rule 72 (factor -> NUMBER .)
    FLOAT           reduce using rule 72 (factor -> NUMBER .)
    STRING          reduce using rule 72 (factor -> NUMBER .)
    STRINGV         reduce using rule 72 (factor -> NUMBER .)
    BREAK           reduce using rule 72 (factor -> NUMBER .)
    RPARENTHESIS    reduce using rule 72 (factor -> NUMBER .)
    POINT           reduce using rule 72 (factor -> NUMBER .)
    RBRACKET        reduce using rule 72 (factor -> NUMBER .)
    DO              reduce using rule 72 (factor -> NUMBER .)


state 47

    (73) factor -> FLOAT .

    PLUS            reduce using rule 73 (factor -> FLOAT .)
    MINUS           reduce using rule 73 (factor -> FLOAT .)
    DIVISION        reduce using rule 73 (factor -> FLOAT .)
    MOD             reduce using rule 73 (factor -> FLOAT .)
    MULT            reduce using rule 73 (factor -> FLOAT .)
    EXP             reduce using rule 73 (factor -> FLOAT .)
    $end            reduce using rule 73 (factor -> FLOAT .)
    COMMA           reduce using rule 73 (factor -> FLOAT .)
    RSQBRACKET      reduce using rule 73 (factor -> FLOAT .)
    END             reduce using rule 73 (factor -> FLOAT .)
    ELSE            reduce using rule 73 (factor -> FLOAT .)
    RETURN          reduce using rule 73 (factor -> FLOAT .)
    ARRAY           reduce using rule 73 (factor -> FLOAT .)
    LSQBRACKET      reduce using rule 73 (factor -> FLOAT .)
    LBRACKET        reduce using rule 73 (factor -> FLOAT .)
    HASH            reduce using rule 73 (factor -> FLOAT .)
    FOR             reduce using rule 73 (factor -> FLOAT .)
    TRUE            reduce using rule 73 (factor -> FLOAT .)
    FALSE           reduce using rule 73 (factor -> FLOAT .)
    NIL             reduce using rule 73 (factor -> FLOAT .)
    IF              reduce using rule 73 (factor -> FLOAT .)
    IDLOCAL         reduce using rule 73 (factor -> FLOAT .)
    IDINSTANCE      reduce using rule 73 (factor -> FLOAT .)
    IDCLASS         reduce using rule 73 (factor -> FLOAT .)
    IDGLOBAL        reduce using rule 73 (factor -> FLOAT .)
    WHILE           reduce using rule 73 (factor -> FLOAT .)
    NUMBER          reduce using rule 73 (factor -> FLOAT .)
    FLOAT           reduce using rule 73 (factor -> FLOAT .)
    STRING          reduce using rule 73 (factor -> FLOAT .)
    STRINGV         reduce using rule 73 (factor -> FLOAT .)
    BREAK           reduce using rule 73 (factor -> FLOAT .)
    RPARENTHESIS    reduce using rule 73 (factor -> FLOAT .)
    POINT           reduce using rule 73 (factor -> FLOAT .)
    RBRACKET        reduce using rule 73 (factor -> FLOAT .)
    DO              reduce using rule 73 (factor -> FLOAT .)


state 48

    (65) expression -> expression PLUS . term
    (66) expression -> expression PLUS . variables
    (70) term -> . factor
    (71) term -> . variables
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    term                           shift and go to state 86
    variables                      shift and go to state 87
    factor                         shift and go to state 29

state 49

    (67) expression -> expression MINUS . variables
    (68) expression -> expression MINUS . term
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 88
    term                           shift and go to state 89
    factor                         shift and go to state 29

state 50

    (76) expression -> expression DIVISION . term
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    term                           shift and go to state 90
    factor                         shift and go to state 29
    variables                      shift and go to state 79

state 51

    (77) expression -> expression MOD . term
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    term                           shift and go to state 91
    factor                         shift and go to state 29
    variables                      shift and go to state 79

state 52

    (78) expression -> expression MULT . term
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    term                           shift and go to state 92
    factor                         shift and go to state 29
    variables                      shift and go to state 79

state 53

    (79) expression -> expression EXP . term
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    term                           shift and go to state 93
    factor                         shift and go to state 29
    variables                      shift and go to state 79

state 54

    (85) metodocadena -> string POINT . EMPTY INTERROGATIVE
    (87) metodocadena -> string POINT . LENGTH

    EMPTY           shift and go to state 94
    LENGTH          shift and go to state 95


state 55

    (84) metodocadena -> cadena POINT . EMPTY INTERROGATIVE
    (86) metodocadena -> cadena POINT . LENGTH

    EMPTY           shift and go to state 96
    LENGTH          shift and go to state 97


state 56

    (97) metodosarreglo -> arreglo POINT . INDEX LPARENTHESIS arraycontent RPARENTHESIS

    INDEX           shift and go to state 98


state 57

    (98) metodosarreglo -> arreglo LSQBRACKET . factor RSQBRACKET
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    factor                         shift and go to state 99

state 58

    (105) metodohash -> variables ASSIGN . hash POINT LENGTH
    (57) assigns -> variables ASSIGN . expression
    (58) assigns -> variables ASSIGN . variables
    (59) assigns -> variables ASSIGN . boolean
    (60) assigns -> variables ASSIGN . asignar
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . assigns
    (70) term -> . factor
    (71) term -> . variables
    (80) string -> . STRINGV
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (105) metodohash -> . variables ASSIGN hash POINT LENGTH
    (106) metodohash -> . variables POINT LENGTH
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    STRINGV         shift and go to state 26
    STRING          shift and go to state 27
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 100
    hash                           shift and go to state 101
    expression                     shift and go to state 102
    boolean                        shift and go to state 103
    asignar                        shift and go to state 104
    term                           shift and go to state 24
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    metodohash                     shift and go to state 11
    assigns                        shift and go to state 14
    factor                         shift and go to state 29

state 59

    (106) metodohash -> variables POINT . LENGTH

    LENGTH          shift and go to state 105


state 60

    (61) assigns -> variables ASSIGNPLUS . expression
    (62) assigns -> variables ASSIGNPLUS . variables
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 106
    expression                     shift and go to state 107
    term                           shift and go to state 24
    factor                         shift and go to state 29

state 61

    (63) assigns -> variables ASSIGNMIN . expression
    (64) assigns -> variables ASSIGNMIN . variables
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 108
    expression                     shift and go to state 109
    term                           shift and go to state 24
    factor                         shift and go to state 29

state 62

    (74) factor -> MINUS NUMBER .

    PLUS            reduce using rule 74 (factor -> MINUS NUMBER .)
    MINUS           reduce using rule 74 (factor -> MINUS NUMBER .)
    DIVISION        reduce using rule 74 (factor -> MINUS NUMBER .)
    MOD             reduce using rule 74 (factor -> MINUS NUMBER .)
    MULT            reduce using rule 74 (factor -> MINUS NUMBER .)
    EXP             reduce using rule 74 (factor -> MINUS NUMBER .)
    $end            reduce using rule 74 (factor -> MINUS NUMBER .)
    COMMA           reduce using rule 74 (factor -> MINUS NUMBER .)
    RSQBRACKET      reduce using rule 74 (factor -> MINUS NUMBER .)
    END             reduce using rule 74 (factor -> MINUS NUMBER .)
    ELSE            reduce using rule 74 (factor -> MINUS NUMBER .)
    RETURN          reduce using rule 74 (factor -> MINUS NUMBER .)
    ARRAY           reduce using rule 74 (factor -> MINUS NUMBER .)
    LSQBRACKET      reduce using rule 74 (factor -> MINUS NUMBER .)
    LBRACKET        reduce using rule 74 (factor -> MINUS NUMBER .)
    HASH            reduce using rule 74 (factor -> MINUS NUMBER .)
    FOR             reduce using rule 74 (factor -> MINUS NUMBER .)
    TRUE            reduce using rule 74 (factor -> MINUS NUMBER .)
    FALSE           reduce using rule 74 (factor -> MINUS NUMBER .)
    NIL             reduce using rule 74 (factor -> MINUS NUMBER .)
    IF              reduce using rule 74 (factor -> MINUS NUMBER .)
    IDLOCAL         reduce using rule 74 (factor -> MINUS NUMBER .)
    IDINSTANCE      reduce using rule 74 (factor -> MINUS NUMBER .)
    IDCLASS         reduce using rule 74 (factor -> MINUS NUMBER .)
    IDGLOBAL        reduce using rule 74 (factor -> MINUS NUMBER .)
    WHILE           reduce using rule 74 (factor -> MINUS NUMBER .)
    NUMBER          reduce using rule 74 (factor -> MINUS NUMBER .)
    FLOAT           reduce using rule 74 (factor -> MINUS NUMBER .)
    STRING          reduce using rule 74 (factor -> MINUS NUMBER .)
    STRINGV         reduce using rule 74 (factor -> MINUS NUMBER .)
    BREAK           reduce using rule 74 (factor -> MINUS NUMBER .)
    RPARENTHESIS    reduce using rule 74 (factor -> MINUS NUMBER .)
    POINT           reduce using rule 74 (factor -> MINUS NUMBER .)
    RBRACKET        reduce using rule 74 (factor -> MINUS NUMBER .)
    DO              reduce using rule 74 (factor -> MINUS NUMBER .)


state 63

    (75) factor -> MINUS FLOAT .

    PLUS            reduce using rule 75 (factor -> MINUS FLOAT .)
    MINUS           reduce using rule 75 (factor -> MINUS FLOAT .)
    DIVISION        reduce using rule 75 (factor -> MINUS FLOAT .)
    MOD             reduce using rule 75 (factor -> MINUS FLOAT .)
    MULT            reduce using rule 75 (factor -> MINUS FLOAT .)
    EXP             reduce using rule 75 (factor -> MINUS FLOAT .)
    $end            reduce using rule 75 (factor -> MINUS FLOAT .)
    COMMA           reduce using rule 75 (factor -> MINUS FLOAT .)
    RSQBRACKET      reduce using rule 75 (factor -> MINUS FLOAT .)
    END             reduce using rule 75 (factor -> MINUS FLOAT .)
    ELSE            reduce using rule 75 (factor -> MINUS FLOAT .)
    RETURN          reduce using rule 75 (factor -> MINUS FLOAT .)
    ARRAY           reduce using rule 75 (factor -> MINUS FLOAT .)
    LSQBRACKET      reduce using rule 75 (factor -> MINUS FLOAT .)
    LBRACKET        reduce using rule 75 (factor -> MINUS FLOAT .)
    HASH            reduce using rule 75 (factor -> MINUS FLOAT .)
    FOR             reduce using rule 75 (factor -> MINUS FLOAT .)
    TRUE            reduce using rule 75 (factor -> MINUS FLOAT .)
    FALSE           reduce using rule 75 (factor -> MINUS FLOAT .)
    NIL             reduce using rule 75 (factor -> MINUS FLOAT .)
    IF              reduce using rule 75 (factor -> MINUS FLOAT .)
    IDLOCAL         reduce using rule 75 (factor -> MINUS FLOAT .)
    IDINSTANCE      reduce using rule 75 (factor -> MINUS FLOAT .)
    IDCLASS         reduce using rule 75 (factor -> MINUS FLOAT .)
    IDGLOBAL        reduce using rule 75 (factor -> MINUS FLOAT .)
    WHILE           reduce using rule 75 (factor -> MINUS FLOAT .)
    NUMBER          reduce using rule 75 (factor -> MINUS FLOAT .)
    FLOAT           reduce using rule 75 (factor -> MINUS FLOAT .)
    STRING          reduce using rule 75 (factor -> MINUS FLOAT .)
    STRINGV         reduce using rule 75 (factor -> MINUS FLOAT .)
    BREAK           reduce using rule 75 (factor -> MINUS FLOAT .)
    RPARENTHESIS    reduce using rule 75 (factor -> MINUS FLOAT .)
    POINT           reduce using rule 75 (factor -> MINUS FLOAT .)
    RBRACKET        reduce using rule 75 (factor -> MINUS FLOAT .)
    DO              reduce using rule 75 (factor -> MINUS FLOAT .)


state 64

    (81) cadena -> STRING POINT . NEW
    (82) cadena -> STRING POINT . NEW LPARENTHESIS string RPARENTHESIS

    NEW             shift and go to state 110


state 65

    (83) cadena -> STRING LPARENTHESIS . string RPARENTHESIS
    (80) string -> . STRINGV

    STRINGV         shift and go to state 26

    string                         shift and go to state 111

state 66

    (88) arreglo -> ARRAY POINT . NEW
    (89) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> ARRAY POINT . NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    NEW             shift and go to state 112


state 67

    (91) arreglo -> ARRAY LSQBRACKET . arraycontent RSQBRACKET
    (93) arraycontent -> . factor
    (94) arraycontent -> . string
    (95) arraycontent -> . factor COMMA arraycontent
    (96) arraycontent -> . string COMMA arraycontent
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (80) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    arraycontent                   shift and go to state 113
    factor                         shift and go to state 69
    string                         shift and go to state 70

state 68

    (92) arreglo -> LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 114


state 69

    (93) arraycontent -> factor .
    (95) arraycontent -> factor . COMMA arraycontent

    RSQBRACKET      reduce using rule 93 (arraycontent -> factor .)
    RPARENTHESIS    reduce using rule 93 (arraycontent -> factor .)
    COMMA           shift and go to state 115


state 70

    (94) arraycontent -> string .
    (96) arraycontent -> string . COMMA arraycontent

    RSQBRACKET      reduce using rule 94 (arraycontent -> string .)
    RPARENTHESIS    reduce using rule 94 (arraycontent -> string .)
    COMMA           shift and go to state 116


state 71

    (99) hash -> LBRACKET hashcontent . RBRACKET

    RBRACKET        shift and go to state 117


state 72

    (101) hashcontent -> string . ASSIGN GREATER hashcontentvalue
    (102) hashcontent -> string . ASSIGN GREATER hashcontentvalue COMMA hashcontent

    ASSIGN          shift and go to state 118


state 73

    (100) hash -> HASH POINT . NEW

    NEW             shift and go to state 119


state 74

    (113) estructurasControl -> FOR IDLOCAL . IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> FOR IDLOCAL . IN factor POINT POINT factor DO forcontent END

    IN              shift and go to state 120


state 75

    (50) sentenIF -> IF variables . comparador term
    (51) sentenifp -> IF variables . comparador term algoritmo END
    (52) sentenifelse -> IF variables . comparador term algoritmo ELSE algoritmo END
    (107) comparador -> . COMPARE
    (108) comparador -> . GREQUAL
    (109) comparador -> . LSEQUAL
    (110) comparador -> . NOTEQUAL
    (111) comparador -> . LESS
    (112) comparador -> . GREATER

    COMPARE         shift and go to state 122
    GREQUAL         shift and go to state 123
    LSEQUAL         shift and go to state 124
    NOTEQUAL        shift and go to state 125
    LESS            shift and go to state 126
    GREATER         shift and go to state 127

    comparador                     shift and go to state 121

state 76

    (27) putss -> PUTS string .

    $end            reduce using rule 27 (putss -> PUTS string .)


state 77

    (28) putss -> PUTS cadena .

    $end            reduce using rule 28 (putss -> PUTS cadena .)


state 78

    (31) putsenx -> PUTS expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . PLUS variables
    (67) expression -> expression . MINUS variables
    (68) expression -> expression . MINUS term
    (76) expression -> expression . DIVISION term
    (77) expression -> expression . MOD term
    (78) expression -> expression . MULT term
    (79) expression -> expression . EXP term

    $end            reduce using rule 31 (putsenx -> PUTS expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53


state 79

    (71) term -> variables .

    PLUS            reduce using rule 71 (term -> variables .)
    MINUS           reduce using rule 71 (term -> variables .)
    DIVISION        reduce using rule 71 (term -> variables .)
    MOD             reduce using rule 71 (term -> variables .)
    MULT            reduce using rule 71 (term -> variables .)
    EXP             reduce using rule 71 (term -> variables .)
    $end            reduce using rule 71 (term -> variables .)
    END             reduce using rule 71 (term -> variables .)
    ELSE            reduce using rule 71 (term -> variables .)
    RETURN          reduce using rule 71 (term -> variables .)
    ARRAY           reduce using rule 71 (term -> variables .)
    LSQBRACKET      reduce using rule 71 (term -> variables .)
    LBRACKET        reduce using rule 71 (term -> variables .)
    HASH            reduce using rule 71 (term -> variables .)
    FOR             reduce using rule 71 (term -> variables .)
    TRUE            reduce using rule 71 (term -> variables .)
    FALSE           reduce using rule 71 (term -> variables .)
    NIL             reduce using rule 71 (term -> variables .)
    IF              reduce using rule 71 (term -> variables .)
    IDLOCAL         reduce using rule 71 (term -> variables .)
    IDINSTANCE      reduce using rule 71 (term -> variables .)
    IDCLASS         reduce using rule 71 (term -> variables .)
    IDGLOBAL        reduce using rule 71 (term -> variables .)
    WHILE           reduce using rule 71 (term -> variables .)
    NUMBER          reduce using rule 71 (term -> variables .)
    FLOAT           reduce using rule 71 (term -> variables .)
    STRING          reduce using rule 71 (term -> variables .)
    STRINGV         reduce using rule 71 (term -> variables .)
    BREAK           reduce using rule 71 (term -> variables .)


state 80

    (29) putss -> PRINT string .

    $end            reduce using rule 29 (putss -> PRINT string .)


state 81

    (30) putss -> PRINT cadena .

    $end            reduce using rule 30 (putss -> PRINT cadena .)


state 82

    (32) putsenx -> PRINT expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . PLUS variables
    (67) expression -> expression . MINUS variables
    (68) expression -> expression . MINUS term
    (76) expression -> expression . DIVISION term
    (77) expression -> expression . MOD term
    (78) expression -> expression . MULT term
    (79) expression -> expression . EXP term

    $end            reduce using rule 32 (putsenx -> PRINT expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53


state 83

    (46) sentenWHILE -> WHILE variables . comparador variables algoritmo END
    (47) sentenWHILE -> WHILE variables . comparador expression algoritmo END
    (49) sentenWHILE -> WHILE variables . algoritmo END
    (107) comparador -> . COMPARE
    (108) comparador -> . GREQUAL
    (109) comparador -> . LSEQUAL
    (110) comparador -> . NOTEQUAL
    (111) comparador -> . LESS
    (112) comparador -> . GREATER
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (113) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (70) term -> . factor
    (71) term -> . variables
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (80) string -> . STRINGV
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    COMPARE         shift and go to state 122
    GREQUAL         shift and go to state 123
    LSEQUAL         shift and go to state 124
    NOTEQUAL        shift and go to state 125
    LESS            shift and go to state 126
    GREATER         shift and go to state 127
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 128
    comparador                     shift and go to state 129
    algoritmo                      shift and go to state 130
    expression                     shift and go to state 131
    metodocadena                   shift and go to state 132
    arreglo                        shift and go to state 133
    metodosarreglo                 shift and go to state 134
    hash                           shift and go to state 135
    estructurasControl             shift and go to state 136
    boolean                        shift and go to state 137
    assigns                        shift and go to state 138
    sentenIF                       shift and go to state 139
    sentenifp                      shift and go to state 140
    sentenifelse                   shift and go to state 141
    sentenWHILE                    shift and go to state 142
    term                           shift and go to state 24
    cadena                         shift and go to state 143
    string                         shift and go to state 144
    factor                         shift and go to state 29

state 84

    (48) sentenWHILE -> WHILE boolean . algoritmo END
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (113) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (70) term -> . factor
    (71) term -> . variables
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (80) string -> . STRINGV
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    boolean                        shift and go to state 137
    algoritmo                      shift and go to state 145
    expression                     shift and go to state 131
    metodocadena                   shift and go to state 132
    arreglo                        shift and go to state 133
    metodosarreglo                 shift and go to state 134
    hash                           shift and go to state 135
    estructurasControl             shift and go to state 136
    assigns                        shift and go to state 138
    sentenIF                       shift and go to state 139
    sentenifp                      shift and go to state 140
    sentenifelse                   shift and go to state 141
    variables                      shift and go to state 128
    sentenWHILE                    shift and go to state 142
    term                           shift and go to state 24
    cadena                         shift and go to state 143
    string                         shift and go to state 144
    factor                         shift and go to state 29

state 85

    (119) funcion1 -> DEF IDLOCAL . LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (120) funcion1 -> DEF IDLOCAL . LPARENTHESIS fcontenido RPARENTHESIS algoritmo END

    LPARENTHESIS    shift and go to state 146


state 86

    (65) expression -> expression PLUS term .

    PLUS            reduce using rule 65 (expression -> expression PLUS term .)
    MINUS           reduce using rule 65 (expression -> expression PLUS term .)
    DIVISION        reduce using rule 65 (expression -> expression PLUS term .)
    MOD             reduce using rule 65 (expression -> expression PLUS term .)
    MULT            reduce using rule 65 (expression -> expression PLUS term .)
    EXP             reduce using rule 65 (expression -> expression PLUS term .)
    $end            reduce using rule 65 (expression -> expression PLUS term .)
    END             reduce using rule 65 (expression -> expression PLUS term .)
    ELSE            reduce using rule 65 (expression -> expression PLUS term .)
    RETURN          reduce using rule 65 (expression -> expression PLUS term .)
    ARRAY           reduce using rule 65 (expression -> expression PLUS term .)
    LSQBRACKET      reduce using rule 65 (expression -> expression PLUS term .)
    LBRACKET        reduce using rule 65 (expression -> expression PLUS term .)
    HASH            reduce using rule 65 (expression -> expression PLUS term .)
    FOR             reduce using rule 65 (expression -> expression PLUS term .)
    TRUE            reduce using rule 65 (expression -> expression PLUS term .)
    FALSE           reduce using rule 65 (expression -> expression PLUS term .)
    NIL             reduce using rule 65 (expression -> expression PLUS term .)
    IF              reduce using rule 65 (expression -> expression PLUS term .)
    IDLOCAL         reduce using rule 65 (expression -> expression PLUS term .)
    IDINSTANCE      reduce using rule 65 (expression -> expression PLUS term .)
    IDCLASS         reduce using rule 65 (expression -> expression PLUS term .)
    IDGLOBAL        reduce using rule 65 (expression -> expression PLUS term .)
    WHILE           reduce using rule 65 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 65 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 65 (expression -> expression PLUS term .)
    STRING          reduce using rule 65 (expression -> expression PLUS term .)
    STRINGV         reduce using rule 65 (expression -> expression PLUS term .)
    BREAK           reduce using rule 65 (expression -> expression PLUS term .)


state 87

    (66) expression -> expression PLUS variables .
    (71) term -> variables .

  ! reduce/reduce conflict for PLUS resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for MINUS resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for DIVISION resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for MOD resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for MULT resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for EXP resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for $end resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for END resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for HASH resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for FOR resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for NIL resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IF resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for STRING resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 66 (expression -> expression PLUS variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 66 (expression -> expression PLUS variables .)
    PLUS            reduce using rule 66 (expression -> expression PLUS variables .)
    MINUS           reduce using rule 66 (expression -> expression PLUS variables .)
    DIVISION        reduce using rule 66 (expression -> expression PLUS variables .)
    MOD             reduce using rule 66 (expression -> expression PLUS variables .)
    MULT            reduce using rule 66 (expression -> expression PLUS variables .)
    EXP             reduce using rule 66 (expression -> expression PLUS variables .)
    $end            reduce using rule 66 (expression -> expression PLUS variables .)
    END             reduce using rule 66 (expression -> expression PLUS variables .)
    ELSE            reduce using rule 66 (expression -> expression PLUS variables .)
    RETURN          reduce using rule 66 (expression -> expression PLUS variables .)
    ARRAY           reduce using rule 66 (expression -> expression PLUS variables .)
    LSQBRACKET      reduce using rule 66 (expression -> expression PLUS variables .)
    LBRACKET        reduce using rule 66 (expression -> expression PLUS variables .)
    HASH            reduce using rule 66 (expression -> expression PLUS variables .)
    FOR             reduce using rule 66 (expression -> expression PLUS variables .)
    TRUE            reduce using rule 66 (expression -> expression PLUS variables .)
    FALSE           reduce using rule 66 (expression -> expression PLUS variables .)
    NIL             reduce using rule 66 (expression -> expression PLUS variables .)
    IF              reduce using rule 66 (expression -> expression PLUS variables .)
    IDLOCAL         reduce using rule 66 (expression -> expression PLUS variables .)
    IDINSTANCE      reduce using rule 66 (expression -> expression PLUS variables .)
    IDCLASS         reduce using rule 66 (expression -> expression PLUS variables .)
    IDGLOBAL        reduce using rule 66 (expression -> expression PLUS variables .)
    WHILE           reduce using rule 66 (expression -> expression PLUS variables .)
    NUMBER          reduce using rule 66 (expression -> expression PLUS variables .)
    FLOAT           reduce using rule 66 (expression -> expression PLUS variables .)
    STRING          reduce using rule 66 (expression -> expression PLUS variables .)
    STRINGV         reduce using rule 66 (expression -> expression PLUS variables .)
    BREAK           reduce using rule 66 (expression -> expression PLUS variables .)

  ! PLUS            [ reduce using rule 71 (term -> variables .) ]
  ! MINUS           [ reduce using rule 71 (term -> variables .) ]
  ! DIVISION        [ reduce using rule 71 (term -> variables .) ]
  ! MOD             [ reduce using rule 71 (term -> variables .) ]
  ! MULT            [ reduce using rule 71 (term -> variables .) ]
  ! EXP             [ reduce using rule 71 (term -> variables .) ]
  ! $end            [ reduce using rule 71 (term -> variables .) ]
  ! END             [ reduce using rule 71 (term -> variables .) ]
  ! ELSE            [ reduce using rule 71 (term -> variables .) ]
  ! RETURN          [ reduce using rule 71 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 71 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 71 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 71 (term -> variables .) ]
  ! HASH            [ reduce using rule 71 (term -> variables .) ]
  ! FOR             [ reduce using rule 71 (term -> variables .) ]
  ! TRUE            [ reduce using rule 71 (term -> variables .) ]
  ! FALSE           [ reduce using rule 71 (term -> variables .) ]
  ! NIL             [ reduce using rule 71 (term -> variables .) ]
  ! IF              [ reduce using rule 71 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 71 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 71 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 71 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 71 (term -> variables .) ]
  ! WHILE           [ reduce using rule 71 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 71 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 71 (term -> variables .) ]
  ! STRING          [ reduce using rule 71 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 71 (term -> variables .) ]
  ! BREAK           [ reduce using rule 71 (term -> variables .) ]


state 88

    (67) expression -> expression MINUS variables .
    (71) term -> variables .

  ! reduce/reduce conflict for PLUS resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for MINUS resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for DIVISION resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for MOD resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for MULT resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for EXP resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for $end resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for END resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for HASH resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for FOR resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for NIL resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IF resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for STRING resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 67 (expression -> expression MINUS variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 67 (expression -> expression MINUS variables .)
    PLUS            reduce using rule 67 (expression -> expression MINUS variables .)
    MINUS           reduce using rule 67 (expression -> expression MINUS variables .)
    DIVISION        reduce using rule 67 (expression -> expression MINUS variables .)
    MOD             reduce using rule 67 (expression -> expression MINUS variables .)
    MULT            reduce using rule 67 (expression -> expression MINUS variables .)
    EXP             reduce using rule 67 (expression -> expression MINUS variables .)
    $end            reduce using rule 67 (expression -> expression MINUS variables .)
    END             reduce using rule 67 (expression -> expression MINUS variables .)
    ELSE            reduce using rule 67 (expression -> expression MINUS variables .)
    RETURN          reduce using rule 67 (expression -> expression MINUS variables .)
    ARRAY           reduce using rule 67 (expression -> expression MINUS variables .)
    LSQBRACKET      reduce using rule 67 (expression -> expression MINUS variables .)
    LBRACKET        reduce using rule 67 (expression -> expression MINUS variables .)
    HASH            reduce using rule 67 (expression -> expression MINUS variables .)
    FOR             reduce using rule 67 (expression -> expression MINUS variables .)
    TRUE            reduce using rule 67 (expression -> expression MINUS variables .)
    FALSE           reduce using rule 67 (expression -> expression MINUS variables .)
    NIL             reduce using rule 67 (expression -> expression MINUS variables .)
    IF              reduce using rule 67 (expression -> expression MINUS variables .)
    IDLOCAL         reduce using rule 67 (expression -> expression MINUS variables .)
    IDINSTANCE      reduce using rule 67 (expression -> expression MINUS variables .)
    IDCLASS         reduce using rule 67 (expression -> expression MINUS variables .)
    IDGLOBAL        reduce using rule 67 (expression -> expression MINUS variables .)
    WHILE           reduce using rule 67 (expression -> expression MINUS variables .)
    NUMBER          reduce using rule 67 (expression -> expression MINUS variables .)
    FLOAT           reduce using rule 67 (expression -> expression MINUS variables .)
    STRING          reduce using rule 67 (expression -> expression MINUS variables .)
    STRINGV         reduce using rule 67 (expression -> expression MINUS variables .)
    BREAK           reduce using rule 67 (expression -> expression MINUS variables .)

  ! PLUS            [ reduce using rule 71 (term -> variables .) ]
  ! MINUS           [ reduce using rule 71 (term -> variables .) ]
  ! DIVISION        [ reduce using rule 71 (term -> variables .) ]
  ! MOD             [ reduce using rule 71 (term -> variables .) ]
  ! MULT            [ reduce using rule 71 (term -> variables .) ]
  ! EXP             [ reduce using rule 71 (term -> variables .) ]
  ! $end            [ reduce using rule 71 (term -> variables .) ]
  ! END             [ reduce using rule 71 (term -> variables .) ]
  ! ELSE            [ reduce using rule 71 (term -> variables .) ]
  ! RETURN          [ reduce using rule 71 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 71 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 71 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 71 (term -> variables .) ]
  ! HASH            [ reduce using rule 71 (term -> variables .) ]
  ! FOR             [ reduce using rule 71 (term -> variables .) ]
  ! TRUE            [ reduce using rule 71 (term -> variables .) ]
  ! FALSE           [ reduce using rule 71 (term -> variables .) ]
  ! NIL             [ reduce using rule 71 (term -> variables .) ]
  ! IF              [ reduce using rule 71 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 71 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 71 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 71 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 71 (term -> variables .) ]
  ! WHILE           [ reduce using rule 71 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 71 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 71 (term -> variables .) ]
  ! STRING          [ reduce using rule 71 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 71 (term -> variables .) ]
  ! BREAK           [ reduce using rule 71 (term -> variables .) ]


state 89

    (68) expression -> expression MINUS term .

    PLUS            reduce using rule 68 (expression -> expression MINUS term .)
    MINUS           reduce using rule 68 (expression -> expression MINUS term .)
    DIVISION        reduce using rule 68 (expression -> expression MINUS term .)
    MOD             reduce using rule 68 (expression -> expression MINUS term .)
    MULT            reduce using rule 68 (expression -> expression MINUS term .)
    EXP             reduce using rule 68 (expression -> expression MINUS term .)
    $end            reduce using rule 68 (expression -> expression MINUS term .)
    END             reduce using rule 68 (expression -> expression MINUS term .)
    ELSE            reduce using rule 68 (expression -> expression MINUS term .)
    RETURN          reduce using rule 68 (expression -> expression MINUS term .)
    ARRAY           reduce using rule 68 (expression -> expression MINUS term .)
    LSQBRACKET      reduce using rule 68 (expression -> expression MINUS term .)
    LBRACKET        reduce using rule 68 (expression -> expression MINUS term .)
    HASH            reduce using rule 68 (expression -> expression MINUS term .)
    FOR             reduce using rule 68 (expression -> expression MINUS term .)
    TRUE            reduce using rule 68 (expression -> expression MINUS term .)
    FALSE           reduce using rule 68 (expression -> expression MINUS term .)
    NIL             reduce using rule 68 (expression -> expression MINUS term .)
    IF              reduce using rule 68 (expression -> expression MINUS term .)
    IDLOCAL         reduce using rule 68 (expression -> expression MINUS term .)
    IDINSTANCE      reduce using rule 68 (expression -> expression MINUS term .)
    IDCLASS         reduce using rule 68 (expression -> expression MINUS term .)
    IDGLOBAL        reduce using rule 68 (expression -> expression MINUS term .)
    WHILE           reduce using rule 68 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 68 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 68 (expression -> expression MINUS term .)
    STRING          reduce using rule 68 (expression -> expression MINUS term .)
    STRINGV         reduce using rule 68 (expression -> expression MINUS term .)
    BREAK           reduce using rule 68 (expression -> expression MINUS term .)


state 90

    (76) expression -> expression DIVISION term .

    PLUS            reduce using rule 76 (expression -> expression DIVISION term .)
    MINUS           reduce using rule 76 (expression -> expression DIVISION term .)
    DIVISION        reduce using rule 76 (expression -> expression DIVISION term .)
    MOD             reduce using rule 76 (expression -> expression DIVISION term .)
    MULT            reduce using rule 76 (expression -> expression DIVISION term .)
    EXP             reduce using rule 76 (expression -> expression DIVISION term .)
    $end            reduce using rule 76 (expression -> expression DIVISION term .)
    END             reduce using rule 76 (expression -> expression DIVISION term .)
    ELSE            reduce using rule 76 (expression -> expression DIVISION term .)
    RETURN          reduce using rule 76 (expression -> expression DIVISION term .)
    ARRAY           reduce using rule 76 (expression -> expression DIVISION term .)
    LSQBRACKET      reduce using rule 76 (expression -> expression DIVISION term .)
    LBRACKET        reduce using rule 76 (expression -> expression DIVISION term .)
    HASH            reduce using rule 76 (expression -> expression DIVISION term .)
    FOR             reduce using rule 76 (expression -> expression DIVISION term .)
    TRUE            reduce using rule 76 (expression -> expression DIVISION term .)
    FALSE           reduce using rule 76 (expression -> expression DIVISION term .)
    NIL             reduce using rule 76 (expression -> expression DIVISION term .)
    IF              reduce using rule 76 (expression -> expression DIVISION term .)
    IDLOCAL         reduce using rule 76 (expression -> expression DIVISION term .)
    IDINSTANCE      reduce using rule 76 (expression -> expression DIVISION term .)
    IDCLASS         reduce using rule 76 (expression -> expression DIVISION term .)
    IDGLOBAL        reduce using rule 76 (expression -> expression DIVISION term .)
    WHILE           reduce using rule 76 (expression -> expression DIVISION term .)
    NUMBER          reduce using rule 76 (expression -> expression DIVISION term .)
    FLOAT           reduce using rule 76 (expression -> expression DIVISION term .)
    STRING          reduce using rule 76 (expression -> expression DIVISION term .)
    STRINGV         reduce using rule 76 (expression -> expression DIVISION term .)
    BREAK           reduce using rule 76 (expression -> expression DIVISION term .)


state 91

    (77) expression -> expression MOD term .

    PLUS            reduce using rule 77 (expression -> expression MOD term .)
    MINUS           reduce using rule 77 (expression -> expression MOD term .)
    DIVISION        reduce using rule 77 (expression -> expression MOD term .)
    MOD             reduce using rule 77 (expression -> expression MOD term .)
    MULT            reduce using rule 77 (expression -> expression MOD term .)
    EXP             reduce using rule 77 (expression -> expression MOD term .)
    $end            reduce using rule 77 (expression -> expression MOD term .)
    END             reduce using rule 77 (expression -> expression MOD term .)
    ELSE            reduce using rule 77 (expression -> expression MOD term .)
    RETURN          reduce using rule 77 (expression -> expression MOD term .)
    ARRAY           reduce using rule 77 (expression -> expression MOD term .)
    LSQBRACKET      reduce using rule 77 (expression -> expression MOD term .)
    LBRACKET        reduce using rule 77 (expression -> expression MOD term .)
    HASH            reduce using rule 77 (expression -> expression MOD term .)
    FOR             reduce using rule 77 (expression -> expression MOD term .)
    TRUE            reduce using rule 77 (expression -> expression MOD term .)
    FALSE           reduce using rule 77 (expression -> expression MOD term .)
    NIL             reduce using rule 77 (expression -> expression MOD term .)
    IF              reduce using rule 77 (expression -> expression MOD term .)
    IDLOCAL         reduce using rule 77 (expression -> expression MOD term .)
    IDINSTANCE      reduce using rule 77 (expression -> expression MOD term .)
    IDCLASS         reduce using rule 77 (expression -> expression MOD term .)
    IDGLOBAL        reduce using rule 77 (expression -> expression MOD term .)
    WHILE           reduce using rule 77 (expression -> expression MOD term .)
    NUMBER          reduce using rule 77 (expression -> expression MOD term .)
    FLOAT           reduce using rule 77 (expression -> expression MOD term .)
    STRING          reduce using rule 77 (expression -> expression MOD term .)
    STRINGV         reduce using rule 77 (expression -> expression MOD term .)
    BREAK           reduce using rule 77 (expression -> expression MOD term .)


state 92

    (78) expression -> expression MULT term .

    PLUS            reduce using rule 78 (expression -> expression MULT term .)
    MINUS           reduce using rule 78 (expression -> expression MULT term .)
    DIVISION        reduce using rule 78 (expression -> expression MULT term .)
    MOD             reduce using rule 78 (expression -> expression MULT term .)
    MULT            reduce using rule 78 (expression -> expression MULT term .)
    EXP             reduce using rule 78 (expression -> expression MULT term .)
    $end            reduce using rule 78 (expression -> expression MULT term .)
    END             reduce using rule 78 (expression -> expression MULT term .)
    ELSE            reduce using rule 78 (expression -> expression MULT term .)
    RETURN          reduce using rule 78 (expression -> expression MULT term .)
    ARRAY           reduce using rule 78 (expression -> expression MULT term .)
    LSQBRACKET      reduce using rule 78 (expression -> expression MULT term .)
    LBRACKET        reduce using rule 78 (expression -> expression MULT term .)
    HASH            reduce using rule 78 (expression -> expression MULT term .)
    FOR             reduce using rule 78 (expression -> expression MULT term .)
    TRUE            reduce using rule 78 (expression -> expression MULT term .)
    FALSE           reduce using rule 78 (expression -> expression MULT term .)
    NIL             reduce using rule 78 (expression -> expression MULT term .)
    IF              reduce using rule 78 (expression -> expression MULT term .)
    IDLOCAL         reduce using rule 78 (expression -> expression MULT term .)
    IDINSTANCE      reduce using rule 78 (expression -> expression MULT term .)
    IDCLASS         reduce using rule 78 (expression -> expression MULT term .)
    IDGLOBAL        reduce using rule 78 (expression -> expression MULT term .)
    WHILE           reduce using rule 78 (expression -> expression MULT term .)
    NUMBER          reduce using rule 78 (expression -> expression MULT term .)
    FLOAT           reduce using rule 78 (expression -> expression MULT term .)
    STRING          reduce using rule 78 (expression -> expression MULT term .)
    STRINGV         reduce using rule 78 (expression -> expression MULT term .)
    BREAK           reduce using rule 78 (expression -> expression MULT term .)


state 93

    (79) expression -> expression EXP term .

    PLUS            reduce using rule 79 (expression -> expression EXP term .)
    MINUS           reduce using rule 79 (expression -> expression EXP term .)
    DIVISION        reduce using rule 79 (expression -> expression EXP term .)
    MOD             reduce using rule 79 (expression -> expression EXP term .)
    MULT            reduce using rule 79 (expression -> expression EXP term .)
    EXP             reduce using rule 79 (expression -> expression EXP term .)
    $end            reduce using rule 79 (expression -> expression EXP term .)
    END             reduce using rule 79 (expression -> expression EXP term .)
    ELSE            reduce using rule 79 (expression -> expression EXP term .)
    RETURN          reduce using rule 79 (expression -> expression EXP term .)
    ARRAY           reduce using rule 79 (expression -> expression EXP term .)
    LSQBRACKET      reduce using rule 79 (expression -> expression EXP term .)
    LBRACKET        reduce using rule 79 (expression -> expression EXP term .)
    HASH            reduce using rule 79 (expression -> expression EXP term .)
    FOR             reduce using rule 79 (expression -> expression EXP term .)
    TRUE            reduce using rule 79 (expression -> expression EXP term .)
    FALSE           reduce using rule 79 (expression -> expression EXP term .)
    NIL             reduce using rule 79 (expression -> expression EXP term .)
    IF              reduce using rule 79 (expression -> expression EXP term .)
    IDLOCAL         reduce using rule 79 (expression -> expression EXP term .)
    IDINSTANCE      reduce using rule 79 (expression -> expression EXP term .)
    IDCLASS         reduce using rule 79 (expression -> expression EXP term .)
    IDGLOBAL        reduce using rule 79 (expression -> expression EXP term .)
    WHILE           reduce using rule 79 (expression -> expression EXP term .)
    NUMBER          reduce using rule 79 (expression -> expression EXP term .)
    FLOAT           reduce using rule 79 (expression -> expression EXP term .)
    STRING          reduce using rule 79 (expression -> expression EXP term .)
    STRINGV         reduce using rule 79 (expression -> expression EXP term .)
    BREAK           reduce using rule 79 (expression -> expression EXP term .)


state 94

    (85) metodocadena -> string POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 147


state 95

    (87) metodocadena -> string POINT LENGTH .

    $end            reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    END             reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    ELSE            reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    RETURN          reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    ARRAY           reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    LSQBRACKET      reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    LBRACKET        reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    HASH            reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    FOR             reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    TRUE            reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    FALSE           reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    NIL             reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    IF              reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    IDLOCAL         reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    IDINSTANCE      reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    IDCLASS         reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    IDGLOBAL        reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    WHILE           reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    NUMBER          reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    FLOAT           reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    MINUS           reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    STRING          reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    STRINGV         reduce using rule 87 (metodocadena -> string POINT LENGTH .)
    BREAK           reduce using rule 87 (metodocadena -> string POINT LENGTH .)


state 96

    (84) metodocadena -> cadena POINT EMPTY . INTERROGATIVE

    INTERROGATIVE   shift and go to state 148


state 97

    (86) metodocadena -> cadena POINT LENGTH .

    $end            reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    END             reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    ELSE            reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    RETURN          reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    ARRAY           reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    LSQBRACKET      reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    LBRACKET        reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    HASH            reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    FOR             reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    TRUE            reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    FALSE           reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    NIL             reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    IF              reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    IDLOCAL         reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    IDINSTANCE      reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    IDCLASS         reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    IDGLOBAL        reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    WHILE           reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    NUMBER          reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    FLOAT           reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    MINUS           reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    STRING          reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    STRINGV         reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)
    BREAK           reduce using rule 86 (metodocadena -> cadena POINT LENGTH .)


state 98

    (97) metodosarreglo -> arreglo POINT INDEX . LPARENTHESIS arraycontent RPARENTHESIS

    LPARENTHESIS    shift and go to state 149


state 99

    (98) metodosarreglo -> arreglo LSQBRACKET factor . RSQBRACKET

    RSQBRACKET      shift and go to state 150


state 100

    (58) assigns -> variables ASSIGN variables .
    (12) asignar -> variables .
    (71) term -> variables .
    (105) metodohash -> variables . ASSIGN hash POINT LENGTH
    (106) metodohash -> variables . POINT LENGTH
    (57) assigns -> variables . ASSIGN expression
    (58) assigns -> variables . ASSIGN variables
    (59) assigns -> variables . ASSIGN boolean
    (60) assigns -> variables . ASSIGN asignar
    (61) assigns -> variables . ASSIGNPLUS expression
    (62) assigns -> variables . ASSIGNPLUS variables
    (63) assigns -> variables . ASSIGNMIN expression
    (64) assigns -> variables . ASSIGNMIN variables

  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for MINUS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for MINUS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for $end resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for END resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 12 (asignar -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 12 (asignar -> variables .)
    $end            reduce using rule 12 (asignar -> variables .)
    END             reduce using rule 12 (asignar -> variables .)
    ELSE            reduce using rule 12 (asignar -> variables .)
    RETURN          reduce using rule 12 (asignar -> variables .)
    ARRAY           reduce using rule 12 (asignar -> variables .)
    LSQBRACKET      reduce using rule 12 (asignar -> variables .)
    LBRACKET        reduce using rule 12 (asignar -> variables .)
    HASH            reduce using rule 12 (asignar -> variables .)
    FOR             reduce using rule 12 (asignar -> variables .)
    TRUE            reduce using rule 12 (asignar -> variables .)
    FALSE           reduce using rule 12 (asignar -> variables .)
    NIL             reduce using rule 12 (asignar -> variables .)
    IF              reduce using rule 12 (asignar -> variables .)
    IDLOCAL         reduce using rule 12 (asignar -> variables .)
    IDINSTANCE      reduce using rule 12 (asignar -> variables .)
    IDCLASS         reduce using rule 12 (asignar -> variables .)
    IDGLOBAL        reduce using rule 12 (asignar -> variables .)
    WHILE           reduce using rule 12 (asignar -> variables .)
    NUMBER          reduce using rule 12 (asignar -> variables .)
    FLOAT           reduce using rule 12 (asignar -> variables .)
    MINUS           reduce using rule 12 (asignar -> variables .)
    STRING          reduce using rule 12 (asignar -> variables .)
    STRINGV         reduce using rule 12 (asignar -> variables .)
    BREAK           reduce using rule 12 (asignar -> variables .)
    PLUS            reduce using rule 71 (term -> variables .)
    DIVISION        reduce using rule 71 (term -> variables .)
    MOD             reduce using rule 71 (term -> variables .)
    MULT            reduce using rule 71 (term -> variables .)
    EXP             reduce using rule 71 (term -> variables .)
    ASSIGN          shift and go to state 58
    POINT           shift and go to state 59
    ASSIGNPLUS      shift and go to state 60
    ASSIGNMIN       shift and go to state 61

  ! $end            [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! END             [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! ELSE            [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! RETURN          [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! ARRAY           [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! LSQBRACKET      [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! LBRACKET        [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! HASH            [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! FOR             [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! TRUE            [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! FALSE           [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! NIL             [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! IF              [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! IDLOCAL         [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! IDINSTANCE      [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! IDCLASS         [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! IDGLOBAL        [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! WHILE           [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! NUMBER          [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! FLOAT           [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! STRING          [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! STRINGV         [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! BREAK           [ reduce using rule 58 (assigns -> variables ASSIGN variables .) ]
  ! MINUS           [ reduce using rule 71 (term -> variables .) ]
  ! $end            [ reduce using rule 71 (term -> variables .) ]
  ! END             [ reduce using rule 71 (term -> variables .) ]
  ! ELSE            [ reduce using rule 71 (term -> variables .) ]
  ! RETURN          [ reduce using rule 71 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 71 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 71 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 71 (term -> variables .) ]
  ! HASH            [ reduce using rule 71 (term -> variables .) ]
  ! FOR             [ reduce using rule 71 (term -> variables .) ]
  ! TRUE            [ reduce using rule 71 (term -> variables .) ]
  ! FALSE           [ reduce using rule 71 (term -> variables .) ]
  ! NIL             [ reduce using rule 71 (term -> variables .) ]
  ! IF              [ reduce using rule 71 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 71 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 71 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 71 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 71 (term -> variables .) ]
  ! WHILE           [ reduce using rule 71 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 71 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 71 (term -> variables .) ]
  ! STRING          [ reduce using rule 71 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 71 (term -> variables .) ]
  ! BREAK           [ reduce using rule 71 (term -> variables .) ]


state 101

    (105) metodohash -> variables ASSIGN hash . POINT LENGTH
    (9) asignar -> hash .

    POINT           shift and go to state 151
    $end            reduce using rule 9 (asignar -> hash .)
    END             reduce using rule 9 (asignar -> hash .)
    ELSE            reduce using rule 9 (asignar -> hash .)
    RETURN          reduce using rule 9 (asignar -> hash .)
    ARRAY           reduce using rule 9 (asignar -> hash .)
    LSQBRACKET      reduce using rule 9 (asignar -> hash .)
    LBRACKET        reduce using rule 9 (asignar -> hash .)
    HASH            reduce using rule 9 (asignar -> hash .)
    FOR             reduce using rule 9 (asignar -> hash .)
    TRUE            reduce using rule 9 (asignar -> hash .)
    FALSE           reduce using rule 9 (asignar -> hash .)
    NIL             reduce using rule 9 (asignar -> hash .)
    IF              reduce using rule 9 (asignar -> hash .)
    IDLOCAL         reduce using rule 9 (asignar -> hash .)
    IDINSTANCE      reduce using rule 9 (asignar -> hash .)
    IDCLASS         reduce using rule 9 (asignar -> hash .)
    IDGLOBAL        reduce using rule 9 (asignar -> hash .)
    WHILE           reduce using rule 9 (asignar -> hash .)
    NUMBER          reduce using rule 9 (asignar -> hash .)
    FLOAT           reduce using rule 9 (asignar -> hash .)
    MINUS           reduce using rule 9 (asignar -> hash .)
    STRING          reduce using rule 9 (asignar -> hash .)
    STRINGV         reduce using rule 9 (asignar -> hash .)
    BREAK           reduce using rule 9 (asignar -> hash .)


state 102

    (57) assigns -> variables ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . PLUS variables
    (67) expression -> expression . MINUS variables
    (68) expression -> expression . MINUS term
    (76) expression -> expression . DIVISION term
    (77) expression -> expression . MOD term
    (78) expression -> expression . MULT term
    (79) expression -> expression . EXP term
    (3) asignar -> expression .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for END resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for ARRAY resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for HASH resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NIL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (asignar -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for STRINGV resolved using rule 3 (asignar -> expression .)
  ! reduce/reduce conflict for BREAK resolved using rule 3 (asignar -> expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53
    $end            reduce using rule 3 (asignar -> expression .)
    END             reduce using rule 3 (asignar -> expression .)
    ELSE            reduce using rule 3 (asignar -> expression .)
    RETURN          reduce using rule 3 (asignar -> expression .)
    ARRAY           reduce using rule 3 (asignar -> expression .)
    LSQBRACKET      reduce using rule 3 (asignar -> expression .)
    LBRACKET        reduce using rule 3 (asignar -> expression .)
    HASH            reduce using rule 3 (asignar -> expression .)
    FOR             reduce using rule 3 (asignar -> expression .)
    TRUE            reduce using rule 3 (asignar -> expression .)
    FALSE           reduce using rule 3 (asignar -> expression .)
    NIL             reduce using rule 3 (asignar -> expression .)
    IF              reduce using rule 3 (asignar -> expression .)
    IDLOCAL         reduce using rule 3 (asignar -> expression .)
    IDINSTANCE      reduce using rule 3 (asignar -> expression .)
    IDCLASS         reduce using rule 3 (asignar -> expression .)
    IDGLOBAL        reduce using rule 3 (asignar -> expression .)
    WHILE           reduce using rule 3 (asignar -> expression .)
    NUMBER          reduce using rule 3 (asignar -> expression .)
    FLOAT           reduce using rule 3 (asignar -> expression .)
    STRING          reduce using rule 3 (asignar -> expression .)
    STRINGV         reduce using rule 3 (asignar -> expression .)
    BREAK           reduce using rule 3 (asignar -> expression .)

  ! $end            [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! END             [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! ELSE            [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! RETURN          [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! ARRAY           [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! LSQBRACKET      [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! HASH            [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! FOR             [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! TRUE            [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! FALSE           [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! NIL             [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! IF              [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! IDLOCAL         [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! IDINSTANCE      [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! IDCLASS         [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! IDGLOBAL        [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! WHILE           [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! NUMBER          [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! FLOAT           [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! STRING          [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! STRINGV         [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! BREAK           [ reduce using rule 57 (assigns -> variables ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 3 (asignar -> expression .) ]


state 103

    (59) assigns -> variables ASSIGN boolean .
    (11) asignar -> boolean .

  ! reduce/reduce conflict for $end resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for END resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for ELSE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for RETURN resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for ARRAY resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for HASH resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for FOR resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for TRUE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for FALSE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for NIL resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IF resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for WHILE resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for NUMBER resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for FLOAT resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for MINUS resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for STRING resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for STRINGV resolved using rule 11 (asignar -> boolean .)
  ! reduce/reduce conflict for BREAK resolved using rule 11 (asignar -> boolean .)
    $end            reduce using rule 11 (asignar -> boolean .)
    END             reduce using rule 11 (asignar -> boolean .)
    ELSE            reduce using rule 11 (asignar -> boolean .)
    RETURN          reduce using rule 11 (asignar -> boolean .)
    ARRAY           reduce using rule 11 (asignar -> boolean .)
    LSQBRACKET      reduce using rule 11 (asignar -> boolean .)
    LBRACKET        reduce using rule 11 (asignar -> boolean .)
    HASH            reduce using rule 11 (asignar -> boolean .)
    FOR             reduce using rule 11 (asignar -> boolean .)
    TRUE            reduce using rule 11 (asignar -> boolean .)
    FALSE           reduce using rule 11 (asignar -> boolean .)
    NIL             reduce using rule 11 (asignar -> boolean .)
    IF              reduce using rule 11 (asignar -> boolean .)
    IDLOCAL         reduce using rule 11 (asignar -> boolean .)
    IDINSTANCE      reduce using rule 11 (asignar -> boolean .)
    IDCLASS         reduce using rule 11 (asignar -> boolean .)
    IDGLOBAL        reduce using rule 11 (asignar -> boolean .)
    WHILE           reduce using rule 11 (asignar -> boolean .)
    NUMBER          reduce using rule 11 (asignar -> boolean .)
    FLOAT           reduce using rule 11 (asignar -> boolean .)
    MINUS           reduce using rule 11 (asignar -> boolean .)
    STRING          reduce using rule 11 (asignar -> boolean .)
    STRINGV         reduce using rule 11 (asignar -> boolean .)
    BREAK           reduce using rule 11 (asignar -> boolean .)

  ! $end            [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! END             [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! ELSE            [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! RETURN          [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! ARRAY           [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! LSQBRACKET      [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! LBRACKET        [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! HASH            [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! FOR             [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! TRUE            [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! FALSE           [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! NIL             [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! IF              [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! IDLOCAL         [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! IDINSTANCE      [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! IDCLASS         [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! IDGLOBAL        [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! WHILE           [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! NUMBER          [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! FLOAT           [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! MINUS           [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! STRING          [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! STRINGV         [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]
  ! BREAK           [ reduce using rule 59 (assigns -> variables ASSIGN boolean .) ]


state 104

    (60) assigns -> variables ASSIGN asignar .

    $end            reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    END             reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    ELSE            reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    RETURN          reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    ARRAY           reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    LSQBRACKET      reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    LBRACKET        reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    HASH            reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    FOR             reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    TRUE            reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    FALSE           reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    NIL             reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    IF              reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    IDLOCAL         reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    IDINSTANCE      reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    IDCLASS         reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    IDGLOBAL        reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    WHILE           reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    NUMBER          reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    FLOAT           reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    MINUS           reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    STRING          reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    STRINGV         reduce using rule 60 (assigns -> variables ASSIGN asignar .)
    BREAK           reduce using rule 60 (assigns -> variables ASSIGN asignar .)


state 105

    (106) metodohash -> variables POINT LENGTH .

    $end            reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    END             reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    ELSE            reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    RETURN          reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    ARRAY           reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    LSQBRACKET      reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    LBRACKET        reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    HASH            reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    FOR             reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    TRUE            reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    FALSE           reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    NIL             reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    IF              reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    IDLOCAL         reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    IDINSTANCE      reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    IDCLASS         reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    IDGLOBAL        reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    WHILE           reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    NUMBER          reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    FLOAT           reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    MINUS           reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    STRING          reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    STRINGV         reduce using rule 106 (metodohash -> variables POINT LENGTH .)
    BREAK           reduce using rule 106 (metodohash -> variables POINT LENGTH .)


state 106

    (62) assigns -> variables ASSIGNPLUS variables .
    (71) term -> variables .

  ! reduce/reduce conflict for MINUS resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for $end resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for END resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for HASH resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for FOR resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for NIL resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IF resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for STRING resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    $end            reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    END             reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    ELSE            reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    RETURN          reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    ARRAY           reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    LSQBRACKET      reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    LBRACKET        reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    HASH            reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    FOR             reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    TRUE            reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    FALSE           reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    NIL             reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    IF              reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    IDLOCAL         reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    IDINSTANCE      reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    IDCLASS         reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    IDGLOBAL        reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    WHILE           reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    NUMBER          reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    FLOAT           reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    MINUS           reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    STRING          reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    STRINGV         reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    BREAK           reduce using rule 62 (assigns -> variables ASSIGNPLUS variables .)
    PLUS            reduce using rule 71 (term -> variables .)
    DIVISION        reduce using rule 71 (term -> variables .)
    MOD             reduce using rule 71 (term -> variables .)
    MULT            reduce using rule 71 (term -> variables .)
    EXP             reduce using rule 71 (term -> variables .)

  ! MINUS           [ reduce using rule 71 (term -> variables .) ]
  ! $end            [ reduce using rule 71 (term -> variables .) ]
  ! END             [ reduce using rule 71 (term -> variables .) ]
  ! ELSE            [ reduce using rule 71 (term -> variables .) ]
  ! RETURN          [ reduce using rule 71 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 71 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 71 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 71 (term -> variables .) ]
  ! HASH            [ reduce using rule 71 (term -> variables .) ]
  ! FOR             [ reduce using rule 71 (term -> variables .) ]
  ! TRUE            [ reduce using rule 71 (term -> variables .) ]
  ! FALSE           [ reduce using rule 71 (term -> variables .) ]
  ! NIL             [ reduce using rule 71 (term -> variables .) ]
  ! IF              [ reduce using rule 71 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 71 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 71 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 71 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 71 (term -> variables .) ]
  ! WHILE           [ reduce using rule 71 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 71 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 71 (term -> variables .) ]
  ! STRING          [ reduce using rule 71 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 71 (term -> variables .) ]
  ! BREAK           [ reduce using rule 71 (term -> variables .) ]


state 107

    (61) assigns -> variables ASSIGNPLUS expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . PLUS variables
    (67) expression -> expression . MINUS variables
    (68) expression -> expression . MINUS term
    (76) expression -> expression . DIVISION term
    (77) expression -> expression . MOD term
    (78) expression -> expression . MULT term
    (79) expression -> expression . EXP term

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    END             reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    ELSE            reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    RETURN          reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    ARRAY           reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    LSQBRACKET      reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    LBRACKET        reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    HASH            reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    FOR             reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    TRUE            reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    FALSE           reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    NIL             reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    IF              reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    IDLOCAL         reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    IDINSTANCE      reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    IDCLASS         reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    IDGLOBAL        reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    WHILE           reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    NUMBER          reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    FLOAT           reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    STRING          reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    STRINGV         reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    BREAK           reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53

  ! MINUS           [ reduce using rule 61 (assigns -> variables ASSIGNPLUS expression .) ]


state 108

    (64) assigns -> variables ASSIGNMIN variables .
    (71) term -> variables .

  ! reduce/reduce conflict for MINUS resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for $end resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for END resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for HASH resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for FOR resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for NIL resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IF resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for STRING resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 64 (assigns -> variables ASSIGNMIN variables .)
    $end            reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    END             reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    ELSE            reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    RETURN          reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    ARRAY           reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    LSQBRACKET      reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    LBRACKET        reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    HASH            reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    FOR             reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    TRUE            reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    FALSE           reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    NIL             reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    IF              reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    IDLOCAL         reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    IDINSTANCE      reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    IDCLASS         reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    IDGLOBAL        reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    WHILE           reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    NUMBER          reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    FLOAT           reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    MINUS           reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    STRING          reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    STRINGV         reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    BREAK           reduce using rule 64 (assigns -> variables ASSIGNMIN variables .)
    PLUS            reduce using rule 71 (term -> variables .)
    DIVISION        reduce using rule 71 (term -> variables .)
    MOD             reduce using rule 71 (term -> variables .)
    MULT            reduce using rule 71 (term -> variables .)
    EXP             reduce using rule 71 (term -> variables .)

  ! MINUS           [ reduce using rule 71 (term -> variables .) ]
  ! $end            [ reduce using rule 71 (term -> variables .) ]
  ! END             [ reduce using rule 71 (term -> variables .) ]
  ! ELSE            [ reduce using rule 71 (term -> variables .) ]
  ! RETURN          [ reduce using rule 71 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 71 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 71 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 71 (term -> variables .) ]
  ! HASH            [ reduce using rule 71 (term -> variables .) ]
  ! FOR             [ reduce using rule 71 (term -> variables .) ]
  ! TRUE            [ reduce using rule 71 (term -> variables .) ]
  ! FALSE           [ reduce using rule 71 (term -> variables .) ]
  ! NIL             [ reduce using rule 71 (term -> variables .) ]
  ! IF              [ reduce using rule 71 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 71 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 71 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 71 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 71 (term -> variables .) ]
  ! WHILE           [ reduce using rule 71 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 71 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 71 (term -> variables .) ]
  ! STRING          [ reduce using rule 71 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 71 (term -> variables .) ]
  ! BREAK           [ reduce using rule 71 (term -> variables .) ]


state 109

    (63) assigns -> variables ASSIGNMIN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . PLUS variables
    (67) expression -> expression . MINUS variables
    (68) expression -> expression . MINUS term
    (76) expression -> expression . DIVISION term
    (77) expression -> expression . MOD term
    (78) expression -> expression . MULT term
    (79) expression -> expression . EXP term

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    END             reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    ELSE            reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    RETURN          reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    ARRAY           reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    LSQBRACKET      reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    LBRACKET        reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    HASH            reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    FOR             reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    TRUE            reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    FALSE           reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    NIL             reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    IF              reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    IDLOCAL         reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    IDINSTANCE      reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    IDCLASS         reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    IDGLOBAL        reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    WHILE           reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    NUMBER          reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    FLOAT           reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    STRING          reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    STRINGV         reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    BREAK           reduce using rule 63 (assigns -> variables ASSIGNMIN expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53

  ! MINUS           [ reduce using rule 63 (assigns -> variables ASSIGNMIN expression .) ]


state 110

    (81) cadena -> STRING POINT NEW .
    (82) cadena -> STRING POINT NEW . LPARENTHESIS string RPARENTHESIS

    POINT           reduce using rule 81 (cadena -> STRING POINT NEW .)
    $end            reduce using rule 81 (cadena -> STRING POINT NEW .)
    END             reduce using rule 81 (cadena -> STRING POINT NEW .)
    ELSE            reduce using rule 81 (cadena -> STRING POINT NEW .)
    RETURN          reduce using rule 81 (cadena -> STRING POINT NEW .)
    ARRAY           reduce using rule 81 (cadena -> STRING POINT NEW .)
    LSQBRACKET      reduce using rule 81 (cadena -> STRING POINT NEW .)
    LBRACKET        reduce using rule 81 (cadena -> STRING POINT NEW .)
    HASH            reduce using rule 81 (cadena -> STRING POINT NEW .)
    FOR             reduce using rule 81 (cadena -> STRING POINT NEW .)
    TRUE            reduce using rule 81 (cadena -> STRING POINT NEW .)
    FALSE           reduce using rule 81 (cadena -> STRING POINT NEW .)
    NIL             reduce using rule 81 (cadena -> STRING POINT NEW .)
    IF              reduce using rule 81 (cadena -> STRING POINT NEW .)
    IDLOCAL         reduce using rule 81 (cadena -> STRING POINT NEW .)
    IDINSTANCE      reduce using rule 81 (cadena -> STRING POINT NEW .)
    IDCLASS         reduce using rule 81 (cadena -> STRING POINT NEW .)
    IDGLOBAL        reduce using rule 81 (cadena -> STRING POINT NEW .)
    WHILE           reduce using rule 81 (cadena -> STRING POINT NEW .)
    NUMBER          reduce using rule 81 (cadena -> STRING POINT NEW .)
    FLOAT           reduce using rule 81 (cadena -> STRING POINT NEW .)
    MINUS           reduce using rule 81 (cadena -> STRING POINT NEW .)
    STRING          reduce using rule 81 (cadena -> STRING POINT NEW .)
    STRINGV         reduce using rule 81 (cadena -> STRING POINT NEW .)
    BREAK           reduce using rule 81 (cadena -> STRING POINT NEW .)
    LPARENTHESIS    shift and go to state 152


state 111

    (83) cadena -> STRING LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 153


state 112

    (88) arreglo -> ARRAY POINT NEW .
    (89) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> ARRAY POINT NEW . LPARENTHESIS factor COMMA arraycontent RPARENTHESIS

    POINT           reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    LSQBRACKET      reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    $end            reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    END             reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    ELSE            reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    RETURN          reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    ARRAY           reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    LBRACKET        reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    HASH            reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    FOR             reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    TRUE            reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    FALSE           reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    NIL             reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    IF              reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    IDLOCAL         reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    IDINSTANCE      reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    IDCLASS         reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    IDGLOBAL        reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    WHILE           reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    NUMBER          reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    FLOAT           reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    MINUS           reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    STRING          reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    STRINGV         reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    BREAK           reduce using rule 88 (arreglo -> ARRAY POINT NEW .)
    LPARENTHESIS    shift and go to state 154


state 113

    (91) arreglo -> ARRAY LSQBRACKET arraycontent . RSQBRACKET

    RSQBRACKET      shift and go to state 155


state 114

    (92) arreglo -> LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    END             reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    ELSE            reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    RETURN          reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    ARRAY           reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    LBRACKET        reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    HASH            reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    FOR             reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    TRUE            reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    FALSE           reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    NIL             reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IF              reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDLOCAL         reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDINSTANCE      reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDCLASS         reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    IDGLOBAL        reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    WHILE           reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    NUMBER          reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    FLOAT           reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    MINUS           reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    STRING          reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    STRINGV         reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)
    BREAK           reduce using rule 92 (arreglo -> LSQBRACKET arraycontent RSQBRACKET .)


state 115

    (95) arraycontent -> factor COMMA . arraycontent
    (93) arraycontent -> . factor
    (94) arraycontent -> . string
    (95) arraycontent -> . factor COMMA arraycontent
    (96) arraycontent -> . string COMMA arraycontent
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (80) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    factor                         shift and go to state 69
    arraycontent                   shift and go to state 156
    string                         shift and go to state 70

state 116

    (96) arraycontent -> string COMMA . arraycontent
    (93) arraycontent -> . factor
    (94) arraycontent -> . string
    (95) arraycontent -> . factor COMMA arraycontent
    (96) arraycontent -> . string COMMA arraycontent
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (80) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    string                         shift and go to state 70
    arraycontent                   shift and go to state 157
    factor                         shift and go to state 69

state 117

    (99) hash -> LBRACKET hashcontent RBRACKET .

    $end            reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    POINT           reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    END             reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    ELSE            reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    RETURN          reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    ARRAY           reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    LSQBRACKET      reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    LBRACKET        reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    HASH            reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    FOR             reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    TRUE            reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    FALSE           reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    NIL             reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    IF              reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    IDLOCAL         reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    IDINSTANCE      reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    IDCLASS         reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    IDGLOBAL        reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    WHILE           reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    NUMBER          reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    FLOAT           reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    MINUS           reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    STRING          reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    STRINGV         reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)
    BREAK           reduce using rule 99 (hash -> LBRACKET hashcontent RBRACKET .)


state 118

    (101) hashcontent -> string ASSIGN . GREATER hashcontentvalue
    (102) hashcontent -> string ASSIGN . GREATER hashcontentvalue COMMA hashcontent

    GREATER         shift and go to state 158


state 119

    (100) hash -> HASH POINT NEW .

    $end            reduce using rule 100 (hash -> HASH POINT NEW .)
    POINT           reduce using rule 100 (hash -> HASH POINT NEW .)
    END             reduce using rule 100 (hash -> HASH POINT NEW .)
    ELSE            reduce using rule 100 (hash -> HASH POINT NEW .)
    RETURN          reduce using rule 100 (hash -> HASH POINT NEW .)
    ARRAY           reduce using rule 100 (hash -> HASH POINT NEW .)
    LSQBRACKET      reduce using rule 100 (hash -> HASH POINT NEW .)
    LBRACKET        reduce using rule 100 (hash -> HASH POINT NEW .)
    HASH            reduce using rule 100 (hash -> HASH POINT NEW .)
    FOR             reduce using rule 100 (hash -> HASH POINT NEW .)
    TRUE            reduce using rule 100 (hash -> HASH POINT NEW .)
    FALSE           reduce using rule 100 (hash -> HASH POINT NEW .)
    NIL             reduce using rule 100 (hash -> HASH POINT NEW .)
    IF              reduce using rule 100 (hash -> HASH POINT NEW .)
    IDLOCAL         reduce using rule 100 (hash -> HASH POINT NEW .)
    IDINSTANCE      reduce using rule 100 (hash -> HASH POINT NEW .)
    IDCLASS         reduce using rule 100 (hash -> HASH POINT NEW .)
    IDGLOBAL        reduce using rule 100 (hash -> HASH POINT NEW .)
    WHILE           reduce using rule 100 (hash -> HASH POINT NEW .)
    NUMBER          reduce using rule 100 (hash -> HASH POINT NEW .)
    FLOAT           reduce using rule 100 (hash -> HASH POINT NEW .)
    MINUS           reduce using rule 100 (hash -> HASH POINT NEW .)
    STRING          reduce using rule 100 (hash -> HASH POINT NEW .)
    STRINGV         reduce using rule 100 (hash -> HASH POINT NEW .)
    BREAK           reduce using rule 100 (hash -> HASH POINT NEW .)


state 120

    (113) estructurasControl -> FOR IDLOCAL IN . factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> FOR IDLOCAL IN . factor POINT POINT factor DO forcontent END
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    factor                         shift and go to state 159

state 121

    (50) sentenIF -> IF variables comparador . term
    (51) sentenifp -> IF variables comparador . term algoritmo END
    (52) sentenifelse -> IF variables comparador . term algoritmo ELSE algoritmo END
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    variables                      shift and go to state 79
    term                           shift and go to state 160
    factor                         shift and go to state 29

state 122

    (107) comparador -> COMPARE .

    NUMBER          reduce using rule 107 (comparador -> COMPARE .)
    FLOAT           reduce using rule 107 (comparador -> COMPARE .)
    MINUS           reduce using rule 107 (comparador -> COMPARE .)
    IDLOCAL         reduce using rule 107 (comparador -> COMPARE .)
    IDINSTANCE      reduce using rule 107 (comparador -> COMPARE .)
    IDCLASS         reduce using rule 107 (comparador -> COMPARE .)
    IDGLOBAL        reduce using rule 107 (comparador -> COMPARE .)


state 123

    (108) comparador -> GREQUAL .

    NUMBER          reduce using rule 108 (comparador -> GREQUAL .)
    FLOAT           reduce using rule 108 (comparador -> GREQUAL .)
    MINUS           reduce using rule 108 (comparador -> GREQUAL .)
    IDLOCAL         reduce using rule 108 (comparador -> GREQUAL .)
    IDINSTANCE      reduce using rule 108 (comparador -> GREQUAL .)
    IDCLASS         reduce using rule 108 (comparador -> GREQUAL .)
    IDGLOBAL        reduce using rule 108 (comparador -> GREQUAL .)


state 124

    (109) comparador -> LSEQUAL .

    NUMBER          reduce using rule 109 (comparador -> LSEQUAL .)
    FLOAT           reduce using rule 109 (comparador -> LSEQUAL .)
    MINUS           reduce using rule 109 (comparador -> LSEQUAL .)
    IDLOCAL         reduce using rule 109 (comparador -> LSEQUAL .)
    IDINSTANCE      reduce using rule 109 (comparador -> LSEQUAL .)
    IDCLASS         reduce using rule 109 (comparador -> LSEQUAL .)
    IDGLOBAL        reduce using rule 109 (comparador -> LSEQUAL .)


state 125

    (110) comparador -> NOTEQUAL .

    NUMBER          reduce using rule 110 (comparador -> NOTEQUAL .)
    FLOAT           reduce using rule 110 (comparador -> NOTEQUAL .)
    MINUS           reduce using rule 110 (comparador -> NOTEQUAL .)
    IDLOCAL         reduce using rule 110 (comparador -> NOTEQUAL .)
    IDINSTANCE      reduce using rule 110 (comparador -> NOTEQUAL .)
    IDCLASS         reduce using rule 110 (comparador -> NOTEQUAL .)
    IDGLOBAL        reduce using rule 110 (comparador -> NOTEQUAL .)


state 126

    (111) comparador -> LESS .

    NUMBER          reduce using rule 111 (comparador -> LESS .)
    FLOAT           reduce using rule 111 (comparador -> LESS .)
    MINUS           reduce using rule 111 (comparador -> LESS .)
    IDLOCAL         reduce using rule 111 (comparador -> LESS .)
    IDINSTANCE      reduce using rule 111 (comparador -> LESS .)
    IDCLASS         reduce using rule 111 (comparador -> LESS .)
    IDGLOBAL        reduce using rule 111 (comparador -> LESS .)


state 127

    (112) comparador -> GREATER .

    NUMBER          reduce using rule 112 (comparador -> GREATER .)
    FLOAT           reduce using rule 112 (comparador -> GREATER .)
    MINUS           reduce using rule 112 (comparador -> GREATER .)
    IDLOCAL         reduce using rule 112 (comparador -> GREATER .)
    IDINSTANCE      reduce using rule 112 (comparador -> GREATER .)
    IDCLASS         reduce using rule 112 (comparador -> GREATER .)
    IDGLOBAL        reduce using rule 112 (comparador -> GREATER .)


state 128

    (44) algoritmo -> variables .
    (57) assigns -> variables . ASSIGN expression
    (58) assigns -> variables . ASSIGN variables
    (59) assigns -> variables . ASSIGN boolean
    (60) assigns -> variables . ASSIGN asignar
    (61) assigns -> variables . ASSIGNPLUS expression
    (62) assigns -> variables . ASSIGNPLUS variables
    (63) assigns -> variables . ASSIGNMIN expression
    (64) assigns -> variables . ASSIGNMIN variables
    (71) term -> variables .

  ! reduce/reduce conflict for END resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for ELSE resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for RETURN resolved using rule 44 (algoritmo -> variables .)
    END             reduce using rule 44 (algoritmo -> variables .)
    ELSE            reduce using rule 44 (algoritmo -> variables .)
    RETURN          reduce using rule 44 (algoritmo -> variables .)
    ASSIGN          shift and go to state 161
    ASSIGNPLUS      shift and go to state 60
    ASSIGNMIN       shift and go to state 61
    PLUS            reduce using rule 71 (term -> variables .)
    MINUS           reduce using rule 71 (term -> variables .)
    DIVISION        reduce using rule 71 (term -> variables .)
    MOD             reduce using rule 71 (term -> variables .)
    MULT            reduce using rule 71 (term -> variables .)
    EXP             reduce using rule 71 (term -> variables .)

  ! END             [ reduce using rule 71 (term -> variables .) ]
  ! ELSE            [ reduce using rule 71 (term -> variables .) ]
  ! RETURN          [ reduce using rule 71 (term -> variables .) ]


state 129

    (46) sentenWHILE -> WHILE variables comparador . variables algoritmo END
    (47) sentenWHILE -> WHILE variables comparador . expression algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 162
    expression                     shift and go to state 163
    term                           shift and go to state 24
    factor                         shift and go to state 29

state 130

    (49) sentenWHILE -> WHILE variables algoritmo . END

    END             shift and go to state 164


state 131

    (33) algoritmo -> expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . PLUS variables
    (67) expression -> expression . MINUS variables
    (68) expression -> expression . MINUS term
    (76) expression -> expression . DIVISION term
    (77) expression -> expression . MOD term
    (78) expression -> expression . MULT term
    (79) expression -> expression . EXP term

    END             reduce using rule 33 (algoritmo -> expression .)
    ELSE            reduce using rule 33 (algoritmo -> expression .)
    RETURN          reduce using rule 33 (algoritmo -> expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53


state 132

    (34) algoritmo -> metodocadena .

    END             reduce using rule 34 (algoritmo -> metodocadena .)
    ELSE            reduce using rule 34 (algoritmo -> metodocadena .)
    RETURN          reduce using rule 34 (algoritmo -> metodocadena .)
    ARRAY           reduce using rule 34 (algoritmo -> metodocadena .)
    LSQBRACKET      reduce using rule 34 (algoritmo -> metodocadena .)
    LBRACKET        reduce using rule 34 (algoritmo -> metodocadena .)
    HASH            reduce using rule 34 (algoritmo -> metodocadena .)
    FOR             reduce using rule 34 (algoritmo -> metodocadena .)
    TRUE            reduce using rule 34 (algoritmo -> metodocadena .)
    FALSE           reduce using rule 34 (algoritmo -> metodocadena .)
    NIL             reduce using rule 34 (algoritmo -> metodocadena .)
    IF              reduce using rule 34 (algoritmo -> metodocadena .)
    IDLOCAL         reduce using rule 34 (algoritmo -> metodocadena .)
    IDINSTANCE      reduce using rule 34 (algoritmo -> metodocadena .)
    IDCLASS         reduce using rule 34 (algoritmo -> metodocadena .)
    IDGLOBAL        reduce using rule 34 (algoritmo -> metodocadena .)
    WHILE           reduce using rule 34 (algoritmo -> metodocadena .)
    NUMBER          reduce using rule 34 (algoritmo -> metodocadena .)
    FLOAT           reduce using rule 34 (algoritmo -> metodocadena .)
    MINUS           reduce using rule 34 (algoritmo -> metodocadena .)
    STRING          reduce using rule 34 (algoritmo -> metodocadena .)
    STRINGV         reduce using rule 34 (algoritmo -> metodocadena .)
    BREAK           reduce using rule 34 (algoritmo -> metodocadena .)


state 133

    (35) algoritmo -> arreglo .
    (97) metodosarreglo -> arreglo . POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> arreglo . LSQBRACKET factor RSQBRACKET

  ! shift/reduce conflict for LSQBRACKET resolved as shift
    END             reduce using rule 35 (algoritmo -> arreglo .)
    ELSE            reduce using rule 35 (algoritmo -> arreglo .)
    RETURN          reduce using rule 35 (algoritmo -> arreglo .)
    ARRAY           reduce using rule 35 (algoritmo -> arreglo .)
    LBRACKET        reduce using rule 35 (algoritmo -> arreglo .)
    HASH            reduce using rule 35 (algoritmo -> arreglo .)
    FOR             reduce using rule 35 (algoritmo -> arreglo .)
    TRUE            reduce using rule 35 (algoritmo -> arreglo .)
    FALSE           reduce using rule 35 (algoritmo -> arreglo .)
    NIL             reduce using rule 35 (algoritmo -> arreglo .)
    IF              reduce using rule 35 (algoritmo -> arreglo .)
    IDLOCAL         reduce using rule 35 (algoritmo -> arreglo .)
    IDINSTANCE      reduce using rule 35 (algoritmo -> arreglo .)
    IDCLASS         reduce using rule 35 (algoritmo -> arreglo .)
    IDGLOBAL        reduce using rule 35 (algoritmo -> arreglo .)
    WHILE           reduce using rule 35 (algoritmo -> arreglo .)
    NUMBER          reduce using rule 35 (algoritmo -> arreglo .)
    FLOAT           reduce using rule 35 (algoritmo -> arreglo .)
    MINUS           reduce using rule 35 (algoritmo -> arreglo .)
    STRING          reduce using rule 35 (algoritmo -> arreglo .)
    STRINGV         reduce using rule 35 (algoritmo -> arreglo .)
    BREAK           reduce using rule 35 (algoritmo -> arreglo .)
    POINT           shift and go to state 56
    LSQBRACKET      shift and go to state 57

  ! LSQBRACKET      [ reduce using rule 35 (algoritmo -> arreglo .) ]


state 134

    (36) algoritmo -> metodosarreglo .

    END             reduce using rule 36 (algoritmo -> metodosarreglo .)
    ELSE            reduce using rule 36 (algoritmo -> metodosarreglo .)
    RETURN          reduce using rule 36 (algoritmo -> metodosarreglo .)
    ARRAY           reduce using rule 36 (algoritmo -> metodosarreglo .)
    LSQBRACKET      reduce using rule 36 (algoritmo -> metodosarreglo .)
    LBRACKET        reduce using rule 36 (algoritmo -> metodosarreglo .)
    HASH            reduce using rule 36 (algoritmo -> metodosarreglo .)
    FOR             reduce using rule 36 (algoritmo -> metodosarreglo .)
    TRUE            reduce using rule 36 (algoritmo -> metodosarreglo .)
    FALSE           reduce using rule 36 (algoritmo -> metodosarreglo .)
    NIL             reduce using rule 36 (algoritmo -> metodosarreglo .)
    IF              reduce using rule 36 (algoritmo -> metodosarreglo .)
    IDLOCAL         reduce using rule 36 (algoritmo -> metodosarreglo .)
    IDINSTANCE      reduce using rule 36 (algoritmo -> metodosarreglo .)
    IDCLASS         reduce using rule 36 (algoritmo -> metodosarreglo .)
    IDGLOBAL        reduce using rule 36 (algoritmo -> metodosarreglo .)
    WHILE           reduce using rule 36 (algoritmo -> metodosarreglo .)
    NUMBER          reduce using rule 36 (algoritmo -> metodosarreglo .)
    FLOAT           reduce using rule 36 (algoritmo -> metodosarreglo .)
    MINUS           reduce using rule 36 (algoritmo -> metodosarreglo .)
    STRING          reduce using rule 36 (algoritmo -> metodosarreglo .)
    STRINGV         reduce using rule 36 (algoritmo -> metodosarreglo .)
    BREAK           reduce using rule 36 (algoritmo -> metodosarreglo .)


state 135

    (37) algoritmo -> hash .

    END             reduce using rule 37 (algoritmo -> hash .)
    ELSE            reduce using rule 37 (algoritmo -> hash .)
    RETURN          reduce using rule 37 (algoritmo -> hash .)
    ARRAY           reduce using rule 37 (algoritmo -> hash .)
    LSQBRACKET      reduce using rule 37 (algoritmo -> hash .)
    LBRACKET        reduce using rule 37 (algoritmo -> hash .)
    HASH            reduce using rule 37 (algoritmo -> hash .)
    FOR             reduce using rule 37 (algoritmo -> hash .)
    TRUE            reduce using rule 37 (algoritmo -> hash .)
    FALSE           reduce using rule 37 (algoritmo -> hash .)
    NIL             reduce using rule 37 (algoritmo -> hash .)
    IF              reduce using rule 37 (algoritmo -> hash .)
    IDLOCAL         reduce using rule 37 (algoritmo -> hash .)
    IDINSTANCE      reduce using rule 37 (algoritmo -> hash .)
    IDCLASS         reduce using rule 37 (algoritmo -> hash .)
    IDGLOBAL        reduce using rule 37 (algoritmo -> hash .)
    WHILE           reduce using rule 37 (algoritmo -> hash .)
    NUMBER          reduce using rule 37 (algoritmo -> hash .)
    FLOAT           reduce using rule 37 (algoritmo -> hash .)
    MINUS           reduce using rule 37 (algoritmo -> hash .)
    STRING          reduce using rule 37 (algoritmo -> hash .)
    STRINGV         reduce using rule 37 (algoritmo -> hash .)
    BREAK           reduce using rule 37 (algoritmo -> hash .)


state 136

    (38) algoritmo -> estructurasControl .

    END             reduce using rule 38 (algoritmo -> estructurasControl .)
    ELSE            reduce using rule 38 (algoritmo -> estructurasControl .)
    RETURN          reduce using rule 38 (algoritmo -> estructurasControl .)
    ARRAY           reduce using rule 38 (algoritmo -> estructurasControl .)
    LSQBRACKET      reduce using rule 38 (algoritmo -> estructurasControl .)
    LBRACKET        reduce using rule 38 (algoritmo -> estructurasControl .)
    HASH            reduce using rule 38 (algoritmo -> estructurasControl .)
    FOR             reduce using rule 38 (algoritmo -> estructurasControl .)
    TRUE            reduce using rule 38 (algoritmo -> estructurasControl .)
    FALSE           reduce using rule 38 (algoritmo -> estructurasControl .)
    NIL             reduce using rule 38 (algoritmo -> estructurasControl .)
    IF              reduce using rule 38 (algoritmo -> estructurasControl .)
    IDLOCAL         reduce using rule 38 (algoritmo -> estructurasControl .)
    IDINSTANCE      reduce using rule 38 (algoritmo -> estructurasControl .)
    IDCLASS         reduce using rule 38 (algoritmo -> estructurasControl .)
    IDGLOBAL        reduce using rule 38 (algoritmo -> estructurasControl .)
    WHILE           reduce using rule 38 (algoritmo -> estructurasControl .)
    NUMBER          reduce using rule 38 (algoritmo -> estructurasControl .)
    FLOAT           reduce using rule 38 (algoritmo -> estructurasControl .)
    MINUS           reduce using rule 38 (algoritmo -> estructurasControl .)
    STRING          reduce using rule 38 (algoritmo -> estructurasControl .)
    STRINGV         reduce using rule 38 (algoritmo -> estructurasControl .)
    BREAK           reduce using rule 38 (algoritmo -> estructurasControl .)


state 137

    (39) algoritmo -> boolean .

    END             reduce using rule 39 (algoritmo -> boolean .)
    ELSE            reduce using rule 39 (algoritmo -> boolean .)
    RETURN          reduce using rule 39 (algoritmo -> boolean .)
    ARRAY           reduce using rule 39 (algoritmo -> boolean .)
    LSQBRACKET      reduce using rule 39 (algoritmo -> boolean .)
    LBRACKET        reduce using rule 39 (algoritmo -> boolean .)
    HASH            reduce using rule 39 (algoritmo -> boolean .)
    FOR             reduce using rule 39 (algoritmo -> boolean .)
    TRUE            reduce using rule 39 (algoritmo -> boolean .)
    FALSE           reduce using rule 39 (algoritmo -> boolean .)
    NIL             reduce using rule 39 (algoritmo -> boolean .)
    IF              reduce using rule 39 (algoritmo -> boolean .)
    IDLOCAL         reduce using rule 39 (algoritmo -> boolean .)
    IDINSTANCE      reduce using rule 39 (algoritmo -> boolean .)
    IDCLASS         reduce using rule 39 (algoritmo -> boolean .)
    IDGLOBAL        reduce using rule 39 (algoritmo -> boolean .)
    WHILE           reduce using rule 39 (algoritmo -> boolean .)
    NUMBER          reduce using rule 39 (algoritmo -> boolean .)
    FLOAT           reduce using rule 39 (algoritmo -> boolean .)
    MINUS           reduce using rule 39 (algoritmo -> boolean .)
    STRING          reduce using rule 39 (algoritmo -> boolean .)
    STRINGV         reduce using rule 39 (algoritmo -> boolean .)
    BREAK           reduce using rule 39 (algoritmo -> boolean .)


state 138

    (40) algoritmo -> assigns .

    END             reduce using rule 40 (algoritmo -> assigns .)
    ELSE            reduce using rule 40 (algoritmo -> assigns .)
    RETURN          reduce using rule 40 (algoritmo -> assigns .)
    ARRAY           reduce using rule 40 (algoritmo -> assigns .)
    LSQBRACKET      reduce using rule 40 (algoritmo -> assigns .)
    LBRACKET        reduce using rule 40 (algoritmo -> assigns .)
    HASH            reduce using rule 40 (algoritmo -> assigns .)
    FOR             reduce using rule 40 (algoritmo -> assigns .)
    TRUE            reduce using rule 40 (algoritmo -> assigns .)
    FALSE           reduce using rule 40 (algoritmo -> assigns .)
    NIL             reduce using rule 40 (algoritmo -> assigns .)
    IF              reduce using rule 40 (algoritmo -> assigns .)
    IDLOCAL         reduce using rule 40 (algoritmo -> assigns .)
    IDINSTANCE      reduce using rule 40 (algoritmo -> assigns .)
    IDCLASS         reduce using rule 40 (algoritmo -> assigns .)
    IDGLOBAL        reduce using rule 40 (algoritmo -> assigns .)
    WHILE           reduce using rule 40 (algoritmo -> assigns .)
    NUMBER          reduce using rule 40 (algoritmo -> assigns .)
    FLOAT           reduce using rule 40 (algoritmo -> assigns .)
    MINUS           reduce using rule 40 (algoritmo -> assigns .)
    STRING          reduce using rule 40 (algoritmo -> assigns .)
    STRINGV         reduce using rule 40 (algoritmo -> assigns .)
    BREAK           reduce using rule 40 (algoritmo -> assigns .)


state 139

    (41) algoritmo -> sentenIF .

    END             reduce using rule 41 (algoritmo -> sentenIF .)
    ELSE            reduce using rule 41 (algoritmo -> sentenIF .)
    RETURN          reduce using rule 41 (algoritmo -> sentenIF .)
    ARRAY           reduce using rule 41 (algoritmo -> sentenIF .)
    LSQBRACKET      reduce using rule 41 (algoritmo -> sentenIF .)
    LBRACKET        reduce using rule 41 (algoritmo -> sentenIF .)
    HASH            reduce using rule 41 (algoritmo -> sentenIF .)
    FOR             reduce using rule 41 (algoritmo -> sentenIF .)
    TRUE            reduce using rule 41 (algoritmo -> sentenIF .)
    FALSE           reduce using rule 41 (algoritmo -> sentenIF .)
    NIL             reduce using rule 41 (algoritmo -> sentenIF .)
    IF              reduce using rule 41 (algoritmo -> sentenIF .)
    IDLOCAL         reduce using rule 41 (algoritmo -> sentenIF .)
    IDINSTANCE      reduce using rule 41 (algoritmo -> sentenIF .)
    IDCLASS         reduce using rule 41 (algoritmo -> sentenIF .)
    IDGLOBAL        reduce using rule 41 (algoritmo -> sentenIF .)
    WHILE           reduce using rule 41 (algoritmo -> sentenIF .)
    NUMBER          reduce using rule 41 (algoritmo -> sentenIF .)
    FLOAT           reduce using rule 41 (algoritmo -> sentenIF .)
    MINUS           reduce using rule 41 (algoritmo -> sentenIF .)
    STRING          reduce using rule 41 (algoritmo -> sentenIF .)
    STRINGV         reduce using rule 41 (algoritmo -> sentenIF .)
    BREAK           reduce using rule 41 (algoritmo -> sentenIF .)


state 140

    (42) algoritmo -> sentenifp .

    END             reduce using rule 42 (algoritmo -> sentenifp .)
    ELSE            reduce using rule 42 (algoritmo -> sentenifp .)
    RETURN          reduce using rule 42 (algoritmo -> sentenifp .)
    ARRAY           reduce using rule 42 (algoritmo -> sentenifp .)
    LSQBRACKET      reduce using rule 42 (algoritmo -> sentenifp .)
    LBRACKET        reduce using rule 42 (algoritmo -> sentenifp .)
    HASH            reduce using rule 42 (algoritmo -> sentenifp .)
    FOR             reduce using rule 42 (algoritmo -> sentenifp .)
    TRUE            reduce using rule 42 (algoritmo -> sentenifp .)
    FALSE           reduce using rule 42 (algoritmo -> sentenifp .)
    NIL             reduce using rule 42 (algoritmo -> sentenifp .)
    IF              reduce using rule 42 (algoritmo -> sentenifp .)
    IDLOCAL         reduce using rule 42 (algoritmo -> sentenifp .)
    IDINSTANCE      reduce using rule 42 (algoritmo -> sentenifp .)
    IDCLASS         reduce using rule 42 (algoritmo -> sentenifp .)
    IDGLOBAL        reduce using rule 42 (algoritmo -> sentenifp .)
    WHILE           reduce using rule 42 (algoritmo -> sentenifp .)
    NUMBER          reduce using rule 42 (algoritmo -> sentenifp .)
    FLOAT           reduce using rule 42 (algoritmo -> sentenifp .)
    MINUS           reduce using rule 42 (algoritmo -> sentenifp .)
    STRING          reduce using rule 42 (algoritmo -> sentenifp .)
    STRINGV         reduce using rule 42 (algoritmo -> sentenifp .)
    BREAK           reduce using rule 42 (algoritmo -> sentenifp .)


state 141

    (43) algoritmo -> sentenifelse .

    END             reduce using rule 43 (algoritmo -> sentenifelse .)
    ELSE            reduce using rule 43 (algoritmo -> sentenifelse .)
    RETURN          reduce using rule 43 (algoritmo -> sentenifelse .)
    ARRAY           reduce using rule 43 (algoritmo -> sentenifelse .)
    LSQBRACKET      reduce using rule 43 (algoritmo -> sentenifelse .)
    LBRACKET        reduce using rule 43 (algoritmo -> sentenifelse .)
    HASH            reduce using rule 43 (algoritmo -> sentenifelse .)
    FOR             reduce using rule 43 (algoritmo -> sentenifelse .)
    TRUE            reduce using rule 43 (algoritmo -> sentenifelse .)
    FALSE           reduce using rule 43 (algoritmo -> sentenifelse .)
    NIL             reduce using rule 43 (algoritmo -> sentenifelse .)
    IF              reduce using rule 43 (algoritmo -> sentenifelse .)
    IDLOCAL         reduce using rule 43 (algoritmo -> sentenifelse .)
    IDINSTANCE      reduce using rule 43 (algoritmo -> sentenifelse .)
    IDCLASS         reduce using rule 43 (algoritmo -> sentenifelse .)
    IDGLOBAL        reduce using rule 43 (algoritmo -> sentenifelse .)
    WHILE           reduce using rule 43 (algoritmo -> sentenifelse .)
    NUMBER          reduce using rule 43 (algoritmo -> sentenifelse .)
    FLOAT           reduce using rule 43 (algoritmo -> sentenifelse .)
    MINUS           reduce using rule 43 (algoritmo -> sentenifelse .)
    STRING          reduce using rule 43 (algoritmo -> sentenifelse .)
    STRINGV         reduce using rule 43 (algoritmo -> sentenifelse .)
    BREAK           reduce using rule 43 (algoritmo -> sentenifelse .)


state 142

    (45) algoritmo -> sentenWHILE .

    END             reduce using rule 45 (algoritmo -> sentenWHILE .)
    ELSE            reduce using rule 45 (algoritmo -> sentenWHILE .)
    RETURN          reduce using rule 45 (algoritmo -> sentenWHILE .)
    ARRAY           reduce using rule 45 (algoritmo -> sentenWHILE .)
    LSQBRACKET      reduce using rule 45 (algoritmo -> sentenWHILE .)
    LBRACKET        reduce using rule 45 (algoritmo -> sentenWHILE .)
    HASH            reduce using rule 45 (algoritmo -> sentenWHILE .)
    FOR             reduce using rule 45 (algoritmo -> sentenWHILE .)
    TRUE            reduce using rule 45 (algoritmo -> sentenWHILE .)
    FALSE           reduce using rule 45 (algoritmo -> sentenWHILE .)
    NIL             reduce using rule 45 (algoritmo -> sentenWHILE .)
    IF              reduce using rule 45 (algoritmo -> sentenWHILE .)
    IDLOCAL         reduce using rule 45 (algoritmo -> sentenWHILE .)
    IDINSTANCE      reduce using rule 45 (algoritmo -> sentenWHILE .)
    IDCLASS         reduce using rule 45 (algoritmo -> sentenWHILE .)
    IDGLOBAL        reduce using rule 45 (algoritmo -> sentenWHILE .)
    WHILE           reduce using rule 45 (algoritmo -> sentenWHILE .)
    NUMBER          reduce using rule 45 (algoritmo -> sentenWHILE .)
    FLOAT           reduce using rule 45 (algoritmo -> sentenWHILE .)
    MINUS           reduce using rule 45 (algoritmo -> sentenWHILE .)
    STRING          reduce using rule 45 (algoritmo -> sentenWHILE .)
    STRINGV         reduce using rule 45 (algoritmo -> sentenWHILE .)
    BREAK           reduce using rule 45 (algoritmo -> sentenWHILE .)


state 143

    (84) metodocadena -> cadena . POINT EMPTY INTERROGATIVE
    (86) metodocadena -> cadena . POINT LENGTH

    POINT           shift and go to state 55


state 144

    (85) metodocadena -> string . POINT EMPTY INTERROGATIVE
    (87) metodocadena -> string . POINT LENGTH

    POINT           shift and go to state 54


state 145

    (48) sentenWHILE -> WHILE boolean algoritmo . END

    END             shift and go to state 165


state 146

    (119) funcion1 -> DEF IDLOCAL LPARENTHESIS . fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END
    (120) funcion1 -> DEF IDLOCAL LPARENTHESIS . fcontenido RPARENTHESIS algoritmo END
    (121) fcontenido -> . variables
    (122) fcontenido -> . variables COMMA fcontenido
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    fcontenido                     shift and go to state 166
    variables                      shift and go to state 167

state 147

    (85) metodocadena -> string POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    END             reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    ELSE            reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    RETURN          reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    ARRAY           reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    LSQBRACKET      reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    LBRACKET        reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    HASH            reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    FOR             reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    TRUE            reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    FALSE           reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    NIL             reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IF              reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDLOCAL         reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDINSTANCE      reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDCLASS         reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    IDGLOBAL        reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    WHILE           reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    NUMBER          reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    FLOAT           reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    MINUS           reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    STRING          reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    STRINGV         reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)
    BREAK           reduce using rule 85 (metodocadena -> string POINT EMPTY INTERROGATIVE .)


state 148

    (84) metodocadena -> cadena POINT EMPTY INTERROGATIVE .

    $end            reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    END             reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    ELSE            reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    RETURN          reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    ARRAY           reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    LSQBRACKET      reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    LBRACKET        reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    HASH            reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    FOR             reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    TRUE            reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    FALSE           reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    NIL             reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IF              reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDLOCAL         reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDINSTANCE      reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDCLASS         reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    IDGLOBAL        reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    WHILE           reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    NUMBER          reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    FLOAT           reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    MINUS           reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    STRING          reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    STRINGV         reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)
    BREAK           reduce using rule 84 (metodocadena -> cadena POINT EMPTY INTERROGATIVE .)


state 149

    (97) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS . arraycontent RPARENTHESIS
    (93) arraycontent -> . factor
    (94) arraycontent -> . string
    (95) arraycontent -> . factor COMMA arraycontent
    (96) arraycontent -> . string COMMA arraycontent
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (80) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    arraycontent                   shift and go to state 168
    factor                         shift and go to state 69
    string                         shift and go to state 70

state 150

    (98) metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .

    $end            reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    END             reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    ELSE            reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    RETURN          reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    ARRAY           reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    LSQBRACKET      reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    LBRACKET        reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    HASH            reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    FOR             reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    TRUE            reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    FALSE           reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    NIL             reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IF              reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDLOCAL         reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDINSTANCE      reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDCLASS         reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    IDGLOBAL        reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    WHILE           reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    NUMBER          reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    FLOAT           reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    MINUS           reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    STRING          reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    STRINGV         reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)
    BREAK           reduce using rule 98 (metodosarreglo -> arreglo LSQBRACKET factor RSQBRACKET .)


state 151

    (105) metodohash -> variables ASSIGN hash POINT . LENGTH

    LENGTH          shift and go to state 169


state 152

    (82) cadena -> STRING POINT NEW LPARENTHESIS . string RPARENTHESIS
    (80) string -> . STRINGV

    STRINGV         shift and go to state 26

    string                         shift and go to state 170

state 153

    (83) cadena -> STRING LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    END             reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    ELSE            reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    RETURN          reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    ARRAY           reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    LSQBRACKET      reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    LBRACKET        reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    HASH            reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    FOR             reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    TRUE            reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    FALSE           reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    NIL             reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IF              reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDLOCAL         reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDINSTANCE      reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDCLASS         reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    IDGLOBAL        reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    WHILE           reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    NUMBER          reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    FLOAT           reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    MINUS           reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    STRING          reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    STRINGV         reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)
    BREAK           reduce using rule 83 (cadena -> STRING LPARENTHESIS string RPARENTHESIS .)


state 154

    (89) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor RPARENTHESIS
    (90) arreglo -> ARRAY POINT NEW LPARENTHESIS . factor COMMA arraycontent RPARENTHESIS
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    factor                         shift and go to state 171

state 155

    (91) arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .

    POINT           reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    LSQBRACKET      reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    $end            reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    END             reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    ELSE            reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    RETURN          reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    ARRAY           reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    LBRACKET        reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    HASH            reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    FOR             reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    TRUE            reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    FALSE           reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    NIL             reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IF              reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDLOCAL         reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDINSTANCE      reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDCLASS         reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    IDGLOBAL        reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    WHILE           reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    NUMBER          reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    FLOAT           reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    MINUS           reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    STRING          reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    STRINGV         reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)
    BREAK           reduce using rule 91 (arreglo -> ARRAY LSQBRACKET arraycontent RSQBRACKET .)


state 156

    (95) arraycontent -> factor COMMA arraycontent .

    RSQBRACKET      reduce using rule 95 (arraycontent -> factor COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 95 (arraycontent -> factor COMMA arraycontent .)


state 157

    (96) arraycontent -> string COMMA arraycontent .

    RSQBRACKET      reduce using rule 96 (arraycontent -> string COMMA arraycontent .)
    RPARENTHESIS    reduce using rule 96 (arraycontent -> string COMMA arraycontent .)


state 158

    (101) hashcontent -> string ASSIGN GREATER . hashcontentvalue
    (102) hashcontent -> string ASSIGN GREATER . hashcontentvalue COMMA hashcontent
    (103) hashcontentvalue -> . factor
    (104) hashcontentvalue -> . string
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (80) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    string                         shift and go to state 172
    hashcontentvalue               shift and go to state 173
    factor                         shift and go to state 174

state 159

    (113) estructurasControl -> FOR IDLOCAL IN factor . POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> FOR IDLOCAL IN factor . POINT POINT factor DO forcontent END

    POINT           shift and go to state 175


state 160

    (50) sentenIF -> IF variables comparador term .
    (51) sentenifp -> IF variables comparador term . algoritmo END
    (52) sentenifelse -> IF variables comparador term . algoritmo ELSE algoritmo END
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (113) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (70) term -> . factor
    (71) term -> . variables
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (80) string -> . STRINGV
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for LSQBRACKET resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for HASH resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IDLOCAL resolved as shift
  ! shift/reduce conflict for IDINSTANCE resolved as shift
  ! shift/reduce conflict for IDCLASS resolved as shift
  ! shift/reduce conflict for IDGLOBAL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for STRINGV resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 50 (sentenIF -> IF variables comparador term .)
    END             reduce using rule 50 (sentenIF -> IF variables comparador term .)
    ELSE            reduce using rule 50 (sentenIF -> IF variables comparador term .)
    RETURN          reduce using rule 50 (sentenIF -> IF variables comparador term .)
    BREAK           reduce using rule 50 (sentenIF -> IF variables comparador term .)
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

  ! ARRAY           [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! LSQBRACKET      [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! LBRACKET        [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! HASH            [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! FOR             [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! TRUE            [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! FALSE           [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! NIL             [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! IF              [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! IDLOCAL         [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! IDINSTANCE      [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! IDCLASS         [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! IDGLOBAL        [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! WHILE           [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! NUMBER          [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! FLOAT           [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! MINUS           [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! STRING          [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]
  ! STRINGV         [ reduce using rule 50 (sentenIF -> IF variables comparador term .) ]

    variables                      shift and go to state 128
    term                           shift and go to state 24
    algoritmo                      shift and go to state 176
    expression                     shift and go to state 131
    metodocadena                   shift and go to state 132
    arreglo                        shift and go to state 133
    metodosarreglo                 shift and go to state 134
    hash                           shift and go to state 135
    estructurasControl             shift and go to state 136
    boolean                        shift and go to state 137
    assigns                        shift and go to state 138
    sentenIF                       shift and go to state 139
    sentenifp                      shift and go to state 140
    sentenifelse                   shift and go to state 141
    sentenWHILE                    shift and go to state 142
    cadena                         shift and go to state 143
    string                         shift and go to state 144
    factor                         shift and go to state 29

state 161

    (57) assigns -> variables ASSIGN . expression
    (58) assigns -> variables ASSIGN . variables
    (59) assigns -> variables ASSIGN . boolean
    (60) assigns -> variables ASSIGN . asignar
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (3) asignar -> . expression
    (4) asignar -> . string
    (5) asignar -> . cadena
    (6) asignar -> . metodocadena
    (7) asignar -> . arreglo
    (8) asignar -> . metodosarreglo
    (9) asignar -> . hash
    (10) asignar -> . metodohash
    (11) asignar -> . boolean
    (12) asignar -> . variables
    (13) asignar -> . assigns
    (70) term -> . factor
    (71) term -> . variables
    (80) string -> . STRINGV
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (105) metodohash -> . variables ASSIGN hash POINT LENGTH
    (106) metodohash -> . variables POINT LENGTH
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    STRINGV         shift and go to state 26
    STRING          shift and go to state 27
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 100
    expression                     shift and go to state 102
    boolean                        shift and go to state 103
    asignar                        shift and go to state 104
    term                           shift and go to state 24
    string                         shift and go to state 5
    cadena                         shift and go to state 6
    metodocadena                   shift and go to state 7
    arreglo                        shift and go to state 8
    metodosarreglo                 shift and go to state 9
    hash                           shift and go to state 10
    metodohash                     shift and go to state 11
    assigns                        shift and go to state 14
    factor                         shift and go to state 29

state 162

    (46) sentenWHILE -> WHILE variables comparador variables . algoritmo END
    (71) term -> variables .
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (113) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (70) term -> . factor
    (71) term -> . variables
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (80) string -> . STRINGV
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for LSQBRACKET resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for HASH resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IDLOCAL resolved as shift
  ! shift/reduce conflict for IDINSTANCE resolved as shift
  ! shift/reduce conflict for IDCLASS resolved as shift
  ! shift/reduce conflict for IDGLOBAL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for STRINGV resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            reduce using rule 71 (term -> variables .)
    DIVISION        reduce using rule 71 (term -> variables .)
    MOD             reduce using rule 71 (term -> variables .)
    MULT            reduce using rule 71 (term -> variables .)
    EXP             reduce using rule 71 (term -> variables .)
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

  ! MINUS           [ reduce using rule 71 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 71 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 71 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 71 (term -> variables .) ]
  ! HASH            [ reduce using rule 71 (term -> variables .) ]
  ! FOR             [ reduce using rule 71 (term -> variables .) ]
  ! TRUE            [ reduce using rule 71 (term -> variables .) ]
  ! FALSE           [ reduce using rule 71 (term -> variables .) ]
  ! NIL             [ reduce using rule 71 (term -> variables .) ]
  ! IF              [ reduce using rule 71 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 71 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 71 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 71 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 71 (term -> variables .) ]
  ! WHILE           [ reduce using rule 71 (term -> variables .) ]
  ! STRING          [ reduce using rule 71 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 71 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 71 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 71 (term -> variables .) ]

    variables                      shift and go to state 128
    algoritmo                      shift and go to state 177
    expression                     shift and go to state 131
    metodocadena                   shift and go to state 132
    arreglo                        shift and go to state 133
    metodosarreglo                 shift and go to state 134
    hash                           shift and go to state 135
    estructurasControl             shift and go to state 136
    boolean                        shift and go to state 137
    assigns                        shift and go to state 138
    sentenIF                       shift and go to state 139
    sentenifp                      shift and go to state 140
    sentenifelse                   shift and go to state 141
    sentenWHILE                    shift and go to state 142
    term                           shift and go to state 24
    cadena                         shift and go to state 143
    string                         shift and go to state 144
    factor                         shift and go to state 29

state 163

    (47) sentenWHILE -> WHILE variables comparador expression . algoritmo END
    (65) expression -> expression . PLUS term
    (66) expression -> expression . PLUS variables
    (67) expression -> expression . MINUS variables
    (68) expression -> expression . MINUS term
    (76) expression -> expression . DIVISION term
    (77) expression -> expression . MOD term
    (78) expression -> expression . MULT term
    (79) expression -> expression . EXP term
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (113) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (70) term -> . factor
    (71) term -> . variables
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (80) string -> . STRINGV
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    PLUS            shift and go to state 48
    MINUS           shift and go to state 179
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47

    variables                      shift and go to state 128
    expression                     shift and go to state 131
    algoritmo                      shift and go to state 178
    term                           shift and go to state 24
    metodocadena                   shift and go to state 132
    arreglo                        shift and go to state 133
    metodosarreglo                 shift and go to state 134
    hash                           shift and go to state 135
    estructurasControl             shift and go to state 136
    boolean                        shift and go to state 137
    assigns                        shift and go to state 138
    sentenIF                       shift and go to state 139
    sentenifp                      shift and go to state 140
    sentenifelse                   shift and go to state 141
    sentenWHILE                    shift and go to state 142
    cadena                         shift and go to state 143
    string                         shift and go to state 144
    factor                         shift and go to state 29

state 164

    (49) sentenWHILE -> WHILE variables algoritmo END .

    $end            reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    END             reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    ELSE            reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    RETURN          reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    ARRAY           reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    LSQBRACKET      reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    LBRACKET        reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    HASH            reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    FOR             reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    TRUE            reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    FALSE           reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    NIL             reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    IF              reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    IDLOCAL         reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    IDINSTANCE      reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    IDCLASS         reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    IDGLOBAL        reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    WHILE           reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    NUMBER          reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    FLOAT           reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    MINUS           reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    STRING          reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    STRINGV         reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)
    BREAK           reduce using rule 49 (sentenWHILE -> WHILE variables algoritmo END .)


state 165

    (48) sentenWHILE -> WHILE boolean algoritmo END .

    $end            reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    END             reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    ELSE            reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    RETURN          reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    ARRAY           reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    LSQBRACKET      reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    LBRACKET        reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    HASH            reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    FOR             reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    TRUE            reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    FALSE           reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    NIL             reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    IF              reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDLOCAL         reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDINSTANCE      reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDCLASS         reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    IDGLOBAL        reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    WHILE           reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    NUMBER          reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    FLOAT           reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    MINUS           reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    STRING          reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    STRINGV         reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)
    BREAK           reduce using rule 48 (sentenWHILE -> WHILE boolean algoritmo END .)


state 166

    (119) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido . RPARENTHESIS algoritmo RETURN IDLOCAL END
    (120) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido . RPARENTHESIS algoritmo END

    RPARENTHESIS    shift and go to state 180


state 167

    (121) fcontenido -> variables .
    (122) fcontenido -> variables . COMMA fcontenido

    RPARENTHESIS    reduce using rule 121 (fcontenido -> variables .)
    COMMA           shift and go to state 181


state 168

    (97) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 182


state 169

    (105) metodohash -> variables ASSIGN hash POINT LENGTH .

    $end            reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    END             reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    ELSE            reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    RETURN          reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    ARRAY           reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    LSQBRACKET      reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    LBRACKET        reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    HASH            reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    FOR             reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    TRUE            reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    FALSE           reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    NIL             reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IF              reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDLOCAL         reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDINSTANCE      reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDCLASS         reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    IDGLOBAL        reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    WHILE           reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    NUMBER          reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    FLOAT           reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    MINUS           reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    STRING          reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    STRINGV         reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)
    BREAK           reduce using rule 105 (metodohash -> variables ASSIGN hash POINT LENGTH .)


state 170

    (82) cadena -> STRING POINT NEW LPARENTHESIS string . RPARENTHESIS

    RPARENTHESIS    shift and go to state 183


state 171

    (89) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . RPARENTHESIS
    (90) arreglo -> ARRAY POINT NEW LPARENTHESIS factor . COMMA arraycontent RPARENTHESIS

    RPARENTHESIS    shift and go to state 184
    COMMA           shift and go to state 185


state 172

    (104) hashcontentvalue -> string .

    COMMA           reduce using rule 104 (hashcontentvalue -> string .)
    RBRACKET        reduce using rule 104 (hashcontentvalue -> string .)


state 173

    (101) hashcontent -> string ASSIGN GREATER hashcontentvalue .
    (102) hashcontent -> string ASSIGN GREATER hashcontentvalue . COMMA hashcontent

    RBRACKET        reduce using rule 101 (hashcontent -> string ASSIGN GREATER hashcontentvalue .)
    COMMA           shift and go to state 186


state 174

    (103) hashcontentvalue -> factor .

    COMMA           reduce using rule 103 (hashcontentvalue -> factor .)
    RBRACKET        reduce using rule 103 (hashcontentvalue -> factor .)


state 175

    (113) estructurasControl -> FOR IDLOCAL IN factor POINT . POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> FOR IDLOCAL IN factor POINT . POINT factor DO forcontent END

    POINT           shift and go to state 187


state 176

    (51) sentenifp -> IF variables comparador term algoritmo . END
    (52) sentenifelse -> IF variables comparador term algoritmo . ELSE algoritmo END

    END             shift and go to state 188
    ELSE            shift and go to state 189


state 177

    (46) sentenWHILE -> WHILE variables comparador variables algoritmo . END

    END             shift and go to state 190


state 178

    (47) sentenWHILE -> WHILE variables comparador expression algoritmo . END

    END             shift and go to state 191


state 179

    (67) expression -> expression MINUS . variables
    (68) expression -> expression MINUS . term
    (74) factor -> MINUS . NUMBER
    (75) factor -> MINUS . FLOAT
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (70) term -> . factor
    (71) term -> . variables
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 192
    FLOAT           shift and go to state 193
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    MINUS           shift and go to state 25

    variables                      shift and go to state 88
    term                           shift and go to state 89
    factor                         shift and go to state 29

state 180

    (119) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS . algoritmo RETURN IDLOCAL END
    (120) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS . algoritmo END
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (113) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (70) term -> . factor
    (71) term -> . variables
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (80) string -> . STRINGV
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    algoritmo                      shift and go to state 194
    expression                     shift and go to state 131
    metodocadena                   shift and go to state 132
    arreglo                        shift and go to state 133
    metodosarreglo                 shift and go to state 134
    hash                           shift and go to state 135
    estructurasControl             shift and go to state 136
    boolean                        shift and go to state 137
    assigns                        shift and go to state 138
    sentenIF                       shift and go to state 139
    sentenifp                      shift and go to state 140
    sentenifelse                   shift and go to state 141
    variables                      shift and go to state 128
    sentenWHILE                    shift and go to state 142
    term                           shift and go to state 24
    cadena                         shift and go to state 143
    string                         shift and go to state 144
    factor                         shift and go to state 29

state 181

    (122) fcontenido -> variables COMMA . fcontenido
    (121) fcontenido -> . variables
    (122) fcontenido -> . variables COMMA fcontenido
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL

    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39

    variables                      shift and go to state 167
    fcontenido                     shift and go to state 195

state 182

    (97) metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .

    $end            reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    END             reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    ELSE            reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    RETURN          reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    ARRAY           reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    LSQBRACKET      reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    LBRACKET        reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    HASH            reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    FOR             reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    TRUE            reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    FALSE           reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    NIL             reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IF              reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDLOCAL         reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDINSTANCE      reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDCLASS         reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    IDGLOBAL        reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    WHILE           reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    NUMBER          reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    FLOAT           reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    MINUS           reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    STRING          reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    STRINGV         reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)
    BREAK           reduce using rule 97 (metodosarreglo -> arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS .)


state 183

    (82) cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .

    POINT           reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    $end            reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    END             reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    ELSE            reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    RETURN          reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    ARRAY           reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    LSQBRACKET      reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    LBRACKET        reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    HASH            reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    FOR             reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    TRUE            reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    FALSE           reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    NIL             reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IF              reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDLOCAL         reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDINSTANCE      reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDCLASS         reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    IDGLOBAL        reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    WHILE           reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    NUMBER          reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    FLOAT           reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    MINUS           reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    STRING          reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    STRINGV         reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)
    BREAK           reduce using rule 82 (cadena -> STRING POINT NEW LPARENTHESIS string RPARENTHESIS .)


state 184

    (89) arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .

    POINT           reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    LSQBRACKET      reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    $end            reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    END             reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    ELSE            reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    RETURN          reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    ARRAY           reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    LBRACKET        reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    HASH            reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    FOR             reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    TRUE            reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    FALSE           reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    NIL             reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IF              reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDLOCAL         reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDINSTANCE      reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDCLASS         reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    IDGLOBAL        reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    WHILE           reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    NUMBER          reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    FLOAT           reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    MINUS           reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    STRING          reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    STRINGV         reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)
    BREAK           reduce using rule 89 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS .)


state 185

    (90) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA . arraycontent RPARENTHESIS
    (93) arraycontent -> . factor
    (94) arraycontent -> . string
    (95) arraycontent -> . factor COMMA arraycontent
    (96) arraycontent -> . string COMMA arraycontent
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (80) string -> . STRINGV

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRINGV         shift and go to state 26

    factor                         shift and go to state 69
    arraycontent                   shift and go to state 196
    string                         shift and go to state 70

state 186

    (102) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA . hashcontent
    (101) hashcontent -> . string ASSIGN GREATER hashcontentvalue
    (102) hashcontent -> . string ASSIGN GREATER hashcontentvalue COMMA hashcontent
    (80) string -> . STRINGV

    STRINGV         shift and go to state 26

    string                         shift and go to state 72
    hashcontent                    shift and go to state 197

state 187

    (113) estructurasControl -> FOR IDLOCAL IN factor POINT POINT . factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> FOR IDLOCAL IN factor POINT POINT . factor DO forcontent END
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    factor                         shift and go to state 198

state 188

    (51) sentenifp -> IF variables comparador term algoritmo END .

    $end            reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    END             reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    ELSE            reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    RETURN          reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    ARRAY           reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    LSQBRACKET      reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    LBRACKET        reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    HASH            reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    FOR             reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    TRUE            reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    FALSE           reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    NIL             reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    IF              reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    IDLOCAL         reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    IDINSTANCE      reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    IDCLASS         reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    IDGLOBAL        reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    WHILE           reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    NUMBER          reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    FLOAT           reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    MINUS           reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    STRING          reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    STRINGV         reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)
    BREAK           reduce using rule 51 (sentenifp -> IF variables comparador term algoritmo END .)


state 189

    (52) sentenifelse -> IF variables comparador term algoritmo ELSE . algoritmo END
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (113) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (70) term -> . factor
    (71) term -> . variables
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (80) string -> . STRINGV
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT

    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25

    variables                      shift and go to state 128
    term                           shift and go to state 24
    algoritmo                      shift and go to state 199
    expression                     shift and go to state 131
    metodocadena                   shift and go to state 132
    arreglo                        shift and go to state 133
    metodosarreglo                 shift and go to state 134
    hash                           shift and go to state 135
    estructurasControl             shift and go to state 136
    boolean                        shift and go to state 137
    assigns                        shift and go to state 138
    sentenIF                       shift and go to state 139
    sentenifp                      shift and go to state 140
    sentenifelse                   shift and go to state 141
    sentenWHILE                    shift and go to state 142
    cadena                         shift and go to state 143
    string                         shift and go to state 144
    factor                         shift and go to state 29

state 190

    (46) sentenWHILE -> WHILE variables comparador variables algoritmo END .

    $end            reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    END             reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    ELSE            reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    RETURN          reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    ARRAY           reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    LSQBRACKET      reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    LBRACKET        reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    HASH            reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    FOR             reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    TRUE            reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    FALSE           reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    NIL             reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IF              reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDLOCAL         reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDINSTANCE      reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDCLASS         reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    IDGLOBAL        reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    WHILE           reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    NUMBER          reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    FLOAT           reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    MINUS           reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    STRING          reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    STRINGV         reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)
    BREAK           reduce using rule 46 (sentenWHILE -> WHILE variables comparador variables algoritmo END .)


state 191

    (47) sentenWHILE -> WHILE variables comparador expression algoritmo END .

    $end            reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    END             reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    ELSE            reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    RETURN          reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    ARRAY           reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    LSQBRACKET      reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    LBRACKET        reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    HASH            reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    FOR             reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    TRUE            reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    FALSE           reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    NIL             reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IF              reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDLOCAL         reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDINSTANCE      reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDCLASS         reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    IDGLOBAL        reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    WHILE           reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    NUMBER          reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    FLOAT           reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    MINUS           reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    STRING          reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    STRINGV         reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)
    BREAK           reduce using rule 47 (sentenWHILE -> WHILE variables comparador expression algoritmo END .)


state 192

    (74) factor -> MINUS NUMBER .
    (72) factor -> NUMBER .

  ! reduce/reduce conflict for PLUS resolved using rule 72 (factor -> NUMBER .)
  ! reduce/reduce conflict for MINUS resolved using rule 72 (factor -> NUMBER .)
  ! reduce/reduce conflict for DIVISION resolved using rule 72 (factor -> NUMBER .)
  ! reduce/reduce conflict for MOD resolved using rule 72 (factor -> NUMBER .)
  ! reduce/reduce conflict for MULT resolved using rule 72 (factor -> NUMBER .)
  ! reduce/reduce conflict for EXP resolved using rule 72 (factor -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 72 (factor -> NUMBER .)
    PLUS            reduce using rule 72 (factor -> NUMBER .)
    MINUS           reduce using rule 72 (factor -> NUMBER .)
    DIVISION        reduce using rule 72 (factor -> NUMBER .)
    MOD             reduce using rule 72 (factor -> NUMBER .)
    MULT            reduce using rule 72 (factor -> NUMBER .)
    EXP             reduce using rule 72 (factor -> NUMBER .)
    ARRAY           reduce using rule 72 (factor -> NUMBER .)
    LSQBRACKET      reduce using rule 72 (factor -> NUMBER .)
    LBRACKET        reduce using rule 72 (factor -> NUMBER .)
    HASH            reduce using rule 72 (factor -> NUMBER .)
    FOR             reduce using rule 72 (factor -> NUMBER .)
    TRUE            reduce using rule 72 (factor -> NUMBER .)
    FALSE           reduce using rule 72 (factor -> NUMBER .)
    NIL             reduce using rule 72 (factor -> NUMBER .)
    IF              reduce using rule 72 (factor -> NUMBER .)
    IDLOCAL         reduce using rule 72 (factor -> NUMBER .)
    IDINSTANCE      reduce using rule 72 (factor -> NUMBER .)
    IDCLASS         reduce using rule 72 (factor -> NUMBER .)
    IDGLOBAL        reduce using rule 72 (factor -> NUMBER .)
    WHILE           reduce using rule 72 (factor -> NUMBER .)
    STRING          reduce using rule 72 (factor -> NUMBER .)
    STRINGV         reduce using rule 72 (factor -> NUMBER .)
    NUMBER          reduce using rule 72 (factor -> NUMBER .)
    FLOAT           reduce using rule 72 (factor -> NUMBER .)
    END             reduce using rule 72 (factor -> NUMBER .)

  ! PLUS            [ reduce using rule 74 (factor -> MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 74 (factor -> MINUS NUMBER .) ]
  ! DIVISION        [ reduce using rule 74 (factor -> MINUS NUMBER .) ]
  ! MOD             [ reduce using rule 74 (factor -> MINUS NUMBER .) ]
  ! MULT            [ reduce using rule 74 (factor -> MINUS NUMBER .) ]
  ! EXP             [ reduce using rule 74 (factor -> MINUS NUMBER .) ]
  ! END             [ reduce using rule 74 (factor -> MINUS NUMBER .) ]


state 193

    (75) factor -> MINUS FLOAT .
    (73) factor -> FLOAT .

  ! reduce/reduce conflict for PLUS resolved using rule 73 (factor -> FLOAT .)
  ! reduce/reduce conflict for MINUS resolved using rule 73 (factor -> FLOAT .)
  ! reduce/reduce conflict for DIVISION resolved using rule 73 (factor -> FLOAT .)
  ! reduce/reduce conflict for MOD resolved using rule 73 (factor -> FLOAT .)
  ! reduce/reduce conflict for MULT resolved using rule 73 (factor -> FLOAT .)
  ! reduce/reduce conflict for EXP resolved using rule 73 (factor -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 73 (factor -> FLOAT .)
    PLUS            reduce using rule 73 (factor -> FLOAT .)
    MINUS           reduce using rule 73 (factor -> FLOAT .)
    DIVISION        reduce using rule 73 (factor -> FLOAT .)
    MOD             reduce using rule 73 (factor -> FLOAT .)
    MULT            reduce using rule 73 (factor -> FLOAT .)
    EXP             reduce using rule 73 (factor -> FLOAT .)
    ARRAY           reduce using rule 73 (factor -> FLOAT .)
    LSQBRACKET      reduce using rule 73 (factor -> FLOAT .)
    LBRACKET        reduce using rule 73 (factor -> FLOAT .)
    HASH            reduce using rule 73 (factor -> FLOAT .)
    FOR             reduce using rule 73 (factor -> FLOAT .)
    TRUE            reduce using rule 73 (factor -> FLOAT .)
    FALSE           reduce using rule 73 (factor -> FLOAT .)
    NIL             reduce using rule 73 (factor -> FLOAT .)
    IF              reduce using rule 73 (factor -> FLOAT .)
    IDLOCAL         reduce using rule 73 (factor -> FLOAT .)
    IDINSTANCE      reduce using rule 73 (factor -> FLOAT .)
    IDCLASS         reduce using rule 73 (factor -> FLOAT .)
    IDGLOBAL        reduce using rule 73 (factor -> FLOAT .)
    WHILE           reduce using rule 73 (factor -> FLOAT .)
    STRING          reduce using rule 73 (factor -> FLOAT .)
    STRINGV         reduce using rule 73 (factor -> FLOAT .)
    NUMBER          reduce using rule 73 (factor -> FLOAT .)
    FLOAT           reduce using rule 73 (factor -> FLOAT .)
    END             reduce using rule 73 (factor -> FLOAT .)

  ! PLUS            [ reduce using rule 75 (factor -> MINUS FLOAT .) ]
  ! MINUS           [ reduce using rule 75 (factor -> MINUS FLOAT .) ]
  ! DIVISION        [ reduce using rule 75 (factor -> MINUS FLOAT .) ]
  ! MOD             [ reduce using rule 75 (factor -> MINUS FLOAT .) ]
  ! MULT            [ reduce using rule 75 (factor -> MINUS FLOAT .) ]
  ! EXP             [ reduce using rule 75 (factor -> MINUS FLOAT .) ]
  ! END             [ reduce using rule 75 (factor -> MINUS FLOAT .) ]


state 194

    (119) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo . RETURN IDLOCAL END
    (120) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo . END

    RETURN          shift and go to state 200
    END             shift and go to state 201


state 195

    (122) fcontenido -> variables COMMA fcontenido .

    RPARENTHESIS    reduce using rule 122 (fcontenido -> variables COMMA fcontenido .)


state 196

    (90) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent . RPARENTHESIS

    RPARENTHESIS    shift and go to state 202


state 197

    (102) hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .

    RBRACKET        reduce using rule 102 (hashcontent -> string ASSIGN GREATER hashcontentvalue COMMA hashcontent .)


state 198

    (113) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor . DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor . DO forcontent END

    DO              shift and go to state 203


state 199

    (52) sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo . END

    END             shift and go to state 204


state 200

    (119) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN . IDLOCAL END

    IDLOCAL         shift and go to state 205


state 201

    (120) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END .

    $end            reduce using rule 120 (funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo END .)


state 202

    (90) arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .

    POINT           reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    LSQBRACKET      reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    $end            reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    END             reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    ELSE            reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    RETURN          reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    ARRAY           reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    LBRACKET        reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    HASH            reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    FOR             reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    TRUE            reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    FALSE           reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    NIL             reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IF              reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDLOCAL         reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDINSTANCE      reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDCLASS         reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    IDGLOBAL        reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    WHILE           reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    NUMBER          reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    FLOAT           reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    MINUS           reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    STRING          reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    STRINGV         reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)
    BREAK           reduce using rule 90 (arreglo -> ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS .)


state 203

    (113) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO . forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO . forcontent END
    (115) forcontent -> . forcontentvalue
    (116) forcontent -> . forcontentvalue forcontent
    (117) forcontentvalue -> . expression
    (118) forcontentvalue -> . algoritmo
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (70) term -> . factor
    (71) term -> . variables
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (113) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (80) string -> . STRINGV

    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26

    factor                         shift and go to state 29
    forcontent                     shift and go to state 206
    forcontentvalue                shift and go to state 207
    expression                     shift and go to state 208
    algoritmo                      shift and go to state 209
    term                           shift and go to state 24
    variables                      shift and go to state 210
    metodocadena                   shift and go to state 132
    arreglo                        shift and go to state 133
    metodosarreglo                 shift and go to state 134
    hash                           shift and go to state 135
    estructurasControl             shift and go to state 136
    boolean                        shift and go to state 137
    assigns                        shift and go to state 138
    sentenIF                       shift and go to state 139
    sentenifp                      shift and go to state 140
    sentenifelse                   shift and go to state 141
    sentenWHILE                    shift and go to state 142
    cadena                         shift and go to state 143
    string                         shift and go to state 144

state 204

    (52) sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .

    $end            reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    END             reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    ELSE            reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    RETURN          reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    ARRAY           reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    LSQBRACKET      reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    LBRACKET        reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    HASH            reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    FOR             reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    TRUE            reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    FALSE           reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    NIL             reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IF              reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDLOCAL         reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDINSTANCE      reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDCLASS         reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    IDGLOBAL        reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    WHILE           reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    NUMBER          reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    FLOAT           reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    MINUS           reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    STRING          reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    STRINGV         reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)
    BREAK           reduce using rule 52 (sentenifelse -> IF variables comparador term algoritmo ELSE algoritmo END .)


state 205

    (119) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL . END

    END             shift and go to state 211


state 206

    (113) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent . BREAK IF forcontentvalue END
    (114) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent . END

    BREAK           shift and go to state 212
    END             shift and go to state 213


state 207

    (115) forcontent -> forcontentvalue .
    (116) forcontent -> forcontentvalue . forcontent
    (115) forcontent -> . forcontentvalue
    (116) forcontent -> . forcontentvalue forcontent
    (117) forcontentvalue -> . expression
    (118) forcontentvalue -> . algoritmo
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (70) term -> . factor
    (71) term -> . variables
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (113) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (80) string -> . STRINGV

    BREAK           reduce using rule 115 (forcontent -> forcontentvalue .)
    END             reduce using rule 115 (forcontent -> forcontentvalue .)
    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26

    forcontentvalue                shift and go to state 207
    forcontent                     shift and go to state 214
    expression                     shift and go to state 208
    algoritmo                      shift and go to state 209
    term                           shift and go to state 24
    variables                      shift and go to state 210
    metodocadena                   shift and go to state 132
    arreglo                        shift and go to state 133
    metodosarreglo                 shift and go to state 134
    hash                           shift and go to state 135
    estructurasControl             shift and go to state 136
    boolean                        shift and go to state 137
    assigns                        shift and go to state 138
    sentenIF                       shift and go to state 139
    sentenifp                      shift and go to state 140
    sentenifelse                   shift and go to state 141
    sentenWHILE                    shift and go to state 142
    factor                         shift and go to state 29
    cadena                         shift and go to state 143
    string                         shift and go to state 144

state 208

    (117) forcontentvalue -> expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . PLUS variables
    (67) expression -> expression . MINUS variables
    (68) expression -> expression . MINUS term
    (76) expression -> expression . DIVISION term
    (77) expression -> expression . MOD term
    (78) expression -> expression . MULT term
    (79) expression -> expression . EXP term
    (33) algoritmo -> expression .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for ARRAY resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for HASH resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for NIL resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 33 (algoritmo -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for STRING resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for STRINGV resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for BREAK resolved using rule 33 (algoritmo -> expression .)
  ! reduce/reduce conflict for END resolved using rule 33 (algoritmo -> expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    DIVISION        shift and go to state 50
    MOD             shift and go to state 51
    MULT            shift and go to state 52
    EXP             shift and go to state 53
    ARRAY           reduce using rule 33 (algoritmo -> expression .)
    LSQBRACKET      reduce using rule 33 (algoritmo -> expression .)
    LBRACKET        reduce using rule 33 (algoritmo -> expression .)
    HASH            reduce using rule 33 (algoritmo -> expression .)
    FOR             reduce using rule 33 (algoritmo -> expression .)
    TRUE            reduce using rule 33 (algoritmo -> expression .)
    FALSE           reduce using rule 33 (algoritmo -> expression .)
    NIL             reduce using rule 33 (algoritmo -> expression .)
    IF              reduce using rule 33 (algoritmo -> expression .)
    IDLOCAL         reduce using rule 33 (algoritmo -> expression .)
    IDINSTANCE      reduce using rule 33 (algoritmo -> expression .)
    IDCLASS         reduce using rule 33 (algoritmo -> expression .)
    IDGLOBAL        reduce using rule 33 (algoritmo -> expression .)
    WHILE           reduce using rule 33 (algoritmo -> expression .)
    NUMBER          reduce using rule 33 (algoritmo -> expression .)
    FLOAT           reduce using rule 33 (algoritmo -> expression .)
    STRING          reduce using rule 33 (algoritmo -> expression .)
    STRINGV         reduce using rule 33 (algoritmo -> expression .)
    BREAK           reduce using rule 33 (algoritmo -> expression .)
    END             reduce using rule 33 (algoritmo -> expression .)

  ! ARRAY           [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! LSQBRACKET      [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! LBRACKET        [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! HASH            [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! FOR             [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! TRUE            [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! FALSE           [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! NIL             [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! IF              [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! IDLOCAL         [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! IDINSTANCE      [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! IDCLASS         [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! IDGLOBAL        [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! WHILE           [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! NUMBER          [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! FLOAT           [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! MINUS           [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! STRING          [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! STRINGV         [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! BREAK           [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! END             [ reduce using rule 117 (forcontentvalue -> expression .) ]
  ! MINUS           [ reduce using rule 33 (algoritmo -> expression .) ]


state 209

    (118) forcontentvalue -> algoritmo .

    ARRAY           reduce using rule 118 (forcontentvalue -> algoritmo .)
    LSQBRACKET      reduce using rule 118 (forcontentvalue -> algoritmo .)
    LBRACKET        reduce using rule 118 (forcontentvalue -> algoritmo .)
    HASH            reduce using rule 118 (forcontentvalue -> algoritmo .)
    FOR             reduce using rule 118 (forcontentvalue -> algoritmo .)
    TRUE            reduce using rule 118 (forcontentvalue -> algoritmo .)
    FALSE           reduce using rule 118 (forcontentvalue -> algoritmo .)
    NIL             reduce using rule 118 (forcontentvalue -> algoritmo .)
    IF              reduce using rule 118 (forcontentvalue -> algoritmo .)
    IDLOCAL         reduce using rule 118 (forcontentvalue -> algoritmo .)
    IDINSTANCE      reduce using rule 118 (forcontentvalue -> algoritmo .)
    IDCLASS         reduce using rule 118 (forcontentvalue -> algoritmo .)
    IDGLOBAL        reduce using rule 118 (forcontentvalue -> algoritmo .)
    WHILE           reduce using rule 118 (forcontentvalue -> algoritmo .)
    NUMBER          reduce using rule 118 (forcontentvalue -> algoritmo .)
    FLOAT           reduce using rule 118 (forcontentvalue -> algoritmo .)
    MINUS           reduce using rule 118 (forcontentvalue -> algoritmo .)
    STRING          reduce using rule 118 (forcontentvalue -> algoritmo .)
    STRINGV         reduce using rule 118 (forcontentvalue -> algoritmo .)
    BREAK           reduce using rule 118 (forcontentvalue -> algoritmo .)
    END             reduce using rule 118 (forcontentvalue -> algoritmo .)


state 210

    (44) algoritmo -> variables .
    (71) term -> variables .
    (57) assigns -> variables . ASSIGN expression
    (58) assigns -> variables . ASSIGN variables
    (59) assigns -> variables . ASSIGN boolean
    (60) assigns -> variables . ASSIGN asignar
    (61) assigns -> variables . ASSIGNPLUS expression
    (62) assigns -> variables . ASSIGNPLUS variables
    (63) assigns -> variables . ASSIGNMIN expression
    (64) assigns -> variables . ASSIGNMIN variables

  ! reduce/reduce conflict for MINUS resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for ARRAY resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for LSQBRACKET resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for HASH resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for FOR resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for TRUE resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for FALSE resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for NIL resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for IF resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for IDLOCAL resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for IDINSTANCE resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for IDCLASS resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for IDGLOBAL resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for WHILE resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for NUMBER resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for FLOAT resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for STRING resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for STRINGV resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for BREAK resolved using rule 44 (algoritmo -> variables .)
  ! reduce/reduce conflict for END resolved using rule 44 (algoritmo -> variables .)
    ARRAY           reduce using rule 44 (algoritmo -> variables .)
    LSQBRACKET      reduce using rule 44 (algoritmo -> variables .)
    LBRACKET        reduce using rule 44 (algoritmo -> variables .)
    HASH            reduce using rule 44 (algoritmo -> variables .)
    FOR             reduce using rule 44 (algoritmo -> variables .)
    TRUE            reduce using rule 44 (algoritmo -> variables .)
    FALSE           reduce using rule 44 (algoritmo -> variables .)
    NIL             reduce using rule 44 (algoritmo -> variables .)
    IF              reduce using rule 44 (algoritmo -> variables .)
    IDLOCAL         reduce using rule 44 (algoritmo -> variables .)
    IDINSTANCE      reduce using rule 44 (algoritmo -> variables .)
    IDCLASS         reduce using rule 44 (algoritmo -> variables .)
    IDGLOBAL        reduce using rule 44 (algoritmo -> variables .)
    WHILE           reduce using rule 44 (algoritmo -> variables .)
    NUMBER          reduce using rule 44 (algoritmo -> variables .)
    FLOAT           reduce using rule 44 (algoritmo -> variables .)
    MINUS           reduce using rule 44 (algoritmo -> variables .)
    STRING          reduce using rule 44 (algoritmo -> variables .)
    STRINGV         reduce using rule 44 (algoritmo -> variables .)
    BREAK           reduce using rule 44 (algoritmo -> variables .)
    END             reduce using rule 44 (algoritmo -> variables .)
    PLUS            reduce using rule 71 (term -> variables .)
    DIVISION        reduce using rule 71 (term -> variables .)
    MOD             reduce using rule 71 (term -> variables .)
    MULT            reduce using rule 71 (term -> variables .)
    EXP             reduce using rule 71 (term -> variables .)
    ASSIGN          shift and go to state 161
    ASSIGNPLUS      shift and go to state 60
    ASSIGNMIN       shift and go to state 61

  ! MINUS           [ reduce using rule 71 (term -> variables .) ]
  ! ARRAY           [ reduce using rule 71 (term -> variables .) ]
  ! LSQBRACKET      [ reduce using rule 71 (term -> variables .) ]
  ! LBRACKET        [ reduce using rule 71 (term -> variables .) ]
  ! HASH            [ reduce using rule 71 (term -> variables .) ]
  ! FOR             [ reduce using rule 71 (term -> variables .) ]
  ! TRUE            [ reduce using rule 71 (term -> variables .) ]
  ! FALSE           [ reduce using rule 71 (term -> variables .) ]
  ! NIL             [ reduce using rule 71 (term -> variables .) ]
  ! IF              [ reduce using rule 71 (term -> variables .) ]
  ! IDLOCAL         [ reduce using rule 71 (term -> variables .) ]
  ! IDINSTANCE      [ reduce using rule 71 (term -> variables .) ]
  ! IDCLASS         [ reduce using rule 71 (term -> variables .) ]
  ! IDGLOBAL        [ reduce using rule 71 (term -> variables .) ]
  ! WHILE           [ reduce using rule 71 (term -> variables .) ]
  ! NUMBER          [ reduce using rule 71 (term -> variables .) ]
  ! FLOAT           [ reduce using rule 71 (term -> variables .) ]
  ! STRING          [ reduce using rule 71 (term -> variables .) ]
  ! STRINGV         [ reduce using rule 71 (term -> variables .) ]
  ! BREAK           [ reduce using rule 71 (term -> variables .) ]
  ! END             [ reduce using rule 71 (term -> variables .) ]


state 211

    (119) funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END .

    $end            reduce using rule 119 (funcion1 -> DEF IDLOCAL LPARENTHESIS fcontenido RPARENTHESIS algoritmo RETURN IDLOCAL END .)


state 212

    (113) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK . IF forcontentvalue END

    IF              shift and go to state 215


state 213

    (114) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .

    $end            reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    END             reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    ELSE            reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    RETURN          reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    ARRAY           reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    LSQBRACKET      reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    LBRACKET        reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    HASH            reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    FOR             reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    TRUE            reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    FALSE           reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    NIL             reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IF              reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDLOCAL         reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDINSTANCE      reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDCLASS         reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    IDGLOBAL        reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    WHILE           reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    NUMBER          reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    FLOAT           reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    MINUS           reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    STRING          reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    STRINGV         reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)
    BREAK           reduce using rule 114 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent END .)


state 214

    (116) forcontent -> forcontentvalue forcontent .

    BREAK           reduce using rule 116 (forcontent -> forcontentvalue forcontent .)
    END             reduce using rule 116 (forcontent -> forcontentvalue forcontent .)


state 215

    (113) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF . forcontentvalue END
    (117) forcontentvalue -> . expression
    (118) forcontentvalue -> . algoritmo
    (65) expression -> . expression PLUS term
    (66) expression -> . expression PLUS variables
    (67) expression -> . expression MINUS variables
    (68) expression -> . expression MINUS term
    (69) expression -> . term
    (76) expression -> . expression DIVISION term
    (77) expression -> . expression MOD term
    (78) expression -> . expression MULT term
    (79) expression -> . expression EXP term
    (33) algoritmo -> . expression
    (34) algoritmo -> . metodocadena
    (35) algoritmo -> . arreglo
    (36) algoritmo -> . metodosarreglo
    (37) algoritmo -> . hash
    (38) algoritmo -> . estructurasControl
    (39) algoritmo -> . boolean
    (40) algoritmo -> . assigns
    (41) algoritmo -> . sentenIF
    (42) algoritmo -> . sentenifp
    (43) algoritmo -> . sentenifelse
    (44) algoritmo -> . variables
    (45) algoritmo -> . sentenWHILE
    (70) term -> . factor
    (71) term -> . variables
    (84) metodocadena -> . cadena POINT EMPTY INTERROGATIVE
    (85) metodocadena -> . string POINT EMPTY INTERROGATIVE
    (86) metodocadena -> . cadena POINT LENGTH
    (87) metodocadena -> . string POINT LENGTH
    (88) arreglo -> . ARRAY POINT NEW
    (89) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor RPARENTHESIS
    (90) arreglo -> . ARRAY POINT NEW LPARENTHESIS factor COMMA arraycontent RPARENTHESIS
    (91) arreglo -> . ARRAY LSQBRACKET arraycontent RSQBRACKET
    (92) arreglo -> . LSQBRACKET arraycontent RSQBRACKET
    (97) metodosarreglo -> . arreglo POINT INDEX LPARENTHESIS arraycontent RPARENTHESIS
    (98) metodosarreglo -> . arreglo LSQBRACKET factor RSQBRACKET
    (99) hash -> . LBRACKET hashcontent RBRACKET
    (100) hash -> . HASH POINT NEW
    (113) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END
    (114) estructurasControl -> . FOR IDLOCAL IN factor POINT POINT factor DO forcontent END
    (23) boolean -> . TRUE
    (24) boolean -> . FALSE
    (25) boolean -> . NIL
    (57) assigns -> . variables ASSIGN expression
    (58) assigns -> . variables ASSIGN variables
    (59) assigns -> . variables ASSIGN boolean
    (60) assigns -> . variables ASSIGN asignar
    (61) assigns -> . variables ASSIGNPLUS expression
    (62) assigns -> . variables ASSIGNPLUS variables
    (63) assigns -> . variables ASSIGNMIN expression
    (64) assigns -> . variables ASSIGNMIN variables
    (50) sentenIF -> . IF variables comparador term
    (51) sentenifp -> . IF variables comparador term algoritmo END
    (52) sentenifelse -> . IF variables comparador term algoritmo ELSE algoritmo END
    (53) variables -> . IDLOCAL
    (54) variables -> . IDINSTANCE
    (55) variables -> . IDCLASS
    (56) variables -> . IDGLOBAL
    (46) sentenWHILE -> . WHILE variables comparador variables algoritmo END
    (47) sentenWHILE -> . WHILE variables comparador expression algoritmo END
    (48) sentenWHILE -> . WHILE boolean algoritmo END
    (49) sentenWHILE -> . WHILE variables algoritmo END
    (72) factor -> . NUMBER
    (73) factor -> . FLOAT
    (74) factor -> . MINUS NUMBER
    (75) factor -> . MINUS FLOAT
    (81) cadena -> . STRING POINT NEW
    (82) cadena -> . STRING POINT NEW LPARENTHESIS string RPARENTHESIS
    (83) cadena -> . STRING LPARENTHESIS string RPARENTHESIS
    (80) string -> . STRINGV

    ARRAY           shift and go to state 28
    LSQBRACKET      shift and go to state 30
    LBRACKET        shift and go to state 31
    HASH            shift and go to state 32
    FOR             shift and go to state 40
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35
    IF              shift and go to state 41
    IDLOCAL         shift and go to state 36
    IDINSTANCE      shift and go to state 37
    IDCLASS         shift and go to state 38
    IDGLOBAL        shift and go to state 39
    WHILE           shift and go to state 44
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    MINUS           shift and go to state 25
    STRING          shift and go to state 27
    STRINGV         shift and go to state 26

    factor                         shift and go to state 29
    forcontentvalue                shift and go to state 216
    expression                     shift and go to state 208
    algoritmo                      shift and go to state 209
    term                           shift and go to state 24
    variables                      shift and go to state 210
    metodocadena                   shift and go to state 132
    arreglo                        shift and go to state 133
    metodosarreglo                 shift and go to state 134
    hash                           shift and go to state 135
    estructurasControl             shift and go to state 136
    boolean                        shift and go to state 137
    assigns                        shift and go to state 138
    sentenIF                       shift and go to state 139
    sentenifp                      shift and go to state 140
    sentenifelse                   shift and go to state 141
    sentenWHILE                    shift and go to state 142
    cadena                         shift and go to state 143
    string                         shift and go to state 144

state 216

    (113) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue . END

    END             shift and go to state 217


state 217

    (113) estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .

    $end            reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    END             reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    ELSE            reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    RETURN          reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    ARRAY           reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    LSQBRACKET      reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    LBRACKET        reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    HASH            reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    FOR             reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    TRUE            reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    FALSE           reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    NIL             reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IF              reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDLOCAL         reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDINSTANCE      reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDCLASS         reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    IDGLOBAL        reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    WHILE           reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    NUMBER          reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    FLOAT           reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    MINUS           reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    STRING          reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    STRINGV         reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)
    BREAK           reduce using rule 113 (estructurasControl -> FOR IDLOCAL IN factor POINT POINT factor DO forcontent BREAK IF forcontentvalue END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LSQBRACKET in state 8 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for LSQBRACKET in state 133 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 160 resolved as shift
WARNING: shift/reduce conflict for LSQBRACKET in state 160 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 160 resolved as shift
WARNING: shift/reduce conflict for HASH in state 160 resolved as shift
WARNING: shift/reduce conflict for FOR in state 160 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 160 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 160 resolved as shift
WARNING: shift/reduce conflict for NIL in state 160 resolved as shift
WARNING: shift/reduce conflict for IF in state 160 resolved as shift
WARNING: shift/reduce conflict for IDLOCAL in state 160 resolved as shift
WARNING: shift/reduce conflict for IDINSTANCE in state 160 resolved as shift
WARNING: shift/reduce conflict for IDCLASS in state 160 resolved as shift
WARNING: shift/reduce conflict for IDGLOBAL in state 160 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 160 resolved as shift
WARNING: shift/reduce conflict for STRING in state 160 resolved as shift
WARNING: shift/reduce conflict for STRINGV in state 160 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 160 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 160 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 160 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 162 resolved as shift
WARNING: shift/reduce conflict for LSQBRACKET in state 162 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 162 resolved as shift
WARNING: shift/reduce conflict for HASH in state 162 resolved as shift
WARNING: shift/reduce conflict for FOR in state 162 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 162 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 162 resolved as shift
WARNING: shift/reduce conflict for NIL in state 162 resolved as shift
WARNING: shift/reduce conflict for IF in state 162 resolved as shift
WARNING: shift/reduce conflict for IDLOCAL in state 162 resolved as shift
WARNING: shift/reduce conflict for IDINSTANCE in state 162 resolved as shift
WARNING: shift/reduce conflict for IDCLASS in state 162 resolved as shift
WARNING: shift/reduce conflict for IDGLOBAL in state 162 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 162 resolved as shift
WARNING: shift/reduce conflict for STRING in state 162 resolved as shift
WARNING: shift/reduce conflict for STRINGV in state 162 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 162 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 162 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 162 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 208 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 208 resolved as shift
WARNING: reduce/reduce conflict in state 13 resolved using rule (asignar -> variables)
WARNING: rejected rule (term -> variables) in state 13
WARNING: reduce/reduce conflict in state 87 resolved using rule (expression -> expression PLUS variables)
WARNING: rejected rule (term -> variables) in state 87
WARNING: reduce/reduce conflict in state 88 resolved using rule (expression -> expression MINUS variables)
WARNING: rejected rule (term -> variables) in state 88
WARNING: reduce/reduce conflict in state 100 resolved using rule (asignar -> variables)
WARNING: rejected rule (assigns -> variables ASSIGN variables) in state 100
WARNING: reduce/reduce conflict in state 100 resolved using rule (asignar -> variables)
WARNING: rejected rule (term -> variables) in state 100
WARNING: reduce/reduce conflict in state 102 resolved using rule (asignar -> expression)
WARNING: rejected rule (assigns -> variables ASSIGN expression) in state 102
WARNING: reduce/reduce conflict in state 103 resolved using rule (asignar -> boolean)
WARNING: rejected rule (assigns -> variables ASSIGN boolean) in state 103
WARNING: reduce/reduce conflict in state 106 resolved using rule (assigns -> variables ASSIGNPLUS variables)
WARNING: rejected rule (term -> variables) in state 106
WARNING: reduce/reduce conflict in state 108 resolved using rule (assigns -> variables ASSIGNMIN variables)
WARNING: rejected rule (term -> variables) in state 108
WARNING: reduce/reduce conflict in state 128 resolved using rule (algoritmo -> variables)
WARNING: rejected rule (term -> variables) in state 128
WARNING: reduce/reduce conflict in state 192 resolved using rule (factor -> NUMBER)
WARNING: rejected rule (factor -> MINUS NUMBER) in state 192
WARNING: reduce/reduce conflict in state 193 resolved using rule (factor -> FLOAT)
WARNING: rejected rule (factor -> MINUS FLOAT) in state 193
WARNING: reduce/reduce conflict in state 208 resolved using rule (algoritmo -> expression)
WARNING: rejected rule (forcontentvalue -> expression) in state 208
WARNING: reduce/reduce conflict in state 210 resolved using rule (algoritmo -> variables)
WARNING: rejected rule (term -> variables) in state 210
WARNING: Rule (assigns -> variables ASSIGN variables) is never reduced
WARNING: Rule (assigns -> variables ASSIGN expression) is never reduced
WARNING: Rule (assigns -> variables ASSIGN boolean) is never reduced
WARNING: Rule (forcontentvalue -> expression) is never reduced
